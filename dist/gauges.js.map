{"version":3,"sources":["webpack:///gauges.js","webpack:///webpack/bootstrap 655456356335f72866d1","webpack:///./gauges.js","webpack:///./~/bluebird/js/release/util.js","webpack:///./~/lodash/isArray.js","webpack:///./~/lodash/isObject.js","webpack:///./~/lodash/keys.js","webpack:///./~/lodash/keysIn.js","webpack:///./~/lodash/_copyObject.js","webpack:///./~/lodash/_root.js","webpack:///./~/bluebird/js/release/errors.js","webpack:///./~/lodash/_baseIteratee.js","webpack:///./~/lodash/_castPath.js","webpack:///./~/lodash/_toKey.js","webpack:///./~/process/browser.js","webpack:///./~/lodash/_getNative.js","webpack:///./~/lodash/isObjectLike.js","webpack:///./~/bluebird/js/release/es5.js","webpack:///./~/lodash/_Symbol.js","webpack:///./~/lodash/_baseForOwn.js","webpack:///./~/lodash/_baseGetTag.js","webpack:///./~/lodash/_castFunction.js","webpack:///./~/lodash/_createAssigner.js","webpack:///./~/lodash/eq.js","webpack:///./~/lodash/isFunction.js","webpack:///./~/lodash/_arrayMap.js","webpack:///./~/lodash/_baseAssignValue.js","webpack:///./~/lodash/_baseGet.js","webpack:///./~/lodash/identity.js","webpack:///./~/lodash/isArrayLike.js","webpack:///./~/lodash/isBuffer.js","webpack:///./~/lodash/_ListCache.js","webpack:///./~/lodash/_Stack.js","webpack:///./~/lodash/_apply.js","webpack:///./~/lodash/_assignValue.js","webpack:///./~/lodash/_assocIndexOf.js","webpack:///./~/lodash/_baseRest.js","webpack:///./~/lodash/_baseSet.js","webpack:///./~/lodash/_getMapData.js","webpack:///./~/lodash/_getPrototype.js","webpack:///./~/lodash/_isIndex.js","webpack:///./~/lodash/_isPrototype.js","webpack:///./~/lodash/_nativeCreate.js","webpack:///./~/lodash/isArguments.js","webpack:///./~/lodash/isTypedArray.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/@signalk/client/dist/index.js","webpack:///./~/lodash/_Map.js","webpack:///./~/lodash/_MapCache.js","webpack:///./~/lodash/_arrayPush.js","webpack:///./~/lodash/_baseCreate.js","webpack:///./~/lodash/_baseFor.js","webpack:///./~/lodash/_baseMerge.js","webpack:///./~/lodash/_cloneArrayBuffer.js","webpack:///./~/lodash/_flatRest.js","webpack:///./~/lodash/_getAllKeysIn.js","webpack:///./~/lodash/_getSymbols.js","webpack:///./~/lodash/_getTag.js","webpack:///./~/lodash/_isKey.js","webpack:///./~/lodash/_mapToArray.js","webpack:///./~/lodash/assignInWith.js","webpack:///./~/lodash/get.js","webpack:///./~/lodash/hasIn.js","webpack:///./~/lodash/isLength.js","webpack:///./~/lodash/isSymbol.js","webpack:///./~/superagent/lib/is-object.js","webpack:///./~/bluebird/js/release/catch_filter.js","webpack:///./~/bluebird/js/release/nodeback.js","webpack:///./~/lodash/_Uint8Array.js","webpack:///./~/lodash/_arrayEach.js","webpack:///./~/lodash/_arrayFilter.js","webpack:///./~/lodash/_arrayLikeKeys.js","webpack:///./~/lodash/_arrayReduce.js","webpack:///./~/lodash/_assignMergeValue.js","webpack:///./~/lodash/_baseAssign.js","webpack:///./~/lodash/_baseFindKey.js","webpack:///./~/lodash/_baseForOwnRight.js","webpack:///./~/lodash/_baseForRight.js","webpack:///./~/lodash/_baseFunctions.js","webpack:///./~/lodash/_baseGetAllKeys.js","webpack:///./~/lodash/_baseIsEqual.js","webpack:///./~/lodash/_basePickBy.js","webpack:///./~/lodash/_baseUnset.js","webpack:///./~/lodash/_baseUpdate.js","webpack:///./~/lodash/_baseValues.js","webpack:///./~/lodash/_cloneBuffer.js","webpack:///./~/lodash/_cloneTypedArray.js","webpack:///./~/lodash/_copyArray.js","webpack:///./~/lodash/_createBaseFor.js","webpack:///./~/lodash/_createInverter.js","webpack:///./~/lodash/_createToPairs.js","webpack:///./~/lodash/_defineProperty.js","webpack:///./~/lodash/_equalArrays.js","webpack:///./~/lodash/_freeGlobal.js","webpack:///./~/lodash/_getAllKeys.js","webpack:///./~/lodash/_getSymbolsIn.js","webpack:///./~/lodash/_hasPath.js","webpack:///./~/lodash/_initCloneObject.js","webpack:///./~/lodash/_isStrictComparable.js","webpack:///./~/lodash/_matchesStrictComparable.js","webpack:///./~/lodash/_overArg.js","webpack:///./~/lodash/_overRest.js","webpack:///./~/lodash/_parent.js","webpack:///./~/lodash/_setToArray.js","webpack:///./~/lodash/_setToString.js","webpack:///./~/lodash/_toSource.js","webpack:///./~/lodash/assignIn.js","webpack:///./~/lodash/constant.js","webpack:///./~/lodash/isPlainObject.js","webpack:///./~/lodash/last.js","webpack:///./~/lodash/mergeWith.js","webpack:///./~/lodash/pickBy.js","webpack:///./~/lodash/stubArray.js","webpack:///./~/lodash/toPairs.js","webpack:///./~/lodash/toPairsIn.js","webpack:///./lib/simplegauges.js","webpack:///./lib/steelseries.js","webpack:///./~/@signalk/client/dist ^\\.\\/.*$","webpack:///./~/bluebird/js/release/any.js","webpack:///./~/bluebird/js/release/async.js","webpack:///./~/bluebird/js/release/bind.js","webpack:///./~/bluebird/js/release/bluebird.js","webpack:///./~/bluebird/js/release/call_get.js","webpack:///./~/bluebird/js/release/cancel.js","webpack:///./~/bluebird/js/release/context.js","webpack:///./~/bluebird/js/release/debuggability.js","webpack:///./~/bluebird/js/release/direct_resolve.js","webpack:///./~/bluebird/js/release/each.js","webpack:///./~/bluebird/js/release/filter.js","webpack:///./~/bluebird/js/release/finally.js","webpack:///./~/bluebird/js/release/generators.js","webpack:///./~/bluebird/js/release/join.js","webpack:///./~/bluebird/js/release/map.js","webpack:///./~/bluebird/js/release/method.js","webpack:///./~/bluebird/js/release/nodeify.js","webpack:///./~/bluebird/js/release/promise.js","webpack:///./~/bluebird/js/release/promise_array.js","webpack:///./~/bluebird/js/release/promisify.js","webpack:///./~/bluebird/js/release/props.js","webpack:///./~/bluebird/js/release/queue.js","webpack:///./~/bluebird/js/release/race.js","webpack:///./~/bluebird/js/release/reduce.js","webpack:///./~/bluebird/js/release/schedule.js","webpack:///./~/bluebird/js/release/settle.js","webpack:///./~/bluebird/js/release/some.js","webpack:///./~/bluebird/js/release/synchronous_inspection.js","webpack:///./~/bluebird/js/release/thenables.js","webpack:///./~/bluebird/js/release/timers.js","webpack:///./~/bluebird/js/release/using.js","webpack:///./~/component-emitter/index.js","webpack:///./~/debug/src/browser.js","webpack:///./~/debug/src/debug.js","webpack:///./~/eventemitter3/index.js","webpack:///./~/lodash/_DataView.js","webpack:///./~/lodash/_Hash.js","webpack:///./~/lodash/_Promise.js","webpack:///./~/lodash/_Set.js","webpack:///./~/lodash/_SetCache.js","webpack:///./~/lodash/_WeakMap.js","webpack:///./~/lodash/_addMapEntry.js","webpack:///./~/lodash/_addSetEntry.js","webpack:///./~/lodash/_arraySome.js","webpack:///./~/lodash/_baseAssignIn.js","webpack:///./~/lodash/_baseAt.js","webpack:///./~/lodash/_baseClone.js","webpack:///./~/lodash/_baseFlatten.js","webpack:///./~/lodash/_baseHas.js","webpack:///./~/lodash/_baseHasIn.js","webpack:///./~/lodash/_baseInverter.js","webpack:///./~/lodash/_baseInvoke.js","webpack:///./~/lodash/_baseIsArguments.js","webpack:///./~/lodash/_baseIsEqualDeep.js","webpack:///./~/lodash/_baseIsMatch.js","webpack:///./~/lodash/_baseIsNative.js","webpack:///./~/lodash/_baseIsTypedArray.js","webpack:///./~/lodash/_baseKeys.js","webpack:///./~/lodash/_baseKeysIn.js","webpack:///./~/lodash/_baseMatches.js","webpack:///./~/lodash/_baseMatchesProperty.js","webpack:///./~/lodash/_baseMergeDeep.js","webpack:///./~/lodash/_basePick.js","webpack:///./~/lodash/_baseProperty.js","webpack:///./~/lodash/_basePropertyDeep.js","webpack:///./~/lodash/_baseSetToString.js","webpack:///./~/lodash/_baseSlice.js","webpack:///./~/lodash/_baseTimes.js","webpack:///./~/lodash/_baseToPairs.js","webpack:///./~/lodash/_baseToString.js","webpack:///./~/lodash/_baseUnary.js","webpack:///./~/lodash/_cacheHas.js","webpack:///./~/lodash/_cloneDataView.js","webpack:///./~/lodash/_cloneMap.js","webpack:///./~/lodash/_cloneRegExp.js","webpack:///./~/lodash/_cloneSet.js","webpack:///./~/lodash/_cloneSymbol.js","webpack:///./~/lodash/_copySymbols.js","webpack:///./~/lodash/_copySymbolsIn.js","webpack:///./~/lodash/_coreJsData.js","webpack:///./~/lodash/_customDefaultsAssignIn.js","webpack:///./~/lodash/_customDefaultsMerge.js","webpack:///./~/lodash/_customOmitClone.js","webpack:///./~/lodash/_equalByTag.js","webpack:///./~/lodash/_equalObjects.js","webpack:///./~/lodash/_getMatchData.js","webpack:///./~/lodash/_getRawTag.js","webpack:///./~/lodash/_getValue.js","webpack:///./~/lodash/_hashClear.js","webpack:///./~/lodash/_hashDelete.js","webpack:///./~/lodash/_hashGet.js","webpack:///./~/lodash/_hashHas.js","webpack:///./~/lodash/_hashSet.js","webpack:///./~/lodash/_initCloneArray.js","webpack:///./~/lodash/_initCloneByTag.js","webpack:///./~/lodash/_isFlattenable.js","webpack:///./~/lodash/_isIterateeCall.js","webpack:///./~/lodash/_isKeyable.js","webpack:///./~/lodash/_isMasked.js","webpack:///./~/lodash/_listCacheClear.js","webpack:///./~/lodash/_listCacheDelete.js","webpack:///./~/lodash/_listCacheGet.js","webpack:///./~/lodash/_listCacheHas.js","webpack:///./~/lodash/_listCacheSet.js","webpack:///./~/lodash/_mapCacheClear.js","webpack:///./~/lodash/_mapCacheDelete.js","webpack:///./~/lodash/_mapCacheGet.js","webpack:///./~/lodash/_mapCacheHas.js","webpack:///./~/lodash/_mapCacheSet.js","webpack:///./~/lodash/_memoizeCapped.js","webpack:///./~/lodash/_nativeKeys.js","webpack:///./~/lodash/_nativeKeysIn.js","webpack:///./~/lodash/_nodeUtil.js","webpack:///./~/lodash/_objectToString.js","webpack:///./~/lodash/_setCacheAdd.js","webpack:///./~/lodash/_setCacheHas.js","webpack:///./~/lodash/_setToPairs.js","webpack:///./~/lodash/_shortOut.js","webpack:///./~/lodash/_stackClear.js","webpack:///./~/lodash/_stackDelete.js","webpack:///./~/lodash/_stackGet.js","webpack:///./~/lodash/_stackHas.js","webpack:///./~/lodash/_stackSet.js","webpack:///./~/lodash/_stringToPath.js","webpack:///./~/lodash/assign.js","webpack:///./~/lodash/assignWith.js","webpack:///./~/lodash/at.js","webpack:///./~/lodash/create.js","webpack:///./~/lodash/defaults.js","webpack:///./~/lodash/defaultsDeep.js","webpack:///./~/lodash/entries.js","webpack:///./~/lodash/entriesIn.js","webpack:///./~/lodash/extend.js","webpack:///./~/lodash/extendWith.js","webpack:///./~/lodash/findKey.js","webpack:///./~/lodash/findLastKey.js","webpack:///./~/lodash/flatten.js","webpack:///./~/lodash/forIn.js","webpack:///./~/lodash/forInRight.js","webpack:///./~/lodash/forOwn.js","webpack:///./~/lodash/forOwnRight.js","webpack:///./~/lodash/functions.js","webpack:///./~/lodash/functionsIn.js","webpack:///./~/lodash/has.js","webpack:///./~/lodash/invert.js","webpack:///./~/lodash/invertBy.js","webpack:///./~/lodash/invoke.js","webpack:///./~/lodash/isArrayLikeObject.js","webpack:///./~/lodash/mapKeys.js","webpack:///./~/lodash/mapValues.js","webpack:///./~/lodash/memoize.js","webpack:///./~/lodash/merge.js","webpack:///./~/lodash/negate.js","webpack:///./~/lodash/object.js","webpack:///./~/lodash/omit.js","webpack:///./~/lodash/omitBy.js","webpack:///./~/lodash/pick.js","webpack:///./~/lodash/property.js","webpack:///./~/lodash/result.js","webpack:///./~/lodash/set.js","webpack:///./~/lodash/setWith.js","webpack:///./~/lodash/stubFalse.js","webpack:///./~/lodash/toPlainObject.js","webpack:///./~/lodash/toString.js","webpack:///./~/lodash/transform.js","webpack:///./~/lodash/unset.js","webpack:///./~/lodash/update.js","webpack:///./~/lodash/updateWith.js","webpack:///./~/lodash/values.js","webpack:///./~/lodash/valuesIn.js","webpack:///./~/ms/index.js","webpack:///./~/punycode/punycode.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/querystring/index.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/superagent-promise/index.js","webpack:///./~/superagent/lib/client.js","webpack:///./~/superagent/lib/is-function.js","webpack:///./~/superagent/lib/request-base.js","webpack:///./~/superagent/lib/response-base.js","webpack:///./~/superagent/lib/should-retry.js","webpack:///./~/superagent/lib/utils.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/url/url.js","webpack:///./~/url/util.js","webpack:///./~/util/~/inherits/inherits_browser.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./~/util/util.js","webpack:///external \"mdns\"","webpack:///external \"ws\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","steelseries","simplegauges","SignalK","global","process","tryCatcher","target","tryCatchTarget","apply","this","arguments","e","errorObj","tryCatch","fn","isPrimitive","val","isObject","value","maybeWrapAsError","maybeError","Error","safeToString","withAppended","appendee","i","len","length","ret","Array","getDataPropertyOrDefault","obj","key","defaultValue","es5","isES5","hasOwnProperty","undefined","desc","Object","getOwnPropertyDescriptor","get","set","notEnumerableProp","name","descriptor","configurable","enumerable","writable","defineProperty","thrower","r","isClass","keys","names","prototype","hasMethods","hasMethodsOtherThanConstructor","hasThisAssignmentAndStaticMethods","thisAssignmentPattern","test","toFastProperties","FakeConstructor","l","isIdentifier","str","rident","filledRange","count","prefix","suffix","isError","message","markAsOriginatingFromRejection","ignore","originatesFromRejection","OperationalError","canAttachTrace","propertyIsWritable","classString","toString","copyDescriptors","from","to","filter","getDescriptor","env","hasEnvVariables","getNativePromise","Promise","promise","domainBind","self","cb","bind","canEvaluate","navigator","globalObject","window","inherits","Child","Parent","T","constructor","constructor$","propertyName","hasProp","charAt","inheritedDataKeys","excludedPrototypes","Function","isExcludedProto","getKeys","getOwnPropertyNames","visitedKeys","create","push","getPrototypeOf","enumeration","ensureErrorObject","err","asArray","v","isArray","Symbol","iterator","ArrayFrom","itResult","it","next","isNode","toLowerCase","hasDevTools","chrome","loadTimes","isRecentNode","version","versions","node","split","map","Number","lastLineError","type","object","isArrayLike","arrayLikeKeys","baseKeys","keysIn","baseKeysIn","copyObject","source","props","customizer","isNew","index","newValue","baseAssignValue","assignValue","freeGlobal","freeSelf","root","subError","nameProperty","defaultMessage","SubError","captureStackTrace","cause","stack","_TypeError","_RangeError","Objectfreeze","freeze","util","Warning","CancellationError","TimeoutError","AggregateError","TypeError","RangeError","methods","level","indent","join","lines","j","errorTypes","RejectionError","baseIteratee","identity","baseMatchesProperty","baseMatches","property","castPath","isKey","stringToPath","toKey","isSymbol","result","INFINITY","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","run","Item","array","noop","nextTick","args","title","browser","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","getNative","getValue","baseIsNative","isObjectLike","prop","has","proto","ObjectKeys","o","ObjectGetDescriptor","ObjectDefineProperty","ObjectFreeze","ObjectGetPrototypeOf","ArrayIsArray","baseForOwn","iteratee","baseFor","baseGetTag","undefinedTag","nullTag","symToStringTag","getRawTag","objectToString","toStringTag","castFunction","createAssigner","assigner","baseRest","sources","guard","isIterateeCall","eq","other","isFunction","tag","funcTag","genTag","asyncTag","proxyTag","arrayMap","baseGet","path","isLength","stubFalse","freeExports","nodeType","freeModule","moduleExports","Buffer","nativeIsBuffer","isBuffer","ListCache","entries","clear","entry","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","Stack","data","__data__","size","stackClear","stackDelete","stackGet","stackHas","stackSet","func","thisArg","objValue","objectProto","assocIndexOf","start","setToString","overRest","baseSet","lastIndex","nested","isIndex","getMapData","isKeyable","overArg","getPrototype","MAX_SAFE_INTEGER","reIsUint","isPrototype","Ctor","nativeCreate","baseIsArguments","propertyIsEnumerable","isArguments","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","webpackPolyfill","deprecate","paths","children","Client","a","b","EventEmitter","hostname","protocol","wsProtocol","port","isDelta","context","isHello","moduleAvailable","resolve","NodeWebSocket","_object","debug","url","agent","BrowserWebSocket","WebSocket","MozWebSocket","connect","connectDelta","onData","onConnect","onDisconnect","onError","onClose","subscribe","discoverAndConnect","connectP","console","log","d","f","connectDeltaByUrl","then","JSON","stringify","body","endpoints","v1","catch","apiGet","format","discoveryAvailable","startDiscovery","createBrowser","tcp","resolverSequence","rst","DNSServiceResolve","host","httpResponse","service","stopDiscovery","stop","values","g","h","slashes","pathname","query","parse","href","Primus","reconnect","maxDelay","minDelay","retries","Infinity","send","write","disconnect","end","k","close","onopen","onerror","onmessage","error","onclose","subscribeAll","getSelf","getSelfId","getSelfMatcher","mmsi","uuid","getMeta","Map","MapCache","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayPush","offset","objectCreate","baseCreate","createBaseFor","baseMerge","srcIndex","srcValue","baseMergeDeep","assignMergeValue","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","flatRest","flatten","getAllKeysIn","baseGetAllKeys","getSymbolsIn","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","DataView","Set","WeakMap","toSource","mapTag","objectTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","ctorString","reIsPlainProp","reIsDeepProp","mapToArray","forEach","assignInWith","hasIn","hasPath","baseHasIn","symbolTag","NEXT_FILTER","catchFilter","instances","boundTo","_boundValue","predicateLoop","item","matchesPredicate","isUntypedError","wrapAsOperationalError","rErrorKey","nodebackForPromise","multiArgs","wrapped","_attachExtraTrace","_reject","$_len","Math","max","$_i","_fulfill","errors","arrayEach","predicate","resIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","baseTimes","String","arrayReduce","accumulator","initAccum","baseAssign","baseFindKey","collection","eachFunc","baseForOwnRight","baseForRight","baseFunctions","keysFunc","symbolsFunc","baseIsEqual","bitmask","baseIsEqualDeep","basePickBy","baseUnset","parent","last","baseUpdate","updater","baseValues","cloneBuffer","buffer","isDeep","slice","allocUnsafe","copy","cloneTypedArray","typedArray","byteOffset","copyArray","fromRight","iterable","createInverter","setter","toIteratee","baseInverter","createToPairs","setToPairs","baseToPairs","equalArrays","equalFunc","isPartial","COMPARE_PARTIAL_FLAG","arrLength","othLength","stacked","seen","COMPARE_UNORDERED_FLAG","SetCache","arrValue","othValue","compared","arraySome","othIndex","cacheHas","getAllKeys","hasFunc","initCloneObject","isStrictComparable","matchesStrictComparable","transform","arg","nativeMax","otherArgs","baseSlice","setToArray","baseSetToString","shortOut","funcToString","funcProto","assignIn","constant","isPlainObject","objectCtorString","mergeWith","pickBy","toPairs","toPairsIn","GaugeSet","speed","Radial","gaugeType","GaugeType","TYPE4","frameDesign","FrameDesign","TILTED_BLACK","titleString","unitString","lcdVisible","maxValue","maxMeasuredValue","maxMeasuredValueVisible","thresholdVisible","ledVisible","pointerType","PointerType","depth","section","Section","TYPE2","compass","Compass","rotateFace","TYPE5","wind","WindDirection","degreeScaleHalf","pointSymbolsVisible","eventHandlers","navigation.speedOverGround","setValue","navigation.courseOverGroundTrue","PI","environment.depth.belowTransducer","environment.wind.angleApparent","setValueLatest","dispatch","doDispatch","delta","selfId","updates","that","update","setSelfId","setAlpha","hex","alpha","hexColor","substring","red","parseInt","green","blue","color","getColorFromFraction","sourceColor","destinationColor","range","fraction","returnRawData","INT_TO_FLOAT","sourceRed","getRed","sourceGreen","getGreen","sourceBlue","getBlue","sourceAlpha","getAlpha","deltaRed","deltaGreen","deltaBlue","deltaAlpha","fractionRed","fractionGreen","fractionBlue","fractionAlpha","toFixed","RgbaColor","calcNiceNumber","round","niceFraction","exponent","floor","log10","pow","roundedRectangle","ctx","x","y","w","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","createBuffer","width","height","doc","createElement","drawToBuffer","drawFunction","getContext","getColorValues","colorData","lookupBuffer","fillStyle","rect","fill","getImageData","customColorDef","VERY_DARK","DARK","LIGHT","LIGHTER","VERY_LIGHT","rgbaCol","darker","lighter","ColorDef","rgbToHsl","min","hue","saturation","lightness","hsbToRgb","brightness","q","t","rgbToHsb","limit","wrap","lower","upper","distance","times","getShortestAngle","getCanvasContext","elementOrId","element","getElementById","HALF_PI","TWO_PI","RAD_FACTOR","DEG_FACTOR","document","lcdFontName","stdFontName","radial","canvas","parameters","minValue","niceScale","threshold","thresholdRising","area","METAL","frameVisible","backgroundColor","BackgroundColor","DARK_GRAY","backgroundVisible","TYPE1","pointerColor","RED","knobType","KnobType","STANDARD_KNOB","knobStyle","KnobStyle","SILVER","lcdColor","LcdColor","STANDARD","lcdDecimals","digitalFont","fractionalScaleDecimals","ledColor","LedColor","RED_LED","userLedColor","GREEN_LED","userLedVisible","minMeasuredValueVisible","foregroundType","ForegroundType","foregroundVisible","labelNumberFormat","LabelNumberFormat","playAlarm","alarmSound","customLayer","tickLabelOrientation","TickLabelOrientation","TANGENT","NORMAL","trendVisible","trendColors","CYAN_LED","useOdometer","odometerParams","odometerUseValue","fullScaleDeflectionTime","mainCtx","audioElement","setAttribute","tween","freeAreaAngle","rotationOffset","tickmarkOffset","angleRange","angleStep","odoPosX","lcdBuffer","trendUpBuffer","trendSteadyBuffer","trendDownBuffer","trendOffBuffer","odoGauge","odoBuffer","odoContext","odoValue","minMeasuredValue","ledBlinking","userLedBlinking","ledTimerId","userLedTimerId","repainting","trendIndicator","TrendState","OFF","trendSize","trendPosX","trendPosY","angle","imageWidth","imageHeight","centerX","centerY","ledSize","ledPosX","ledPosY","userLedPosX","TYPE3","userLedPosY","lcdFontHeight","stdFont","lcdFont","lcdHeight","lcdWidth","lcdPosX","lcdPosY","odoPosY","shadowOffset","initialized","niceMinValue","niceMaxValue","niceRange","minorTickSpacing","majorTickSpacing","maxNoOfMinorTicks","maxNoOfMajorTicks","calculate","ceil","frameBuffer","frameContext","backgroundBuffer","backgroundContext","ledBufferOn","ledContextOn","ledBufferOff","ledContextOff","ledBuffer","userLedBufferOn","userLedContextOn","userLedBufferOff","userLedContextOff","userLedBuffer","minMeasuredValueBuffer","minMeasuredValueCtx","maxMeasuredValueBuffer","maxMeasuredValueCtx","pointerBuffer","pointerContext","foregroundBuffer","foregroundContext","drawLcdText","restore","save","textAlign","strokeStyle","textColor","STANDARD_GREEN","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillText","drawPostsImage","drawImage","createKnobImage","createThresholdImage","thresholdBuffer","thresholdCtx","gradThreshold","createLinearGradient","addColorStop","drawAreaSectionImage","filled","lineWidth","startAngle","stopAngle","translate","rotate","arc","drawTickmarksImage","textRotationAngle","fontSize","rotationStep","valueCounter","majorTickCounter","OUTER_POINT","MAJOR_INNER_POINT","MED_INNER_POINT","MINOR_INNER_POINT","TEXT_TRANSLATE_X","TEXT_WIDTH","HALF_MAX_NO_OF_MINOR_TICKS","MAX_VALUE_ROUNDED","parseFloat","labelColor","textBaseline","getRgbaColor","toPrecision","init","drawFrame","frame","drawBackground","background","drawLed","led","drawUserLed","userLed","drawPointer","pointer","drawForeground","foreground","drawTrend","trend","drawOdo","odo","drawRadialFrameImage","drawRadialBackgroundImage","drawRadialCustomImage","createLedImage","createMeasuredValueImage","BLUE","dark","medium","sectionIndex","areaIndex","drawTitleImage","Odometer","_context","decimals","digits","valueForeColor","valueBackColor","decimalForeColor","decimalBackColor","createLcdBackgroundImage","drawPointerImage","knobVisible","drawRadialForegroundImage","createTrendIndicator","UP","STEADY","DOWN","resetBuffers","buffers","resetFrame","resetBackground","resetLed","resetUserLed","resetPointer","resetForeground","toggleAndRepaintLed","requestAnimFrame","repaint","toggleAndRepaintUserLed","blink","blinking","setInterval","clearInterval","blinkUser","targetValue","play","pause","setOdoValue","getOdoValue","setValueAnimated","callback","time","gauge","isPlaying","abs","Tween","regularEaseInOut","onMotionChanged","event","_pos","onMotionFinished","resetMinMeasuredValue","resetMaxMeasuredValue","setMinMeasuredValueVisible","visible","setMaxMeasuredValueVisible","setMaxMeasuredValue","setMinMeasuredValue","setTitleString","setUnitString","unit","setMinValue","getMinValue","setMaxValue","getMaxValue","setThreshold","setArea","areaVal","setSection","areaSec","setThresholdVisible","setThresholdRising","rising","setLcdDecimals","setFrameDesign","newFrameDesign","setBackgroundColor","newBackgroundColor","setForegroundType","newForegroundType","setPointerType","newPointerType","setPointerColor","newPointerColor","setLedColor","newLedColor","setUserLedColor","toggleUserLed","setUserLedOnOff","blinkUserLed","setLedVisible","setUserLedVisible","setLcdColor","newLcdColor","setTrend","setTrendVisible","setFractionalScaleDecimals","setLabelNumberFormat","clearRect","state","radialBargraph","useSectionColors","valueColor","valueGradient","useValueGradient","bargraphOffset","degAngleRange","sectionAngles","isSectionsVisible","isGradientVisible","ACTIVE_LED_POS_X","ACTIVE_LED_POS_Y","LED_SIZE","LED_POS_X","LED_POS_Y","USER_LED_POS_X","USER_LED_POS_Y","ledBackground","activeLedBuffer","activeLedContext","drawValue","drawBargraphTrackImage","drawActiveLed","resetValue","ledTrackFrameGradient","ledTrackMainGradient","ledCenterX","ledCenterY","ledOffGradient","createRadialGradient","ledGradient","light","setValueColor","newValueColor","setSectionActive","setGradient","grad","setGradientActive","activeLedColor","currentValue","gradRange","activeLedAngle","lastActiveLedColor","getEnd","getStart","getColorAt","getHexColor","radialVertical","orientation","Orientation","NORTH","pointerOffset","titleWidth","unitWidth","measureText","WEST","EAST","linear","vertical","minMaxIndSize","lcdTextX","lcdTextY","lcdTextWidth","tickCounter","currentPos","scaleBoundsX","scaleBoundsY","scaleBoundsW","scaleBoundsH","minorTickStart","minorTickStop","mediumTickStart","mediumTickStop","majorTickStart","majorTickStop","tickSpaceScaling","labelCounter","drawLinearTicks","tickStart","tickStop","yOffset","yRange","valuePos","drawLinearFrameImage","drawLinearBackgroundImage","drawBackgroundImage","drawForegroundImage","drawLinearForegroundImage","top","bottom","fullSize","valueSize","valueTop","valueStartX","valueStartY","valueStopX","valueStopY","valueBackgroundStartX","valueBackgroundStartY","valueBackgroundStopX","valueBackgroundStopY","valueBorderStartX","valueBorderStartY","valueBorderStopX","valueBorderStopY","valueForegroundStartX","valueForegroundStartY","valueForegroundStopX","valueForegroundStopY","CARBON","PUNCHED_SHEET","STAINLESS","BRUSHED_STAINLESS","TURNED","valueBackgroundTrackGradient","fillRect","valueBorderGradient","valueBackgroundGradient","thermoTweak","valueForegroundGradient","foreSize","bezierCurveTo","backSize","threshVal","newVal","minMaxX","minMaxY","linearBargraph","sectionPixels","inActiveLedBuffer","inActiveLedContext","drawBargraphLed","bargraphled","drawInActiveLed","ledWidth2","resetBargraphLed","ledX","ledY","ledW","ledH","activeLeds","inactiveLeds","translateX","translateY","outerRadius","displaySingle","scrollTimer","unitStringVisible","headerString","headerStringVisible","valuesNumeric","alwaysScroll","autoScroll","scrolling","scrollX","textWidth","fontHeight","sectionBuffer","sectionForegroundColor","clip","lcdText","vPos","animate","createLcdSectionImage","lcdSectionBuffer","lcdCtx","xB","yB","wB","hB","rB","lcdBackground","rgb","hsb","rgbStart","gradientStartColor","hsbStart","rgbFraction1","gradientFraction1Color","hsbFraction1","rgbFraction2","gradientFraction2Color","hsbFraction2","rgbFraction3","gradientFraction3Color","hsbFraction3","rgbStop","gradientStopColor","hsbStop","startColor","fraction1Color","fraction2Color","fraction3Color","stopColor","xF","yF","wF","hF","rF","lcdForeground","createSectionForegroundColor","sectionColor","rgbSection","hsbSection","sectionForegroundRgb","newSection","setScrolling","scroll","lcdBackgroundBuffer","lcdTextColor","displayMulti","detailString","detailStringVisible","linkAltValue","altValue","stdAltFont","lcdAltFont","valueText","altValueText","setAltValue","decimalsVisible","textOrientationFixed","stepValue","visibleValue","stepPointerBuffer","stepPointerContext","smlFont","drawMarkerImage","lineCap","lineJoin","POINTER_LEVEL_GRADIENT","tmpDarkColor","tmpLightColor","strokeColor_POINTER_LEVEL","drawStepPointerImage","POINTER_LEVEL_LEFT_GRADIENT","strokeColor_POINTER_LEVEL_LEFT","POINTER_LEVEL_RIGHT_GRADIENT","strokeColor_POINTER_LEVEL_RIGHT","pointSymbols","degreeScale","roseVisible","roseBuffer","roseContext","symbolColor","NORTHPOINTER2_GRADIENT","SOUTHPOINTER2_GRADIENT","strokeColor_SOUTHPOINTER2","NORTHPOINTER3_GRADIENT","NORTHPOINTER1_GRADIENT","SOUTHPOINTER1_GRADIENT","strokeColor_SOUTHPOINTER","drawRoseImage","diff","elasticEaseOut","setPointSymbols","newPointSymbols","windDirection","tweenLatest","tweenAverage","pointerTypeLatest","pointerTypeAverage","TYPE8","pointerColorAverage","lcdTitleStrings","useColorLabels","valueLatest","valueAverage","angleLatest","angleAverage","lcdPosY1","lcdPosY2","pointerBufferLatest","pointerContextLatest","pointerBufferAverage","pointerContextAverage","bLatest","CARDINAL_TRANSLATE_X","drawLcdTitles","getValueLatest","setValueAverage","getValueAverage","setValueAnimatedLatest","setValueAnimatedAverage","setPointerColorAverage","setPointerTypeAverage","setLcdTitleStrings","titles","horizon","tweenRoll","tweenPitch","WHITE","roll","pitch","pitchPixel","pitchOffset","upsidedown","valueBuffer","valueContext","indicatorBuffer","indicatorContext","drawHorizonBackgroundImage","imgWidth","imgHeight","HORIZON_GRADIENT","stepSizeY","stepTen","step","drawHorizonForegroundImage","stepRad","drawIndicatorImage","setRoll","newRoll","getRoll","setRollAnimated","setPitch","newPitch","getPitch","setPitchAnimated","setPitchOffset","newPitchOffset","toggleLed","newColor","setLedOnOff","clock","minutePointerAngle","hourPointerAngle","secondPointerAngle","tickTimer","GRAY","BLACK","ANTHRACITE","LIGHT_GRAY","isAutomatic","hour","minute","second","secondMovesContinuous","timeZoneOffsetHour","timeZoneOffsetMinute","secondPointerVisible","objDate","Date","tickInterval","ANGLE_STEP","hourBuffer","hourContext","minuteBuffer","minuteContext","secondBuffer","secondContext","ptrType","tickAngle","SMALL_TICK_HEIGHT","BIG_TICK_HEIGHT","INNER_POINT","drawHourPointer","veryLight","drawMinutePointer","drawSecondPointer","drawKnob","drawTopKnob","calculateAngles","tickTock","setHours","setMinutes","setSeconds","getSeconds","getMilliseconds","getUTCHours","getHours","getUTCMinutes","getMinutes","drawPointers","pointers","resetPointers","getAutomatic","setAutomatic","getHour","setHour","getMinute","setMinute","getSecond","setSecond","getTimeZoneOffsetHour","setTimeZoneOffsetHour","getTimeZoneOffsetMinute","setTimeZoneOffsetMinute","getSecondPointerVisible","setSecondPointerVisible","getSecondMovesContinuous","setSecondMovesContinuous","battery","createBatteryImage","BORDER_FRACTIONS","BORDER_COLORS","border","GradientWrapper","getRgbColor","LIQUID_COLORS_DARK","LIQUID_COLORS_LIGHT","LIQUID_GRADIENT_FRACTIONS","liquidDark","liquidLight","stopwatch","smallPointerSize","smallPointerX_Offset","smallPointerY_Offset","smallPointerBuffer","smallPointerContext","largePointerBuffer","largePointerContext","currentMilliSeconds","minutes","seconds","milliSeconds","running","lap","text_scale","text_dist_factor","x_offset","y_offset","innerPoint","outerPoint","textPoint","STD_FONT_SIZE","STD_FONT","THIN_STROKE","MEDIUM_STROKE","THICK_STROKE","TEXT_DISTANCE","MIN_LENGTH","MED_LENGTH","MAX_LENGTH","TEXT_COLOR","TICK_COLOR","CENTER","RADIUS","counter","numberCounter","sinValue","cosValue","ALPHA_START","ANGLE_STEPSIZE","sin","cos","drawLargePointer","drawSmallPointer","getTime","isRunning","reset","getMeasuredTime","rotationAngle","secRotationAngle","altimeter","calcAngleStep","angleStep100ft","angleStep1000ft","angleStep10000ft","calcValues","value100","value1000","value10000","METAL_KNOB","tickLabelPeriod","TICKMARK_OFFSET","pointer10000Buffer","pointer10000Context","pointer1000Buffer","pointer1000Context","pointer100Buffer","pointer100Context","minVal","maxVal","draw100ftPointer","shadow","draw1000ftPointer","draw10000ftPointer","trafficlight","prefHeight","redOn","yellowOn","greenOn","housingBuffer","housingCtx","lightGreenBuffer","lightGreenCtx","greenOnBuffer","greenOnCtx","greenOffBuffer","greenOffCtx","lightYellowBuffer","lightYellowCtx","yellowOnBuffer","yellowOnCtx","yellowOffBuffer","yellowOffCtx","lightRedBuffer","lightRedCtx","redOnBuffer","redOnCtx","redOffBuffer","redOffCtx","drawHousing","housingFill","housingFrontFill","drawLightGreen","lightGreenFrameFill","lightGreenInnerFill","lightGreenEffectFill","lightGreenInnerShadowFill","scale","drawGreenOn","greenOnFill","greenOnGlowFill","drawGreenOff","greenOffFill","greenOffInnerShadowFill","createPattern","hatchBuffer","drawLightYellow","lightYellowFrameFill","lightYellowInnerFill","lightYellowEffectFill","lightYellowInnerShadowFill","drawYellowOn","yellowOnFill","yellowOnGlowFill","drawYellowOff","yellowOffFill","yellowOffInnerShadowFill","drawLightRed","lightRedFrameFill","lightRedInnerFill","lightRedEffectFill","lightRedInnerShadowFill","drawRedOn","redOnFill","redOnGlowFill","drawRedOff","redOffFill","redOffInnerShadowFill","setRedOn","isRedOn","setYellowOn","isYellowOn","setGreenOn","isGreenOn","lightbulb","glowColor","lightOn","offBuffer","offCtx","onBuffer","onCtx","bulbBuffer","bulbCtx","drawOff","glassOffFill","drawOn","glassOnFill","hsl","drawBulb","highlight","winding","winding1","contactPlate","clearCanvas","setTransform","setOn","isOn","setGlowColor","getGlowColor","globalAlpha","odometer","digitContext","digitWidth","columnHeight","verticalSpace","decimalContext","wobble","random","wobbleFactor","drawDigits","num","numb","frac","prevNum","pos","decimalBuffer","zeroOffset","digitBuffer","digitHeight","strongEaseOut","ptrColor","lblColor","ptrBuffer","ptrCtx","cacheKey","cache","veryDark","radFBuffer","radFCtx","outerX","innerX","fractions","colors","design","ConicalGradient","fillCircle","globalCompositeOperation","frameWidth","linFBuffer","linFCtx","OUTER_FRAME_CORNER_RADIUS","FRAME_MAIN_CORNER_RADIUS","SUBTRACT_CORNER_RADIUS","sqrt","radBBuffer","radBCtx","mono","textureColor","texture","turnRadius","stepSize","backgroundOffsetX","carbonBuffer","punchedSheetBuffer","gradientStop","substr","brushedMetalTexture","gradientStart","gradientFraction","img","drawWidth","drawHeight","linBBuffer","linBCtx","linBColor","withCenterKnob","knob","style","radFgBuffer","radFgCtx","gradHighlight","gradHighlight2","knobSize","knobX","knobY","linFgBuffer","linFgCtx","foregroundGradient","fgOffset","fgOffset2","knobBuffer","knobCtx","maxPostCenterX","maxPostCenterY","ledCtx","outerColor_ON","innerColor1_OFF","innerColor2_OFF","outerColor_OFF","innerColor1_ON","innerColor2_ON","coronaColor","indicatorColor","indicatorCtx","onSection","trendBuffer","trendCtx","drawUpArrow","drawEquals","drawDownArrow","altPos","offsetX","offsetY","amount","monochrome","shine","vari","clamp","C","horizontalBlur","inPix","outPix","mul","indx","totR","totG","totB","startX","startY","endX","endY","sinArr","outCanvas","outCanvasContext","inPixels","outPixels","tr","tg","tb","n","variation","createImageData","putImageData","validateColors","setRed","setGreen","setBlue","pixels","dx","dy","dy2","pixColor","bufferCtx","diameter","atan2","thicknessX","thicknessY","width2","height2","interpolationFraction","lowerLimit","lowerIndex","upperLimit","upperIndex","LN10","BackgroundColorDef","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","LcdColorDef","LedColorDef","GaugeTypeDef","OrientationDef","KnobTypeDef","KnobStyleDef","FrameDesignDef","PointerTypeDef","ForegroundTypeDef","LabelNumberFormatDef","TickLabelOrientationDef","TrendStateDef","SATIN_GRAY","BEIGE","BROWN","GREEN","MUD","BRUSHED_METAL","ORANGE","YELLOW","BLUE2","BLUE_BLACK","BLUE_DARKBLUE","BLUE_GRAY","BLUE_BLUE","RED_DARKRED","DARKBLUE","LILA","BLACKRED","DARKGREEN","AMBER","LIGHTBLUE","SECTIONS","CYAN","MAGENTA","RAITH","GREEN_LCD","JUG_GREEN","BLUE_LED","ORANGE_LED","YELLOW_LED","MAGENTA_LED","SOUTH","BRASS","BLACK_METAL","SHINY_METAL","STEEL","CHROME","GOLD","TILTED_GRAY","GLOSSY_METAL","TYPE6","TYPE7","TYPE9","TYPE10","TYPE11","TYPE12","TYPE13","TYPE14","TYPE15","TYPE16","FRACTIONAL","SCIENTIFIC","HORIZONTAL","trendState","RadialBargraph","RadialVertical","Linear","LinearBargraph","DisplaySingle","DisplayMulti","Level","Horizon","Led","Clock","Battery","StopWatch","Altimeter","TrafficLight","LightBulb","rgbaColor","gradientWrapper","webpackContext","req","webpackContextResolve","./index","./index.js","any","promises","SomePromiseArray","setHowMany","setUnwrap","_SomePromiseArray","Async","_customScheduler","_isTickUsed","_lateQueue","Queue","_normalQueue","_haveDrainedQueues","_trampolineEnabled","drainQueues","_drainQueues","_schedule","schedule","AsyncInvokeLater","receiver","_queueTick","AsyncInvoke","AsyncSettlePromises","_pushOne","firstLineError","setScheduler","prev","hasCustomScheduler","enableTrampoline","disableTrampolineIfNecessary","haveItemsQueued","fatalError","stderr","exit","throwLater","invokeLater","invoke","settlePromises","_settlePromises","_drainQueue","shift","_reset","INTERNAL","tryConvertToPromise","calledBind","rejectThis","_","targetRejected","promiseRejectionQueued","bindingPromise","_then","bindingResolved","_bitField","_resolveCallback","bindingRejected","_propagateFrom","propagateFromFunction","boundValueFunction","maybePromise","_target","_setBoundTo","_setOnCancel","_boundTo","_isBound","noConflict","bluebird","old","cr","callerCache","getterCache","ensureMethod","methodName","caller","pop","namedGetter","indexedGetter","getMethodCaller","getGetter","makeMethodCaller","replace","makeGetter","getCompiled","compiler","maybeCaller","getter","maybeGetter","PromiseArray","apiRejection","async","_async","cancel","cancellation","_warn","child","_isCancellable","_cancelBy","_isFollowing","_followee","_cancelBranched","_cancellationParent","_setWillBeCancelled","_branchHasCancelled","_branchesRemainingToCancel","_enoughBranchesHaveCancelled","canceller","_invokeOnCancel","_cancel","_setCancelled","_cancelPromises","_length","_unsetOnCancel","_onCancelField","isPending","_isCancelled","isCancellable","isCancelled","_doInvokeOnCancel","onCancelCallback","internalOnly","_resultCancelled","_onCancel","_invokeInternalOnCancel","Context","_trace","CapturedTrace","peekContext","createContext","longStackTraces","contextStack","_promiseCreated","_pushContext","_popContext","_peekContext","trace","deactivateLongStackTraces","activateLongStackTraces","Promise_pushContext","Promise_popContext","Promise_PeekContext","Promise_peekContext","Promise_promiseCreated","generatePromiseLifecycleEventObject","defaultFireEvent","cancellationExecute","executor","reject","onCancel","_attachCancellationCallback","cancellationAttachCancellationCallback","previousOnCancel","cancellationOnCancel","cancellationSetOnCancel","cancellationClearCancellationData","cancellationPropagateFrom","flags","branchesRemainingToCancel","bindingPropagateFrom","isFulfilled","longStackTracesCaptureStackTrace","longStackTracesAttachExtraTrace","ignoreSelf","_parent","attachExtraTrace","__stackCleaned__","parsed","parseStackAndMessage","checkForgottenReturns","returnValue","promiseCreated","wForgottenReturn","_returnedNonUndefined","handlerLine","creatorLine","traceLines","cleanStack","line","nodeFramePattern","lineMatches","match","parseLinePattern","firstUserLine","msg","deprecated","replacement","warn","shouldUseOwnTrace","config","warnings","warning","activeFireEvent","formatAndLogError","reconstructStack","stacks","removeDuplicateOrEmptyJumps","splice","removeCommonRoots","current","currentLastIndex","currentLastLine","commonRootMeetPoint","isTraceLine","stackFramePattern","isInternalFrame","shouldIgnore","indentStackFrames","stackFramesAsArray","isSoft","formatStack","printWarning","fireRejectionEvent","localHandler","reason","localEventFired","formatNonError","ruselessToString","newStr","snip","maxChars","longStackTracesIsSupported","parseLineInfo","matches","parseLineInfoRegex","fileName","setBounds","firstFileName","lastFileName","firstStackLines","lastStackLines","firstIndex","bluebirdFramePattern","info","_promisesCreated","uncycle","unhandledRejectionHandled","possiblyUnhandledRejection","getDomain","_getDomain","debugging","suppressUnhandledRejections","_ensurePossibleRejectionHandled","_setRejectionIsUnhandled","_notifyUnhandledRejection","_notifyUnhandledRejectionIsHandled","_setReturnedNonUndefined","_isRejectionUnhandled","_settledValue","_setUnhandledRejectionIsNotified","_unsetUnhandledRejectionIsNotified","_isUnhandledRejectionNotified","_unsetRejectionIsUnhandled","onPossiblyUnhandledRejection","domain","onUnhandledRejectionHandled","disableLongStackTraces","Promise_captureStackTrace","_captureStackTrace","Promise_attachExtraTrace","hasLongStackTraces","fireDomEvent","CustomEvent","dispatchEvent","domEvent","detail","cancelable","Event","createEvent","initCustomEvent","fireGlobalEvent","method","eventToObjectGenerator","promiseFulfilled","promiseRejected","promiseResolved","promiseCancelled","promiseChained","unhandledRejection","rejectionHandled","globalEventFired","domEventFired","opts","warningsOption","_clearCancellationData","_execute","monitoring","_fireEvent","handler","nodes","stackToIndex","currentStack","cycleEdgeNode","currentChildLength","v8stackFramePattern","v8stackFormatter","stackTraceLimit","ignoreUntil","indexOf","hasStackAfterThrow","isTTY","returner","thenReturn","thenThrow","catchThrow","_reason","caught","catchReturn","_value","promiseAllThis","PromiseAll","PromiseMapSeries","PromiseReduce","reduce","all","each","mapSeries","PromiseMap","options","PassThroughHandlerContext","called","cancelPromise","FinallyHandlerCancelReaction","finallyHandler","checkCancel","succeed","fail","reasonOrValue","isFinallyHandler","isRejected","_passThrough","success","lastly","tap","tapCatch","handlerOrPredicate","catchInstances","Proxyable","promiseFromYieldHandler","yieldHandlers","traceParent","PromiseSpawn","generatorFunction","yieldHandler","internal","_finallyPromise","_promise","_stack","_generatorFunction","_receiver","_generator","_yieldHandlers","_yieldedPromise","_cancellationPhase","_isResolved","_cleanup","_promiseCancelled","implementsReturn","coroutine","returnSentinel","_continue","_promiseFulfilled","_promiseRejected","_run","_rejectCallback","done","bitField","_proxy","PromiseSpawn$","generator","spawn","addYieldHandler","thenCallback","promiseSetter","generateHolderClass","total","assignment","cancellationCode","passedArguments","code","holderClasses","thenCallbacks","promiseSetters","HolderClass","holder","callbacks","asyncNeeded","_isFateSealed","_setAsyncGuaranteed","spread","MappingPromiseArray","_filter","_callback","_preservedValues","_limit","_inFlight","_queue","_asyncInit","concurrency","isFinite","_init$","_init","_values","preservedValues","totalResolved","_totalResolved","_resolve","booleans","_resolveFromSyncValue","attempt","spreadAdapter","nodeback","successAdapter","errorAdapter","newReason","asCallback","nodeify","adapter","check","_fulfillmentHandler0","_rejectionHandler0","_promise0","_receiver0","_resolveFromExecutor","deferResolve","deferReject","fillTypes","makeSelfResolutionError","reflectHandler","PromiseInspection","UNDEFINED_BINDING","APPLY","reflect","didFulfill","didReject","_setIsFinal","toJSON","fulfillmentValue","rejectionReason","getNewLibraryCopy","is","fromNode","fromCallback","cast","_setFulfilled","fulfilled","rejected","internalData","haveInternalData","settler","_settlePromiseCtx","_settlePromiseLateCancellationObserver","_addCallbacks","_setLength","_setRejected","_setFollowing","_isFinal","_unsetCancelled","_receiverAt","_promiseAt","_fulfillmentHandlerAt","_rejectionHandlerAt","_migrateCallback0","follower","fulfill","_migrateCallbackAt","base","proxyable","shouldBind","_setFollowee","synchronous","ignoreNonErrorWarnings","hasStack","_settlePromiseFromHandler","_settlePromise","isPromise","asyncGuaranteed","_settlePromise0","_clearCallbackDataAtIndex","_fulfillPromises","_rejectPromises","defer","pending","toResolutionValue","resolveValueIfEmpty","_resolveEmptyArray","_iterate","getActualLength","shouldCopyValues","isResolved","propsFilter","noCopyPropsPattern","isPromisified","__isPromisified__","hasPromisified","defaultPromisified","checkValid","suffixRegexp","keyWithoutAsyncSuffix","promisifiableMethods","passesDefaultFilter","defaultFilter","makeNodePromisifiedClosure","__","promisified","THIS","defaultThis","promisifyAll","promisifier","RegExp","escapeIdentRegex","promisifiedKey","makeNodePromisified","promisify","makeNodePromisifiedEval","defaultSuffix","noCopyProps","switchCaseArgumentOrder","likelyArgumentCount","argumentSequence","argumentCount","parameterDeclaration","parameterCount","originalName","generateCallForArgumentCount","comma","shouldProxyThis","generateArgumentSwitchCase","argumentOrder","newParameterCount","getFunctionCode","PropertiesPromiseArray","isMap","Es6Map","mapToEntries","_isMap","castValue","extractEntry","entriesToMap","keyOffset","arrayMove","src","dst","dstIndex","capacity","_capacity","_front","_willBeOverCapacity","_checkCapacity","wrapMask","front","_resizeTo","oldCapacity","moveItemsCount","race","raceLater","ReductionPromiseArray","initialValue","_each","_fn","_initialValue","_currentCancellable","_eachValues","completed","valueOrReason","gotAccum","accum","_gotAccum","gotValue","_eachComplete","sender","_resultCancelled$","setImmediate","noAsyncScheduler","NativePromise","MutationObserver","GlobalSetImmediate","ProcessNextTick","nativePromise","standalone","cordova","div","attributes","toggleScheduled","div2","o2","classList","toggle","observe","scheduleToggle","SettledPromiseArray","_promiseResolved","inspection","_settledValueField","settle","_howMany","_unwrap","_initialized","some","howMany","CANCELLATION","isArrayResolved","_canPossiblyFulfill","_getRangeError","_addFulfilled","_fulfilled","_addRejected","_checkOutcome","_rejected","__isCancelled","getThen","isAnyBluebirdPromise","doThenable","doGetThen","HandleWrapper","handle","successClear","failureClear","afterValue","delay","ms","afterTimeout","handleWrapper","castPreservingDisposable","thenable","_isDisposable","_getDisposer","_setDisposable","dispose","resources","tryDispose","Disposer","_data","FunctionDisposer","maybeUnwrapDisposer","isDisposer","ResourceList","NULL","resource","doDispose","_unsetDisposable","using","input","spreadArgs","disposer","reflectedResources","resultPromise","inspections","_disposer","Emitter","mixin","addEventListener","_callbacks","removeEventListener","hasListeners","useColors","documentElement","WebkitAppearance","firebug","exception","table","userAgent","$1","formatArgs","namespace","humanize","lastC","namespaces","storage","removeItem","load","DEBUG","localstorage","localStorage","local","formatters","enable","selectColor","hash","charCodeAt","createDebug","enabled","curr","prevTime","coerce","unshift","formatter","logFn","destroy","skips","instance","disable","Events","EE","_events","_eventsCount","__proto__","eventNames","events","exists","evt","available","ee","a1","a2","a3","a4","a5","listener","setMaxListeners","prefixed","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","add","setCacheAdd","setCacheHas","addMapEntry","pair","addSetEntry","baseAssignIn","baseAt","skip","baseClone","CLONE_DEEP_FLAG","isFlat","CLONE_FLAT_FLAG","isFull","CLONE_SYMBOLS_FLAG","initCloneArray","isFunc","argsTag","copySymbolsIn","copySymbols","cloneableTags","initCloneByTag","subValue","arrayTag","boolTag","dateTag","errorTag","numberTag","regexpTag","stringTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","baseFlatten","isStrict","isFlattenable","baseHas","baseInvoke","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMatch","matchData","noCustomizer","isMasked","pattern","reIsNative","reIsHostCtor","reRegExpChar","typedArrayTags","nativeKeys","nativeKeysIn","isProto","getMatchData","mergeFunc","isCommon","isTyped","isArrayLikeObject","toPlainObject","basePick","baseProperty","basePropertyDeep","string","baseToString","symbolToString","symbolProto","cloneDataView","dataView","cloneMap","cloneFunc","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbolValueOf","valueOf","coreJsData","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","isOwn","unmasked","nativeObjectToString","HASH_UNDEFINED","spreadableSymbol","isConcatSpreadable","maskSrcKey","uid","IE_PROTO","arrayProto","memoizeCapped","memoize","MAX_MEMOIZE_SIZE","freeProcess","lastCalled","stamp","nativeNow","remaining","HOT_SPAN","HOT_COUNT","now","pairs","LARGE_ARRAY_SIZE","reLeadingDot","rePropName","reEscapeChar","number","quote","assign","assignWith","at","properties","defaults","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","invert","invertBy","mapKeys","mapValues","resolver","FUNC_ERROR_TEXT","memoized","Cache","merge","negate","entriesIn","extend","extendWith","omit","omitBy","pick","setWith","unset","updateWith","valuesIn","isArrLike","s","fmtShort","fmtLong","plural","isNaN","long","__WEBPACK_AMD_DEFINE_RESULT__","mapDomain","parts","regexSeparators","labels","encoded","ucs2decode","extra","output","ucs2encode","stringFromCharCode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","numPoints","firstTime","damp","baseMinusTMin","tMax","skew","decode","out","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","lastIndexOf","delimiter","maxInt","tMin","encode","handledCPCount","basicLength","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","punycode","overflow","not-basic","invalid-input","fromCharCode","ucs2","qs","sep","maxKeys","kstr","vstr","idx","decodeURIComponent","stringifyPrimitive","ks","encodeURIComponent","task","tasksByHandle","nextHandle","registerImmediate","clearImmediate","runIfPresent","currentlyRunningATask","installNextTickImplementation","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","installPostMessageImplementation","messagePrefix","onGlobalMessage","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","script","onreadystatechange","removeChild","appendChild","installSetTimeoutImplementation","attachTo","superagent","PromiseRequest","Request","_end","accept","response","request","head","post","put","patch","del","serialize","pushEncodedKeyValuePair","subkey","parseString","parseHeader","field","fields","trim","isJSON","mime","Response","xhr","text","responseType","responseText","statusText","status","_setStatusProperties","header","headers","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_responseType","_parseBody","_query","_header","res","original","rawResponse","statusCode","new_err","_isResponseOK","RequestBase","ResponseBase","shouldRetry","getXHR","XMLHttpRequest","location","ActiveXObject","serializeObject","types","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","_parser","toError","auth","user","pass","btoa","username","password","attach","file","_getFormData","append","_formData","FormData","_maxRetries","_retries","_retry","crossDomainError","crossDomain","ca","pipe","_appendQueryString","_sort","queryArr","sort","_isHost","_endCalled","_setTimeouts","readyState","_responseTimeoutTimer","timedout","_aborted","handleProgress","direction","percent","onprogress","upload","open","_withCredentials","withCredentials","contentType","_serializer","setRequestHeader","_timer","_timeout","_responseTimeout","option","deadline","retry","_fullfilledPromise","innerResolve","innerReject","use","ok","_okCallback","getHeader","abort","redirects","_maxRedirects","isObj","sortQuery","_timeoutError","errno","utils","ct","params","links","link","parseLinks","statusType","redirect","clientError","serverError","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","ERROR_CODES","rel","cleanHeader","shouldStripCookie","Timeout","clearFn","_id","_clearFn","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","Url","search","urlParse","parseQueryString","slashesDenoteHost","u","urlFormat","isString","urlResolve","relative","urlResolveObject","resolveObject","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","querystring","queryIndex","splitter","uSplit","slashRegex","rest","simplePath","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","ae","esc","escape","qm","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","up","isAbsolute","ctor","superCtor","super_","TempCtor","readUInt8","inspect","stylize","stylizeNoColor","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","formatError","isRegExp","isDate","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","isNumber","numLinesEst","cur","ar","re","pad","timestamp","getDate","months","getMonth","formatRegExp","objects","warned","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","debuglog","NODE_DEBUG","toUpperCase","pid","bold","italic","underline","inverse","white","grey","black","cyan","magenta","yellow","special","boolean","null","date","origin","mdns","ws"],"mappings":"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","file":"gauges.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tsteelseries = __webpack_require__(114);\n\tsimplegauges = __webpack_require__(113);\n\tSignalK = __webpack_require__(44);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {\"use strict\";\n\tvar es5 = __webpack_require__(15);\n\tvar canEvaluate = typeof navigator == \"undefined\";\n\t\n\tvar errorObj = {e: {}};\n\tvar tryCatchTarget;\n\tvar globalObject = typeof self !== \"undefined\" ? self :\n\t    typeof window !== \"undefined\" ? window :\n\t    typeof global !== \"undefined\" ? global :\n\t    this !== undefined ? this : null;\n\t\n\tfunction tryCatcher() {\n\t    try {\n\t        var target = tryCatchTarget;\n\t        tryCatchTarget = null;\n\t        return target.apply(this, arguments);\n\t    } catch (e) {\n\t        errorObj.e = e;\n\t        return errorObj;\n\t    }\n\t}\n\tfunction tryCatch(fn) {\n\t    tryCatchTarget = fn;\n\t    return tryCatcher;\n\t}\n\t\n\tvar inherits = function(Child, Parent) {\n\t    var hasProp = {}.hasOwnProperty;\n\t\n\t    function T() {\n\t        this.constructor = Child;\n\t        this.constructor$ = Parent;\n\t        for (var propertyName in Parent.prototype) {\n\t            if (hasProp.call(Parent.prototype, propertyName) &&\n\t                propertyName.charAt(propertyName.length-1) !== \"$\"\n\t           ) {\n\t                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n\t            }\n\t        }\n\t    }\n\t    T.prototype = Parent.prototype;\n\t    Child.prototype = new T();\n\t    return Child.prototype;\n\t};\n\t\n\t\n\tfunction isPrimitive(val) {\n\t    return val == null || val === true || val === false ||\n\t        typeof val === \"string\" || typeof val === \"number\";\n\t\n\t}\n\t\n\tfunction isObject(value) {\n\t    return typeof value === \"function\" ||\n\t           typeof value === \"object\" && value !== null;\n\t}\n\t\n\tfunction maybeWrapAsError(maybeError) {\n\t    if (!isPrimitive(maybeError)) return maybeError;\n\t\n\t    return new Error(safeToString(maybeError));\n\t}\n\t\n\tfunction withAppended(target, appendee) {\n\t    var len = target.length;\n\t    var ret = new Array(len + 1);\n\t    var i;\n\t    for (i = 0; i < len; ++i) {\n\t        ret[i] = target[i];\n\t    }\n\t    ret[i] = appendee;\n\t    return ret;\n\t}\n\t\n\tfunction getDataPropertyOrDefault(obj, key, defaultValue) {\n\t    if (es5.isES5) {\n\t        var desc = Object.getOwnPropertyDescriptor(obj, key);\n\t\n\t        if (desc != null) {\n\t            return desc.get == null && desc.set == null\n\t                    ? desc.value\n\t                    : defaultValue;\n\t        }\n\t    } else {\n\t        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n\t    }\n\t}\n\t\n\tfunction notEnumerableProp(obj, name, value) {\n\t    if (isPrimitive(obj)) return obj;\n\t    var descriptor = {\n\t        value: value,\n\t        configurable: true,\n\t        enumerable: false,\n\t        writable: true\n\t    };\n\t    es5.defineProperty(obj, name, descriptor);\n\t    return obj;\n\t}\n\t\n\tfunction thrower(r) {\n\t    throw r;\n\t}\n\t\n\tvar inheritedDataKeys = (function() {\n\t    var excludedPrototypes = [\n\t        Array.prototype,\n\t        Object.prototype,\n\t        Function.prototype\n\t    ];\n\t\n\t    var isExcludedProto = function(val) {\n\t        for (var i = 0; i < excludedPrototypes.length; ++i) {\n\t            if (excludedPrototypes[i] === val) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t\n\t    if (es5.isES5) {\n\t        var getKeys = Object.getOwnPropertyNames;\n\t        return function(obj) {\n\t            var ret = [];\n\t            var visitedKeys = Object.create(null);\n\t            while (obj != null && !isExcludedProto(obj)) {\n\t                var keys;\n\t                try {\n\t                    keys = getKeys(obj);\n\t                } catch (e) {\n\t                    return ret;\n\t                }\n\t                for (var i = 0; i < keys.length; ++i) {\n\t                    var key = keys[i];\n\t                    if (visitedKeys[key]) continue;\n\t                    visitedKeys[key] = true;\n\t                    var desc = Object.getOwnPropertyDescriptor(obj, key);\n\t                    if (desc != null && desc.get == null && desc.set == null) {\n\t                        ret.push(key);\n\t                    }\n\t                }\n\t                obj = es5.getPrototypeOf(obj);\n\t            }\n\t            return ret;\n\t        };\n\t    } else {\n\t        var hasProp = {}.hasOwnProperty;\n\t        return function(obj) {\n\t            if (isExcludedProto(obj)) return [];\n\t            var ret = [];\n\t\n\t            /*jshint forin:false */\n\t            enumeration: for (var key in obj) {\n\t                if (hasProp.call(obj, key)) {\n\t                    ret.push(key);\n\t                } else {\n\t                    for (var i = 0; i < excludedPrototypes.length; ++i) {\n\t                        if (hasProp.call(excludedPrototypes[i], key)) {\n\t                            continue enumeration;\n\t                        }\n\t                    }\n\t                    ret.push(key);\n\t                }\n\t            }\n\t            return ret;\n\t        };\n\t    }\n\t\n\t})();\n\t\n\tvar thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\n\tfunction isClass(fn) {\n\t    try {\n\t        if (typeof fn === \"function\") {\n\t            var keys = es5.names(fn.prototype);\n\t\n\t            var hasMethods = es5.isES5 && keys.length > 1;\n\t            var hasMethodsOtherThanConstructor = keys.length > 0 &&\n\t                !(keys.length === 1 && keys[0] === \"constructor\");\n\t            var hasThisAssignmentAndStaticMethods =\n\t                thisAssignmentPattern.test(fn + \"\") && es5.names(fn).length > 0;\n\t\n\t            if (hasMethods || hasMethodsOtherThanConstructor ||\n\t                hasThisAssignmentAndStaticMethods) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    } catch (e) {\n\t        return false;\n\t    }\n\t}\n\t\n\tfunction toFastProperties(obj) {\n\t    /*jshint -W027,-W055,-W031*/\n\t    function FakeConstructor() {}\n\t    FakeConstructor.prototype = obj;\n\t    var l = 8;\n\t    while (l--) new FakeConstructor();\n\t    return obj;\n\t    eval(obj);\n\t}\n\t\n\tvar rident = /^[a-z$_][a-z$_0-9]*$/i;\n\tfunction isIdentifier(str) {\n\t    return rident.test(str);\n\t}\n\t\n\tfunction filledRange(count, prefix, suffix) {\n\t    var ret = new Array(count);\n\t    for(var i = 0; i < count; ++i) {\n\t        ret[i] = prefix + i + suffix;\n\t    }\n\t    return ret;\n\t}\n\t\n\tfunction safeToString(obj) {\n\t    try {\n\t        return obj + \"\";\n\t    } catch (e) {\n\t        return \"[no string representation]\";\n\t    }\n\t}\n\t\n\tfunction isError(obj) {\n\t    return obj !== null &&\n\t           typeof obj === \"object\" &&\n\t           typeof obj.message === \"string\" &&\n\t           typeof obj.name === \"string\";\n\t}\n\t\n\tfunction markAsOriginatingFromRejection(e) {\n\t    try {\n\t        notEnumerableProp(e, \"isOperational\", true);\n\t    }\n\t    catch(ignore) {}\n\t}\n\t\n\tfunction originatesFromRejection(e) {\n\t    if (e == null) return false;\n\t    return ((e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError) ||\n\t        e[\"isOperational\"] === true);\n\t}\n\t\n\tfunction canAttachTrace(obj) {\n\t    return isError(obj) && es5.propertyIsWritable(obj, \"stack\");\n\t}\n\t\n\tvar ensureErrorObject = (function() {\n\t    if (!(\"stack\" in new Error())) {\n\t        return function(value) {\n\t            if (canAttachTrace(value)) return value;\n\t            try {throw new Error(safeToString(value));}\n\t            catch(err) {return err;}\n\t        };\n\t    } else {\n\t        return function(value) {\n\t            if (canAttachTrace(value)) return value;\n\t            return new Error(safeToString(value));\n\t        };\n\t    }\n\t})();\n\t\n\tfunction classString(obj) {\n\t    return {}.toString.call(obj);\n\t}\n\t\n\tfunction copyDescriptors(from, to, filter) {\n\t    var keys = es5.names(from);\n\t    for (var i = 0; i < keys.length; ++i) {\n\t        var key = keys[i];\n\t        if (filter(key)) {\n\t            try {\n\t                es5.defineProperty(to, key, es5.getDescriptor(from, key));\n\t            } catch (ignore) {}\n\t        }\n\t    }\n\t}\n\t\n\tvar asArray = function(v) {\n\t    if (es5.isArray(v)) {\n\t        return v;\n\t    }\n\t    return null;\n\t};\n\t\n\tif (typeof Symbol !== \"undefined\" && Symbol.iterator) {\n\t    var ArrayFrom = typeof Array.from === \"function\" ? function(v) {\n\t        return Array.from(v);\n\t    } : function(v) {\n\t        var ret = [];\n\t        var it = v[Symbol.iterator]();\n\t        var itResult;\n\t        while (!((itResult = it.next()).done)) {\n\t            ret.push(itResult.value);\n\t        }\n\t        return ret;\n\t    };\n\t\n\t    asArray = function(v) {\n\t        if (es5.isArray(v)) {\n\t            return v;\n\t        } else if (v != null && typeof v[Symbol.iterator] === \"function\") {\n\t            return ArrayFrom(v);\n\t        }\n\t        return null;\n\t    };\n\t}\n\t\n\tvar isNode = typeof process !== \"undefined\" &&\n\t        classString(process).toLowerCase() === \"[object process]\";\n\t\n\tvar hasEnvVariables = typeof process !== \"undefined\" &&\n\t    typeof process.env !== \"undefined\";\n\t\n\tfunction env(key) {\n\t    return hasEnvVariables ? process.env[key] : undefined;\n\t}\n\t\n\tfunction getNativePromise() {\n\t    if (typeof Promise === \"function\") {\n\t        try {\n\t            var promise = new Promise(function(){});\n\t            if ({}.toString.call(promise) === \"[object Promise]\") {\n\t                return Promise;\n\t            }\n\t        } catch (e) {}\n\t    }\n\t}\n\t\n\tfunction domainBind(self, cb) {\n\t    return self.bind(cb);\n\t}\n\t\n\tvar ret = {\n\t    isClass: isClass,\n\t    isIdentifier: isIdentifier,\n\t    inheritedDataKeys: inheritedDataKeys,\n\t    getDataPropertyOrDefault: getDataPropertyOrDefault,\n\t    thrower: thrower,\n\t    isArray: es5.isArray,\n\t    asArray: asArray,\n\t    notEnumerableProp: notEnumerableProp,\n\t    isPrimitive: isPrimitive,\n\t    isObject: isObject,\n\t    isError: isError,\n\t    canEvaluate: canEvaluate,\n\t    errorObj: errorObj,\n\t    tryCatch: tryCatch,\n\t    inherits: inherits,\n\t    withAppended: withAppended,\n\t    maybeWrapAsError: maybeWrapAsError,\n\t    toFastProperties: toFastProperties,\n\t    filledRange: filledRange,\n\t    toString: safeToString,\n\t    canAttachTrace: canAttachTrace,\n\t    ensureErrorObject: ensureErrorObject,\n\t    originatesFromRejection: originatesFromRejection,\n\t    markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n\t    classString: classString,\n\t    copyDescriptors: copyDescriptors,\n\t    hasDevTools: typeof chrome !== \"undefined\" && chrome &&\n\t                 typeof chrome.loadTimes === \"function\",\n\t    isNode: isNode,\n\t    hasEnvVariables: hasEnvVariables,\n\t    env: env,\n\t    global: globalObject,\n\t    getNativePromise: getNativePromise,\n\t    domainBind: domainBind\n\t};\n\tret.isRecentNode = ret.isNode && (function() {\n\t    var version = process.versions.node.split(\".\").map(Number);\n\t    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);\n\t})();\n\t\n\tif (ret.isNode) ret.toFastProperties(process);\n\t\n\ttry {throw new Error(); } catch (e) {ret.lastLineError = e;}\n\tmodule.exports = ret;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(12)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Checks if `value` is classified as an `Array` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t * @example\n\t *\n\t * _.isArray([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArray(document.body.children);\n\t * // => false\n\t *\n\t * _.isArray('abc');\n\t * // => false\n\t *\n\t * _.isArray(_.noop);\n\t * // => false\n\t */\n\tvar isArray = Array.isArray;\n\t\n\tmodule.exports = isArray;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return value != null && (type == 'object' || type == 'function');\n\t}\n\t\n\tmodule.exports = isObject;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayLikeKeys = __webpack_require__(69),\n\t    baseKeys = __webpack_require__(173),\n\t    isArrayLike = __webpack_require__(27);\n\t\n\t/**\n\t * Creates an array of the own enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects. See the\n\t * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t * for more details.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keys(new Foo);\n\t * // => ['a', 'b'] (iteration order is not guaranteed)\n\t *\n\t * _.keys('hi');\n\t * // => ['0', '1']\n\t */\n\tfunction keys(object) {\n\t  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n\t}\n\t\n\tmodule.exports = keys;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayLikeKeys = __webpack_require__(69),\n\t    baseKeysIn = __webpack_require__(174),\n\t    isArrayLike = __webpack_require__(27);\n\t\n\t/**\n\t * Creates an array of the own and inherited enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.0.0\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keysIn(new Foo);\n\t * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t */\n\tfunction keysIn(object) {\n\t  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n\t}\n\t\n\tmodule.exports = keysIn;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar assignValue = __webpack_require__(32),\n\t    baseAssignValue = __webpack_require__(24);\n\t\n\t/**\n\t * Copies properties of `source` to `object`.\n\t *\n\t * @private\n\t * @param {Object} source The object to copy properties from.\n\t * @param {Array} props The property identifiers to copy.\n\t * @param {Object} [object={}] The object to copy properties to.\n\t * @param {Function} [customizer] The function to customize copied values.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction copyObject(source, props, object, customizer) {\n\t  var isNew = !object;\n\t  object || (object = {});\n\t\n\t  var index = -1,\n\t      length = props.length;\n\t\n\t  while (++index < length) {\n\t    var key = props[index];\n\t\n\t    var newValue = customizer\n\t      ? customizer(object[key], source[key], key, object, source)\n\t      : undefined;\n\t\n\t    if (newValue === undefined) {\n\t      newValue = source[key];\n\t    }\n\t    if (isNew) {\n\t      baseAssignValue(object, key, newValue);\n\t    } else {\n\t      assignValue(object, key, newValue);\n\t    }\n\t  }\n\t  return object;\n\t}\n\t\n\tmodule.exports = copyObject;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar freeGlobal = __webpack_require__(91);\n\t\n\t/** Detect free variable `self`. */\n\tvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t/** Used as a reference to the global object. */\n\tvar root = freeGlobal || freeSelf || Function('return this')();\n\t\n\tmodule.exports = root;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar es5 = __webpack_require__(15);\n\tvar Objectfreeze = es5.freeze;\n\tvar util = __webpack_require__(1);\n\tvar inherits = util.inherits;\n\tvar notEnumerableProp = util.notEnumerableProp;\n\t\n\tfunction subError(nameProperty, defaultMessage) {\n\t    function SubError(message) {\n\t        if (!(this instanceof SubError)) return new SubError(message);\n\t        notEnumerableProp(this, \"message\",\n\t            typeof message === \"string\" ? message : defaultMessage);\n\t        notEnumerableProp(this, \"name\", nameProperty);\n\t        if (Error.captureStackTrace) {\n\t            Error.captureStackTrace(this, this.constructor);\n\t        } else {\n\t            Error.call(this);\n\t        }\n\t    }\n\t    inherits(SubError, Error);\n\t    return SubError;\n\t}\n\t\n\tvar _TypeError, _RangeError;\n\tvar Warning = subError(\"Warning\", \"warning\");\n\tvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\n\tvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\n\tvar AggregateError = subError(\"AggregateError\", \"aggregate error\");\n\ttry {\n\t    _TypeError = TypeError;\n\t    _RangeError = RangeError;\n\t} catch(e) {\n\t    _TypeError = subError(\"TypeError\", \"type error\");\n\t    _RangeError = subError(\"RangeError\", \"range error\");\n\t}\n\t\n\tvar methods = (\"join pop push shift unshift slice filter forEach some \" +\n\t    \"every map indexOf lastIndexOf reduce reduceRight sort reverse\").split(\" \");\n\t\n\tfor (var i = 0; i < methods.length; ++i) {\n\t    if (typeof Array.prototype[methods[i]] === \"function\") {\n\t        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];\n\t    }\n\t}\n\t\n\tes5.defineProperty(AggregateError.prototype, \"length\", {\n\t    value: 0,\n\t    configurable: false,\n\t    writable: true,\n\t    enumerable: true\n\t});\n\tAggregateError.prototype[\"isOperational\"] = true;\n\tvar level = 0;\n\tAggregateError.prototype.toString = function() {\n\t    var indent = Array(level * 4 + 1).join(\" \");\n\t    var ret = \"\\n\" + indent + \"AggregateError of:\" + \"\\n\";\n\t    level++;\n\t    indent = Array(level * 4 + 1).join(\" \");\n\t    for (var i = 0; i < this.length; ++i) {\n\t        var str = this[i] === this ? \"[Circular AggregateError]\" : this[i] + \"\";\n\t        var lines = str.split(\"\\n\");\n\t        for (var j = 0; j < lines.length; ++j) {\n\t            lines[j] = indent + lines[j];\n\t        }\n\t        str = lines.join(\"\\n\");\n\t        ret += str + \"\\n\";\n\t    }\n\t    level--;\n\t    return ret;\n\t};\n\t\n\tfunction OperationalError(message) {\n\t    if (!(this instanceof OperationalError))\n\t        return new OperationalError(message);\n\t    notEnumerableProp(this, \"name\", \"OperationalError\");\n\t    notEnumerableProp(this, \"message\", message);\n\t    this.cause = message;\n\t    this[\"isOperational\"] = true;\n\t\n\t    if (message instanceof Error) {\n\t        notEnumerableProp(this, \"message\", message.message);\n\t        notEnumerableProp(this, \"stack\", message.stack);\n\t    } else if (Error.captureStackTrace) {\n\t        Error.captureStackTrace(this, this.constructor);\n\t    }\n\t\n\t}\n\tinherits(OperationalError, Error);\n\t\n\tvar errorTypes = Error[\"__BluebirdErrorTypes__\"];\n\tif (!errorTypes) {\n\t    errorTypes = Objectfreeze({\n\t        CancellationError: CancellationError,\n\t        TimeoutError: TimeoutError,\n\t        OperationalError: OperationalError,\n\t        RejectionError: OperationalError,\n\t        AggregateError: AggregateError\n\t    });\n\t    es5.defineProperty(Error, \"__BluebirdErrorTypes__\", {\n\t        value: errorTypes,\n\t        writable: false,\n\t        enumerable: false,\n\t        configurable: false\n\t    });\n\t}\n\t\n\tmodule.exports = {\n\t    Error: Error,\n\t    TypeError: _TypeError,\n\t    RangeError: _RangeError,\n\t    CancellationError: errorTypes.CancellationError,\n\t    OperationalError: errorTypes.OperationalError,\n\t    TimeoutError: errorTypes.TimeoutError,\n\t    AggregateError: errorTypes.AggregateError,\n\t    Warning: Warning\n\t};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseMatches = __webpack_require__(175),\n\t    baseMatchesProperty = __webpack_require__(176),\n\t    identity = __webpack_require__(26),\n\t    isArray = __webpack_require__(2),\n\t    property = __webpack_require__(273);\n\t\n\t/**\n\t * The base implementation of `_.iteratee`.\n\t *\n\t * @private\n\t * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t * @returns {Function} Returns the iteratee.\n\t */\n\tfunction baseIteratee(value) {\n\t  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t  if (typeof value == 'function') {\n\t    return value;\n\t  }\n\t  if (value == null) {\n\t    return identity;\n\t  }\n\t  if (typeof value == 'object') {\n\t    return isArray(value)\n\t      ? baseMatchesProperty(value[0], value[1])\n\t      : baseMatches(value);\n\t  }\n\t  return property(value);\n\t}\n\t\n\tmodule.exports = baseIteratee;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isArray = __webpack_require__(2),\n\t    isKey = __webpack_require__(56),\n\t    stringToPath = __webpack_require__(239),\n\t    toString = __webpack_require__(279);\n\t\n\t/**\n\t * Casts `value` to a path array if it's not one.\n\t *\n\t * @private\n\t * @param {*} value The value to inspect.\n\t * @param {Object} [object] The object to query keys on.\n\t * @returns {Array} Returns the cast property path array.\n\t */\n\tfunction castPath(value, object) {\n\t  if (isArray(value)) {\n\t    return value;\n\t  }\n\t  return isKey(value, object) ? [value] : stringToPath(toString(value));\n\t}\n\t\n\tmodule.exports = castPath;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isSymbol = __webpack_require__(62);\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar INFINITY = 1 / 0;\n\t\n\t/**\n\t * Converts `value` to a string key if it's not a string or symbol.\n\t *\n\t * @private\n\t * @param {*} value The value to inspect.\n\t * @returns {string|symbol} Returns the key.\n\t */\n\tfunction toKey(value) {\n\t  if (typeof value == 'string' || isSymbol(value)) {\n\t    return value;\n\t  }\n\t  var result = (value + '');\n\t  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t}\n\t\n\tmodule.exports = toKey;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseIsNative = __webpack_require__(171),\n\t    getValue = __webpack_require__(203);\n\t\n\t/**\n\t * Gets the native function at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {string} key The key of the method to get.\n\t * @returns {*} Returns the function if it's native, else `undefined`.\n\t */\n\tfunction getNative(object, key) {\n\t  var value = getValue(object, key);\n\t  return baseIsNative(value) ? value : undefined;\n\t}\n\t\n\tmodule.exports = getNative;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return value != null && typeof value == 'object';\n\t}\n\t\n\tmodule.exports = isObjectLike;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\tvar isES5 = (function(){\n\t    \"use strict\";\n\t    return this === undefined;\n\t})();\n\t\n\tif (isES5) {\n\t    module.exports = {\n\t        freeze: Object.freeze,\n\t        defineProperty: Object.defineProperty,\n\t        getDescriptor: Object.getOwnPropertyDescriptor,\n\t        keys: Object.keys,\n\t        names: Object.getOwnPropertyNames,\n\t        getPrototypeOf: Object.getPrototypeOf,\n\t        isArray: Array.isArray,\n\t        isES5: isES5,\n\t        propertyIsWritable: function(obj, prop) {\n\t            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n\t            return !!(!descriptor || descriptor.writable || descriptor.set);\n\t        }\n\t    };\n\t} else {\n\t    var has = {}.hasOwnProperty;\n\t    var str = {}.toString;\n\t    var proto = {}.constructor.prototype;\n\t\n\t    var ObjectKeys = function (o) {\n\t        var ret = [];\n\t        for (var key in o) {\n\t            if (has.call(o, key)) {\n\t                ret.push(key);\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t\n\t    var ObjectGetDescriptor = function(o, key) {\n\t        return {value: o[key]};\n\t    };\n\t\n\t    var ObjectDefineProperty = function (o, key, desc) {\n\t        o[key] = desc.value;\n\t        return o;\n\t    };\n\t\n\t    var ObjectFreeze = function (obj) {\n\t        return obj;\n\t    };\n\t\n\t    var ObjectGetPrototypeOf = function (obj) {\n\t        try {\n\t            return Object(obj).constructor.prototype;\n\t        }\n\t        catch (e) {\n\t            return proto;\n\t        }\n\t    };\n\t\n\t    var ArrayIsArray = function (obj) {\n\t        try {\n\t            return str.call(obj) === \"[object Array]\";\n\t        }\n\t        catch(e) {\n\t            return false;\n\t        }\n\t    };\n\t\n\t    module.exports = {\n\t        isArray: ArrayIsArray,\n\t        keys: ObjectKeys,\n\t        names: ObjectKeys,\n\t        defineProperty: ObjectDefineProperty,\n\t        getDescriptor: ObjectGetDescriptor,\n\t        freeze: ObjectFreeze,\n\t        getPrototypeOf: ObjectGetPrototypeOf,\n\t        isES5: isES5,\n\t        propertyIsWritable: function() {\n\t            return true;\n\t        }\n\t    };\n\t}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar root = __webpack_require__(7);\n\t\n\t/** Built-in value references. */\n\tvar Symbol = root.Symbol;\n\t\n\tmodule.exports = Symbol;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseFor = __webpack_require__(49),\n\t    keys = __webpack_require__(4);\n\t\n\t/**\n\t * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseForOwn(object, iteratee) {\n\t  return object && baseFor(object, iteratee, keys);\n\t}\n\t\n\tmodule.exports = baseForOwn;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(16),\n\t    getRawTag = __webpack_require__(202),\n\t    objectToString = __webpack_require__(229);\n\t\n\t/** `Object#toString` result references. */\n\tvar nullTag = '[object Null]',\n\t    undefinedTag = '[object Undefined]';\n\t\n\t/** Built-in value references. */\n\tvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t/**\n\t * The base implementation of `getTag` without fallbacks for buggy environments.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the `toStringTag`.\n\t */\n\tfunction baseGetTag(value) {\n\t  if (value == null) {\n\t    return value === undefined ? undefinedTag : nullTag;\n\t  }\n\t  return (symToStringTag && symToStringTag in Object(value))\n\t    ? getRawTag(value)\n\t    : objectToString(value);\n\t}\n\t\n\tmodule.exports = baseGetTag;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar identity = __webpack_require__(26);\n\t\n\t/**\n\t * Casts `value` to `identity` if it's not a function.\n\t *\n\t * @private\n\t * @param {*} value The value to inspect.\n\t * @returns {Function} Returns cast function.\n\t */\n\tfunction castFunction(value) {\n\t  return typeof value == 'function' ? value : identity;\n\t}\n\t\n\tmodule.exports = castFunction;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseRest = __webpack_require__(34),\n\t    isIterateeCall = __webpack_require__(212);\n\t\n\t/**\n\t * Creates a function like `_.assign`.\n\t *\n\t * @private\n\t * @param {Function} assigner The function to assign values.\n\t * @returns {Function} Returns the new assigner function.\n\t */\n\tfunction createAssigner(assigner) {\n\t  return baseRest(function(object, sources) {\n\t    var index = -1,\n\t        length = sources.length,\n\t        customizer = length > 1 ? sources[length - 1] : undefined,\n\t        guard = length > 2 ? sources[2] : undefined;\n\t\n\t    customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t      ? (length--, customizer)\n\t      : undefined;\n\t\n\t    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t      customizer = length < 3 ? undefined : customizer;\n\t      length = 1;\n\t    }\n\t    object = Object(object);\n\t    while (++index < length) {\n\t      var source = sources[index];\n\t      if (source) {\n\t        assigner(object, source, index, customizer);\n\t      }\n\t    }\n\t    return object;\n\t  });\n\t}\n\t\n\tmodule.exports = createAssigner;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Performs a\n\t * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t * comparison between two values to determine if they are equivalent.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to compare.\n\t * @param {*} other The other value to compare.\n\t * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t * @example\n\t *\n\t * var object = { 'a': 1 };\n\t * var other = { 'a': 1 };\n\t *\n\t * _.eq(object, object);\n\t * // => true\n\t *\n\t * _.eq(object, other);\n\t * // => false\n\t *\n\t * _.eq('a', 'a');\n\t * // => true\n\t *\n\t * _.eq('a', Object('a'));\n\t * // => false\n\t *\n\t * _.eq(NaN, NaN);\n\t * // => true\n\t */\n\tfunction eq(value, other) {\n\t  return value === other || (value !== value && other !== other);\n\t}\n\t\n\tmodule.exports = eq;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGetTag = __webpack_require__(18),\n\t    isObject = __webpack_require__(3);\n\t\n\t/** `Object#toString` result references. */\n\tvar asyncTag = '[object AsyncFunction]',\n\t    funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]',\n\t    proxyTag = '[object Proxy]';\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  if (!isObject(value)) {\n\t    return false;\n\t  }\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\t  var tag = baseGetTag(value);\n\t  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\t}\n\t\n\tmodule.exports = isFunction;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * A specialized version of `_.map` for arrays without support for iteratee\n\t * shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns the new mapped array.\n\t */\n\tfunction arrayMap(array, iteratee) {\n\t  var index = -1,\n\t      length = array == null ? 0 : array.length,\n\t      result = Array(length);\n\t\n\t  while (++index < length) {\n\t    result[index] = iteratee(array[index], index, array);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = arrayMap;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar defineProperty = __webpack_require__(89);\n\t\n\t/**\n\t * The base implementation of `assignValue` and `assignMergeValue` without\n\t * value checks.\n\t *\n\t * @private\n\t * @param {Object} object The object to modify.\n\t * @param {string} key The key of the property to assign.\n\t * @param {*} value The value to assign.\n\t */\n\tfunction baseAssignValue(object, key, value) {\n\t  if (key == '__proto__' && defineProperty) {\n\t    defineProperty(object, key, {\n\t      'configurable': true,\n\t      'enumerable': true,\n\t      'value': value,\n\t      'writable': true\n\t    });\n\t  } else {\n\t    object[key] = value;\n\t  }\n\t}\n\t\n\tmodule.exports = baseAssignValue;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar castPath = __webpack_require__(10),\n\t    toKey = __webpack_require__(11);\n\t\n\t/**\n\t * The base implementation of `_.get` without support for default values.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Array|string} path The path of the property to get.\n\t * @returns {*} Returns the resolved value.\n\t */\n\tfunction baseGet(object, path) {\n\t  path = castPath(path, object);\n\t\n\t  var index = 0,\n\t      length = path.length;\n\t\n\t  while (object != null && index < length) {\n\t    object = object[toKey(path[index++])];\n\t  }\n\t  return (index && index == length) ? object : undefined;\n\t}\n\t\n\tmodule.exports = baseGet;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * This method returns the first argument it receives.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Util\n\t * @param {*} value Any value.\n\t * @returns {*} Returns `value`.\n\t * @example\n\t *\n\t * var object = { 'a': 1 };\n\t *\n\t * console.log(_.identity(object) === object);\n\t * // => true\n\t */\n\tfunction identity(value) {\n\t  return value;\n\t}\n\t\n\tmodule.exports = identity;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isFunction = __webpack_require__(22),\n\t    isLength = __webpack_require__(61);\n\t\n\t/**\n\t * Checks if `value` is array-like. A value is considered array-like if it's\n\t * not a function and has a `value.length` that's an integer greater than or\n\t * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t * @example\n\t *\n\t * _.isArrayLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLike(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLike('abc');\n\t * // => true\n\t *\n\t * _.isArrayLike(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLike(value) {\n\t  return value != null && isLength(value.length) && !isFunction(value);\n\t}\n\t\n\tmodule.exports = isArrayLike;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(7),\n\t    stubFalse = __webpack_require__(277);\n\t\n\t/** Detect free variable `exports`. */\n\tvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t/** Detect free variable `module`. */\n\tvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t/** Detect the popular CommonJS extension `module.exports`. */\n\tvar moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t/** Built-in value references. */\n\tvar Buffer = moduleExports ? root.Buffer : undefined;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\t\n\t/**\n\t * Checks if `value` is a buffer.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.3.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t * @example\n\t *\n\t * _.isBuffer(new Buffer(2));\n\t * // => true\n\t *\n\t * _.isBuffer(new Uint8Array(2));\n\t * // => false\n\t */\n\tvar isBuffer = nativeIsBuffer || stubFalse;\n\t\n\tmodule.exports = isBuffer;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(43)(module)))\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar listCacheClear = __webpack_require__(215),\n\t    listCacheDelete = __webpack_require__(216),\n\t    listCacheGet = __webpack_require__(217),\n\t    listCacheHas = __webpack_require__(218),\n\t    listCacheSet = __webpack_require__(219);\n\t\n\t/**\n\t * Creates an list cache object.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.\n\t */\n\tfunction ListCache(entries) {\n\t  var index = -1,\n\t      length = entries == null ? 0 : entries.length;\n\t\n\t  this.clear();\n\t  while (++index < length) {\n\t    var entry = entries[index];\n\t    this.set(entry[0], entry[1]);\n\t  }\n\t}\n\t\n\t// Add methods to `ListCache`.\n\tListCache.prototype.clear = listCacheClear;\n\tListCache.prototype['delete'] = listCacheDelete;\n\tListCache.prototype.get = listCacheGet;\n\tListCache.prototype.has = listCacheHas;\n\tListCache.prototype.set = listCacheSet;\n\t\n\tmodule.exports = ListCache;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar ListCache = __webpack_require__(29),\n\t    stackClear = __webpack_require__(234),\n\t    stackDelete = __webpack_require__(235),\n\t    stackGet = __webpack_require__(236),\n\t    stackHas = __webpack_require__(237),\n\t    stackSet = __webpack_require__(238);\n\t\n\t/**\n\t * Creates a stack cache object to store key-value pairs.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.\n\t */\n\tfunction Stack(entries) {\n\t  var data = this.__data__ = new ListCache(entries);\n\t  this.size = data.size;\n\t}\n\t\n\t// Add methods to `Stack`.\n\tStack.prototype.clear = stackClear;\n\tStack.prototype['delete'] = stackDelete;\n\tStack.prototype.get = stackGet;\n\tStack.prototype.has = stackHas;\n\tStack.prototype.set = stackSet;\n\t\n\tmodule.exports = Stack;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * A faster alternative to `Function#apply`, this function invokes `func`\n\t * with the `this` binding of `thisArg` and the arguments of `args`.\n\t *\n\t * @private\n\t * @param {Function} func The function to invoke.\n\t * @param {*} thisArg The `this` binding of `func`.\n\t * @param {Array} args The arguments to invoke `func` with.\n\t * @returns {*} Returns the result of `func`.\n\t */\n\tfunction apply(func, thisArg, args) {\n\t  switch (args.length) {\n\t    case 0: return func.call(thisArg);\n\t    case 1: return func.call(thisArg, args[0]);\n\t    case 2: return func.call(thisArg, args[0], args[1]);\n\t    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t  }\n\t  return func.apply(thisArg, args);\n\t}\n\t\n\tmodule.exports = apply;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseAssignValue = __webpack_require__(24),\n\t    eq = __webpack_require__(21);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t * for equality comparisons.\n\t *\n\t * @private\n\t * @param {Object} object The object to modify.\n\t * @param {string} key The key of the property to assign.\n\t * @param {*} value The value to assign.\n\t */\n\tfunction assignValue(object, key, value) {\n\t  var objValue = object[key];\n\t  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t      (value === undefined && !(key in object))) {\n\t    baseAssignValue(object, key, value);\n\t  }\n\t}\n\t\n\tmodule.exports = assignValue;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar eq = __webpack_require__(21);\n\t\n\t/**\n\t * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t *\n\t * @private\n\t * @param {Array} array The array to inspect.\n\t * @param {*} key The key to search for.\n\t * @returns {number} Returns the index of the matched value, else `-1`.\n\t */\n\tfunction assocIndexOf(array, key) {\n\t  var length = array.length;\n\t  while (length--) {\n\t    if (eq(array[length][0], key)) {\n\t      return length;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tmodule.exports = assocIndexOf;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar identity = __webpack_require__(26),\n\t    overRest = __webpack_require__(99),\n\t    setToString = __webpack_require__(102);\n\t\n\t/**\n\t * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t *\n\t * @private\n\t * @param {Function} func The function to apply a rest parameter to.\n\t * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseRest(func, start) {\n\t  return setToString(overRest(func, start, identity), func + '');\n\t}\n\t\n\tmodule.exports = baseRest;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar assignValue = __webpack_require__(32),\n\t    castPath = __webpack_require__(10),\n\t    isIndex = __webpack_require__(38),\n\t    isObject = __webpack_require__(3),\n\t    toKey = __webpack_require__(11);\n\t\n\t/**\n\t * The base implementation of `_.set`.\n\t *\n\t * @private\n\t * @param {Object} object The object to modify.\n\t * @param {Array|string} path The path of the property to set.\n\t * @param {*} value The value to set.\n\t * @param {Function} [customizer] The function to customize path creation.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseSet(object, path, value, customizer) {\n\t  if (!isObject(object)) {\n\t    return object;\n\t  }\n\t  path = castPath(path, object);\n\t\n\t  var index = -1,\n\t      length = path.length,\n\t      lastIndex = length - 1,\n\t      nested = object;\n\t\n\t  while (nested != null && ++index < length) {\n\t    var key = toKey(path[index]),\n\t        newValue = value;\n\t\n\t    if (index != lastIndex) {\n\t      var objValue = nested[key];\n\t      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t      if (newValue === undefined) {\n\t        newValue = isObject(objValue)\n\t          ? objValue\n\t          : (isIndex(path[index + 1]) ? [] : {});\n\t      }\n\t    }\n\t    assignValue(nested, key, newValue);\n\t    nested = nested[key];\n\t  }\n\t  return object;\n\t}\n\t\n\tmodule.exports = baseSet;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isKeyable = __webpack_require__(213);\n\t\n\t/**\n\t * Gets the data for `map`.\n\t *\n\t * @private\n\t * @param {Object} map The map to query.\n\t * @param {string} key The reference key.\n\t * @returns {*} Returns the map data.\n\t */\n\tfunction getMapData(map, key) {\n\t  var data = map.__data__;\n\t  return isKeyable(key)\n\t    ? data[typeof key == 'string' ? 'string' : 'hash']\n\t    : data.map;\n\t}\n\t\n\tmodule.exports = getMapData;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar overArg = __webpack_require__(98);\n\t\n\t/** Built-in value references. */\n\tvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\t\n\tmodule.exports = getPrototype;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\t/** Used as references for various `Number` constants. */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/** Used to detect unsigned integer values. */\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t/**\n\t * Checks if `value` is a valid array-like index.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t */\n\tfunction isIndex(value, length) {\n\t  length = length == null ? MAX_SAFE_INTEGER : length;\n\t  return !!length &&\n\t    (typeof value == 'number' || reIsUint.test(value)) &&\n\t    (value > -1 && value % 1 == 0 && value < length);\n\t}\n\t\n\tmodule.exports = isIndex;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Checks if `value` is likely a prototype object.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t */\n\tfunction isPrototype(value) {\n\t  var Ctor = value && value.constructor,\n\t      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t  return value === proto;\n\t}\n\t\n\tmodule.exports = isPrototype;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(13);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar nativeCreate = getNative(Object, 'create');\n\t\n\tmodule.exports = nativeCreate;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseIsArguments = __webpack_require__(168),\n\t    isObjectLike = __webpack_require__(14);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Built-in value references. */\n\tvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\t\n\t/**\n\t * Checks if `value` is likely an `arguments` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isArguments(function() { return arguments; }());\n\t * // => true\n\t *\n\t * _.isArguments([1, 2, 3]);\n\t * // => false\n\t */\n\tvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n\t  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n\t    !propertyIsEnumerable.call(value, 'callee');\n\t};\n\t\n\tmodule.exports = isArguments;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseIsTypedArray = __webpack_require__(172),\n\t    baseUnary = __webpack_require__(186),\n\t    nodeUtil = __webpack_require__(228);\n\t\n\t/* Node.js helper references. */\n\tvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t/**\n\t * Checks if `value` is classified as a typed array.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t * @example\n\t *\n\t * _.isTypedArray(new Uint8Array);\n\t * // => true\n\t *\n\t * _.isTypedArray([]);\n\t * // => false\n\t */\n\tvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\tmodule.exports = isTypedArray;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';var NodeWebSocket,_object=__webpack_require__(269),EventEmitter=__webpack_require__(150),debug=__webpack_require__(148)('signalk:client'),url=__webpack_require__(300),Promise=__webpack_require__(119),agent=__webpack_require__(292)(__webpack_require__(293),Promise),BrowserWebSocket=global.WebSocket||global.MozWebSocket;if('undefined'==typeof window)try{NodeWebSocket=__webpack_require__(306)}catch(a){}var WebSocket=BrowserWebSocket;WebSocket||'undefined'!=typeof window||(WebSocket=NodeWebSocket);function Client(a,b,c){EventEmitter.call(this),this.hostname=a,c?(this.protocol='https',this.wsProtocol='wss',this.port=b||443):(this.protocol='http',this.wsProtocol='ws',this.port=b||80)}__webpack_require__(304).inherits(Client,EventEmitter),Client.prototype.connect=function(a){debug('connect');var b=this.hostname,c=this.port;return a&&(b=a.hostname||b,c=a.port||c),b&&c?this.connectDelta(b+':'+c,a.onData,a.onConnect,a.onDisconnect,a.onError,a.onClose,a.subscribe):this.discoverAndConnect(a)},Client.prototype.connectP=function(a){console.log(a),debug('connect'),debug(a);var b=this.hostname,c=this.port;return a&&(b=a.hostname||b,c=a.port||c),new Promise(function(d,e){var f=this.connectDeltaByUrl.bind(this);this.get('/signalk',b,c).then(function(b){debug('Got '+JSON.stringify(b.body.endpoints,null,2));f(b.body.endpoints.v1['signalk-ws'],a.onData,function onConnect(b){a.onConnect&&a.onConnect(b),d(b)},a.onDisconnect,function onError(b){a.onError&&a.onError(b),e(b)},a.onClose,a.subscribe)}).catch(function(a){e(a)})})},Client.prototype.apiGet=function(a){return this.get('/signalk/v1/api'+a)},Client.prototype.get=function(a,b,c){var d={protocol:this.protocol,hostname:b||this.hostname,port:c||this.port,path:a};return agent('GET',url.format(d))},Client.prototype.discoveryAvailable=function(){return moduleAvailable('mdns')},Client.prototype.startDiscovery=function(){var a=this;return new Promise(function(b,c){a.discoveryAvailable()||(console.log('Discovery requires mdns, please install it with \\'npm install mdns\\' or specify hostname and port'),c('Discovery requires mdns'));var d=__webpack_require__(305);a.browser=d.createBrowser(d.tcp('signalk-http'),{resolverSequence:[d.rst.DNSServiceResolve()]}),a.browser.on('serviceUp',function(c){debug('Discovered signalk-http:'+JSON.stringify(c,null,2)),debug('GETting /signalk'),a.get('/signalk',c.host,c.port).then(function(d){debug('Got '+JSON.stringify(d.body.endpoints,null,2));var e={host:c.host,port:c.port,httpResponse:d.body,service:c};a.emit('discovery',e),b(e)})}),debug('Starting discovery'),a.browser.start()})},Client.prototype.stopDiscovery=function(){debug('Stopping discovery'),this.browser&&(this.browser.stop(),debug('Discovery stopping'))},Client.prototype.discoverAndConnect=function(a){debug('discoverAndConnect');var b=this;return this.startDiscovery().then(function(c){var d=c.httpResponse;return b.endpoints=d.endpoints,debug('Connecting to '+JSON.stringify(_object.values(b.endpoints)[0]['signalk-ws'],null,2)),b.stopDiscovery(),b.connectDeltaByUrl(_object.values(b.endpoints)[0]['signalk-ws'],a.onData,a.onConnect,a.onDisconnect,a.onError,a.onClose)})},Client.prototype.connectDelta=function(a,b,c,d,e,f,g){var h={protocol:this.wsProtocol,slashes:!0,hostname:a.split(':')[0],port:a.split(':')[1],pathname:'/signalk/v1/stream'};return g&&(h.query={subscribe:g}),this.connectDeltaByUrl(url.format(h),b,c,d,e,f)},Client.prototype.connectDeltaByUrl=function(a,b,c,d,e,f){var g=url.parse(a);this.hostname=g.hostname,this.port=g.port;var h={context:'vessels.self',subscribe:[{path:'*'}]};debug('Connecting ws to '+g.href);var i={hostname:this.hostname};if('undefined'!=typeof Primus){debug('Using Primus');var j=Primus.connect(a,{reconnect:{maxDelay:15000,minDelay:500,retries:Infinity}});j.on('data',b),i.send=j.write.bind(j),i.disconnect=function(){j.end(),debug('Disconnected')},c?j.on('open',c.bind(this,i)):j.on('open',function(){i.send(h)})}else{debug('Using ws');var k=new WebSocket(a);i.send=function(a){k.send('string'==typeof a?a:JSON.stringify(a))},i.disconnect=function(){k.close(),debug('Disconnected')},k.onopen=function(){debug('open'),c?c(i):i.send(h)},k.onerror=function(a){debug('error:'+a),e&&e(a)},k.onmessage=function(a){try{b(JSON.parse(a.data))}catch(a){console.error(a)}},k.onclose=function(a){debug('close:'+a),f&&f(a)}}return i.subscribeAll=function(){i.send(h)},i},Client.prototype.getSelf=function(){var a={protocol:this.protocol,hostname:this.hostname,port:this.port,pathname:'/signalk/v1/api/vessels/self'};return agent('GET',url.format(a))},Client.prototype.getSelfId=function(){var a={protocol:this.protocol,hostname:this.hostname,port:this.port,pathname:'/signalk/v1/api/self'};return agent('GET',url.format(a))},Client.prototype.getSelfMatcher=function(){return this.getSelfId().then(function(a){var b=a.body,c=b.mmsi||b.uuid;if(c){return function(a){return'self'===a.context||'vessels.self'===a.context||a.context==='vessels.'+c}}return function(){return!0}})},Client.prototype.getMeta=function(a,b){return this.get(a+'/'+b.split('.').join('/')+'/meta')};function isDelta(a){return'undefined'!=typeof a.context}function isHello(a){return'undefined'!=typeof a.version}function moduleAvailable(a){try{return /*require.resolve*/(__webpack_require__(115).resolve(a)),!0}catch(a){}return!1}module.exports={Client:Client,isDelta:isDelta,isHello:isHello};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(13),\n\t    root = __webpack_require__(7);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar Map = getNative(root, 'Map');\n\t\n\tmodule.exports = Map;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar mapCacheClear = __webpack_require__(220),\n\t    mapCacheDelete = __webpack_require__(221),\n\t    mapCacheGet = __webpack_require__(222),\n\t    mapCacheHas = __webpack_require__(223),\n\t    mapCacheSet = __webpack_require__(224);\n\t\n\t/**\n\t * Creates a map cache object to store key-value pairs.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.\n\t */\n\tfunction MapCache(entries) {\n\t  var index = -1,\n\t      length = entries == null ? 0 : entries.length;\n\t\n\t  this.clear();\n\t  while (++index < length) {\n\t    var entry = entries[index];\n\t    this.set(entry[0], entry[1]);\n\t  }\n\t}\n\t\n\t// Add methods to `MapCache`.\n\tMapCache.prototype.clear = mapCacheClear;\n\tMapCache.prototype['delete'] = mapCacheDelete;\n\tMapCache.prototype.get = mapCacheGet;\n\tMapCache.prototype.has = mapCacheHas;\n\tMapCache.prototype.set = mapCacheSet;\n\t\n\tmodule.exports = MapCache;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Appends the elements of `values` to `array`.\n\t *\n\t * @private\n\t * @param {Array} array The array to modify.\n\t * @param {Array} values The values to append.\n\t * @returns {Array} Returns `array`.\n\t */\n\tfunction arrayPush(array, values) {\n\t  var index = -1,\n\t      length = values.length,\n\t      offset = array.length;\n\t\n\t  while (++index < length) {\n\t    array[offset + index] = values[index];\n\t  }\n\t  return array;\n\t}\n\t\n\tmodule.exports = arrayPush;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(3);\n\t\n\t/** Built-in value references. */\n\tvar objectCreate = Object.create;\n\t\n\t/**\n\t * The base implementation of `_.create` without support for assigning\n\t * properties to the created object.\n\t *\n\t * @private\n\t * @param {Object} proto The object to inherit from.\n\t * @returns {Object} Returns the new object.\n\t */\n\tvar baseCreate = (function() {\n\t  function object() {}\n\t  return function(proto) {\n\t    if (!isObject(proto)) {\n\t      return {};\n\t    }\n\t    if (objectCreate) {\n\t      return objectCreate(proto);\n\t    }\n\t    object.prototype = proto;\n\t    var result = new object;\n\t    object.prototype = undefined;\n\t    return result;\n\t  };\n\t}());\n\t\n\tmodule.exports = baseCreate;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar createBaseFor = __webpack_require__(86);\n\t\n\t/**\n\t * The base implementation of `baseForOwn` which iterates over `object`\n\t * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @param {Function} keysFunc The function to get the keys of `object`.\n\t * @returns {Object} Returns `object`.\n\t */\n\tvar baseFor = createBaseFor();\n\t\n\tmodule.exports = baseFor;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Stack = __webpack_require__(30),\n\t    assignMergeValue = __webpack_require__(71),\n\t    baseFor = __webpack_require__(49),\n\t    baseMergeDeep = __webpack_require__(177),\n\t    isObject = __webpack_require__(3),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * The base implementation of `_.merge` without support for multiple sources.\n\t *\n\t * @private\n\t * @param {Object} object The destination object.\n\t * @param {Object} source The source object.\n\t * @param {number} srcIndex The index of `source`.\n\t * @param {Function} [customizer] The function to customize merged values.\n\t * @param {Object} [stack] Tracks traversed source values and their merged\n\t *  counterparts.\n\t */\n\tfunction baseMerge(object, source, srcIndex, customizer, stack) {\n\t  if (object === source) {\n\t    return;\n\t  }\n\t  baseFor(source, function(srcValue, key) {\n\t    if (isObject(srcValue)) {\n\t      stack || (stack = new Stack);\n\t      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t    }\n\t    else {\n\t      var newValue = customizer\n\t        ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      if (newValue === undefined) {\n\t        newValue = srcValue;\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t  }, keysIn);\n\t}\n\t\n\tmodule.exports = baseMerge;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Uint8Array = __webpack_require__(66);\n\t\n\t/**\n\t * Creates a clone of `arrayBuffer`.\n\t *\n\t * @private\n\t * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t */\n\tfunction cloneArrayBuffer(arrayBuffer) {\n\t  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t  return result;\n\t}\n\t\n\tmodule.exports = cloneArrayBuffer;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar flatten = __webpack_require__(252),\n\t    overRest = __webpack_require__(99),\n\t    setToString = __webpack_require__(102);\n\t\n\t/**\n\t * A specialized version of `baseRest` which flattens the rest array.\n\t *\n\t * @private\n\t * @param {Function} func The function to apply a rest parameter to.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction flatRest(func) {\n\t  return setToString(overRest(func, undefined, flatten), func + '');\n\t}\n\t\n\tmodule.exports = flatRest;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGetAllKeys = __webpack_require__(77),\n\t    getSymbolsIn = __webpack_require__(93),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * Creates an array of own and inherited enumerable property names and\n\t * symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names and symbols.\n\t */\n\tfunction getAllKeysIn(object) {\n\t  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t}\n\t\n\tmodule.exports = getAllKeysIn;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayFilter = __webpack_require__(68),\n\t    stubArray = __webpack_require__(110);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Built-in value references. */\n\tvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\t\n\t/**\n\t * Creates an array of the own enumerable symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of symbols.\n\t */\n\tvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n\t  if (object == null) {\n\t    return [];\n\t  }\n\t  object = Object(object);\n\t  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n\t    return propertyIsEnumerable.call(object, symbol);\n\t  });\n\t};\n\t\n\tmodule.exports = getSymbols;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar DataView = __webpack_require__(151),\n\t    Map = __webpack_require__(45),\n\t    Promise = __webpack_require__(153),\n\t    Set = __webpack_require__(154),\n\t    WeakMap = __webpack_require__(156),\n\t    baseGetTag = __webpack_require__(18),\n\t    toSource = __webpack_require__(103);\n\t\n\t/** `Object#toString` result references. */\n\tvar mapTag = '[object Map]',\n\t    objectTag = '[object Object]',\n\t    promiseTag = '[object Promise]',\n\t    setTag = '[object Set]',\n\t    weakMapTag = '[object WeakMap]';\n\t\n\tvar dataViewTag = '[object DataView]';\n\t\n\t/** Used to detect maps, sets, and weakmaps. */\n\tvar dataViewCtorString = toSource(DataView),\n\t    mapCtorString = toSource(Map),\n\t    promiseCtorString = toSource(Promise),\n\t    setCtorString = toSource(Set),\n\t    weakMapCtorString = toSource(WeakMap);\n\t\n\t/**\n\t * Gets the `toStringTag` of `value`.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the `toStringTag`.\n\t */\n\tvar getTag = baseGetTag;\n\t\n\t// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\tif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t    (Map && getTag(new Map) != mapTag) ||\n\t    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t    (Set && getTag(new Set) != setTag) ||\n\t    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t  getTag = function(value) {\n\t    var result = baseGetTag(value),\n\t        Ctor = result == objectTag ? value.constructor : undefined,\n\t        ctorString = Ctor ? toSource(Ctor) : '';\n\t\n\t    if (ctorString) {\n\t      switch (ctorString) {\n\t        case dataViewCtorString: return dataViewTag;\n\t        case mapCtorString: return mapTag;\n\t        case promiseCtorString: return promiseTag;\n\t        case setCtorString: return setTag;\n\t        case weakMapCtorString: return weakMapTag;\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\tmodule.exports = getTag;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isArray = __webpack_require__(2),\n\t    isSymbol = __webpack_require__(62);\n\t\n\t/** Used to match property names within property paths. */\n\tvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t    reIsPlainProp = /^\\w*$/;\n\t\n\t/**\n\t * Checks if `value` is a property name and not a property path.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {Object} [object] The object to query keys on.\n\t * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t */\n\tfunction isKey(value, object) {\n\t  if (isArray(value)) {\n\t    return false;\n\t  }\n\t  var type = typeof value;\n\t  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t      value == null || isSymbol(value)) {\n\t    return true;\n\t  }\n\t  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t    (object != null && value in Object(object));\n\t}\n\t\n\tmodule.exports = isKey;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Converts `map` to its key-value pairs.\n\t *\n\t * @private\n\t * @param {Object} map The map to convert.\n\t * @returns {Array} Returns the key-value pairs.\n\t */\n\tfunction mapToArray(map) {\n\t  var index = -1,\n\t      result = Array(map.size);\n\t\n\t  map.forEach(function(value, key) {\n\t    result[++index] = [key, value];\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = mapToArray;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(6),\n\t    createAssigner = __webpack_require__(20),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * This method is like `_.assignIn` except that it accepts `customizer`\n\t * which is invoked to produce the assigned values. If `customizer` returns\n\t * `undefined`, assignment is handled by the method instead. The `customizer`\n\t * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @alias extendWith\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} sources The source objects.\n\t * @param {Function} [customizer] The function to customize assigned values.\n\t * @returns {Object} Returns `object`.\n\t * @see _.assignWith\n\t * @example\n\t *\n\t * function customizer(objValue, srcValue) {\n\t *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t * }\n\t *\n\t * var defaults = _.partialRight(_.assignInWith, customizer);\n\t *\n\t * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t * // => { 'a': 1, 'b': 2 }\n\t */\n\tvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t  copyObject(source, keysIn(source), object, customizer);\n\t});\n\t\n\tmodule.exports = assignInWith;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGet = __webpack_require__(25);\n\t\n\t/**\n\t * Gets the value at `path` of `object`. If the resolved value is\n\t * `undefined`, the `defaultValue` is returned in its place.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.7.0\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @param {Array|string} path The path of the property to get.\n\t * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t * @returns {*} Returns the resolved value.\n\t * @example\n\t *\n\t * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t *\n\t * _.get(object, 'a[0].b.c');\n\t * // => 3\n\t *\n\t * _.get(object, ['a', '0', 'b', 'c']);\n\t * // => 3\n\t *\n\t * _.get(object, 'a.b.c', 'default');\n\t * // => 'default'\n\t */\n\tfunction get(object, path, defaultValue) {\n\t  var result = object == null ? undefined : baseGet(object, path);\n\t  return result === undefined ? defaultValue : result;\n\t}\n\t\n\tmodule.exports = get;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseHasIn = __webpack_require__(165),\n\t    hasPath = __webpack_require__(94);\n\t\n\t/**\n\t * Checks if `path` is a direct or inherited property of `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @param {Array|string} path The path to check.\n\t * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t * @example\n\t *\n\t * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t *\n\t * _.hasIn(object, 'a');\n\t * // => true\n\t *\n\t * _.hasIn(object, 'a.b');\n\t * // => true\n\t *\n\t * _.hasIn(object, ['a', 'b']);\n\t * // => true\n\t *\n\t * _.hasIn(object, 'b');\n\t * // => false\n\t */\n\tfunction hasIn(object, path) {\n\t  return object != null && hasPath(object, path, baseHasIn);\n\t}\n\t\n\tmodule.exports = hasIn;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports) {\n\n\t/** Used as references for various `Number` constants. */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This method is loosely based on\n\t * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t * @example\n\t *\n\t * _.isLength(3);\n\t * // => true\n\t *\n\t * _.isLength(Number.MIN_VALUE);\n\t * // => false\n\t *\n\t * _.isLength(Infinity);\n\t * // => false\n\t *\n\t * _.isLength('3');\n\t * // => false\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' &&\n\t    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\tmodule.exports = isLength;\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGetTag = __webpack_require__(18),\n\t    isObjectLike = __webpack_require__(14);\n\t\n\t/** `Object#toString` result references. */\n\tvar symbolTag = '[object Symbol]';\n\t\n\t/**\n\t * Checks if `value` is classified as a `Symbol` primitive or object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t * @example\n\t *\n\t * _.isSymbol(Symbol.iterator);\n\t * // => true\n\t *\n\t * _.isSymbol('abc');\n\t * // => false\n\t */\n\tfunction isSymbol(value) {\n\t  return typeof value == 'symbol' ||\n\t    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n\t}\n\t\n\tmodule.exports = isSymbol;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Check if `obj` is an object.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return null !== obj && 'object' === typeof obj;\n\t}\n\t\n\tmodule.exports = isObject;\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(NEXT_FILTER) {\n\tvar util = __webpack_require__(1);\n\tvar getKeys = __webpack_require__(15).keys;\n\tvar tryCatch = util.tryCatch;\n\tvar errorObj = util.errorObj;\n\t\n\tfunction catchFilter(instances, cb, promise) {\n\t    return function(e) {\n\t        var boundTo = promise._boundValue();\n\t        predicateLoop: for (var i = 0; i < instances.length; ++i) {\n\t            var item = instances[i];\n\t\n\t            if (item === Error ||\n\t                (item != null && item.prototype instanceof Error)) {\n\t                if (e instanceof item) {\n\t                    return tryCatch(cb).call(boundTo, e);\n\t                }\n\t            } else if (typeof item === \"function\") {\n\t                var matchesPredicate = tryCatch(item).call(boundTo, e);\n\t                if (matchesPredicate === errorObj) {\n\t                    return matchesPredicate;\n\t                } else if (matchesPredicate) {\n\t                    return tryCatch(cb).call(boundTo, e);\n\t                }\n\t            } else if (util.isObject(e)) {\n\t                var keys = getKeys(item);\n\t                for (var j = 0; j < keys.length; ++j) {\n\t                    var key = keys[j];\n\t                    if (item[key] != e[key]) {\n\t                        continue predicateLoop;\n\t                    }\n\t                }\n\t                return tryCatch(cb).call(boundTo, e);\n\t            }\n\t        }\n\t        return NEXT_FILTER;\n\t    };\n\t}\n\t\n\treturn catchFilter;\n\t};\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar util = __webpack_require__(1);\n\tvar maybeWrapAsError = util.maybeWrapAsError;\n\tvar errors = __webpack_require__(8);\n\tvar OperationalError = errors.OperationalError;\n\tvar es5 = __webpack_require__(15);\n\t\n\tfunction isUntypedError(obj) {\n\t    return obj instanceof Error &&\n\t        es5.getPrototypeOf(obj) === Error.prototype;\n\t}\n\t\n\tvar rErrorKey = /^(?:name|message|stack|cause)$/;\n\tfunction wrapAsOperationalError(obj) {\n\t    var ret;\n\t    if (isUntypedError(obj)) {\n\t        ret = new OperationalError(obj);\n\t        ret.name = obj.name;\n\t        ret.message = obj.message;\n\t        ret.stack = obj.stack;\n\t        var keys = es5.keys(obj);\n\t        for (var i = 0; i < keys.length; ++i) {\n\t            var key = keys[i];\n\t            if (!rErrorKey.test(key)) {\n\t                ret[key] = obj[key];\n\t            }\n\t        }\n\t        return ret;\n\t    }\n\t    util.markAsOriginatingFromRejection(obj);\n\t    return obj;\n\t}\n\t\n\tfunction nodebackForPromise(promise, multiArgs) {\n\t    return function(err, value) {\n\t        if (promise === null) return;\n\t        if (err) {\n\t            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n\t            promise._attachExtraTrace(wrapped);\n\t            promise._reject(wrapped);\n\t        } else if (!multiArgs) {\n\t            promise._fulfill(value);\n\t        } else {\n\t            var $_len = arguments.length;var args = new Array(Math.max($_len - 1, 0)); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];};\n\t            promise._fulfill(args);\n\t        }\n\t        promise = null;\n\t    };\n\t}\n\t\n\tmodule.exports = nodebackForPromise;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar root = __webpack_require__(7);\n\t\n\t/** Built-in value references. */\n\tvar Uint8Array = root.Uint8Array;\n\t\n\tmodule.exports = Uint8Array;\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * A specialized version of `_.forEach` for arrays without support for\n\t * iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns `array`.\n\t */\n\tfunction arrayEach(array, iteratee) {\n\t  var index = -1,\n\t      length = array == null ? 0 : array.length;\n\t\n\t  while (++index < length) {\n\t    if (iteratee(array[index], index, array) === false) {\n\t      break;\n\t    }\n\t  }\n\t  return array;\n\t}\n\t\n\tmodule.exports = arrayEach;\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * A specialized version of `_.filter` for arrays without support for\n\t * iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @returns {Array} Returns the new filtered array.\n\t */\n\tfunction arrayFilter(array, predicate) {\n\t  var index = -1,\n\t      length = array == null ? 0 : array.length,\n\t      resIndex = 0,\n\t      result = [];\n\t\n\t  while (++index < length) {\n\t    var value = array[index];\n\t    if (predicate(value, index, array)) {\n\t      result[resIndex++] = value;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = arrayFilter;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseTimes = __webpack_require__(183),\n\t    isArguments = __webpack_require__(41),\n\t    isArray = __webpack_require__(2),\n\t    isBuffer = __webpack_require__(28),\n\t    isIndex = __webpack_require__(38),\n\t    isTypedArray = __webpack_require__(42);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Creates an array of the enumerable property names of the array-like `value`.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @param {boolean} inherited Specify returning inherited property names.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction arrayLikeKeys(value, inherited) {\n\t  var isArr = isArray(value),\n\t      isArg = !isArr && isArguments(value),\n\t      isBuff = !isArr && !isArg && isBuffer(value),\n\t      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n\t      skipIndexes = isArr || isArg || isBuff || isType,\n\t      result = skipIndexes ? baseTimes(value.length, String) : [],\n\t      length = result.length;\n\t\n\t  for (var key in value) {\n\t    if ((inherited || hasOwnProperty.call(value, key)) &&\n\t        !(skipIndexes && (\n\t           // Safari 9 has enumerable `arguments.length` in strict mode.\n\t           key == 'length' ||\n\t           // Node.js 0.10 has enumerable non-index properties on buffers.\n\t           (isBuff && (key == 'offset' || key == 'parent')) ||\n\t           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n\t           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n\t           // Skip index properties.\n\t           isIndex(key, length)\n\t        ))) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = arrayLikeKeys;\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * A specialized version of `_.reduce` for arrays without support for\n\t * iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @param {*} [accumulator] The initial value.\n\t * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t *  the initial value.\n\t * @returns {*} Returns the accumulated value.\n\t */\n\tfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n\t  var index = -1,\n\t      length = array == null ? 0 : array.length;\n\t\n\t  if (initAccum && length) {\n\t    accumulator = array[++index];\n\t  }\n\t  while (++index < length) {\n\t    accumulator = iteratee(accumulator, array[index], index, array);\n\t  }\n\t  return accumulator;\n\t}\n\t\n\tmodule.exports = arrayReduce;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseAssignValue = __webpack_require__(24),\n\t    eq = __webpack_require__(21);\n\t\n\t/**\n\t * This function is like `assignValue` except that it doesn't assign\n\t * `undefined` values.\n\t *\n\t * @private\n\t * @param {Object} object The object to modify.\n\t * @param {string} key The key of the property to assign.\n\t * @param {*} value The value to assign.\n\t */\n\tfunction assignMergeValue(object, key, value) {\n\t  if ((value !== undefined && !eq(object[key], value)) ||\n\t      (value === undefined && !(key in object))) {\n\t    baseAssignValue(object, key, value);\n\t  }\n\t}\n\t\n\tmodule.exports = assignMergeValue;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(6),\n\t    keys = __webpack_require__(4);\n\t\n\t/**\n\t * The base implementation of `_.assign` without support for multiple sources\n\t * or `customizer` functions.\n\t *\n\t * @private\n\t * @param {Object} object The destination object.\n\t * @param {Object} source The source object.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseAssign(object, source) {\n\t  return object && copyObject(source, keys(source), object);\n\t}\n\t\n\tmodule.exports = baseAssign;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t * without support for iteratee shorthands, which iterates over `collection`\n\t * using `eachFunc`.\n\t *\n\t * @private\n\t * @param {Array|Object} collection The collection to inspect.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @param {Function} eachFunc The function to iterate over `collection`.\n\t * @returns {*} Returns the found element or its key, else `undefined`.\n\t */\n\tfunction baseFindKey(collection, predicate, eachFunc) {\n\t  var result;\n\t  eachFunc(collection, function(value, key, collection) {\n\t    if (predicate(value, key, collection)) {\n\t      result = key;\n\t      return false;\n\t    }\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseFindKey;\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseForRight = __webpack_require__(75),\n\t    keys = __webpack_require__(4);\n\t\n\t/**\n\t * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseForOwnRight(object, iteratee) {\n\t  return object && baseForRight(object, iteratee, keys);\n\t}\n\t\n\tmodule.exports = baseForOwnRight;\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar createBaseFor = __webpack_require__(86);\n\t\n\t/**\n\t * This function is like `baseFor` except that it iterates over properties\n\t * in the opposite order.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @param {Function} keysFunc The function to get the keys of `object`.\n\t * @returns {Object} Returns `object`.\n\t */\n\tvar baseForRight = createBaseFor(true);\n\t\n\tmodule.exports = baseForRight;\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayFilter = __webpack_require__(68),\n\t    isFunction = __webpack_require__(22);\n\t\n\t/**\n\t * The base implementation of `_.functions` which creates an array of\n\t * `object` function property names filtered from `props`.\n\t *\n\t * @private\n\t * @param {Object} object The object to inspect.\n\t * @param {Array} props The property names to filter.\n\t * @returns {Array} Returns the function names.\n\t */\n\tfunction baseFunctions(object, props) {\n\t  return arrayFilter(props, function(key) {\n\t    return isFunction(object[key]);\n\t  });\n\t}\n\t\n\tmodule.exports = baseFunctions;\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayPush = __webpack_require__(47),\n\t    isArray = __webpack_require__(2);\n\t\n\t/**\n\t * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t * symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Function} keysFunc The function to get the keys of `object`.\n\t * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t * @returns {Array} Returns the array of property names and symbols.\n\t */\n\tfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t  var result = keysFunc(object);\n\t  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t}\n\t\n\tmodule.exports = baseGetAllKeys;\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseIsEqualDeep = __webpack_require__(169),\n\t    isObjectLike = __webpack_require__(14);\n\t\n\t/**\n\t * The base implementation of `_.isEqual` which supports partial comparisons\n\t * and tracks traversed objects.\n\t *\n\t * @private\n\t * @param {*} value The value to compare.\n\t * @param {*} other The other value to compare.\n\t * @param {boolean} bitmask The bitmask flags.\n\t *  1 - Unordered comparison\n\t *  2 - Partial comparison\n\t * @param {Function} [customizer] The function to customize comparisons.\n\t * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t */\n\tfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n\t  if (value === other) {\n\t    return true;\n\t  }\n\t  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n\t    return value !== value && other !== other;\n\t  }\n\t  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n\t}\n\t\n\tmodule.exports = baseIsEqual;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGet = __webpack_require__(25),\n\t    baseSet = __webpack_require__(35),\n\t    castPath = __webpack_require__(10);\n\t\n\t/**\n\t * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Object} object The source object.\n\t * @param {string[]} paths The property paths to pick.\n\t * @param {Function} predicate The function invoked per property.\n\t * @returns {Object} Returns the new object.\n\t */\n\tfunction basePickBy(object, paths, predicate) {\n\t  var index = -1,\n\t      length = paths.length,\n\t      result = {};\n\t\n\t  while (++index < length) {\n\t    var path = paths[index],\n\t        value = baseGet(object, path);\n\t\n\t    if (predicate(value, path)) {\n\t      baseSet(result, castPath(path, object), value);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = basePickBy;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar castPath = __webpack_require__(10),\n\t    last = __webpack_require__(107),\n\t    parent = __webpack_require__(100),\n\t    toKey = __webpack_require__(11);\n\t\n\t/**\n\t * The base implementation of `_.unset`.\n\t *\n\t * @private\n\t * @param {Object} object The object to modify.\n\t * @param {Array|string} path The property path to unset.\n\t * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t */\n\tfunction baseUnset(object, path) {\n\t  path = castPath(path, object);\n\t  object = parent(object, path);\n\t  return object == null || delete object[toKey(last(path))];\n\t}\n\t\n\tmodule.exports = baseUnset;\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGet = __webpack_require__(25),\n\t    baseSet = __webpack_require__(35);\n\t\n\t/**\n\t * The base implementation of `_.update`.\n\t *\n\t * @private\n\t * @param {Object} object The object to modify.\n\t * @param {Array|string} path The path of the property to update.\n\t * @param {Function} updater The function to produce the updated value.\n\t * @param {Function} [customizer] The function to customize path creation.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseUpdate(object, path, updater, customizer) {\n\t  return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t}\n\t\n\tmodule.exports = baseUpdate;\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayMap = __webpack_require__(23);\n\t\n\t/**\n\t * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t * array of `object` property values corresponding to the property names\n\t * of `props`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Array} props The property names to get values for.\n\t * @returns {Object} Returns the array of property values.\n\t */\n\tfunction baseValues(object, props) {\n\t  return arrayMap(props, function(key) {\n\t    return object[key];\n\t  });\n\t}\n\t\n\tmodule.exports = baseValues;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(7);\n\t\n\t/** Detect free variable `exports`. */\n\tvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t/** Detect free variable `module`. */\n\tvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t/** Detect the popular CommonJS extension `module.exports`. */\n\tvar moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t/** Built-in value references. */\n\tvar Buffer = moduleExports ? root.Buffer : undefined,\n\t    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\t\n\t/**\n\t * Creates a clone of  `buffer`.\n\t *\n\t * @private\n\t * @param {Buffer} buffer The buffer to clone.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Buffer} Returns the cloned buffer.\n\t */\n\tfunction cloneBuffer(buffer, isDeep) {\n\t  if (isDeep) {\n\t    return buffer.slice();\n\t  }\n\t  var length = buffer.length,\n\t      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\t\n\t  buffer.copy(result);\n\t  return result;\n\t}\n\t\n\tmodule.exports = cloneBuffer;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(43)(module)))\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar cloneArrayBuffer = __webpack_require__(51);\n\t\n\t/**\n\t * Creates a clone of `typedArray`.\n\t *\n\t * @private\n\t * @param {Object} typedArray The typed array to clone.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Object} Returns the cloned typed array.\n\t */\n\tfunction cloneTypedArray(typedArray, isDeep) {\n\t  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t}\n\t\n\tmodule.exports = cloneTypedArray;\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copies the values of `source` to `array`.\n\t *\n\t * @private\n\t * @param {Array} source The array to copy values from.\n\t * @param {Array} [array=[]] The array to copy values to.\n\t * @returns {Array} Returns `array`.\n\t */\n\tfunction copyArray(source, array) {\n\t  var index = -1,\n\t      length = source.length;\n\t\n\t  array || (array = Array(length));\n\t  while (++index < length) {\n\t    array[index] = source[index];\n\t  }\n\t  return array;\n\t}\n\t\n\tmodule.exports = copyArray;\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t *\n\t * @private\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {Function} Returns the new base function.\n\t */\n\tfunction createBaseFor(fromRight) {\n\t  return function(object, iteratee, keysFunc) {\n\t    var index = -1,\n\t        iterable = Object(object),\n\t        props = keysFunc(object),\n\t        length = props.length;\n\t\n\t    while (length--) {\n\t      var key = props[fromRight ? length : ++index];\n\t      if (iteratee(iterable[key], key, iterable) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return object;\n\t  };\n\t}\n\t\n\tmodule.exports = createBaseFor;\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseInverter = __webpack_require__(166);\n\t\n\t/**\n\t * Creates a function like `_.invertBy`.\n\t *\n\t * @private\n\t * @param {Function} setter The function to set accumulator values.\n\t * @param {Function} toIteratee The function to resolve iteratees.\n\t * @returns {Function} Returns the new inverter function.\n\t */\n\tfunction createInverter(setter, toIteratee) {\n\t  return function(object, iteratee) {\n\t    return baseInverter(object, setter, toIteratee(iteratee), {});\n\t  };\n\t}\n\t\n\tmodule.exports = createInverter;\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseToPairs = __webpack_require__(184),\n\t    getTag = __webpack_require__(55),\n\t    mapToArray = __webpack_require__(57),\n\t    setToPairs = __webpack_require__(232);\n\t\n\t/** `Object#toString` result references. */\n\tvar mapTag = '[object Map]',\n\t    setTag = '[object Set]';\n\t\n\t/**\n\t * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t *\n\t * @private\n\t * @param {Function} keysFunc The function to get the keys of a given object.\n\t * @returns {Function} Returns the new pairs function.\n\t */\n\tfunction createToPairs(keysFunc) {\n\t  return function(object) {\n\t    var tag = getTag(object);\n\t    if (tag == mapTag) {\n\t      return mapToArray(object);\n\t    }\n\t    if (tag == setTag) {\n\t      return setToPairs(object);\n\t    }\n\t    return baseToPairs(object, keysFunc(object));\n\t  };\n\t}\n\t\n\tmodule.exports = createToPairs;\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(13);\n\t\n\tvar defineProperty = (function() {\n\t  try {\n\t    var func = getNative(Object, 'defineProperty');\n\t    func({}, '', {});\n\t    return func;\n\t  } catch (e) {}\n\t}());\n\t\n\tmodule.exports = defineProperty;\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar SetCache = __webpack_require__(155),\n\t    arraySome = __webpack_require__(159),\n\t    cacheHas = __webpack_require__(187);\n\t\n\t/** Used to compose bitmasks for value comparisons. */\n\tvar COMPARE_PARTIAL_FLAG = 1,\n\t    COMPARE_UNORDERED_FLAG = 2;\n\t\n\t/**\n\t * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t * partial deep comparisons.\n\t *\n\t * @private\n\t * @param {Array} array The array to compare.\n\t * @param {Array} other The other array to compare.\n\t * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t * @param {Function} customizer The function to customize comparisons.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t */\n\tfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n\t  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t      arrLength = array.length,\n\t      othLength = other.length;\n\t\n\t  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t    return false;\n\t  }\n\t  // Assume cyclic values are equal.\n\t  var stacked = stack.get(array);\n\t  if (stacked && stack.get(other)) {\n\t    return stacked == other;\n\t  }\n\t  var index = -1,\n\t      result = true,\n\t      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\t\n\t  stack.set(array, other);\n\t  stack.set(other, array);\n\t\n\t  // Ignore non-index properties.\n\t  while (++index < arrLength) {\n\t    var arrValue = array[index],\n\t        othValue = other[index];\n\t\n\t    if (customizer) {\n\t      var compared = isPartial\n\t        ? customizer(othValue, arrValue, index, other, array, stack)\n\t        : customizer(arrValue, othValue, index, array, other, stack);\n\t    }\n\t    if (compared !== undefined) {\n\t      if (compared) {\n\t        continue;\n\t      }\n\t      result = false;\n\t      break;\n\t    }\n\t    // Recursively compare arrays (susceptible to call stack limits).\n\t    if (seen) {\n\t      if (!arraySome(other, function(othValue, othIndex) {\n\t            if (!cacheHas(seen, othIndex) &&\n\t                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n\t              return seen.push(othIndex);\n\t            }\n\t          })) {\n\t        result = false;\n\t        break;\n\t      }\n\t    } else if (!(\n\t          arrValue === othValue ||\n\t            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n\t        )) {\n\t      result = false;\n\t      break;\n\t    }\n\t  }\n\t  stack['delete'](array);\n\t  stack['delete'](other);\n\t  return result;\n\t}\n\t\n\tmodule.exports = equalArrays;\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\n\tvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\tmodule.exports = freeGlobal;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGetAllKeys = __webpack_require__(77),\n\t    getSymbols = __webpack_require__(54),\n\t    keys = __webpack_require__(4);\n\t\n\t/**\n\t * Creates an array of own enumerable property names and symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names and symbols.\n\t */\n\tfunction getAllKeys(object) {\n\t  return baseGetAllKeys(object, keys, getSymbols);\n\t}\n\t\n\tmodule.exports = getAllKeys;\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayPush = __webpack_require__(47),\n\t    getPrototype = __webpack_require__(37),\n\t    getSymbols = __webpack_require__(54),\n\t    stubArray = __webpack_require__(110);\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\t\n\t/**\n\t * Creates an array of the own and inherited enumerable symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of symbols.\n\t */\n\tvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t  var result = [];\n\t  while (object) {\n\t    arrayPush(result, getSymbols(object));\n\t    object = getPrototype(object);\n\t  }\n\t  return result;\n\t};\n\t\n\tmodule.exports = getSymbolsIn;\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar castPath = __webpack_require__(10),\n\t    isArguments = __webpack_require__(41),\n\t    isArray = __webpack_require__(2),\n\t    isIndex = __webpack_require__(38),\n\t    isLength = __webpack_require__(61),\n\t    toKey = __webpack_require__(11);\n\t\n\t/**\n\t * Checks if `path` exists on `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Array|string} path The path to check.\n\t * @param {Function} hasFunc The function to check properties.\n\t * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t */\n\tfunction hasPath(object, path, hasFunc) {\n\t  path = castPath(path, object);\n\t\n\t  var index = -1,\n\t      length = path.length,\n\t      result = false;\n\t\n\t  while (++index < length) {\n\t    var key = toKey(path[index]);\n\t    if (!(result = object != null && hasFunc(object, key))) {\n\t      break;\n\t    }\n\t    object = object[key];\n\t  }\n\t  if (result || ++index != length) {\n\t    return result;\n\t  }\n\t  length = object == null ? 0 : object.length;\n\t  return !!length && isLength(length) && isIndex(key, length) &&\n\t    (isArray(object) || isArguments(object));\n\t}\n\t\n\tmodule.exports = hasPath;\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseCreate = __webpack_require__(48),\n\t    getPrototype = __webpack_require__(37),\n\t    isPrototype = __webpack_require__(39);\n\t\n\t/**\n\t * Initializes an object clone.\n\t *\n\t * @private\n\t * @param {Object} object The object to clone.\n\t * @returns {Object} Returns the initialized clone.\n\t */\n\tfunction initCloneObject(object) {\n\t  return (typeof object.constructor == 'function' && !isPrototype(object))\n\t    ? baseCreate(getPrototype(object))\n\t    : {};\n\t}\n\t\n\tmodule.exports = initCloneObject;\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(3);\n\t\n\t/**\n\t * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t *  equality comparisons, else `false`.\n\t */\n\tfunction isStrictComparable(value) {\n\t  return value === value && !isObject(value);\n\t}\n\t\n\tmodule.exports = isStrictComparable;\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * A specialized version of `matchesProperty` for source values suitable\n\t * for strict equality comparisons, i.e. `===`.\n\t *\n\t * @private\n\t * @param {string} key The key of the property to get.\n\t * @param {*} srcValue The value to match.\n\t * @returns {Function} Returns the new spec function.\n\t */\n\tfunction matchesStrictComparable(key, srcValue) {\n\t  return function(object) {\n\t    if (object == null) {\n\t      return false;\n\t    }\n\t    return object[key] === srcValue &&\n\t      (srcValue !== undefined || (key in Object(object)));\n\t  };\n\t}\n\t\n\tmodule.exports = matchesStrictComparable;\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Creates a unary function that invokes `func` with its argument transformed.\n\t *\n\t * @private\n\t * @param {Function} func The function to wrap.\n\t * @param {Function} transform The argument transform.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction overArg(func, transform) {\n\t  return function(arg) {\n\t    return func(transform(arg));\n\t  };\n\t}\n\t\n\tmodule.exports = overArg;\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar apply = __webpack_require__(31);\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max;\n\t\n\t/**\n\t * A specialized version of `baseRest` which transforms the rest array.\n\t *\n\t * @private\n\t * @param {Function} func The function to apply a rest parameter to.\n\t * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t * @param {Function} transform The rest array transform.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction overRest(func, start, transform) {\n\t  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t  return function() {\n\t    var args = arguments,\n\t        index = -1,\n\t        length = nativeMax(args.length - start, 0),\n\t        array = Array(length);\n\t\n\t    while (++index < length) {\n\t      array[index] = args[start + index];\n\t    }\n\t    index = -1;\n\t    var otherArgs = Array(start + 1);\n\t    while (++index < start) {\n\t      otherArgs[index] = args[index];\n\t    }\n\t    otherArgs[start] = transform(array);\n\t    return apply(func, this, otherArgs);\n\t  };\n\t}\n\t\n\tmodule.exports = overRest;\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGet = __webpack_require__(25),\n\t    baseSlice = __webpack_require__(182);\n\t\n\t/**\n\t * Gets the parent value at `path` of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Array} path The path to get the parent value of.\n\t * @returns {*} Returns the parent value.\n\t */\n\tfunction parent(object, path) {\n\t  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t}\n\t\n\tmodule.exports = parent;\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Converts `set` to an array of its values.\n\t *\n\t * @private\n\t * @param {Object} set The set to convert.\n\t * @returns {Array} Returns the values.\n\t */\n\tfunction setToArray(set) {\n\t  var index = -1,\n\t      result = Array(set.size);\n\t\n\t  set.forEach(function(value) {\n\t    result[++index] = value;\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = setToArray;\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseSetToString = __webpack_require__(181),\n\t    shortOut = __webpack_require__(233);\n\t\n\t/**\n\t * Sets the `toString` method of `func` to return `string`.\n\t *\n\t * @private\n\t * @param {Function} func The function to modify.\n\t * @param {Function} string The `toString` result.\n\t * @returns {Function} Returns `func`.\n\t */\n\tvar setToString = shortOut(baseSetToString);\n\t\n\tmodule.exports = setToString;\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports) {\n\n\t/** Used for built-in method references. */\n\tvar funcProto = Function.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar funcToString = funcProto.toString;\n\t\n\t/**\n\t * Converts `func` to its source code.\n\t *\n\t * @private\n\t * @param {Function} func The function to convert.\n\t * @returns {string} Returns the source code.\n\t */\n\tfunction toSource(func) {\n\t  if (func != null) {\n\t    try {\n\t      return funcToString.call(func);\n\t    } catch (e) {}\n\t    try {\n\t      return (func + '');\n\t    } catch (e) {}\n\t  }\n\t  return '';\n\t}\n\t\n\tmodule.exports = toSource;\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(6),\n\t    createAssigner = __webpack_require__(20),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * This method is like `_.assign` except that it iterates over own and\n\t * inherited source properties.\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @alias extend\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} [sources] The source objects.\n\t * @returns {Object} Returns `object`.\n\t * @see _.assign\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t * }\n\t *\n\t * function Bar() {\n\t *   this.c = 3;\n\t * }\n\t *\n\t * Foo.prototype.b = 2;\n\t * Bar.prototype.d = 4;\n\t *\n\t * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n\t * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\t */\n\tvar assignIn = createAssigner(function(object, source) {\n\t  copyObject(source, keysIn(source), object);\n\t});\n\t\n\tmodule.exports = assignIn;\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Creates a function that returns `value`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @category Util\n\t * @param {*} value The value to return from the new function.\n\t * @returns {Function} Returns the new constant function.\n\t * @example\n\t *\n\t * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t *\n\t * console.log(objects);\n\t * // => [{ 'a': 1 }, { 'a': 1 }]\n\t *\n\t * console.log(objects[0] === objects[1]);\n\t * // => true\n\t */\n\tfunction constant(value) {\n\t  return function() {\n\t    return value;\n\t  };\n\t}\n\t\n\tmodule.exports = constant;\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGetTag = __webpack_require__(18),\n\t    getPrototype = __webpack_require__(37),\n\t    isObjectLike = __webpack_require__(14);\n\t\n\t/** `Object#toString` result references. */\n\tvar objectTag = '[object Object]';\n\t\n\t/** Used for built-in method references. */\n\tvar funcProto = Function.prototype,\n\t    objectProto = Object.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar funcToString = funcProto.toString;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Used to infer the `Object` constructor. */\n\tvar objectCtorString = funcToString.call(Object);\n\t\n\t/**\n\t * Checks if `value` is a plain object, that is, an object created by the\n\t * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.8.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t * }\n\t *\n\t * _.isPlainObject(new Foo);\n\t * // => false\n\t *\n\t * _.isPlainObject([1, 2, 3]);\n\t * // => false\n\t *\n\t * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t * // => true\n\t *\n\t * _.isPlainObject(Object.create(null));\n\t * // => true\n\t */\n\tfunction isPlainObject(value) {\n\t  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n\t    return false;\n\t  }\n\t  var proto = getPrototype(value);\n\t  if (proto === null) {\n\t    return true;\n\t  }\n\t  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n\t    funcToString.call(Ctor) == objectCtorString;\n\t}\n\t\n\tmodule.exports = isPlainObject;\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Gets the last element of `array`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Array\n\t * @param {Array} array The array to query.\n\t * @returns {*} Returns the last element of `array`.\n\t * @example\n\t *\n\t * _.last([1, 2, 3]);\n\t * // => 3\n\t */\n\tfunction last(array) {\n\t  var length = array == null ? 0 : array.length;\n\t  return length ? array[length - 1] : undefined;\n\t}\n\t\n\tmodule.exports = last;\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseMerge = __webpack_require__(50),\n\t    createAssigner = __webpack_require__(20);\n\t\n\t/**\n\t * This method is like `_.merge` except that it accepts `customizer` which\n\t * is invoked to produce the merged values of the destination and source\n\t * properties. If `customizer` returns `undefined`, merging is handled by the\n\t * method instead. The `customizer` is invoked with six arguments:\n\t * (objValue, srcValue, key, object, source, stack).\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} sources The source objects.\n\t * @param {Function} customizer The function to customize assigned values.\n\t * @returns {Object} Returns `object`.\n\t * @example\n\t *\n\t * function customizer(objValue, srcValue) {\n\t *   if (_.isArray(objValue)) {\n\t *     return objValue.concat(srcValue);\n\t *   }\n\t * }\n\t *\n\t * var object = { 'a': [1], 'b': [2] };\n\t * var other = { 'a': [3], 'b': [4] };\n\t *\n\t * _.mergeWith(object, other, customizer);\n\t * // => { 'a': [1, 3], 'b': [2, 4] }\n\t */\n\tvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t  baseMerge(object, source, srcIndex, customizer);\n\t});\n\t\n\tmodule.exports = mergeWith;\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayMap = __webpack_require__(23),\n\t    baseIteratee = __webpack_require__(9),\n\t    basePickBy = __webpack_require__(79),\n\t    getAllKeysIn = __webpack_require__(53);\n\t\n\t/**\n\t * Creates an object composed of the `object` properties `predicate` returns\n\t * truthy for. The predicate is invoked with two arguments: (value, key).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Object\n\t * @param {Object} object The source object.\n\t * @param {Function} [predicate=_.identity] The function invoked per property.\n\t * @returns {Object} Returns the new object.\n\t * @example\n\t *\n\t * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t *\n\t * _.pickBy(object, _.isNumber);\n\t * // => { 'a': 1, 'c': 3 }\n\t */\n\tfunction pickBy(object, predicate) {\n\t  if (object == null) {\n\t    return {};\n\t  }\n\t  var props = arrayMap(getAllKeysIn(object), function(prop) {\n\t    return [prop];\n\t  });\n\t  predicate = baseIteratee(predicate);\n\t  return basePickBy(object, props, function(value, path) {\n\t    return predicate(value, path[0]);\n\t  });\n\t}\n\t\n\tmodule.exports = pickBy;\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * This method returns a new empty array.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.13.0\n\t * @category Util\n\t * @returns {Array} Returns the new empty array.\n\t * @example\n\t *\n\t * var arrays = _.times(2, _.stubArray);\n\t *\n\t * console.log(arrays);\n\t * // => [[], []]\n\t *\n\t * console.log(arrays[0] === arrays[1]);\n\t * // => false\n\t */\n\tfunction stubArray() {\n\t  return [];\n\t}\n\t\n\tmodule.exports = stubArray;\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar createToPairs = __webpack_require__(88),\n\t    keys = __webpack_require__(4);\n\t\n\t/**\n\t * Creates an array of own enumerable string keyed-value pairs for `object`\n\t * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t * entries are returned.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @alias entries\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the key-value pairs.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.toPairs(new Foo);\n\t * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t */\n\tvar toPairs = createToPairs(keys);\n\t\n\tmodule.exports = toPairs;\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar createToPairs = __webpack_require__(88),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * Creates an array of own and inherited enumerable string keyed-value pairs\n\t * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t * or set, its entries are returned.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @alias entriesIn\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the key-value pairs.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.toPairsIn(new Foo);\n\t * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t */\n\tvar toPairsIn = createToPairs(keysIn);\n\t\n\tmodule.exports = toPairsIn;\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports) {\n\n\tfunction GaugeSet() {\n\t  this.speed = new steelseries.Radial('speedCanvas', {\n\t    gaugeType: steelseries.GaugeType.TYPE4,\n\t    frameDesign: steelseries.FrameDesign.TILTED_BLACK,\n\t    size: 400,\n\t    titleString: \"SOG\",\n\t    unitString: \"m/s\",\n\t    lcdVisible: true,\n\t    maxValue: 10,\n\t    maxMeasuredValue: 0,\n\t    maxMeasuredValueVisible: true,\n\t    thresholdVisible: false,\n\t    ledVisible: false,\n\t    pointerType: steelseries.PointerType.TYPE4\n\t  });\n\t\n\t  this.depth = new steelseries.Radial('depthCanvas', {\n\t    gaugeType: steelseries.GaugeType.TYPE4,\n\t    frameDesign: steelseries.FrameDesign.TILTED_BLACK,\n\t    size: 400,\n\t    section: [\n\t      steelseries.Section(0, 4, 'rgba(255, 0, 0, 0.3)'),\n\t      steelseries.Section(4, 8, 'rgba(220, 220, 0, 0.3)')\n\t    ],\n\t    titleString: \"Depth\",\n\t    unitString: \"m\",\n\t    lcdVisible: true,\n\t    maxValue: 20,\n\t    maxMeasuredValue: 0,\n\t    maxMeasuredValueVisible: true,\n\t    thresholdVisible: false,\n\t    ledVisible: false,\n\t    pointerType: steelseries.PointerType.TYPE2\n\t  });\n\t\n\t  this.compass = new steelseries.Compass('compassCanvas', {\n\t    frameDesign: steelseries.FrameDesign.TILTED_BLACK,\n\t    size: 400,\n\t    rotateFace: true,\n\t    pointerType: steelseries.PointerType.TYPE5\n\t  });\n\t\n\t  this.wind = new steelseries.WindDirection('windCanvas', {\n\t    frameDesign: steelseries.FrameDesign.TILTED_BLACK,\n\t    size: 400,\n\t    lcdVisible: true,\n\t    degreeScaleHalf: true,\n\t    pointSymbolsVisible: false,\n\t    pointerType: steelseries.PointerType.TYPE5,\n\t  });\n\t\n\t\n\t  this.eventHandlers = {\n\t    \"navigation.speedOverGround\": function(value) {\n\t      if (value != null) {\n\t        this.speed.setValue(value);\n\t      }\n\t    }.bind(this),\n\t    \"navigation.courseOverGroundTrue\": function(value) {\n\t      this.compass.setValue(value / Math.PI * 180);\n\t    }.bind(this),\n\t    \"environment.depth.belowTransducer\": function(value) {\n\t      this.depth.setValue(value);\n\t    }.bind(this),\n\t    \"environment.wind.angleApparent\": function(value) {\n\t      this.wind.setValueLatest(value);\n\t    }.bind(this)\n\t  }\n\t  this.dispatch = this.doDispatch.bind(this);\n\t};\n\t\n\tGaugeSet.prototype = {\n\t  doDispatch: function dispatch(delta) {\n\t    if (delta.context === 'vessels.' + this.selfId && delta.updates) {\n\t      var that  = this;\n\t      delta.updates.forEach(function(update) {\n\t        update.values.forEach(function(value) {\n\t          if (that.eventHandlers[value.path] && typeof that.eventHandlers[value.path] === 'function') {\n\t            that.eventHandlers[value.path](value.value);\n\t          }\n\t        })\n\t      })\n\t    }\n\t  },\n\t  setSelfId: function(selfId) {\n\t    this.selfId = selfId;\n\t  }\n\t}\n\t\n\t\n\t\n\tmodule.exports.GaugeSet = GaugeSet;\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports) {\n\n\t/*!\n\t * Name          : steelseries.js\n\t * Authors       : Gerrit Grunwald, Mark Crossley\n\t * Last modified : 29.01.2014\n\t * Revision      : 0.14.7\n\t *\n\t * Copyright (c) 2011, Gerrit Grunwald, Mark Crossley\n\t * All rights reserved.\n\t *\n\t *  Redistribution and use in source and binary forms, with or without modification, are permitted\n\t *  provided that the following conditions are met:\n\t *\n\t *  # Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t *  # Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following\n\t *    disclaimer in the documentation and/or other materials provided with the distribution.\n\t *\n\t *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,\n\t *   BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\n\t *   SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\t *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\t *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n\t *   OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t/*globals Tween */\n\t/*jshint onevar:false,plusplus:false,nomen:false,bitwise:false*/\n\t'option strict';\n\t\n\tvar steelseries = (function () {\n\t\n\t    // Constants\n\t    var HALF_PI     = Math.PI * 0.5,\n\t        TWO_PI      = Math.PI * 2,\n\t        PI          = Math.PI,\n\t        RAD_FACTOR  = Math.PI / 180,\n\t        DEG_FACTOR  = 180 / Math.PI,\n\t        doc         = document,\n\t        lcdFontName = 'LCDMono2Ultra,Arial,Verdana,sans-serif',\n\t        stdFontName = 'Arial,Verdana,sans-serif';\n\t\n\t    //*************************************   C O M P O N O N E N T S   ************************************************\n\t    var radial = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var gaugeType = (undefined === parameters.gaugeType ? steelseries.GaugeType.TYPE4 : parameters.gaugeType),\n\t            size = (undefined === parameters.size ? 0 : parameters.size),\n\t            minValue = (undefined === parameters.minValue ? 0 : parameters.minValue),\n\t            maxValue = (undefined === parameters.maxValue ? (minValue + 100) : parameters.maxValue),\n\t            niceScale = (undefined === parameters.niceScale ? true : parameters.niceScale),\n\t            threshold = (undefined === parameters.threshold ? (maxValue - minValue) / 2 + minValue: parameters.threshold),\n\t            thresholdRising = (undefined === parameters.thresholdRising ? true : parameters.thresholdRising),\n\t            section = (undefined === parameters.section ? null : parameters.section),\n\t            area = (undefined === parameters.area ? null : parameters.area),\n\t            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n\t            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            pointerType = (undefined === parameters.pointerType ? steelseries.PointerType.TYPE1 : parameters.pointerType),\n\t            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.RED : parameters.pointerColor),\n\t            knobType = (undefined === parameters.knobType ? steelseries.KnobType.STANDARD_KNOB : parameters.knobType),\n\t            knobStyle = (undefined === parameters.knobStyle ? steelseries.KnobStyle.SILVER : parameters.knobStyle),\n\t            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n\t            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n\t            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n\t            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n\t            fractionalScaleDecimals = (undefined === parameters.fractionalScaleDecimals ? 1 : parameters.fractionalScaleDecimals),\n\t            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor),\n\t            ledVisible = (undefined === parameters.ledVisible ? true : parameters.ledVisible),\n\t            userLedColor = (undefined === parameters.userLedColor ? steelseries.LedColor.GREEN_LED : parameters.userLedColor),\n\t            userLedVisible = (undefined === parameters.userLedVisible ? false : parameters.userLedVisible),\n\t            thresholdVisible = (undefined === parameters.thresholdVisible ? true : parameters.thresholdVisible),\n\t            minMeasuredValueVisible = (undefined === parameters.minMeasuredValueVisible ? false : parameters.minMeasuredValueVisible),\n\t            maxMeasuredValueVisible = (undefined === parameters.maxMeasuredValueVisible ? false : parameters.maxMeasuredValueVisible),\n\t            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            labelNumberFormat = (undefined === parameters.labelNumberFormat ? steelseries.LabelNumberFormat.STANDARD : parameters.labelNumberFormat),\n\t            playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),\n\t            alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),\n\t            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n\t            tickLabelOrientation = (undefined === parameters.tickLabelOrientation ? (gaugeType === steelseries.GaugeType.TYPE1 ? steelseries.TickLabelOrientation.TANGENT : steelseries.TickLabelOrientation.NORMAL) : parameters.tickLabelOrientation),\n\t            trendVisible = (undefined === parameters.trendVisible ? false : parameters.trendVisible),\n\t            trendColors = (undefined === parameters.trendColors ? [steelseries.LedColor.RED_LED, steelseries.LedColor.GREEN_LED, steelseries.LedColor.CYAN_LED] : parameters.trendColors),\n\t            useOdometer = (undefined === parameters.useOdometer ? false : parameters.useOdometer),\n\t            odometerParams = (undefined === parameters.odometerParams ? {} : parameters.odometerParams),\n\t            odometerUseValue = (undefined === parameters.odometerUseValue ? false : parameters.odometerUseValue),\n\t            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (size === 0) {\n\t            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        // Create audio tag for alarm sound\n\t        var audioElement;\n\t        if (playAlarm && alarmSound !== false) {\n\t            audioElement = doc.createElement('audio');\n\t            audioElement.setAttribute('src', alarmSound);\n\t            audioElement.setAttribute('preload', 'auto');\n\t        }\n\t\n\t        var value = minValue;\n\t        var odoValue = minValue;\n\t        var self = this;\n\t\n\t        // Properties\n\t        var minMeasuredValue = maxValue;\n\t        var maxMeasuredValue = minValue;\n\t\n\t        var ledBlinking = false;\n\t        var userLedBlinking = false;\n\t\n\t        var ledTimerId = 0;\n\t        var userLedTimerId = 0;\n\t        var tween;\n\t        var repainting = false;\n\t\n\t        var trendIndicator = steelseries.TrendState.OFF;\n\t        var trendSize = size * 0.06;\n\t        var trendPosX = size * 0.29;\n\t        var trendPosY = size * 0.36;\n\t\n\t        // GaugeType specific private variables\n\t        var freeAreaAngle;\n\t        var rotationOffset;\n\t        var tickmarkOffset;\n\t        var angleRange;\n\t        var angleStep;\n\t\n\t        var angle = rotationOffset + (value - minValue) * angleStep;\n\t\n\t        var imageWidth = size;\n\t        var imageHeight = size;\n\t\n\t        var centerX = imageWidth / 2;\n\t        var centerY = imageHeight / 2;\n\t\n\t        // Misc\n\t        var ledSize = size * 0.093457;\n\t        var ledPosX = 0.6 * imageWidth;\n\t        var ledPosY = 0.4 * imageHeight;\n\t        var userLedPosX = gaugeType === steelseries.GaugeType.TYPE3 ? 0.6 * imageWidth : centerX - ledSize / 2;\n\t        var userLedPosY = gaugeType === steelseries.GaugeType.TYPE3 ? 0.72 * imageHeight : 0.75 * imageHeight;\n\t        var lcdFontHeight = Math.floor(imageWidth / 10);\n\t        var stdFont = lcdFontHeight + 'px ' + stdFontName;\n\t        var lcdFont = lcdFontHeight + 'px ' + lcdFontName;\n\t        var lcdHeight = imageHeight * 0.13;\n\t        var lcdWidth = imageWidth * 0.4;\n\t        var lcdPosX = (imageWidth - lcdWidth) / 2;\n\t        var lcdPosY = imageHeight * 0.57;\n\t        var odoPosX, odoPosY = imageHeight * 0.61;\n\t        var shadowOffset = imageWidth * 0.006;\n\t\n\t        // Constants\n\t        var initialized = false;\n\t\n\t        // Tickmark specific private variables\n\t        var niceMinValue = minValue;\n\t        var niceMaxValue = maxValue;\n\t        var niceRange = maxValue - minValue;\n\t        var range = niceMaxValue - niceMinValue;\n\t        var minorTickSpacing = 0;\n\t        var majorTickSpacing = 0;\n\t        var maxNoOfMinorTicks = 10;\n\t        var maxNoOfMajorTicks = 10;\n\t\n\t        // Method to calculate nice values for min, max and range for the tickmarks\n\t        var calculate = function calculate() {\n\t            if (niceScale) {\n\t                niceRange = calcNiceNumber(maxValue - minValue, false);\n\t                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n\t                niceMinValue = Math.floor(minValue / majorTickSpacing) * majorTickSpacing;\n\t                niceMaxValue = Math.ceil(maxValue / majorTickSpacing) * majorTickSpacing;\n\t                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n\t                minValue = niceMinValue;\n\t                maxValue = niceMaxValue;\n\t                range = maxValue - minValue;\n\t            } else {\n\t                niceRange = (maxValue - minValue);\n\t                niceMinValue = minValue;\n\t                niceMaxValue = maxValue;\n\t                range = niceRange;\n\t                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n\t                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n\t            }\n\t\n\t            switch (gaugeType.type) {\n\t            case 'type1':\n\t                freeAreaAngle = 0;\n\t                rotationOffset = PI;\n\t                tickmarkOffset = HALF_PI;\n\t                angleRange = HALF_PI;\n\t                angleStep = angleRange / range;\n\t                break;\n\t\n\t            case 'type2':\n\t                freeAreaAngle = 0;\n\t                rotationOffset = PI;\n\t                tickmarkOffset = HALF_PI;\n\t                angleRange = PI;\n\t                angleStep = angleRange / range;\n\t                break;\n\t\n\t            case 'type3':\n\t                freeAreaAngle = 0;\n\t                rotationOffset = HALF_PI;\n\t                tickmarkOffset = 0;\n\t                angleRange = 1.5 * PI;\n\t                angleStep = angleRange / range;\n\t                break;\n\t\n\t            case 'type4':\n\t            /* falls through */\n\t            default:\n\t                freeAreaAngle = 60 * RAD_FACTOR;\n\t                rotationOffset = HALF_PI + (freeAreaAngle / 2);\n\t                tickmarkOffset = 0;\n\t                angleRange = TWO_PI - freeAreaAngle;\n\t                angleStep = angleRange / range;\n\t                break;\n\t            }\n\t            angle = rotationOffset + (value - minValue) * angleStep;\n\t        };\n\t\n\t        // **************   Buffer creation  ********************\n\t        // Buffer for the frame\n\t        var frameBuffer = createBuffer(size, size);\n\t        var frameContext = frameBuffer.getContext('2d');\n\t\n\t        // Buffer for the background\n\t        var backgroundBuffer = createBuffer(size, size);\n\t        var backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        var lcdBuffer;\n\t\n\t        // Buffer for led on painting code\n\t        var ledBufferOn = createBuffer(ledSize, ledSize);\n\t        var ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t        // Buffer for led off painting code\n\t        var ledBufferOff = createBuffer(ledSize, ledSize);\n\t        var ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t        // Buffer for current led painting code\n\t        var ledBuffer = ledBufferOff;\n\t\n\t        // Buffer for user led on painting code\n\t        var userLedBufferOn = createBuffer(ledSize, ledSize);\n\t        var userLedContextOn = userLedBufferOn.getContext('2d');\n\t\n\t        // Buffer for user led off painting code\n\t        var userLedBufferOff = createBuffer(ledSize, ledSize);\n\t        var userLedContextOff = userLedBufferOff.getContext('2d');\n\t\n\t        // Buffer for current user led painting code\n\t        var userLedBuffer = userLedBufferOff;\n\t\n\t        // Buffer for the minMeasuredValue indicator\n\t        var minMeasuredValueBuffer = createBuffer(Math.ceil(size * 0.028037), Math.ceil(size * 0.028037));\n\t        var minMeasuredValueCtx = minMeasuredValueBuffer.getContext('2d');\n\t\n\t        // Buffer for the maxMeasuredValue indicator\n\t        var maxMeasuredValueBuffer = createBuffer(Math.ceil(size * 0.028037), Math.ceil(size * 0.028037));\n\t        var maxMeasuredValueCtx = maxMeasuredValueBuffer.getContext('2d');\n\t\n\t        // Buffer for pointer image painting code\n\t        var pointerBuffer = createBuffer(size, size);\n\t        var pointerContext = pointerBuffer.getContext('2d');\n\t\n\t        // Buffer for static foreground painting code\n\t        var foregroundBuffer = createBuffer(size, size);\n\t        var foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        // Buffers for trend indicators\n\t        var trendUpBuffer, trendSteadyBuffer, trendDownBuffer, trendOffBuffer;\n\t\n\t        // Buffer for odometer\n\t        var odoGauge, odoBuffer, odoContext;\n\t        if (useOdometer && lcdVisible) {\n\t            odoBuffer = createBuffer(10, 10);          // size doesn't matter, it will get reset by odometer code\n\t            odoContext = odoBuffer.getContext('2d');\n\t        }\n\t\n\t        // **************   Image creation  ********************\n\t        var drawLcdText = function (ctx, value) {\n\t            ctx.restore();\n\t            ctx.save();\n\t            ctx.textAlign = 'right';\n\t            ctx.strokeStyle = lcdColor.textColor;\n\t            ctx.fillStyle = lcdColor.textColor;\n\t\n\t            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n\t                ctx.shadowColor = 'gray';\n\t                ctx.shadowOffsetX = imageWidth * 0.007;\n\t                ctx.shadowOffsetY = imageWidth * 0.007;\n\t                ctx.shadowBlur = imageWidth * 0.007;\n\t            }\n\t            if (digitalFont) {\n\t                ctx.font = lcdFont;\n\t            } else {\n\t                ctx.font = stdFont;\n\t            }\n\t            ctx.fillText(value.toFixed(lcdDecimals), lcdPosX + lcdWidth - lcdWidth * 0.05, lcdPosY + lcdHeight * 0.5 + lcdFontHeight * 0.38, lcdWidth * 0.9);\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawPostsImage = function (ctx) {\n\t            ctx.save();\n\t\n\t            if ('type1' === gaugeType.type) {\n\t                // Draw max center top post\n\t                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.523364, imageHeight * 0.130841);\n\t            }\n\t\n\t            if ('type1' === gaugeType.type || 'type2' === gaugeType.type) {\n\t                // Draw min left post\n\t                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.130841, imageHeight * 0.514018);\n\t            }\n\t\n\t            if ('type2' === gaugeType.type || 'type3' === gaugeType.type) {\n\t                // Draw max right post\n\t                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.831775, imageHeight * 0.514018);\n\t            }\n\t\n\t            if ('type3' === gaugeType.type) {\n\t                // Draw min center bottom post\n\t                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.523364, imageHeight * 0.831775);\n\t            }\n\t\n\t            if ('type4' === gaugeType.type) {\n\t                // Min post\n\t                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.336448, imageHeight * 0.803738);\n\t\n\t                // Max post\n\t                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.626168, imageHeight * 0.803738);\n\t            }\n\t\n\t            ctx.restore();\n\t\n\t        };\n\t\n\t        var createThresholdImage = function () {\n\t            var thresholdBuffer = doc.createElement('canvas');\n\t            thresholdBuffer.width = Math.ceil(size * 0.046728);\n\t            thresholdBuffer.height = Math.ceil(thresholdBuffer.width * 0.9);\n\t            var thresholdCtx = thresholdBuffer.getContext('2d');\n\t\n\t            thresholdCtx.save();\n\t            var gradThreshold = thresholdCtx.createLinearGradient(0, 0.1, 0, thresholdBuffer.height * 0.9);\n\t            gradThreshold.addColorStop(0, '#520000');\n\t            gradThreshold.addColorStop(0.3, '#fc1d00');\n\t            gradThreshold.addColorStop(0.59, '#fc1d00');\n\t            gradThreshold.addColorStop(1, '#520000');\n\t            thresholdCtx.fillStyle = gradThreshold;\n\t\n\t            thresholdCtx.beginPath();\n\t            thresholdCtx.moveTo(thresholdBuffer.width * 0.5, 0.1);\n\t            thresholdCtx.lineTo(thresholdBuffer.width * 0.9, thresholdBuffer.height * 0.9);\n\t            thresholdCtx.lineTo(thresholdBuffer.width * 0.1, thresholdBuffer.height * 0.9);\n\t            thresholdCtx.lineTo(thresholdBuffer.width * 0.5, 0.1);\n\t            thresholdCtx.closePath();\n\t\n\t            thresholdCtx.fill();\n\t            thresholdCtx.strokeStyle = '#FFFFFF';\n\t            thresholdCtx.stroke();\n\t\n\t            thresholdCtx.restore();\n\t\n\t            return thresholdBuffer;\n\t        };\n\t\n\t        var drawAreaSectionImage = function (ctx, start, stop, color, filled) {\n\t            if (start < minValue) {\n\t                start = minValue;\n\t            } else if (start > maxValue) {\n\t                start = maxValue;\n\t            }\n\t            if (stop < minValue) {\n\t                stop = minValue;\n\t            } else if (stop > maxValue) {\n\t                stop = maxValue;\n\t            }\n\t            if (start >= stop) {\n\t                return;\n\t            }\n\t            ctx.save();\n\t            ctx.strokeStyle = color;\n\t            ctx.fillStyle = color;\n\t            ctx.lineWidth = imageWidth * 0.035;\n\t            var startAngle = (angleRange / range * start - angleRange / range * minValue);\n\t            var stopAngle = startAngle + (stop - start) / (range / angleRange);\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(rotationOffset);\n\t            ctx.beginPath();\n\t            if (filled) {\n\t                ctx.moveTo(0, 0);\n\t                ctx.arc(0, 0, imageWidth * 0.365 - ctx.lineWidth / 2, startAngle, stopAngle, false);\n\t            } else {\n\t                ctx.arc(0, 0, imageWidth * 0.365, startAngle, stopAngle, false);\n\t            }\n\t            if (filled) {\n\t                ctx.moveTo(0, 0);\n\t                ctx.fill();\n\t            } else {\n\t                ctx.stroke();\n\t            }\n\t\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawTickmarksImage = function (ctx, labelNumberFormat) {\n\t            var fontSize = Math.ceil(imageWidth * 0.04),\n\t                alpha = rotationOffset,      // Tracks total rotation\n\t                rotationStep = angleStep * minorTickSpacing,\n\t                textRotationAngle,\n\t                valueCounter = minValue,\n\t                majorTickCounter = maxNoOfMinorTicks - 1,\n\t                OUTER_POINT = imageWidth * 0.38,\n\t                MAJOR_INNER_POINT = imageWidth * 0.35,\n\t                MED_INNER_POINT = imageWidth * 0.355,\n\t                MINOR_INNER_POINT = imageWidth * 0.36,\n\t                TEXT_TRANSLATE_X = imageWidth * 0.3,\n\t                TEXT_WIDTH = imageWidth * 0.1,\n\t                HALF_MAX_NO_OF_MINOR_TICKS = maxNoOfMinorTicks / 2,\n\t                MAX_VALUE_ROUNDED = parseFloat(maxValue.toFixed(2)),\n\t                i;\n\t\n\t            backgroundColor.labelColor.setAlpha(1);\n\t            ctx.save();\n\t            ctx.textAlign = 'center';\n\t            ctx.textBaseline = 'middle';\n\t            ctx.font = fontSize + 'px' + stdFontName;\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(rotationOffset);\n\t\n\t            if (gaugeType.type === 'type1' || gaugeType.type === 'type2') {\n\t                TEXT_WIDTH = imageWidth * 0.04;\n\t            }\n\t\n\t            for (i = minValue; parseFloat(i.toFixed(2)) <= MAX_VALUE_ROUNDED; i += minorTickSpacing) {\n\t                textRotationAngle = rotationStep + HALF_PI;\n\t                majorTickCounter++;\n\t                // Draw major tickmarks\n\t                if (majorTickCounter === maxNoOfMinorTicks) {\n\t                    ctx.lineWidth = 1.5;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(OUTER_POINT, 0);\n\t                    ctx.lineTo(MAJOR_INNER_POINT, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                    ctx.save();\n\t                    ctx.translate(TEXT_TRANSLATE_X, 0);\n\t\n\t                    switch (tickLabelOrientation.type) {\n\t                    case 'horizontal':\n\t                        textRotationAngle = -alpha;\n\t                        break;\n\t\n\t                    case 'tangent':\n\t                        textRotationAngle = (alpha <= HALF_PI + PI ? PI : 0);\n\t                        break;\n\t\n\t                    case 'normal':\n\t                    /* falls through */\n\t                    default:\n\t                        textRotationAngle = HALF_PI;\n\t                        break;\n\t                    }\n\t                    ctx.rotate(textRotationAngle);\n\t\n\t                    switch (labelNumberFormat.format) {\n\t                    case 'fractional':\n\t                        ctx.fillText((valueCounter.toFixed(fractionalScaleDecimals)), 0, 0, TEXT_WIDTH);\n\t                        break;\n\t\n\t                    case 'scientific':\n\t                        ctx.fillText((valueCounter.toPrecision(2)), 0, 0, TEXT_WIDTH);\n\t                        break;\n\t\n\t                    case 'standard':\n\t                    /* falls through */\n\t                    default:\n\t                        ctx.fillText((valueCounter.toFixed(0)), 0, 0, TEXT_WIDTH);\n\t                        break;\n\t                    }\n\t                    ctx.translate(-TEXT_TRANSLATE_X, 0);\n\t                    ctx.restore();\n\t\n\t                    valueCounter += majorTickSpacing;\n\t                    majorTickCounter = 0;\n\t                    ctx.rotate(rotationStep);\n\t                    alpha += rotationStep;\n\t                    continue;\n\t                }\n\t\n\t                // Draw tickmark every minor tickmark spacing\n\t                if (0 === maxNoOfMinorTicks % 2 && majorTickCounter === (HALF_MAX_NO_OF_MINOR_TICKS)) {\n\t                    ctx.lineWidth = 1;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(OUTER_POINT, 0);\n\t                    ctx.lineTo(MED_INNER_POINT, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                } else {\n\t                    ctx.lineWidth = 0.5;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(OUTER_POINT, 0);\n\t                    ctx.lineTo(MINOR_INNER_POINT, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                }\n\t                ctx.rotate(rotationStep);\n\t                alpha += rotationStep;\n\t            }\n\t\n\t            /*\n\t             // Logarithmic scale\n\t             var tmp = 0.1;\n\t             var minValueLog10 = 0.1;\n\t             var maxValueLog10 = parseInt(Math.pow(10, Math.ceil(Math.log10(maxValue))));\n\t             var drawLabel = true;\n\t             angleStep = angleRange / (maxValueLog10 - minValueLog10)\n\t             for (var scaleFactor = minValueLog10 ; scaleFactor <= maxValueLog10 ; scaleFactor *= 10)\n\t             {\n\t             for (var i = parseFloat((1 * scaleFactor).toFixed(1)) ; i < parseFloat((10 * scaleFactor).toFixed(1)) ; i += scaleFactor)\n\t             {\n\t             textRotationAngle =+ rotationStep + HALF_PI;\n\t\n\t             if(drawLabel)\n\t             {\n\t             ctx.lineWidth = 1.5;\n\t             ctx.beginPath();\n\t             ctx.moveTo(imageWidth * 0.38,0);\n\t             ctx.lineTo(imageWidth * 0.35,0);\n\t             ctx.closePath();\n\t             ctx.stroke();\n\t             ctx.save();\n\t             ctx.translate(imageWidth * 0.31, 0);\n\t             ctx.rotate(textRotationAngle);\n\t             ctx.fillText(parseFloat((i).toFixed(1)), 0, 0, imageWidth * 0.0375);\n\t             ctx.translate(-imageWidth * 0.31, 0);\n\t             ctx.restore();\n\t             drawLabel = false;\n\t             }\n\t             else\n\t             {\n\t             ctx.lineWidth = 0.5;\n\t             ctx.beginPath();\n\t             ctx.moveTo(imageWidth * 0.38,0);\n\t             ctx.lineTo(imageWidth * 0.36,0);\n\t             ctx.closePath();\n\t             ctx.stroke();\n\t             }\n\t             //doc.write('log10 scale value: ' + parseFloat((i).toFixed(1)) + '<br>');\n\t             //Math.log10(parseFloat((i).toFixed(1)));\n\t\n\t             ctx.rotate(rotationStep);\n\t             }\n\t             tmp = 0.1;\n\t             drawLabel = true;\n\t             }\n\t             */\n\t\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.restore();\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        // Draw all static painting code to background\n\t        var init = function (parameters) {\n\t            parameters = parameters || {};\n\t            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n\t            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n\t            var drawLed = (undefined === parameters.led ? false : parameters.led);\n\t            var drawUserLed = (undefined === parameters.userLed ? false : parameters.userLed);\n\t            var drawPointer = (undefined === parameters.pointer ? false : parameters.pointer);\n\t            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\t            var drawTrend = (undefined === parameters.trend ? false : parameters.trend);\n\t            var drawOdo = (undefined === parameters.odo ? false : parameters.odo);\n\t\n\t            initialized = true;\n\t\n\t            // Calculate the current min and max values and the range\n\t            calculate();\n\t\n\t            // Create frame in frame buffer (backgroundBuffer)\n\t            if (drawFrame && frameVisible) {\n\t                drawRadialFrameImage(frameContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n\t            }\n\t\n\t            // Create background in background buffer (backgroundBuffer)\n\t            if (drawBackground && backgroundVisible) {\n\t                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                // Create custom layer in background buffer (backgroundBuffer)\n\t                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\t            }\n\t\n\t            if (drawLed) {\n\t                // Draw LED ON in ledBuffer_ON\n\t                ledContextOn.drawImage(createLedImage(Math.ceil(size * 0.093457), 1, ledColor), 0, 0);\n\t\n\t                // Draw LED OFF in ledBuffer_OFF\n\t                ledContextOff.drawImage(createLedImage(Math.ceil(size * 0.093457), 0, ledColor), 0, 0);\n\t            }\n\t\n\t            if (drawUserLed) {\n\t                // Draw user LED ON in userLedBuffer_ON\n\t                userLedContextOn.drawImage(createLedImage(Math.ceil(size * 0.093457), 1, userLedColor), 0, 0);\n\t\n\t                // Draw user LED OFF in userLedBuffer_OFF\n\t                userLedContextOff.drawImage(createLedImage(Math.ceil(size * 0.093457), 0, userLedColor), 0, 0);\n\t            }\n\t\n\t            // Draw min measured value indicator in minMeasuredValueBuffer\n\t            if (minMeasuredValueVisible) {\n\t                minMeasuredValueCtx.drawImage(createMeasuredValueImage(Math.ceil(size * 0.028037), steelseries.ColorDef.BLUE.dark.getRgbaColor(), true, true), 0, 0);\n\t            }\n\t\n\t            // Draw max measured value indicator in maxMeasuredValueBuffer\n\t            if (maxMeasuredValueVisible) {\n\t                maxMeasuredValueCtx.drawImage(createMeasuredValueImage(Math.ceil(size * 0.028037), steelseries.ColorDef.RED.medium.getRgbaColor(), true), 0, 0);\n\t            }\n\t\n\t            // Create alignment posts in background buffer (backgroundBuffer)\n\t            if (drawBackground && backgroundVisible) {\n\t                drawPostsImage(backgroundContext);\n\t\n\t                // Create section in background buffer (backgroundBuffer)\n\t                if (null !== section && 0 < section.length) {\n\t                    var sectionIndex = section.length;\n\t                    do {\n\t                        sectionIndex--;\n\t                        drawAreaSectionImage(backgroundContext, section[sectionIndex].start, section[sectionIndex].stop, section[sectionIndex].color, false);\n\t                    }\n\t                    while (0 < sectionIndex);\n\t                }\n\t\n\t                // Create area in background buffer (backgroundBuffer)\n\t                if (null !== area && 0 < area.length) {\n\t                    var areaIndex = area.length;\n\t                    do {\n\t                        areaIndex--;\n\t                        drawAreaSectionImage(backgroundContext, area[areaIndex].start, area[areaIndex].stop, area[areaIndex].color, true);\n\t                    }\n\t                    while (0 < areaIndex);\n\t                }\n\t\n\t                // Create tickmarks in background buffer (backgroundBuffer)\n\t                drawTickmarksImage(backgroundContext, labelNumberFormat);\n\t\n\t                // Create title in background buffer (backgroundBuffer)\n\t                drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, true, true);\n\t            }\n\t\n\t            // Draw threshold image to background context\n\t            if (drawBackground && thresholdVisible) {\n\t                backgroundContext.save();\n\t                backgroundContext.translate(centerX, centerY);\n\t                backgroundContext.rotate(rotationOffset + (threshold - minValue) * angleStep + HALF_PI);\n\t                backgroundContext.translate(-centerX, -centerY);\n\t                backgroundContext.drawImage(createThresholdImage(), imageWidth * 0.475, imageHeight * 0.13);\n\t                backgroundContext.translate(centerX, centerY);\n\t                backgroundContext.restore();\n\t            }\n\t\n\t            // Create lcd background if selected in background buffer (backgroundBuffer)\n\t            if (drawBackground && lcdVisible) {\n\t                if (useOdometer && drawOdo) {\n\t                    odoGauge = new steelseries.Odometer('', {\n\t                            _context: odoContext,\n\t                            height: size * 0.075,\n\t                            decimals: odometerParams.decimals,\n\t                            digits: (odometerParams.digits === undefined ? 5 : odometerParams.digits),\n\t                            valueForeColor: odometerParams.valueForeColor,\n\t                            valueBackColor: odometerParams.valueBackColor,\n\t                            decimalForeColor: odometerParams.decimalForeColor,\n\t                            decimalBackColor: odometerParams.decimalBackColor,\n\t                            font: odometerParams.font,\n\t                            value: value\n\t                        });\n\t                    odoPosX = (imageWidth - odoBuffer.width) / 2;\n\t                } else if (!useOdometer) {\n\t                    lcdBuffer = createLcdBackgroundImage(lcdWidth, lcdHeight, lcdColor);\n\t                    backgroundContext.drawImage(lcdBuffer, lcdPosX, lcdPosY);\n\t                }\n\t            }\n\t\n\t            // Create pointer image in pointer buffer (contentBuffer)\n\t            if (drawPointer) {\n\t                drawPointerImage(pointerContext, imageWidth, pointerType, pointerColor, backgroundColor.labelColor);\n\t            }\n\t\n\t            // Create foreground in foreground buffer (foregroundBuffer)\n\t            if (drawForeground && foregroundVisible) {\n\t                var knobVisible = (pointerType.type === 'type15' || pointerType.type === 'type16' ? false : true);\n\t                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, knobVisible, knobType, knobStyle, gaugeType);\n\t            }\n\t\n\t            // Create the trend indicator buffers\n\t            if (drawTrend && trendVisible) {\n\t                trendUpBuffer = createTrendIndicator(trendSize, steelseries.TrendState.UP, trendColors);\n\t                trendSteadyBuffer = createTrendIndicator(trendSize, steelseries.TrendState.STEADY, trendColors);\n\t                trendDownBuffer = createTrendIndicator(trendSize, steelseries.TrendState.DOWN, trendColors);\n\t                trendOffBuffer = createTrendIndicator(trendSize, steelseries.TrendState.OFF, trendColors);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function (buffers) {\n\t            buffers = buffers || {};\n\t            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n\t            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n\t            var resetLed = (undefined === buffers.led ? false : buffers.led);\n\t            var resetUserLed = (undefined === buffers.userLed ? false : buffers.userLed);\n\t            var resetPointer = (undefined === buffers.pointer ? false : buffers.pointer);\n\t            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\t\n\t            if (resetFrame) {\n\t                frameBuffer.width = size;\n\t                frameBuffer.height = size;\n\t                frameContext = frameBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetBackground) {\n\t                backgroundBuffer.width = size;\n\t                backgroundBuffer.height = size;\n\t                backgroundContext = backgroundBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetLed) {\n\t                ledBufferOn.width = Math.ceil(size * 0.093457);\n\t                ledBufferOn.height = Math.ceil(size * 0.093457);\n\t                ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t                ledBufferOff.width = Math.ceil(size * 0.093457);\n\t                ledBufferOff.height = Math.ceil(size * 0.093457);\n\t                ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t                // Buffer for current led painting code\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t\n\t            if (resetUserLed) {\n\t                userLedBufferOn.width = Math.ceil(size * 0.093457);\n\t                userLedBufferOn.height = Math.ceil(size * 0.093457);\n\t                userLedContextOn = userLedBufferOn.getContext('2d');\n\t\n\t                userLedBufferOff.width = Math.ceil(size * 0.093457);\n\t                userLedBufferOff.height = Math.ceil(size * 0.093457);\n\t                userLedContextOff = userLedBufferOff.getContext('2d');\n\t\n\t                // Buffer for current user led painting code\n\t                userLedBuffer = userLedBufferOff;\n\t            }\n\t\n\t            if (resetPointer) {\n\t                pointerBuffer.width = size;\n\t                pointerBuffer.height = size;\n\t                pointerContext = pointerBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetForeground) {\n\t                foregroundBuffer.width = size;\n\t                foregroundBuffer.height = size;\n\t                foregroundContext = foregroundBuffer.getContext('2d');\n\t            }\n\t        };\n\t\n\t        var toggleAndRepaintLed = function () {\n\t            if (ledVisible) {\n\t                if (ledBuffer === ledBufferOn) {\n\t                    ledBuffer = ledBufferOff;\n\t                } else {\n\t                    ledBuffer = ledBufferOn;\n\t                }\n\t                if (!repainting) {\n\t                    repainting = true;\n\t                    requestAnimFrame(self.repaint);\n\t                }\n\t            }\n\t        };\n\t\n\t        var toggleAndRepaintUserLed = function () {\n\t            if (userLedVisible) {\n\t                if (userLedBuffer === userLedBufferOn) {\n\t                    userLedBuffer = userLedBufferOff;\n\t                } else {\n\t                    userLedBuffer = userLedBufferOn;\n\t                }\n\t                if (!repainting) {\n\t                    repainting = true;\n\t                    requestAnimFrame(self.repaint);\n\t                }\n\t            }\n\t        };\n\t\n\t        var blink = function (blinking) {\n\t            if (blinking) {\n\t                ledTimerId = setInterval(toggleAndRepaintLed, 1000);\n\t            } else {\n\t                clearInterval(ledTimerId);\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t        };\n\t\n\t        var blinkUser = function (blinking) {\n\t            if (blinking) {\n\t                userLedTimerId = setInterval(toggleAndRepaintUserLed, 1000);\n\t            } else {\n\t                clearInterval(userLedTimerId);\n\t                userLedBuffer = userLedBufferOff;\n\t            }\n\t        };\n\t\n\t        //************************************ Public methods **************************************\n\t        this.setValue = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue);\n\t            if (value !== targetValue) {\n\t                value = targetValue;\n\t\n\t                if (value > maxMeasuredValue) {\n\t                    maxMeasuredValue = value;\n\t                }\n\t                if (value < minMeasuredValue) {\n\t                    minMeasuredValue = value;\n\t                }\n\t\n\t                if ((value >= threshold && !ledBlinking && thresholdRising) ||\n\t                    (value <= threshold && !ledBlinking && !thresholdRising)) {\n\t                    ledBlinking = true;\n\t                    blink(ledBlinking);\n\t                    if (playAlarm) {\n\t                        audioElement.play();\n\t                    }\n\t                } else if ((value < threshold && ledBlinking && thresholdRising) ||\n\t                           (value > threshold && ledBlinking && !thresholdRising)) {\n\t                    ledBlinking = false;\n\t                    blink(ledBlinking);\n\t                    if (playAlarm) {\n\t                        audioElement.pause();\n\t                    }\n\t                }\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getValue = function () {\n\t            return value;\n\t        };\n\t\n\t        this.setOdoValue = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < 0 ? 0 : newValue);\n\t            if (odoValue !== targetValue) {\n\t                odoValue = targetValue;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getOdoValue = function () {\n\t            return odoValue;\n\t        };\n\t\n\t        this.setValueAnimated = function (newValue, callback) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue)),\n\t                gauge = this,\n\t                time;\n\t\n\t            if (value !== targetValue) {\n\t                if (undefined !== tween && tween.isPlaying) {\n\t                    tween.stop();\n\t                }\n\t                time = fullScaleDeflectionTime * Math.abs(targetValue - value) / (maxValue - minValue);\n\t                time = Math.max(time, fullScaleDeflectionTime / 5);\n\t                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n\t                //tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, 1);\n\t                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, value, targetValue, 1);\n\t\n\t                tween.onMotionChanged = function (event) {\n\t                    value = event.target._pos;\n\t\n\t                    if ((value >= threshold && !ledBlinking && thresholdRising) ||\n\t                        (value <= threshold && !ledBlinking && !thresholdRising)) {\n\t                        ledBlinking = true;\n\t                        blink(ledBlinking);\n\t                        if (playAlarm) {\n\t                            audioElement.play();\n\t                        }\n\t                    } else if ((value < threshold && ledBlinking && thresholdRising) ||\n\t                               (value > threshold && ledBlinking && !thresholdRising)) {\n\t                        ledBlinking = false;\n\t                        blink(ledBlinking);\n\t                        if (playAlarm) {\n\t                            audioElement.pause();\n\t                        }\n\t                    }\n\t\n\t                    if (value > maxMeasuredValue) {\n\t                        maxMeasuredValue = value;\n\t                    }\n\t                    if (value < minMeasuredValue) {\n\t                        minMeasuredValue = value;\n\t                    }\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tween.onMotionFinished = callback;\n\t                }\n\t\n\t                tween.start();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.resetMinMeasuredValue = function () {\n\t            minMeasuredValue = value;\n\t            this.repaint();\n\t        };\n\t\n\t        this.resetMaxMeasuredValue = function () {\n\t            maxMeasuredValue = value;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMinMeasuredValueVisible = function (visible) {\n\t            minMeasuredValueVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMaxMeasuredValueVisible = function (visible) {\n\t            maxMeasuredValueVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMaxMeasuredValue = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue);\n\t            maxMeasuredValue = targetValue;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMinMeasuredValue = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue);\n\t            minMeasuredValue = targetValue;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setTitleString = function (title) {\n\t            titleString = title;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setUnitString = function (unit) {\n\t            unitString = unit;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMinValue = function (value) {\n\t            minValue = parseFloat(value);\n\t            resetBuffers({frame: true,\n\t                          background: true});\n\t            init({frame: true,\n\t                  background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getMinValue = function () {\n\t            return minValue;\n\t        };\n\t\n\t        this.setMaxValue = function (value) {\n\t            maxValue = parseFloat(value);\n\t            resetBuffers({frame: true,\n\t                          background: true});\n\t            init({frame: true,\n\t                  background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getMaxValue = function () {\n\t            return maxValue;\n\t        };\n\t\n\t        this.setThreshold = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue);\n\t            threshold = targetValue;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setArea = function (areaVal) {\n\t            area = areaVal;\n\t            resetBuffers({background: true,\n\t                          foreground: true});\n\t            init({background: true,\n\t                  foreground: true\n\t                  });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setSection = function (areaSec) {\n\t            section = areaSec;\n\t            resetBuffers({background: true,\n\t                          foreground: true});\n\t            init({background: true,\n\t                  foreground: true\n\t                  });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setThresholdVisible = function (visible) {\n\t            thresholdVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setThresholdRising = function (rising) {\n\t            thresholdRising = !!rising;\n\t            // reset existing threshold alerts\n\t            ledBlinking = !ledBlinking;\n\t            blink(ledBlinking);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdDecimals = function (decimals) {\n\t            lcdDecimals = parseInt(decimals, 10);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers({frame: true});\n\t            frameDesign = newFrameDesign;\n\t            init({frame: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            resetBuffers({background: true,\n\t                          pointer: (pointerType.type === 'type2' || pointerType.type === 'type13' ? true : false)       // type2 & 13 depend on background\n\t                });\n\t            backgroundColor = newBackgroundColor;\n\t            init({background: true,   // type2 & 13 depend on background\n\t                  pointer: (pointerType.type === 'type2' || pointerType.type === 'type13' ? true : false)\n\t                });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setForegroundType = function (newForegroundType) {\n\t            resetBuffers({foreground: true});\n\t            foregroundType = newForegroundType;\n\t            init({foreground: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerType = function (newPointerType) {\n\t            resetBuffers({pointer: true,\n\t                          foreground: true\n\t                         });\n\t            pointerType = newPointerType;\n\t            init({pointer: true,\n\t                  foreground: true\n\t                  });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerColor = function (newPointerColor) {\n\t            resetBuffers({pointer: true});\n\t            pointerColor = newPointerColor;\n\t            init({pointer: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLedColor = function (newLedColor) {\n\t            resetBuffers({led: true});\n\t            ledColor = newLedColor;\n\t            init({led: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setUserLedColor = function (newLedColor) {\n\t            resetBuffers({userLed: true});\n\t            userLedColor = newLedColor;\n\t            init({userLed: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.toggleUserLed = function () {\n\t            if (userLedBuffer === userLedBufferOn) {\n\t                userLedBuffer = userLedBufferOff;\n\t            } else {\n\t                userLedBuffer = userLedBufferOn;\n\t            }\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setUserLedOnOff = function (on) {\n\t            if (true === on) {\n\t                userLedBuffer = userLedBufferOn;\n\t            } else {\n\t                userLedBuffer = userLedBufferOff;\n\t            }\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.blinkUserLed = function (blink) {\n\t            if (blink) {\n\t                if (!userLedBlinking) {\n\t                    blinkUser(true);\n\t                    userLedBlinking = true;\n\t                }\n\t            } else {\n\t                if (userLedBlinking) {\n\t                    clearInterval(userLedTimerId);\n\t                    userLedBlinking = false;\n\t                }\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setLedVisible = function (visible) {\n\t            ledVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setUserLedVisible = function (visible) {\n\t            userLedVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdColor = function (newLcdColor) {\n\t            lcdColor = newLcdColor;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setTrend = function (newValue) {\n\t            trendIndicator = newValue;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setTrendVisible = function (visible) {\n\t            trendVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setFractionalScaleDecimals = function (decimals) {\n\t            fractionalScaleDecimals = parseInt(decimals, 10);\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLabelNumberFormat = function (format) {\n\t            labelNumberFormat = format;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init({frame: true,\n\t                      background: true,\n\t                      led: true,\n\t                      userLed: true,\n\t                      pointer: true,\n\t                      trend: true,\n\t                      foreground: true,\n\t                      odo: true});\n\t            }\n\t            mainCtx.clearRect(0, 0, size, size);\n\t\n\t            // Draw frame\n\t            if (frameVisible) {\n\t                mainCtx.drawImage(frameBuffer, 0, 0);\n\t            }\n\t\n\t            // Draw buffered image to visible canvas\n\t            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t\n\t            // Draw lcd display\n\t            if (lcdVisible) {\n\t                if (useOdometer) {\n\t                    odoGauge.setValue(odometerUseValue ? value : odoValue);\n\t                    mainCtx.drawImage(odoBuffer, odoPosX, odoPosY);\n\t                } else {\n\t                    drawLcdText(mainCtx, value);\n\t                }\n\t            }\n\t\n\t            // Draw led\n\t            if (ledVisible) {\n\t                mainCtx.drawImage(ledBuffer, ledPosX, ledPosY);\n\t            }\n\t\n\t            // Draw user led\n\t            if (userLedVisible) {\n\t                mainCtx.drawImage(userLedBuffer, userLedPosX, userLedPosY);\n\t            }\n\t\n\t            // Draw the trend indicator\n\t            if (trendVisible) {\n\t                switch (trendIndicator.state) {\n\t                case 'up':\n\t                    mainCtx.drawImage(trendUpBuffer, trendPosX, trendPosY);\n\t                    break;\n\t                case 'steady':\n\t                    mainCtx.drawImage(trendSteadyBuffer, trendPosX, trendPosY);\n\t                    break;\n\t                case 'down':\n\t                    mainCtx.drawImage(trendDownBuffer, trendPosX, trendPosY);\n\t                    break;\n\t                case 'off':\n\t                    mainCtx.drawImage(trendOffBuffer, trendPosX, trendPosY);\n\t                    break;\n\t                }\n\t            }\n\t\n\t            // Draw min measured value indicator\n\t            if (minMeasuredValueVisible) {\n\t                mainCtx.save();\n\t                mainCtx.translate(centerX, centerY);\n\t                mainCtx.rotate(rotationOffset + HALF_PI + (minMeasuredValue - minValue) * angleStep);\n\t                mainCtx.translate(-centerX, -centerY);\n\t                mainCtx.drawImage(minMeasuredValueBuffer, mainCtx.canvas.width * 0.4865, mainCtx.canvas.height * 0.105);\n\t                mainCtx.restore();\n\t            }\n\t\n\t            // Draw max measured value indicator\n\t            if (maxMeasuredValueVisible) {\n\t                mainCtx.save();\n\t                mainCtx.translate(centerX, centerY);\n\t                mainCtx.rotate(rotationOffset + HALF_PI + (maxMeasuredValue - minValue) * angleStep);\n\t                mainCtx.translate(-centerX, -centerY);\n\t                mainCtx.drawImage(maxMeasuredValueBuffer, mainCtx.canvas.width * 0.4865, mainCtx.canvas.height * 0.105);\n\t                mainCtx.restore();\n\t            }\n\t\n\t            angle = rotationOffset + HALF_PI + (value - minValue) * angleStep;\n\t\n\t            // Define rotation center\n\t            mainCtx.save();\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate(angle);\n\t            mainCtx.translate(-centerX, -centerY);\n\t            // Set the pointer shadow params\n\t            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\t            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\t            mainCtx.shadowBlur = shadowOffset * 2;\n\t            // Draw the pointer\n\t            mainCtx.drawImage(pointerBuffer, 0, 0);\n\t            // Undo the translations & shadow settings\n\t            mainCtx.restore();\n\t\n\t            // Draw foreground\n\t            if (foregroundVisible) {\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var radialBargraph = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var gaugeType = (undefined === parameters.gaugeType ? steelseries.GaugeType.TYPE4 : parameters.gaugeType),\n\t            size = (undefined === parameters.size ? 0 : parameters.size),\n\t            minValue = (undefined === parameters.minValue ? 0 : parameters.minValue),\n\t            maxValue = (undefined === parameters.maxValue ? (minValue + 100) : parameters.maxValue),\n\t            niceScale = (undefined === parameters.niceScale ? true : parameters.niceScale),\n\t            threshold = (undefined === parameters.threshold ? (maxValue - minValue) / 2 + minValue: parameters.threshold),\n\t            thresholdRising = (undefined === parameters.thresholdRising ? true : parameters.thresholdRising),\n\t            section = (undefined === parameters.section ? null : parameters.section),\n\t            useSectionColors = (undefined === parameters.useSectionColors ? false : parameters.useSectionColors),\n\t            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n\t            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            valueColor = (undefined === parameters.valueColor ? steelseries.ColorDef.RED : parameters.valueColor),\n\t            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n\t            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n\t            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n\t            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n\t            fractionalScaleDecimals = (undefined === parameters.fractionalScaleDecimals ? 1 : parameters.fractionalScaleDecimals),\n\t            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n\t            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor),\n\t            ledVisible = (undefined === parameters.ledVisible ? true : parameters.ledVisible),\n\t            userLedColor = (undefined === parameters.userLedColor ? steelseries.LedColor.GREEN_LED : parameters.userLedColor),\n\t            userLedVisible = (undefined === parameters.userLedVisible ? false : parameters.userLedVisible),\n\t            labelNumberFormat = (undefined === parameters.labelNumberFormat ? steelseries.LabelNumberFormat.STANDARD : parameters.labelNumberFormat),\n\t            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),\n\t            alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),\n\t            valueGradient = (undefined === parameters.valueGradient ? null : parameters.valueGradient),\n\t            useValueGradient = (undefined === parameters.useValueGradient ? false : parameters.useValueGradient),\n\t            tickLabelOrientation = (undefined === parameters.tickLabelOrientation ? (gaugeType === steelseries.GaugeType.TYPE1 ? steelseries.TickLabelOrientation.TANGENT : steelseries.TickLabelOrientation.NORMAL) : parameters.tickLabelOrientation),\n\t            trendVisible = (undefined === parameters.trendVisible ? false : parameters.trendVisible),\n\t            trendColors = (undefined === parameters.trendColors ? [steelseries.LedColor.RED_LED, steelseries.LedColor.GREEN_LED, steelseries.LedColor.CYAN_LED] : parameters.trendColors),\n\t            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (size === 0) {\n\t            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        // Create audio tag for alarm sound\n\t        if (playAlarm && alarmSound !== false) {\n\t            var audioElement = doc.createElement('audio');\n\t            audioElement.setAttribute('src', alarmSound);\n\t            audioElement.setAttribute('preload', 'auto');\n\t        }\n\t\n\t        var value = minValue;\n\t        var range = maxValue - minValue;\n\t        var ledBlinking = false;\n\t        var ledTimerId = 0;\n\t        var userLedBlinking = false;\n\t        var userLedTimerId = 0;\n\t        var tween;\n\t        var self = this;\n\t        var repainting = false;\n\t\n\t        // GaugeType specific private variables\n\t        var freeAreaAngle;\n\t        var rotationOffset;\n\t        var bargraphOffset;\n\t        var tickmarkOffset;\n\t        var angleRange;\n\t        var degAngleRange;\n\t        var angleStep;\n\t        var angle;\n\t\n\t        var sectionAngles = [];\n\t        var isSectionsVisible = false;\n\t        var isGradientVisible = false;\n\t\n\t        var imageWidth = size;\n\t        var imageHeight = size;\n\t\n\t        var centerX = imageWidth / 2;\n\t        var centerY = imageHeight / 2;\n\t\n\t        // Misc\n\t        var lcdFontHeight = Math.floor(imageWidth / 10);\n\t        var stdFont = lcdFontHeight + 'px ' + stdFontName;\n\t        var lcdFont = lcdFontHeight + 'px ' + lcdFontName;\n\t        var lcdHeight = imageHeight * 0.13;\n\t        var lcdWidth = imageWidth * 0.4;\n\t        var lcdPosX = (imageWidth - lcdWidth) / 2;\n\t        var lcdPosY = imageHeight / 2 - lcdHeight / 2;\n\t\n\t        // Constants\n\t        var ACTIVE_LED_POS_X = imageWidth * 0.116822;\n\t        var ACTIVE_LED_POS_Y = imageWidth * 0.485981;\n\t        var LED_SIZE = Math.ceil(size * 0.093457);\n\t        //var LED_POS_X = imageWidth * 0.453271;\n\t        var LED_POS_X = imageWidth * 0.53;\n\t        var LED_POS_Y = imageHeight * 0.61;\n\t        var USER_LED_POS_X = gaugeType === steelseries.GaugeType.TYPE3 ? 0.7 * imageWidth : centerX - LED_SIZE / 2;\n\t        var USER_LED_POS_Y = gaugeType === steelseries.GaugeType.TYPE3 ? 0.61 * imageHeight : 0.75 * imageHeight;\n\t\n\t        var trendIndicator = steelseries.TrendState.OFF;\n\t        var trendSize = size * 0.06;\n\t        var trendPosX = size * 0.38;\n\t        var trendPosY = size * 0.57;\n\t\n\t        switch (gaugeType.type) {\n\t        case 'type1':\n\t            freeAreaAngle = 0;\n\t            rotationOffset = PI;\n\t            bargraphOffset = 0;\n\t            tickmarkOffset = HALF_PI;\n\t            angleRange = HALF_PI;\n\t            degAngleRange = angleRange * DEG_FACTOR;\n\t            angleStep = angleRange / range;\n\t            break;\n\t\n\t        case 'type2':\n\t            freeAreaAngle = 0;\n\t            rotationOffset = PI;\n\t            bargraphOffset = 0;\n\t            tickmarkOffset = HALF_PI;\n\t            angleRange = PI;\n\t            degAngleRange = angleRange * DEG_FACTOR;\n\t            angleStep = angleRange / range;\n\t            break;\n\t\n\t        case 'type3':\n\t            freeAreaAngle = 0;\n\t            rotationOffset = HALF_PI;\n\t            bargraphOffset = -HALF_PI;\n\t            tickmarkOffset = 0;\n\t            angleRange = 1.5 * PI;\n\t            degAngleRange = angleRange * DEG_FACTOR;\n\t            angleStep = angleRange / range;\n\t            break;\n\t\n\t        case 'type4':\n\t        /* falls through */\n\t        default:\n\t            freeAreaAngle = 60 * RAD_FACTOR;\n\t            rotationOffset = HALF_PI + (freeAreaAngle / 2);\n\t            bargraphOffset = -TWO_PI / 6;\n\t            tickmarkOffset = 0;\n\t            angleRange = TWO_PI - freeAreaAngle;\n\t            degAngleRange = angleRange * DEG_FACTOR;\n\t            angleStep = angleRange / range;\n\t            break;\n\t        }\n\t\n\t        // Buffer for the frame\n\t        var frameBuffer = createBuffer(size, size);\n\t        var frameContext = frameBuffer.getContext('2d');\n\t\n\t        // Buffer for static background painting code\n\t        var backgroundBuffer = createBuffer(size, size);\n\t        var backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        var lcdBuffer;\n\t\n\t        // Buffer for active bargraph led\n\t        var activeLedBuffer = createBuffer(Math.ceil(size * 0.060747), Math.ceil(size * 0.023364));\n\t        var activeLedContext = activeLedBuffer.getContext('2d');\n\t\n\t        // Buffer for led on painting code\n\t        var ledBufferOn = createBuffer(LED_SIZE, LED_SIZE);\n\t        var ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t        // Buffer for led off painting code\n\t        var ledBufferOff = createBuffer(LED_SIZE, LED_SIZE);\n\t        var ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t        // Buffer for current led painting code\n\t        var ledBuffer = ledBufferOff;\n\t\n\t        // Buffer for user led on painting code\n\t        var userLedBufferOn = createBuffer(LED_SIZE, LED_SIZE);\n\t        var userLedContextOn = userLedBufferOn.getContext('2d');\n\t\n\t        // Buffer for user led off painting code\n\t        var userLedBufferOff = createBuffer(LED_SIZE, LED_SIZE);\n\t        var userLedContextOff = userLedBufferOff.getContext('2d');\n\t\n\t        // Buffer for current user led painting code\n\t        var userLedBuffer = userLedBufferOff;\n\t        // Buffer for the background of the led\n\t        var ledBackground;\n\t\n\t        // Buffer for static foreground painting code\n\t        var foregroundBuffer = createBuffer(size, size);\n\t        var foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        // Buffers for trend indicators\n\t        var trendUpBuffer, trendSteadyBuffer, trendDownBuffer, trendOffBuffer;\n\t\n\t        var initialized = false;\n\t\n\t        // Tickmark specific private variables\n\t        var niceMinValue = minValue;\n\t        var niceMaxValue = maxValue;\n\t        var niceRange = maxValue - minValue;\n\t        range = niceMaxValue - niceMinValue;\n\t        var minorTickSpacing = 0;\n\t        var majorTickSpacing = 0;\n\t        var maxNoOfMinorTicks = 10;\n\t        var maxNoOfMajorTicks = 10;\n\t\n\t        // Method to calculate nice values for min, max and range for the tickmarks\n\t        var calculate = function calculate() {\n\t            if (niceScale) {\n\t                niceRange = calcNiceNumber(maxValue - minValue, false);\n\t                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n\t                niceMinValue = Math.floor(minValue / majorTickSpacing) * majorTickSpacing;\n\t                niceMaxValue = Math.ceil(maxValue / majorTickSpacing) * majorTickSpacing;\n\t                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n\t                minValue = niceMinValue;\n\t                maxValue = niceMaxValue;\n\t                range = maxValue - minValue;\n\t            } else {\n\t                niceRange = (maxValue - minValue);\n\t                niceMinValue = minValue;\n\t                niceMaxValue = maxValue;\n\t                range = niceRange;\n\t                //minorTickSpacing = 1;\n\t                //majorTickSpacing = 10;\n\t                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n\t                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n\t            }\n\t\n\t            switch (gaugeType.type) {\n\t            case 'type1':\n\t                freeAreaAngle = 0;\n\t                rotationOffset = PI;\n\t                tickmarkOffset = HALF_PI;\n\t                angleRange = HALF_PI;\n\t                angleStep = angleRange / range;\n\t                break;\n\t\n\t            case 'type2':\n\t                freeAreaAngle = 0;\n\t                rotationOffset = PI;\n\t                tickmarkOffset = HALF_PI;\n\t                angleRange = PI;\n\t                angleStep = angleRange / range;\n\t                break;\n\t\n\t            case 'type3':\n\t                freeAreaAngle = 0;\n\t                rotationOffset = HALF_PI;\n\t                tickmarkOffset = 0;\n\t                angleRange = 1.5 * PI;\n\t                angleStep = angleRange / range;\n\t                break;\n\t\n\t            case 'type4':       // fall through\n\t            /* falls through */\n\t            default:\n\t                freeAreaAngle = 60 * RAD_FACTOR;\n\t                rotationOffset = HALF_PI + (freeAreaAngle / 2);\n\t                tickmarkOffset = 0;\n\t                angleRange = TWO_PI - freeAreaAngle;\n\t                angleStep = angleRange / range;\n\t                break;\n\t            }\n\t            angle = rotationOffset + (value - minValue) * angleStep;\n\t        };\n\t\n\t        //********************************* Private methods *********************************\n\t        // Draw all static painting code to background\n\t        var init = function (parameters) {\n\t            parameters = parameters || {};\n\t            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n\t            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n\t            var drawLed = (undefined === parameters.led ? false : parameters.led);\n\t            var drawUserLed = (undefined === parameters.userLed ? false : parameters.userLed);\n\t            var drawValue =  (undefined === parameters.value ? false : parameters.value);\n\t            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\t            var drawTrend = (undefined === parameters.trend ? false : parameters.trend);\n\t\n\t            initialized = true;\n\t\n\t            calculate();\n\t\n\t            // Create frame in frame buffer (frameBuffer)\n\t            if (drawFrame && frameVisible) {\n\t                drawRadialFrameImage(frameContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n\t            }\n\t\n\t            // Create background in background buffer (backgroundBuffer)\n\t            if (drawBackground && backgroundVisible) {\n\t                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                // Create custom layer in background buffer (backgroundBuffer)\n\t                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\t            }\n\t\n\t            if (drawLed) {\n\t                // Draw LED ON in ledBuffer_ON\n\t                ledContextOn.drawImage(createLedImage(LED_SIZE, 1, ledColor), 0, 0);\n\t\n\t                // Draw LED OFF in ledBuffer_OFF\n\t                ledContextOff.drawImage(createLedImage(LED_SIZE, 0, ledColor), 0, 0);\n\t\n\t                // Buffer the background of the led for blinking\n\t                ledBackground = backgroundContext.getImageData(LED_POS_X, LED_POS_Y, LED_SIZE, LED_SIZE);\n\t            }\n\t\n\t            if (drawUserLed) {\n\t                // Draw user LED ON in userLedBuffer_ON\n\t                userLedContextOn.drawImage(createLedImage(Math.ceil(LED_SIZE), 1, userLedColor), 0, 0);\n\t\n\t                // Draw user LED OFF in userLedBuffer_OFF\n\t                userLedContextOff.drawImage(createLedImage(Math.ceil(LED_SIZE), 0, userLedColor), 0, 0);\n\t            }\n\t\n\t            if (drawBackground) {\n\t                // Create bargraphtrack in background buffer (backgroundBuffer)\n\t                drawBargraphTrackImage(backgroundContext);\n\t            }\n\t\n\t            // Create tickmarks in background buffer (backgroundBuffer)\n\t            if (drawBackground  && backgroundVisible) {\n\t                drawTickmarksImage(backgroundContext, labelNumberFormat);\n\t\n\t                // Create title in background buffer (backgroundBuffer)\n\t                drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, true, true);\n\t            }\n\t\n\t            // Create lcd background if selected in background buffer (backgroundBuffer)\n\t            if (drawBackground && lcdVisible) {\n\t                lcdBuffer = createLcdBackgroundImage(lcdWidth, lcdHeight, lcdColor);\n\t                backgroundContext.drawImage(lcdBuffer, lcdPosX, lcdPosY);\n\t            }\n\t\n\t            // Convert Section values into angles\n\t            isSectionsVisible = false;\n\t            if (useSectionColors && null !== section && 0 < section.length) {\n\t                isSectionsVisible = true;\n\t                var sectionIndex = section.length;\n\t                sectionAngles = [];\n\t                do {\n\t                    sectionIndex--;\n\t                    sectionAngles.push({start: (((section[sectionIndex].start + Math.abs(minValue)) / (maxValue - minValue)) * degAngleRange),\n\t                                         stop: (((section[sectionIndex].stop + Math.abs(minValue)) / (maxValue - minValue)) * degAngleRange),\n\t                                        color: customColorDef(section[sectionIndex].color)});\n\t                } while (0 < sectionIndex);\n\t            }\n\t\n\t            // Use a gradient for the valueColor?\n\t            isGradientVisible = false;\n\t            if (useValueGradient && valueGradient !== null) {\n\t                // force section colors off!\n\t                isSectionsVisible = false;\n\t                isGradientVisible = true;\n\t            }\n\t\n\t            // Create an image of an active led in active led buffer (activeLedBuffer)\n\t            if (drawValue) {\n\t                drawActiveLed(activeLedContext, valueColor);\n\t            }\n\t\n\t            // Create foreground in foreground buffer (foregroundBuffer)\n\t            if (drawForeground && foregroundVisible) {\n\t                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, false);\n\t            }\n\t\n\t            // Create the trend indicator buffers\n\t            if (drawTrend && trendVisible) {\n\t                trendUpBuffer = createTrendIndicator(trendSize, steelseries.TrendState.UP, trendColors);\n\t                trendSteadyBuffer = createTrendIndicator(trendSize, steelseries.TrendState.STEADY, trendColors);\n\t                trendDownBuffer = createTrendIndicator(trendSize, steelseries.TrendState.DOWN, trendColors);\n\t                trendOffBuffer = createTrendIndicator(trendSize, steelseries.TrendState.OFF, trendColors);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function (buffers) {\n\t            buffers = buffers || {};\n\t            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n\t            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n\t            var resetLed = (undefined === buffers.led ? false : buffers.led);\n\t            var resetUserLed = (undefined === buffers.userLed ? false : buffers.userLed);\n\t            var resetValue = (undefined === buffers.value ? false : buffers.value);\n\t            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\t\n\t            // Buffer for the frame\n\t            if (resetFrame) {\n\t                frameBuffer.width = size;\n\t                frameBuffer.height = size;\n\t                frameContext = frameBuffer.getContext('2d');\n\t            }\n\t\n\t            // Buffer for static background painting code\n\t            if (resetBackground) {\n\t                backgroundBuffer.width = size;\n\t                backgroundBuffer.height = size;\n\t                backgroundContext = backgroundBuffer.getContext('2d');\n\t            }\n\t\n\t            // Buffer for active bargraph led\n\t            if (resetValue) {\n\t                activeLedBuffer.width = Math.ceil(size * 0.060747);\n\t                activeLedBuffer.height = Math.ceil(size * 0.023364);\n\t                activeLedContext = activeLedBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetLed) {\n\t                // Buffer for led on painting code\n\t                ledBufferOn.width = Math.ceil(LED_SIZE);\n\t                ledBufferOn.height = Math.ceil(LED_SIZE);\n\t                ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t                // Buffer for led off painting code\n\t                ledBufferOff.width = Math.ceil(LED_SIZE);\n\t                ledBufferOff.height = Math.ceil(LED_SIZE);\n\t                ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t                // Buffer for current led painting code\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t\n\t            if (resetUserLed) {\n\t                userLedBufferOn.width = Math.ceil(LED_SIZE);\n\t                userLedBufferOn.height = Math.ceil(LED_SIZE);\n\t                userLedContextOn = userLedBufferOn.getContext('2d');\n\t\n\t                userLedBufferOff.width = Math.ceil(LED_SIZE);\n\t                userLedBufferOff.height = Math.ceil(LED_SIZE);\n\t                userLedContextOff = userLedBufferOff.getContext('2d');\n\t\n\t                // Buffer for current user led painting code\n\t                userLedBuffer = userLedBufferOff;\n\t            }\n\t\n\t            // Buffer for static foreground painting code\n\t            if (resetForeground) {\n\t                foregroundBuffer.width = size;\n\t                foregroundBuffer.height = size;\n\t                foregroundContext = foregroundBuffer.getContext('2d');\n\t            }\n\t        };\n\t\n\t        var drawBargraphTrackImage = function (ctx) {\n\t\n\t            ctx.save();\n\t\n\t            // Bargraphtrack\n\t\n\t            // Frame\n\t            ctx.save();\n\t            ctx.lineWidth = size * 0.085;\n\t            ctx.beginPath();\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(rotationOffset - 4 * RAD_FACTOR);\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.arc(centerX, centerY, imageWidth * 0.355140, 0, angleRange + 8 * RAD_FACTOR, false);\n\t            ctx.rotate(-rotationOffset);\n\t            var ledTrackFrameGradient = ctx.createLinearGradient(0, 0.107476 * imageHeight, 0, 0.897195 * imageHeight);\n\t            ledTrackFrameGradient.addColorStop(0, '#000000');\n\t            ledTrackFrameGradient.addColorStop(0.22, '#333333');\n\t            ledTrackFrameGradient.addColorStop(0.76, '#333333');\n\t            ledTrackFrameGradient.addColorStop(1, '#cccccc');\n\t            ctx.strokeStyle = ledTrackFrameGradient;\n\t            ctx.stroke();\n\t            ctx.restore();\n\t\n\t            // Main\n\t            ctx.save();\n\t            ctx.lineWidth = size * 0.075;\n\t            ctx.beginPath();\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(rotationOffset - 4 * RAD_FACTOR);\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.arc(centerX, centerY, imageWidth * 0.355140, 0, angleRange + 8 * RAD_FACTOR, false);\n\t            ctx.rotate(-rotationOffset);\n\t            var ledTrackMainGradient = ctx.createLinearGradient(0, 0.112149 * imageHeight, 0, 0.892523 * imageHeight);\n\t            ledTrackMainGradient.addColorStop(0, '#111111');\n\t            ledTrackMainGradient.addColorStop(1, '#333333');\n\t            ctx.strokeStyle = ledTrackMainGradient;\n\t            ctx.stroke();\n\t            ctx.restore();\n\t\n\t            // Draw inactive leds\n\t            var ledCenterX = (imageWidth * 0.116822 + imageWidth * 0.060747) / 2;\n\t            var ledCenterY = (imageWidth * 0.485981 + imageWidth * 0.023364) / 2;\n\t            var ledOffGradient = ctx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, 0.030373 * imageWidth);\n\t            ledOffGradient.addColorStop(0, '#3c3c3c');\n\t            ledOffGradient.addColorStop(1, '#323232');\n\t            var angle = 0;\n\t            for (angle = 0; angle <= degAngleRange; angle += 5) {\n\t                ctx.save();\n\t                ctx.translate(centerX, centerY);\n\t                ctx.rotate((angle * RAD_FACTOR) + bargraphOffset);\n\t                ctx.translate(-centerX, -centerY);\n\t                ctx.beginPath();\n\t                ctx.rect(imageWidth * 0.116822, imageWidth * 0.485981, imageWidth * 0.060747, imageWidth * 0.023364);\n\t                ctx.closePath();\n\t                ctx.fillStyle = ledOffGradient;\n\t                ctx.fill();\n\t                ctx.restore();\n\t            }\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawActiveLed = function (ctx, color) {\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t            ctx.closePath();\n\t            var ledCenterX = (ctx.canvas.width / 2);\n\t            var ledCenterY = (ctx.canvas.height / 2);\n\t            var ledGradient = mainCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, ctx.canvas.width / 2);\n\t            ledGradient.addColorStop(0, color.light.getRgbaColor());\n\t            ledGradient.addColorStop(1, color.dark.getRgbaColor());\n\t            ctx.fillStyle = ledGradient;\n\t            ctx.fill();\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawLcdText = function (ctx, value) {\n\t\n\t            ctx.save();\n\t            ctx.textAlign = 'right';\n\t            ctx.strokeStyle = lcdColor.textColor;\n\t            ctx.fillStyle = lcdColor.textColor;\n\t\n\t            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n\t                ctx.shadowColor = 'gray';\n\t                ctx.shadowOffsetX = imageWidth * 0.007;\n\t                ctx.shadowOffsetY = imageWidth * 0.007;\n\t                ctx.shadowBlur = imageWidth * 0.007;\n\t            }\n\t\n\t            if (digitalFont) {\n\t                ctx.font = lcdFont;\n\t            } else {\n\t                ctx.font = stdFont;\n\t            }\n\t            ctx.fillText(value.toFixed(lcdDecimals), lcdPosX + lcdWidth - lcdWidth * 0.05, lcdPosY + lcdHeight * 0.5 + lcdFontHeight * 0.38, lcdWidth * 0.9);\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawTickmarksImage = function (ctx, labelNumberFormat) {\n\t            var alpha = rotationOffset,      // Tracks total rotation\n\t                rotationStep = angleStep * minorTickSpacing,\n\t                textRotationAngle,\n\t                fontSize = Math.ceil(imageWidth * 0.04),\n\t                valueCounter = minValue,\n\t                majorTickCounter = maxNoOfMinorTicks - 1,\n\t                TEXT_TRANSLATE_X = imageWidth * 0.28,\n\t                TEXT_WIDTH = imageWidth * 0.1,\n\t                MAX_VALUE_ROUNDED = parseFloat(maxValue.toFixed(2)),\n\t                i;\n\t\n\t            backgroundColor.labelColor.setAlpha(1);\n\t            ctx.save();\n\t            ctx.textAlign = 'center';\n\t            ctx.textBaseline = 'middle';\n\t            ctx.font = fontSize + 'px ' + stdFontName;\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(rotationOffset);\n\t\n\t            if (gaugeType.type === 'type1' || gaugeType.type === 'type2') {\n\t                TEXT_WIDTH = imageWidth * 0.0375;\n\t            }\n\t\n\t            for (i = minValue; parseFloat(i.toFixed(2)) <= MAX_VALUE_ROUNDED; i += minorTickSpacing) {\n\t                textRotationAngle = + rotationStep + HALF_PI;\n\t                majorTickCounter++;\n\t                // Draw major tickmarks\n\t                if (majorTickCounter === maxNoOfMinorTicks) {\n\t                    ctx.save();\n\t                    ctx.translate(TEXT_TRANSLATE_X, 0);\n\t\n\t                    switch (tickLabelOrientation.type) {\n\t                    case 'horizontal':\n\t                        textRotationAngle = -alpha;\n\t                        break;\n\t\n\t                    case 'tangent':\n\t                        textRotationAngle = (alpha <= HALF_PI + PI ? PI : 0);\n\t                        break;\n\t\n\t                    case 'normal':\n\t                    /* falls through */\n\t                    default:\n\t                        textRotationAngle = HALF_PI;\n\t                        break;\n\t                    }\n\t                    ctx.rotate(textRotationAngle);\n\t\n\t                    switch (labelNumberFormat.format) {\n\t                    case 'fractional':\n\t                        ctx.fillText((valueCounter.toFixed(fractionalScaleDecimals)), 0, 0, TEXT_WIDTH);\n\t                        break;\n\t\n\t                    case 'scientific':\n\t                        ctx.fillText((valueCounter.toPrecision(2)), 0, 0, TEXT_WIDTH);\n\t                        break;\n\t\n\t                    case 'standard':\n\t                    /* falls through */\n\t                    default:\n\t                        ctx.fillText((valueCounter.toFixed(0)), 0, 0, TEXT_WIDTH);\n\t                        break;\n\t                    }\n\t                    ctx.translate(-TEXT_TRANSLATE_X, 0);\n\t                    ctx.restore();\n\t\n\t                    valueCounter += majorTickSpacing;\n\t                    majorTickCounter = 0;\n\t                    ctx.rotate(rotationStep);\n\t                    alpha += rotationStep;\n\t                    continue;\n\t                }\n\t                ctx.rotate(rotationStep);\n\t                alpha += rotationStep;\n\t            }\n\t\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.restore();\n\t        };\n\t\n\t        var blink = function (blinking) {\n\t            if (blinking) {\n\t                ledTimerId = setInterval(toggleAndRepaintLed, 1000);\n\t            } else {\n\t                clearInterval(ledTimerId);\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t        };\n\t\n\t        var blinkUser = function (blinking) {\n\t            if (blinking) {\n\t                userLedTimerId = setInterval(toggleAndRepaintUserLed, 1000);\n\t            } else {\n\t                clearInterval(userLedTimerId);\n\t                userLedBuffer = userLedBufferOff;\n\t            }\n\t        };\n\t\n\t        var toggleAndRepaintLed = function () {\n\t            if (ledVisible) {\n\t                if (ledBuffer === ledBufferOn) {\n\t                    ledBuffer = ledBufferOff;\n\t                } else {\n\t                    ledBuffer = ledBufferOn;\n\t                }\n\t                if (!repainting) {\n\t                    repainting = true;\n\t                    requestAnimFrame(self.repaint);\n\t                }\n\t            }\n\t        };\n\t\n\t        var toggleAndRepaintUserLed = function () {\n\t            if (userLedVisible) {\n\t                if (userLedBuffer === userLedBufferOn) {\n\t                    userLedBuffer = userLedBufferOff;\n\t                } else {\n\t                    userLedBuffer = userLedBufferOn;\n\t                }\n\t                if (!repainting) {\n\t                    repainting = true;\n\t                    requestAnimFrame(self.repaint);\n\t                }\n\t            }\n\t        };\n\t\n\t        //********************************* Public methods *********************************\n\t        this.setValue = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n\t            if (value !== targetValue) {\n\t                value = targetValue;\n\t                if ((value >= threshold && !ledBlinking && thresholdRising) ||\n\t                    (value <= threshold && !ledBlinking && !thresholdRising)) {\n\t                    ledBlinking = true;\n\t                    blink(ledBlinking);\n\t                    if (playAlarm) {\n\t                        audioElement.play();\n\t                    }\n\t                } else if ((value < threshold && ledBlinking && thresholdRising) ||\n\t                           (value > threshold && ledBlinking && !thresholdRising)) {\n\t                    ledBlinking = false;\n\t                    blink(ledBlinking);\n\t                    if (playAlarm) {\n\t                        audioElement.pause();\n\t                    }\n\t                }\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getValue = function () {\n\t            return value;\n\t        };\n\t\n\t        this.setValueAnimated = function (newValue, callback) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue)),\n\t                gauge = this,\n\t                time;\n\t\n\t            if (value !== targetValue) {\n\t                if (undefined !== tween && tween.isPlaying) {\n\t                    tween.stop();\n\t                }\n\t\n\t                time = fullScaleDeflectionTime * Math.abs(targetValue - value) / (maxValue - minValue);\n\t                time = Math.max(time, fullScaleDeflectionTime / 5);\n\t                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n\t                //tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, 1);\n\t                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, this.value, targetValue, 1);\n\t                tween.onMotionChanged = function (event) {\n\t                    value = event.target._pos;\n\t\n\t                    if ((value >= threshold && !ledBlinking && thresholdRising) ||\n\t                        (value <= threshold && !ledBlinking && !thresholdRising)) {\n\t                        ledBlinking = true;\n\t                        blink(ledBlinking);\n\t                        if (playAlarm) {\n\t                            audioElement.play();\n\t                        }\n\t                    } else if ((value < threshold && ledBlinking && thresholdRising) ||\n\t                               (value > threshold && ledBlinking && !thresholdRising)) {\n\t                        ledBlinking = false;\n\t                        blink(ledBlinking);\n\t                        if (playAlarm) {\n\t                            audioElement.pause();\n\t                        }\n\t                    }\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tween.onMotionFinished = callback;\n\t                }\n\t\n\t                tween.start();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers({frame: true});\n\t            frameDesign = newFrameDesign;\n\t            init({frame: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            resetBuffers({background: true,\n\t                          led: true});\n\t            backgroundColor = newBackgroundColor;\n\t            init({background: true,\n\t                  led: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setForegroundType = function (newForegroundType) {\n\t            resetBuffers({foreground: true});\n\t            foregroundType = newForegroundType;\n\t            init({foreground: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setValueColor = function (newValueColor) {\n\t            resetBuffers({value: true});\n\t            valueColor = newValueColor;\n\t            init({value: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLedColor = function (newLedColor) {\n\t            resetBuffers({led: true});\n\t            ledColor = newLedColor;\n\t            init({led: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setUserLedColor = function (newLedColor) {\n\t            resetBuffers({userLed: true});\n\t            userLedColor = newLedColor;\n\t            init({userLed: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.toggleUserLed = function () {\n\t            if (userLedBuffer === userLedBufferOn) {\n\t                userLedBuffer = userLedBufferOff;\n\t            } else {\n\t                userLedBuffer = userLedBufferOn;\n\t            }\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setUserLedOnOff = function (on) {\n\t            if (true === on) {\n\t                userLedBuffer = userLedBufferOn;\n\t            } else {\n\t                userLedBuffer = userLedBufferOff;\n\t            }\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.blinkUserLed = function (blink) {\n\t            if (blink) {\n\t                if (!userLedBlinking) {\n\t                    blinkUser(true);\n\t                    userLedBlinking = true;\n\t                }\n\t            } else {\n\t                if (userLedBlinking) {\n\t                    clearInterval(userLedTimerId);\n\t                    userLedBlinking = false;\n\t                }\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setLedVisible = function (visible) {\n\t            ledVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setUserLedVisible = function (visible) {\n\t            userLedVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdColor = function (newLcdColor) {\n\t            lcdColor = newLcdColor;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdDecimals = function (decimals) {\n\t            lcdDecimals = parseInt(decimals, 10);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setSection = function (areaSec) {\n\t            section = areaSec;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setSectionActive = function (value) {\n\t            useSectionColors = value;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setGradient = function (grad) {\n\t            valueGradient = grad;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setGradientActive = function (value) {\n\t            useValueGradient = value;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMinValue = function (value) {\n\t            minValue = value;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getMinValue = function () {\n\t            return minValue;\n\t        };\n\t\n\t        this.setMaxValue = function (value) {\n\t            maxValue = value;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getMaxValue = function () {\n\t            return maxValue;\n\t        };\n\t\n\t        this.setThreshold = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue);\n\t            threshold = targetValue;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setThresholdRising = function (rising) {\n\t            thresholdRising = !!rising;\n\t            // reset existing threshold alerts\n\t            ledBlinking = !ledBlinking;\n\t            blink(ledBlinking);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setTitleString = function (title) {\n\t            titleString = title;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setUnitString = function (unit) {\n\t            unitString = unit;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setTrend = function (newValue) {\n\t            trendIndicator = newValue;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setTrendVisible = function (visible) {\n\t            trendVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setFractionalScaleDecimals = function (decimals) {\n\t            fractionalScaleDecimals = parseInt(decimals, 10);\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t        };\n\t\n\t        this.setLabelNumberFormat = function (format) {\n\t            labelNumberFormat = format;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            var activeLedAngle = ((value - minValue) / (maxValue - minValue)) * degAngleRange,\n\t                activeLedColor,\n\t                lastActiveLedColor = valueColor,\n\t                angle, i,\n\t                currentValue,\n\t                gradRange,\n\t                fraction;\n\t\n\t            if (!initialized) {\n\t                init({frame: true,\n\t                      background: true,\n\t                      led: true,\n\t                      userLed: true,\n\t                      value: true,\n\t                      trend: true,\n\t                      foreground: true});\n\t            }\n\t\n\t            mainCtx.clearRect(0, 0, size, size);\n\t\n\t            // Draw frame image\n\t            if (frameVisible) {\n\t                mainCtx.drawImage(frameBuffer, 0, 0);\n\t            }\n\t\n\t            // Draw buffered image to visible canvas\n\t            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t\n\t            // Draw active leds\n\t            for (angle = 0; angle <= activeLedAngle; angle += 5) {\n\t                //check for LED color\n\t                activeLedColor = valueColor;\n\t                // Use a gradient for value colors?\n\t                if (isGradientVisible) {\n\t                    // Convert angle back to value\n\t                    currentValue = minValue + (angle / degAngleRange) * (maxValue - minValue);\n\t                    gradRange = valueGradient.getEnd() - valueGradient.getStart();\n\t                    fraction = currentValue / gradRange;\n\t                    fraction = Math.max(Math.min(fraction, 1), 0);\n\t                    activeLedColor = customColorDef(valueGradient.getColorAt(fraction).getRgbaColor());\n\t                } else if (isSectionsVisible) {\n\t                    for (i = 0; i < sectionAngles.length; i++) {\n\t                        if (angle >= sectionAngles[i].start && angle < sectionAngles[i].stop) {\n\t                            activeLedColor = sectionAngles[i].color;\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                // Has LED color changed? If so redraw the buffer\n\t                if (lastActiveLedColor.medium.getHexColor() !== activeLedColor.medium.getHexColor()) {\n\t                    drawActiveLed(activeLedContext, activeLedColor);\n\t                    lastActiveLedColor = activeLedColor;\n\t                }\n\t                mainCtx.save();\n\t                mainCtx.translate(centerX, centerY);\n\t                mainCtx.rotate((angle * RAD_FACTOR) + bargraphOffset);\n\t                mainCtx.translate(-centerX, -centerY);\n\t                mainCtx.drawImage(activeLedBuffer, ACTIVE_LED_POS_X, ACTIVE_LED_POS_Y);\n\t                mainCtx.restore();\n\t            }\n\t\n\t            // Draw lcd display\n\t            if (lcdVisible) {\n\t                drawLcdText(mainCtx, value);\n\t            }\n\t\n\t            // Draw led\n\t            if (ledVisible) {\n\t                mainCtx.drawImage(ledBuffer, LED_POS_X, LED_POS_Y);\n\t            }\n\t\n\t            // Draw user led\n\t            if (userLedVisible) {\n\t                mainCtx.drawImage(userLedBuffer, USER_LED_POS_X, USER_LED_POS_Y);\n\t            }\n\t\n\t            // Draw the trend indicator\n\t            if (trendVisible) {\n\t                switch (trendIndicator.state) {\n\t                case 'up':\n\t                    mainCtx.drawImage(trendUpBuffer, trendPosX, trendPosY);\n\t                    break;\n\t                case 'steady':\n\t                    mainCtx.drawImage(trendSteadyBuffer, trendPosX, trendPosY);\n\t                    break;\n\t                case 'down':\n\t                    mainCtx.drawImage(trendDownBuffer, trendPosX, trendPosY);\n\t                    break;\n\t                case 'off':\n\t                    mainCtx.drawImage(trendOffBuffer, trendPosX, trendPosY);\n\t                    break;\n\t                }\n\t            }\n\t\n\t            // Draw foreground\n\t            if (foregroundVisible) {\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var radialVertical = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var orientation = (undefined === parameters.orientation ? steelseries.Orientation.NORTH : parameters.orientation),\n\t            size = (undefined === parameters.size ? 0 : parameters.size),\n\t            minValue = (undefined === parameters.minValue ? 0 : parameters.minValue),\n\t            maxValue = (undefined === parameters.maxValue ? (minValue + 100) : parameters.maxValue),\n\t            niceScale = (undefined === parameters.niceScale ? true : parameters.niceScale),\n\t            threshold = (undefined === parameters.threshold ? (maxValue - minValue) / 2 + minValue: parameters.threshold),\n\t            section = (undefined === parameters.section ? null : parameters.section),\n\t            area = (undefined === parameters.area ? null : parameters.area),\n\t            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n\t            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            pointerType = (undefined === parameters.pointerType ? steelseries.PointerType.TYPE1 : parameters.pointerType),\n\t            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.RED : parameters.pointerColor),\n\t            knobType = (undefined === parameters.knobType ? steelseries.KnobType.STANDARD_KNOB : parameters.knobType),\n\t            knobStyle = (undefined === parameters.knobStyle ? steelseries.KnobStyle.SILVER : parameters.knobStyle),\n\t            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor),\n\t            ledVisible = (undefined === parameters.ledVisible ? true : parameters.ledVisible),\n\t            thresholdVisible = (undefined === parameters.thresholdVisible ? true : parameters.thresholdVisible),\n\t            thresholdRising = (undefined === parameters.thresholdRising ? true : parameters.thresholdRising),\n\t            minMeasuredValueVisible = (undefined === parameters.minMeasuredValueVisible ? false : parameters.minMeasuredValueVisible),\n\t            maxMeasuredValueVisible = (undefined === parameters.maxMeasuredValueVisible ? false : parameters.maxMeasuredValueVisible),\n\t            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            labelNumberFormat = (undefined === parameters.labelNumberFormat ? steelseries.LabelNumberFormat.STANDARD : parameters.labelNumberFormat),\n\t            playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),\n\t            alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),\n\t            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (size === 0) {\n\t            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        // Create audio tag for alarm sound\n\t        if (playAlarm && alarmSound !== false) {\n\t            var audioElement = doc.createElement('audio');\n\t            audioElement.setAttribute('src', alarmSound);\n\t            audioElement.setAttribute('preload', 'auto');\n\t        }\n\t        var gaugeType = steelseries.GaugeType.TYPE5;\n\t\n\t        var self = this;\n\t        var value = minValue;\n\t\n\t        // Properties\n\t        var minMeasuredValue = maxValue;\n\t        var maxMeasuredValue = minValue;\n\t        var imageWidth = size;\n\t        var imageHeight = size;\n\t\n\t        var ledBlinking = false;\n\t\n\t        var ledTimerId = 0;\n\t        var tween;\n\t        var repainting = false;\n\t\n\t        // Tickmark specific private variables\n\t        var niceMinValue = minValue;\n\t        var niceMaxValue = maxValue;\n\t        var niceRange = maxValue - minValue;\n\t        var range = niceMaxValue - niceMinValue;\n\t        var minorTickSpacing = 0;\n\t        var majorTickSpacing = 0;\n\t        var maxNoOfMinorTicks = 10;\n\t        var maxNoOfMajorTicks = 10;\n\t\n\t        var freeAreaAngle = 0;\n\t        var rotationOffset = 1.25 * PI;\n\t        var tickmarkOffset = 1.25 * PI;\n\t        var angleRange = HALF_PI;\n\t        var angleStep = angleRange / range;\n\t        var shadowOffset = imageWidth * 0.006;\n\t        var pointerOffset = imageWidth * 1.17 / 2;\n\t\n\t        var initialized = false;\n\t\n\t        var angle = rotationOffset + (value - minValue) * angleStep;\n\t\n\t        var centerX = imageWidth / 2;\n\t        var centerY = imageHeight * 0.733644;\n\t\n\t        // Misc\n\t        var ledPosX = 0.455 * imageWidth;\n\t        var ledPosY = 0.51 * imageHeight;\n\t\n\t        // Method to calculate nice values for min, max and range for the tickmarks\n\t        var calculate = function calculate() {\n\t            if (niceScale) {\n\t                niceRange = calcNiceNumber(maxValue - minValue, false);\n\t                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n\t                niceMinValue = Math.floor(minValue / majorTickSpacing) * majorTickSpacing;\n\t                niceMaxValue = Math.ceil(maxValue / majorTickSpacing) * majorTickSpacing;\n\t                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n\t                minValue = niceMinValue;\n\t                maxValue = niceMaxValue;\n\t                range = maxValue - minValue;\n\t            }\n\t            else {\n\t                niceRange = (maxValue - minValue);\n\t                niceMinValue = minValue;\n\t                niceMaxValue = maxValue;\n\t                range = niceRange;\n\t                minorTickSpacing = 1;\n\t                majorTickSpacing = 10;\n\t            }\n\t\n\t            freeAreaAngle = 0;\n\t            rotationOffset = 1.25 * PI;\n\t            tickmarkOffset = 1.25 * PI;\n\t            angleRange = HALF_PI;\n\t            angleStep = angleRange / range;\n\t\n\t            angle = rotationOffset + (value - minValue) * angleStep;\n\t        };\n\t\n\t        // **************   Buffer creation  ********************\n\t        // Buffer for the frame\n\t        var frameBuffer = createBuffer(size, size);\n\t        var frameContext = frameBuffer.getContext('2d');\n\t\n\t        // Buffer for the background\n\t        var backgroundBuffer = createBuffer(size, size);\n\t        var backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        // Buffer for led on painting code\n\t        var ledBufferOn = createBuffer(size * 0.093457, size * 0.093457);\n\t        var ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t        // Buffer for led off painting code\n\t        var ledBufferOff = createBuffer(size * 0.093457, size * 0.093457);\n\t        var ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t        // Buffer for current led painting code\n\t        var ledBuffer = ledBufferOff;\n\t\n\t        // Buffer for the minMeasuredValue indicator\n\t        var minMeasuredValueBuffer = createBuffer(Math.ceil(size * 0.028037), Math.ceil(size * 0.028037));\n\t        var minMeasuredValueCtx = minMeasuredValueBuffer.getContext('2d');\n\t\n\t        // Buffer for the maxMeasuredValue indicator\n\t        var maxMeasuredValueBuffer = createBuffer(Math.ceil(size * 0.028037), Math.ceil(size * 0.028037));\n\t        var maxMeasuredValueCtx = maxMeasuredValueBuffer.getContext('2d');\n\t\n\t        // Buffer for pointer image painting code\n\t        var pointerBuffer = createBuffer(size, size);\n\t        var pointerContext = pointerBuffer.getContext('2d');\n\t\n\t        // Buffer for static foreground painting code\n\t        var foregroundBuffer = createBuffer(size, size);\n\t        var foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        // **************   Image creation  ********************\n\t        var drawPostsImage = function (ctx) {\n\t            if ('type5' === gaugeType.type) {\n\t                ctx.save();\n\t                if (orientation.type === 'west') {\n\t                    // Min post\n\t                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.44, imageHeight * 0.80);\n\t                    // Max post\n\t                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.44, imageHeight * 0.16);\n\t                } else if (orientation.type === 'east') {\n\t                    // Min post\n\t                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.52, imageHeight * 0.80);\n\t                    // Max post\n\t                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.52, imageHeight * 0.16);\n\t                } else {\n\t                    // Min post\n\t                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.2 - imageHeight * 0.037383, imageHeight * 0.446666);\n\t                    // Max post\n\t                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.8, imageHeight * 0.446666);\n\t                }\n\t                ctx.restore();\n\t            }\n\t        };\n\t\n\t        var createThresholdImage = function () {\n\t            var thresholdBuffer = doc.createElement('canvas');\n\t            thresholdBuffer.width = Math.ceil(size * 0.046728);\n\t            thresholdBuffer.height = Math.ceil(thresholdBuffer.width * 0.9);\n\t            var thresholdCtx = thresholdBuffer.getContext('2d');\n\t\n\t            thresholdCtx.save();\n\t            var gradThreshold = thresholdCtx.createLinearGradient(0, 0.1, 0, thresholdBuffer.height * 0.9);\n\t            gradThreshold.addColorStop(0, '#520000');\n\t            gradThreshold.addColorStop(0.3, '#fc1d00');\n\t            gradThreshold.addColorStop(0.59, '#fc1d00');\n\t            gradThreshold.addColorStop(1, '#520000');\n\t            thresholdCtx.fillStyle = gradThreshold;\n\t\n\t            thresholdCtx.beginPath();\n\t            thresholdCtx.moveTo(thresholdBuffer.width * 0.5, 0.1);\n\t            thresholdCtx.lineTo(thresholdBuffer.width * 0.9, thresholdBuffer.height * 0.9);\n\t            thresholdCtx.lineTo(thresholdBuffer.width * 0.1, thresholdBuffer.height * 0.9);\n\t            thresholdCtx.lineTo(thresholdBuffer.width * 0.5, 0.1);\n\t            thresholdCtx.closePath();\n\t\n\t            thresholdCtx.fill();\n\t            thresholdCtx.strokeStyle = '#FFFFFF';\n\t            thresholdCtx.stroke();\n\t\n\t            thresholdCtx.restore();\n\t\n\t            return thresholdBuffer;\n\t        };\n\t\n\t        var drawAreaSectionImage = function (ctx, start, stop, color, filled) {\n\t            ctx.save();\n\t            ctx.strokeStyle = color;\n\t            ctx.fillStyle = color;\n\t            ctx.lineWidth = imageWidth * 0.035;\n\t            var startAngle = (angleRange / range * start - angleRange / range * minValue);\n\t            var stopAngle = startAngle + (stop - start) / (range / angleRange);\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(rotationOffset);\n\t            ctx.beginPath();\n\t            if (filled) {\n\t                ctx.moveTo(0, 0);\n\t                ctx.arc(0, 0, imageWidth * 0.365 - ctx.lineWidth / 2, startAngle, stopAngle, false);\n\t            } else {\n\t                ctx.arc(0, 0, imageWidth * 0.365, startAngle, stopAngle, false);\n\t            }\n\t            if (filled) {\n\t                ctx.moveTo(0, 0);\n\t                ctx.fill();\n\t            } else {\n\t                ctx.stroke();\n\t            }\n\t\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawTitleImage = function (ctx) {\n\t            var titleWidth, unitWidth;\n\t            ctx.save();\n\t            ctx.textAlign = 'left';\n\t            ctx.textBaseline = 'middle';\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t\n\t            ctx.font = 0.046728 * imageWidth + 'px ' + stdFontName;\n\t            titleWidth = ctx.measureText(titleString).width;\n\t            ctx.fillText(titleString, (imageWidth - titleWidth) / 2, imageHeight * 0.4, imageWidth * 0.3);\n\t            unitWidth = ctx.measureText(unitString).width;\n\t            ctx.fillText(unitString, (imageWidth - unitWidth) / 2, imageHeight * 0.47, imageWidth * 0.2);\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawTickmarksImage = function (ctx, labelNumberFormat) {\n\t            backgroundColor.labelColor.setAlpha(1);\n\t            ctx.save();\n\t\n\t            if (steelseries.Orientation.WEST === orientation) {\n\t                ctx.translate(centerX, centerX);\n\t                ctx.rotate(-HALF_PI);\n\t                ctx.translate(-centerX, -centerX);\n\t            }\n\t            if (steelseries.Orientation.EAST === orientation) {\n\t                ctx.translate(centerX, centerX);\n\t                ctx.rotate(HALF_PI);\n\t                ctx.translate(-centerX, -centerX);\n\t            }\n\t\n\t            ctx.textAlign = 'center';\n\t            ctx.textBaseline = 'middle';\n\t            var fontSize = Math.ceil(imageWidth * 0.04);\n\t            ctx.font = fontSize + 'px ' + stdFontName;\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(rotationOffset);\n\t            var rotationStep = angleStep * minorTickSpacing;\n\t            var textRotationAngle;\n\t\n\t            var valueCounter = minValue;\n\t            var majorTickCounter = maxNoOfMinorTicks - 1;\n\t\n\t            var OUTER_POINT = imageWidth * 0.44;\n\t            var MAJOR_INNER_POINT = imageWidth * 0.41;\n\t            var MED_INNER_POINT = imageWidth * 0.415;\n\t            var MINOR_INNER_POINT = imageWidth * 0.42;\n\t            var TEXT_TRANSLATE_X = imageWidth * 0.48;\n\t            var TEXT_WIDTH = imageWidth * 0.04;\n\t            var HALF_MAX_NO_OF_MINOR_TICKS = maxNoOfMinorTicks / 2;\n\t            var MAX_VALUE_ROUNDED = parseFloat(maxValue.toFixed(2));\n\t            var i;\n\t\n\t            for (i = minValue; parseFloat(i.toFixed(2)) <= MAX_VALUE_ROUNDED; i += minorTickSpacing) {\n\t                textRotationAngle = + rotationStep + HALF_PI;\n\t                majorTickCounter++;\n\t                // Draw major tickmarks\n\t                if (majorTickCounter === maxNoOfMinorTicks) {\n\t                    ctx.lineWidth = 1.5;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(OUTER_POINT, 0);\n\t                    ctx.lineTo(MAJOR_INNER_POINT, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                    ctx.save();\n\t                    ctx.translate(TEXT_TRANSLATE_X, 0);\n\t                    ctx.rotate(textRotationAngle);\n\t                    switch (labelNumberFormat.format) {\n\t                    case 'fractional':\n\t                        ctx.fillText((valueCounter.toFixed(2)), 0, 0, TEXT_WIDTH);\n\t                        break;\n\t\n\t                    case 'scientific':\n\t                        ctx.fillText((valueCounter.toPrecision(2)), 0, 0, TEXT_WIDTH);\n\t                        break;\n\t\n\t                    case 'standard':\n\t                    /* falls through */\n\t                    default:\n\t                        ctx.fillText((valueCounter.toFixed(0)), 0, 0, TEXT_WIDTH);\n\t                        break;\n\t                    }\n\t                    ctx.translate(-TEXT_TRANSLATE_X, 0);\n\t                    ctx.restore();\n\t\n\t                    valueCounter += majorTickSpacing;\n\t                    majorTickCounter = 0;\n\t                    ctx.rotate(rotationStep);\n\t                    continue;\n\t                }\n\t\n\t                // Draw tickmark every minor tickmark spacing\n\t                if (0 === maxNoOfMinorTicks % 2 && majorTickCounter === (HALF_MAX_NO_OF_MINOR_TICKS)) {\n\t                    ctx.lineWidth = 1;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(OUTER_POINT, 0);\n\t                    ctx.lineTo(MED_INNER_POINT, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                } else {\n\t                    ctx.lineWidth = 0.5;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(OUTER_POINT, 0);\n\t                    ctx.lineTo(MINOR_INNER_POINT, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                }\n\t                ctx.rotate(rotationStep);\n\t            }\n\t\n\t            /*\n\t             // Logarithmic scale\n\t             var tmp = 0.1;\n\t             var minValueLog10 = 0.1;\n\t             var maxValueLog10 = parseInt(Math.pow(10, Math.ceil(Math.log10(maxValue))));\n\t             var drawLabel = true;\n\t             angleStep = angleRange / (maxValueLog10 - minValueLog10)\n\t             for (var scaleFactor = minValueLog10 ; scaleFactor <= maxValueLog10 ; scaleFactor *= 10)\n\t             {\n\t             for (var i = parseFloat((1 * scaleFactor).toFixed(1)) ; i < parseFloat((10 * scaleFactor).toFixed(1)) ; i += scaleFactor)\n\t             {\n\t             textRotationAngle =+ rotationStep + HALF_PI;\n\t\n\t             if(drawLabel)\n\t             {\n\t             ctx.lineWidth = 1.5;\n\t             ctx.beginPath();\n\t             ctx.moveTo(imageWidth * 0.38,0);\n\t             ctx.lineTo(imageWidth * 0.35,0);\n\t             ctx.closePath();\n\t             ctx.stroke();\n\t             ctx.save();\n\t             ctx.translate(imageWidth * 0.31, 0);\n\t             ctx.rotate(textRotationAngle);\n\t             ctx.fillText(parseFloat((i).toFixed(1)), 0, 0, imageWidth * 0.0375);\n\t             ctx.translate(-imageWidth * 0.31, 0);\n\t             ctx.restore();\n\t             drawLabel = false;\n\t             }\n\t             else\n\t             {\n\t             ctx.lineWidth = 0.5;\n\t             ctx.beginPath();\n\t             ctx.moveTo(imageWidth * 0.38,0);\n\t             ctx.lineTo(imageWidth * 0.36,0);\n\t             ctx.closePath();\n\t             ctx.stroke();\n\t             }\n\t             //doc.write('log10 scale value: ' + parseFloat((i).toFixed(1)) + '<br>');\n\t             //Math.log10(parseFloat((i).toFixed(1)));\n\t\n\t             ctx.rotate(rotationStep);\n\t             }\n\t             tmp = 0.1;\n\t             drawLabel = true;\n\t             }\n\t             */\n\t\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.restore();\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        // Draw all static painting code to background\n\t        var init = function (parameters) {\n\t            parameters = parameters || {};\n\t            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n\t            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n\t            var drawLed = (undefined === parameters.led ? false : parameters.led);\n\t            var drawPointer = (undefined === parameters.pointer ? false : parameters.pointer);\n\t            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\t\n\t            initialized = true;\n\t\n\t            // Calculate the current min and max values and the range\n\t            calculate();\n\t\n\t            // Create frame in frame buffer (backgroundBuffer)\n\t            if (drawFrame && frameVisible) {\n\t                drawRadialFrameImage(frameContext, frameDesign, centerX, size / 2, imageWidth, imageHeight);\n\t            }\n\t\n\t            // Create background in background buffer (backgroundBuffer)\n\t            if (drawBackground && backgroundVisible) {\n\t                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, size / 2, imageWidth, imageHeight);\n\t            }\n\t\n\t            // Draw LED ON in ledBuffer_ON\n\t            if (drawLed) {\n\t                ledContextOn.drawImage(createLedImage(Math.ceil(size * 0.093457), 1, ledColor), 0, 0);\n\t\n\t                // Draw LED ON in ledBuffer_OFF\n\t                ledContextOff.drawImage(createLedImage(Math.ceil(size * 0.093457), 0, ledColor), 0, 0);\n\t            }\n\t\n\t            // Draw min measured value indicator in minMeasuredValueBuffer\n\t            if (minMeasuredValueVisible) {\n\t                minMeasuredValueCtx.drawImage(createMeasuredValueImage(Math.ceil(size * 0.028037), steelseries.ColorDef.BLUE.dark.getRgbaColor(), true, true), 0, 0);\n\t                minMeasuredValueCtx.restore();\n\t            }\n\t\n\t            // Draw max measured value indicator in maxMeasuredValueBuffer\n\t            if (maxMeasuredValueVisible) {\n\t                maxMeasuredValueCtx.drawImage(createMeasuredValueImage(Math.ceil(size * 0.028037), steelseries.ColorDef.RED.medium.getRgbaColor(), true), 0, 0);\n\t                maxMeasuredValueCtx.restore();\n\t            }\n\t\n\t            // Create alignment posts in background buffer (backgroundBuffer)\n\t            if (drawBackground && backgroundVisible) {\n\t                drawPostsImage(backgroundContext);\n\t\n\t                // Create section in background buffer (backgroundBuffer)\n\t                if (null !== section && 0 < section.length) {\n\t                    backgroundContext.save();\n\t                    if (steelseries.Orientation.WEST === orientation) {\n\t                        backgroundContext.translate(centerX, centerX);\n\t                        backgroundContext.rotate(-HALF_PI);\n\t                        backgroundContext.translate(-centerX, -centerX);\n\t                    } else if (steelseries.Orientation.EAST === orientation) {\n\t                        backgroundContext.translate(centerX, centerX);\n\t                        backgroundContext.rotate(HALF_PI);\n\t                        backgroundContext.translate(-centerX, -centerX);\n\t                    }\n\t                    var sectionIndex = section.length;\n\t                    do {\n\t                        sectionIndex--;\n\t                        drawAreaSectionImage(backgroundContext, section[sectionIndex].start, section[sectionIndex].stop, section[sectionIndex].color, false);\n\t                    }\n\t                    while (0 < sectionIndex);\n\t                    backgroundContext.restore();\n\t                }\n\t\n\t                // Create area in background buffer (backgroundBuffer)\n\t                if (null !== area && 0 < area.length) {\n\t                    if (steelseries.Orientation.WEST === orientation) {\n\t                        backgroundContext.translate(centerX, centerX);\n\t                        backgroundContext.rotate(-HALF_PI);\n\t                        backgroundContext.translate(-centerX, -centerX);\n\t                    }\n\t                    if (steelseries.Orientation.EAST === orientation) {\n\t                        backgroundContext.translate(centerX, centerX);\n\t                        backgroundContext.rotate(HALF_PI);\n\t                        backgroundContext.translate(-centerX, -centerX);\n\t                    }\n\t                    var areaIndex = area.length;\n\t                    do {\n\t                        areaIndex--;\n\t                        drawAreaSectionImage(backgroundContext, area[areaIndex].start, area[areaIndex].stop, area[areaIndex].color, true);\n\t                    }\n\t                    while (0 < areaIndex);\n\t                    backgroundContext.restore();\n\t                }\n\t\n\t                // Create tickmarks in background buffer (backgroundBuffer)\n\t                drawTickmarksImage(backgroundContext, labelNumberFormat);\n\t\n\t                // Create title in background buffer (backgroundBuffer)\n\t                drawTitleImage(backgroundContext);\n\t            }\n\t\n\t            // Draw threshold image to background context\n\t            if (thresholdVisible) {\n\t                backgroundContext.save();\n\t                if (steelseries.Orientation.WEST === orientation) {\n\t                    backgroundContext.translate(centerX, centerX);\n\t                    backgroundContext.rotate(-HALF_PI);\n\t                    backgroundContext.translate(-centerX, -centerX);\n\t                }\n\t                if (steelseries.Orientation.EAST === orientation) {\n\t                    backgroundContext.translate(centerX, centerX);\n\t                    backgroundContext.rotate(HALF_PI);\n\t                    backgroundContext.translate(-centerX, -centerX);\n\t                }\n\t                backgroundContext.translate(centerX, centerY);\n\t                backgroundContext.rotate(rotationOffset + (threshold - minValue) * angleStep + HALF_PI);\n\t                backgroundContext.translate(-centerX, -centerY);\n\t                backgroundContext.drawImage(createThresholdImage(), imageWidth * 0.475, imageHeight * 0.32);\n\t                backgroundContext.restore();\n\t            }\n\t\n\t            // Create pointer image in pointer buffer (contentBuffer)\n\t            if (drawPointer) {\n\t                drawPointerImage(pointerContext, imageWidth * 1.17, pointerType, pointerColor, backgroundColor.labelColor);\n\t\n\t            }\n\t\n\t            // Create foreground in foreground buffer (foregroundBuffer)\n\t            if (drawForeground && foregroundVisible) {\n\t                var knobVisible = (pointerType.type === 'type15' || pointerType.type === 'type16' ? false : true);\n\t                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, knobVisible, knobType, knobStyle, gaugeType, orientation);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function (buffers) {\n\t            buffers = buffers || {};\n\t            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n\t            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n\t            var resetLed = (undefined === buffers.led ? false : buffers.led);\n\t            var resetPointer = (undefined === buffers.pointer ? false : buffers.pointer);\n\t            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\t\n\t            if (resetFrame) {\n\t                frameBuffer.width = size;\n\t                frameBuffer.height = size;\n\t                frameContext = frameBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetBackground) {\n\t                backgroundBuffer.width = size;\n\t                backgroundBuffer.height = size;\n\t                backgroundContext = backgroundBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetLed) {\n\t                ledBufferOn.width = Math.ceil(size * 0.093457);\n\t                ledBufferOn.height = Math.ceil(size * 0.093457);\n\t                ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t                ledBufferOff.width = Math.ceil(size * 0.093457);\n\t                ledBufferOff.height = Math.ceil(size * 0.093457);\n\t                ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t                // Buffer for current led painting code\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t\n\t            if (resetPointer) {\n\t                pointerBuffer.width = size;\n\t                pointerBuffer.height = size;\n\t                pointerContext = pointerBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetForeground) {\n\t                foregroundBuffer.width = size;\n\t                foregroundBuffer.height = size;\n\t                foregroundContext = foregroundBuffer.getContext('2d');\n\t            }\n\t        };\n\t\n\t        var blink = function (blinking) {\n\t            if (blinking) {\n\t                ledTimerId = setInterval(toggleAndRepaintLed, 1000);\n\t            } else {\n\t                clearInterval(ledTimerId);\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t        };\n\t\n\t        var toggleAndRepaintLed = function () {\n\t            if (ledVisible) {\n\t                if (ledBuffer === ledBufferOn) {\n\t                    ledBuffer = ledBufferOff;\n\t                } else {\n\t                    ledBuffer = ledBufferOn;\n\t                }\n\t                if (!repainting) {\n\t                    repainting = true;\n\t                    requestAnimFrame(self.repaint);\n\t                }\n\t            }\n\t        };\n\t\n\t        //************************************ Public methods **************************************\n\t        this.setValue = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n\t            if (value !== targetValue) {\n\t                value = targetValue;\n\t\n\t                if (value > maxMeasuredValue) {\n\t                    maxMeasuredValue = value;\n\t                }\n\t                if (value < minMeasuredValue) {\n\t                    minMeasuredValue = value;\n\t                }\n\t\n\t                if ((value >= threshold && !ledBlinking && thresholdRising) ||\n\t                    (value <= threshold && !ledBlinking && !thresholdRising)) {\n\t                    ledBlinking = true;\n\t                    blink(ledBlinking);\n\t                    if (playAlarm) {\n\t                        audioElement.play();\n\t                    }\n\t                } else if ((value < threshold && ledBlinking && thresholdRising) ||\n\t                           (value > threshold && ledBlinking && !thresholdRising)) {\n\t                    ledBlinking = false;\n\t                    blink(ledBlinking);\n\t                    if (playAlarm) {\n\t                        audioElement.pause();\n\t                    }\n\t                }\n\t\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getValue = function () {\n\t            return value;\n\t        };\n\t\n\t        this.setValueAnimated = function (newValue, callback) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue)),\n\t                gauge = this,\n\t                time;\n\t\n\t            if (value !== targetValue) {\n\t                if (undefined !==  tween && tween.isPlaying) {\n\t                    tween.stop();\n\t                }\n\t\n\t                time = fullScaleDeflectionTime * Math.abs(targetValue - value) / (maxValue - minValue);\n\t                time = Math.max(time, fullScaleDeflectionTime / 5);\n\t                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n\t                //tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, 1);\n\t                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, value, targetValue, 1);\n\t                tween.onMotionChanged = function (event) {\n\t                    value = event.target._pos;\n\t\n\t                    if ((value >= threshold && !ledBlinking && thresholdRising) ||\n\t                        (value <= threshold && !ledBlinking && !thresholdRising)) {\n\t                        ledBlinking = true;\n\t                        blink(ledBlinking);\n\t                        if (playAlarm) {\n\t                            audioElement.play();\n\t                        }\n\t                    } else if ((value < threshold && ledBlinking && thresholdRising) ||\n\t                               (value > threshold && ledBlinking && !thresholdRising)) {\n\t                        ledBlinking = false;\n\t                        blink(ledBlinking);\n\t                        if (playAlarm) {\n\t                            audioElement.pause();\n\t                        }\n\t                    }\n\t\n\t                    if (value > maxMeasuredValue) {\n\t                        maxMeasuredValue = value;\n\t                    }\n\t                    if (value < minMeasuredValue) {\n\t                        minMeasuredValue = value;\n\t                    }\n\t\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tween.onMotionFinished = callback;\n\t                }\n\t\n\t                tween.start();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.resetMinMeasuredValue = function () {\n\t            minMeasuredValue = value;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.resetMaxMeasuredValue = function () {\n\t            maxMeasuredValue = value;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMinMeasuredValueVisible = function (visible) {\n\t            minMeasuredValueVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMaxMeasuredValueVisible = function (visible) {\n\t            maxMeasuredValueVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setThresholdVisible = function (visible) {\n\t            thresholdVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setThresholdRising = function (rising) {\n\t            thresholdRising = !!rising;\n\t            // reset existing threshold alerts\n\t            ledBlinking = !ledBlinking;\n\t            blink(ledBlinking);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers({frame: true});\n\t            frameDesign = newFrameDesign;\n\t            init({frame: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            resetBuffers({background: true,\n\t                          pointer: (pointerType.type === 'type2' || pointerType.type === 'type13' ? true : false)       // type2 & 13 depend on background\n\t                          });\n\t            backgroundColor = newBackgroundColor;\n\t            init({background: true,\n\t                  pointer: (pointerType.type === 'type2' || pointerType.type === 'type13' ? true : false)       // type2 & 13 depend on background\n\t                });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setForegroundType = function (newForegroundType) {\n\t            resetBuffers({foreground: true});\n\t            foregroundType = newForegroundType;\n\t            init({foreground: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerType = function (newPointerType) {\n\t            resetBuffers({pointer: true,\n\t                          foreground: true  // Required as type15 does not need a knob\n\t                         });\n\t            pointerType = newPointerType;\n\t            init({pointer: true,\n\t                  foreground: true\n\t                 });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerColor = function (newPointerColor) {\n\t            resetBuffers({pointer: true});\n\t            pointerColor = newPointerColor;\n\t            init({pointer: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLedColor = function (newLedColor) {\n\t            resetBuffers({led: true});\n\t            ledColor = newLedColor;\n\t            init({led: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLedVisible = function (visible) {\n\t            ledVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init({frame: true,\n\t                      background: true,\n\t                      led: true,\n\t                      pointer: true,\n\t                      foreground: true});\n\t            }\n\t\n\t            mainCtx.clearRect(0, 0, size, size);\n\t            mainCtx.save();\n\t\n\t            // Draw frame\n\t            if (frameVisible) {\n\t                mainCtx.drawImage(frameBuffer, 0, 0);\n\t            }\n\t\n\t            // Draw buffered image to visible canvas\n\t            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t\n\t            // Draw led\n\t            if (ledVisible) {\n\t                mainCtx.drawImage(ledBuffer, ledPosX, ledPosY);\n\t            }\n\t\n\t            if (steelseries.Orientation.WEST === orientation) {\n\t                mainCtx.translate(centerX, centerX);\n\t                mainCtx.rotate(-HALF_PI);\n\t                mainCtx.translate(-centerX, -centerX);\n\t            }\n\t            if (steelseries.Orientation.EAST === orientation) {\n\t                mainCtx.translate(centerX, centerX);\n\t                mainCtx.rotate(HALF_PI);\n\t                mainCtx.translate(-centerX, -centerX);\n\t            }\n\t\n\t            // Draw min measured value indicator\n\t            if (minMeasuredValueVisible) {\n\t                mainCtx.save();\n\t                mainCtx.translate(centerX, centerY);\n\t                mainCtx.rotate(rotationOffset + HALF_PI + (minMeasuredValue - minValue) * angleStep);\n\t                mainCtx.translate(-centerX, -centerY);\n\t                mainCtx.drawImage(minMeasuredValueBuffer, mainCtx.canvas.width * 0.4865, mainCtx.canvas.height * 0.27);\n\t                mainCtx.restore();\n\t            }\n\t\n\t            // Draw max measured value indicator\n\t            if (maxMeasuredValueVisible) {\n\t                mainCtx.save();\n\t                mainCtx.translate(centerX, centerY);\n\t                mainCtx.rotate(rotationOffset + HALF_PI + (maxMeasuredValue - minValue) * angleStep);\n\t                mainCtx.translate(-centerX, -centerY);\n\t                mainCtx.drawImage(maxMeasuredValueBuffer, mainCtx.canvas.width * 0.4865, mainCtx.canvas.height * 0.27);\n\t                mainCtx.restore();\n\t            }\n\t\n\t            angle = rotationOffset + HALF_PI + (value - minValue) * angleStep;\n\t\n\t            // Define rotation center\n\t            mainCtx.save();\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate(angle);\n\t            // Set the pointer shadow params\n\t            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\t            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\t            mainCtx.shadowBlur = shadowOffset * 2;\n\t            // Draw pointer\n\t            mainCtx.translate(-pointerOffset, -pointerOffset);\n\t            mainCtx.drawImage(pointerBuffer, 0, 0);\n\t            // Undo the translations & shadow settings\n\t            mainCtx.restore();\n\t\n\t            // Draw foreground\n\t            if (foregroundVisible) {\n\t                if (steelseries.Orientation.WEST === orientation) {\n\t                    mainCtx.translate(centerX, centerX);\n\t                    mainCtx.rotate(HALF_PI);\n\t                    mainCtx.translate(-centerX, -centerX);\n\t                } else if (steelseries.Orientation.EAST === orientation) {\n\t                    mainCtx.translate(centerX, centerX);\n\t                    mainCtx.rotate(-HALF_PI);\n\t                    mainCtx.translate(-centerX, -centerX);\n\t                }\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t            mainCtx.restore();\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var linear = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var gaugeType = (undefined === parameters.gaugeType ? steelseries.GaugeType.TYPE1 : parameters.gaugeType),\n\t            width = (undefined === parameters.width ? 0 : parameters.width),\n\t            height = (undefined === parameters.height ? 0 : parameters.height),\n\t            minValue = (undefined === parameters.minValue ? 0 : parameters.minValue),\n\t            maxValue = (undefined === parameters.maxValue ? (minValue + 100) : parameters.maxValue),\n\t            niceScale = (undefined === parameters.niceScale ? true : parameters.niceScale),\n\t            threshold = (undefined === parameters.threshold ? (maxValue - minValue) / 2 + minValue: parameters.threshold),\n\t            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n\t            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            valueColor = (undefined === parameters.valueColor ? steelseries.ColorDef.RED : parameters.valueColor),\n\t            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n\t            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n\t            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n\t            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n\t            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor),\n\t            ledVisible = (undefined === parameters.ledVisible ? true : parameters.ledVisible),\n\t            thresholdVisible = (undefined === parameters.thresholdVisible ? true : parameters.thresholdVisible),\n\t            thresholdRising = (undefined === parameters.thresholdRising ? true : parameters.thresholdRising),\n\t            minMeasuredValueVisible = (undefined === parameters.minMeasuredValueVisible ? false : parameters.minMeasuredValueVisible),\n\t            maxMeasuredValueVisible = (undefined === parameters.maxMeasuredValueVisible ? false : parameters.maxMeasuredValueVisible),\n\t            labelNumberFormat = (undefined === parameters.labelNumberFormat ? steelseries.LabelNumberFormat.STANDARD : parameters.labelNumberFormat),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),\n\t            alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),\n\t            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (width === 0) {\n\t            width = mainCtx.canvas.width;\n\t        }\n\t        if (height === 0) {\n\t            height = mainCtx.canvas.height;\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = width;\n\t        mainCtx.canvas.height = height;\n\t\n\t        var imageWidth = width;\n\t        var imageHeight = height;\n\t\n\t        // Create audio tag for alarm sound\n\t        if (playAlarm && alarmSound !== false) {\n\t            var audioElement = doc.createElement('audio');\n\t            audioElement.setAttribute('src', alarmSound);\n\t            //audioElement.setAttribute('src', 'js/alarm.mp3');\n\t            audioElement.setAttribute('preload', 'auto');\n\t        }\n\t\n\t        var self = this;\n\t        var value = minValue;\n\t\n\t        // Properties\n\t        var minMeasuredValue = maxValue;\n\t        var maxMeasuredValue = minValue;\n\t\n\t        // Check gaugeType is 1 or 2\n\t        if (gaugeType.type !== 'type1' && gaugeType.type !== 'type2') {\n\t            gaugeType = steelseries.GaugeType.TYPE1;\n\t        }\n\t\n\t        var tween;\n\t        var ledBlinking = false;\n\t        var repainting = false;\n\t\n\t        var ledTimerId = 0;\n\t\n\t        var vertical = width <= height;\n\t\n\t        // Constants\n\t        var ledPosX;\n\t        var ledPosY;\n\t        var ledSize = Math.round((vertical ? height : width) * 0.05);\n\t        var minMaxIndSize = Math.round((vertical ? width : height) * 0.05);\n\t        var stdFont;\n\t        var lcdFont;\n\t\n\t        // Misc\n\t        if (vertical) {\n\t            ledPosX = imageWidth / 2 - ledSize / 2;\n\t            ledPosY = (gaugeType.type === 'type1' ? 0.053 : 0.038) * imageHeight;\n\t            stdFont = Math.floor(imageHeight / 22) + 'px ' + stdFontName;\n\t            lcdFont = Math.floor(imageHeight / 22) + 'px ' + lcdFontName;\n\t        } else {\n\t            ledPosX = 0.89 * imageWidth;\n\t            ledPosY = imageHeight / 2 - ledSize / 2;\n\t            stdFont = Math.floor(imageHeight / 10) + 'px ' + stdFontName;\n\t            lcdFont = Math.floor(imageHeight / 10) + 'px ' + lcdFontName;\n\t        }\n\t\n\t        var initialized = false;\n\t\n\t        // Tickmark specific private variables\n\t        var niceMinValue = minValue;\n\t        var niceMaxValue = maxValue;\n\t        var niceRange = maxValue - minValue;\n\t        var range = niceMaxValue - niceMinValue;\n\t        var minorTickSpacing = 0;\n\t        var majorTickSpacing = 0;\n\t        var maxNoOfMinorTicks = 10;\n\t        var maxNoOfMajorTicks = 10;\n\t\n\t        // Method to calculate nice values for min, max and range for the tickmarks\n\t        var calculate = function calculate() {\n\t            if (niceScale) {\n\t                niceRange = calcNiceNumber(maxValue - minValue, false);\n\t                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n\t                niceMinValue = Math.floor(minValue / majorTickSpacing) * majorTickSpacing;\n\t                niceMaxValue = Math.ceil(maxValue / majorTickSpacing) * majorTickSpacing;\n\t                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n\t                minValue = niceMinValue;\n\t                maxValue = niceMaxValue;\n\t                range = maxValue - minValue;\n\t            } else {\n\t                niceRange = (maxValue - minValue);\n\t                niceMinValue = minValue;\n\t                niceMaxValue = maxValue;\n\t                range = niceRange;\n\t                minorTickSpacing = 1;\n\t                majorTickSpacing = 10;\n\t            }\n\t        };\n\t\n\t        // **************   Buffer creation  ********************\n\t        // Buffer for the frame\n\t        var frameBuffer = createBuffer(width, height);\n\t        var frameContext = frameBuffer.getContext('2d');\n\t\n\t        // Buffer for the background\n\t        var backgroundBuffer = createBuffer(width, height);\n\t        var backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        var lcdBuffer;\n\t\n\t        // Buffer for led on painting code\n\t        var ledBufferOn = createBuffer(ledSize, ledSize);\n\t        var ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t        // Buffer for led off painting code\n\t        var ledBufferOff = createBuffer(ledSize, ledSize);\n\t        var ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t        // Buffer for current led painting code\n\t        var ledBuffer = ledBufferOff;\n\t\n\t        // Buffer for the minMeasuredValue indicator\n\t        var minMeasuredValueBuffer = createBuffer(minMaxIndSize, minMaxIndSize);\n\t        var minMeasuredValueCtx = minMeasuredValueBuffer.getContext('2d');\n\t\n\t        // Buffer for the maxMeasuredValue indicator\n\t        var maxMeasuredValueBuffer = createBuffer(minMaxIndSize, minMaxIndSize);\n\t        var maxMeasuredValueCtx = maxMeasuredValueBuffer.getContext('2d');\n\t\n\t        // Buffer for static foreground painting code\n\t        var foregroundBuffer = createBuffer(width, height);\n\t        var foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        // **************   Image creation  ********************\n\t        var drawLcdText = function (ctx, value, vertical) {\n\t            ctx.save();\n\t            ctx.textAlign = 'right';\n\t            ctx.textBaseline = 'middle';\n\t            ctx.strokeStyle = lcdColor.textColor;\n\t            ctx.fillStyle = lcdColor.textColor;\n\t\n\t            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n\t                ctx.shadowColor = 'gray';\n\t                if (vertical) {\n\t                    ctx.shadowOffsetX = imageHeight * 0.003;\n\t                    ctx.shadowOffsetY = imageHeight * 0.003;\n\t                    ctx.shadowBlur = imageHeight * 0.004;\n\t                } else {\n\t                    ctx.shadowOffsetX = imageHeight * 0.007;\n\t                    ctx.shadowOffsetY = imageHeight * 0.007;\n\t                    ctx.shadowBlur = imageHeight * 0.009;\n\t                }\n\t            }\n\t\n\t            var lcdTextX;\n\t            var lcdTextY;\n\t            var lcdTextWidth;\n\t\n\t            if (digitalFont) {\n\t                ctx.font = lcdFont;\n\t            } else {\n\t                ctx.font = stdFont;\n\t            }\n\t\n\t            if (vertical) {\n\t                lcdTextX = (imageWidth - (imageWidth * 0.571428)) / 2  + imageWidth * 0.571428 - 2;\n\t                lcdTextY = imageHeight * 0.88 + 1 + (imageHeight * 0.055 - 2) / 2;\n\t                lcdTextWidth = imageWidth * 0.7 - 2;\n\t            } else {\n\t                lcdTextX = (imageWidth * 0.695) + imageWidth * 0.18 - 2;\n\t                lcdTextY = (imageHeight * 0.22) + 1 + (imageHeight * 0.15 - 2) / 2;\n\t                lcdTextWidth = imageHeight * 0.22 - 2;\n\t            }\n\t\n\t            ctx.fillText(value.toFixed(lcdDecimals), lcdTextX, lcdTextY, lcdTextWidth);\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var createThresholdImage = function (vertical) {\n\t            var thresholdBuffer = doc.createElement('canvas');\n\t            var thresholdCtx = thresholdBuffer.getContext('2d');\n\t            thresholdBuffer.height = thresholdBuffer.width = minMaxIndSize;\n\t\n\t            thresholdCtx.save();\n\t            var gradThreshold = thresholdCtx.createLinearGradient(0, 0.1, 0, thresholdBuffer.height * 0.9);\n\t            gradThreshold.addColorStop(0, '#520000');\n\t            gradThreshold.addColorStop(0.3, '#fc1d00');\n\t            gradThreshold.addColorStop(0.59, '#fc1d00');\n\t            gradThreshold.addColorStop(1, '#520000');\n\t            thresholdCtx.fillStyle = gradThreshold;\n\t\n\t            if (vertical) {\n\t                thresholdCtx.beginPath();\n\t                thresholdCtx.moveTo(0.1, thresholdBuffer.height * 0.5);\n\t                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, 0.1);\n\t                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, thresholdBuffer.height * 0.9);\n\t                thresholdCtx.closePath();\n\t            } else {\n\t                thresholdCtx.beginPath();\n\t                thresholdCtx.moveTo(0.1, 0.1);\n\t                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, 0.1);\n\t                thresholdCtx.lineTo(thresholdBuffer.width * 0.5, thresholdBuffer.height * 0.9);\n\t                thresholdCtx.closePath();\n\t            }\n\t\n\t            thresholdCtx.fill();\n\t            thresholdCtx.strokeStyle = '#FFFFFF';\n\t            thresholdCtx.stroke();\n\t\n\t            thresholdCtx.restore();\n\t\n\t            return thresholdBuffer;\n\t        };\n\t\n\t        var drawTickmarksImage = function (ctx, labelNumberFormat, vertical) {\n\t            backgroundColor.labelColor.setAlpha(1);\n\t            ctx.save();\n\t            ctx.textBaseline = 'middle';\n\t            var TEXT_WIDTH = imageWidth * 0.1;\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t\n\t            var valueCounter = minValue;\n\t            var majorTickCounter = maxNoOfMinorTicks - 1;\n\t            var tickCounter;\n\t            var currentPos;\n\t            var scaleBoundsX;\n\t            var scaleBoundsY;\n\t            var scaleBoundsW;\n\t            var scaleBoundsH;\n\t            var tickSpaceScaling = 1;\n\t\n\t            var minorTickStart;\n\t            var minorTickStop;\n\t            var mediumTickStart;\n\t            var mediumTickStop;\n\t            var majorTickStart;\n\t            var majorTickStop;\n\t            if (vertical) {\n\t                minorTickStart = (0.34 * imageWidth);\n\t                minorTickStop = (0.36 * imageWidth);\n\t                mediumTickStart = (0.33 * imageWidth);\n\t                mediumTickStop = (0.36 * imageWidth);\n\t                majorTickStart = (0.32 * imageWidth);\n\t                majorTickStop = (0.36 * imageWidth);\n\t                ctx.textAlign = 'right';\n\t                scaleBoundsX = 0;\n\t                scaleBoundsY = imageHeight * 0.128640;\n\t                scaleBoundsW = 0;\n\t                if (gaugeType.type === 'type1') {\n\t                    scaleBoundsH = (imageHeight * 0.856796 - imageHeight * 0.128640);\n\t                } else {\n\t                    scaleBoundsH = (imageHeight * 0.7475 - imageHeight * 0.128640);\n\t                }\n\t                tickSpaceScaling = scaleBoundsH / (maxValue - minValue);\n\t            } else {\n\t                minorTickStart = (0.65 * imageHeight);\n\t                minorTickStop = (0.63 * imageHeight);\n\t                mediumTickStart = (0.66 * imageHeight);\n\t                mediumTickStop = (0.63 * imageHeight);\n\t                majorTickStart = (0.67 * imageHeight);\n\t                majorTickStop = (0.63 * imageHeight);\n\t                ctx.textAlign = 'center';\n\t                scaleBoundsY = 0;\n\t                if (gaugeType.type === 'type1') {\n\t                    scaleBoundsX = imageWidth * 0.142857;\n\t                    scaleBoundsW = (imageWidth * 0.871012 - scaleBoundsX);\n\t                } else {\n\t                    scaleBoundsX = imageWidth * 0.19857;\n\t                    scaleBoundsW = (imageWidth * 0.82 - scaleBoundsX);\n\t                }\n\t                scaleBoundsH = 0;\n\t                tickSpaceScaling = scaleBoundsW / (maxValue - minValue);\n\t            }\n\t\n\t            var labelCounter;\n\t            for (labelCounter = minValue, tickCounter = 0; labelCounter <= maxValue; labelCounter += minorTickSpacing, tickCounter += minorTickSpacing) {\n\t\n\t                // Calculate the bounds of the scaling\n\t                if (vertical) {\n\t                    currentPos = scaleBoundsY + scaleBoundsH - tickCounter * tickSpaceScaling;\n\t                } else {\n\t                    currentPos = scaleBoundsX + tickCounter * tickSpaceScaling;\n\t                }\n\t\n\t                majorTickCounter++;\n\t\n\t                // Draw tickmark every major tickmark spacing\n\t                if (majorTickCounter === maxNoOfMinorTicks) {\n\t\n\t                    // Draw the major tickmarks\n\t                    ctx.lineWidth = 1.5;\n\t                    drawLinearTicks(ctx, majorTickStart, majorTickStop, currentPos, vertical);\n\t\n\t                    // Draw the standard tickmark labels\n\t                    if (vertical) {\n\t                        // Vertical orientation\n\t                        switch (labelNumberFormat.format) {\n\t                        case 'fractional':\n\t                            ctx.fillText((valueCounter.toFixed(2)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n\t                            break;\n\t\n\t                        case 'scientific':\n\t                            ctx.fillText((valueCounter.toPrecision(2)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n\t                            break;\n\t\n\t                        case 'standard':\n\t                        /* falls through */\n\t                        default:\n\t                            ctx.fillText((valueCounter.toFixed(0)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n\t                            break;\n\t                        }\n\t                    } else {\n\t                        // Horizontal orientation\n\t                        switch (labelNumberFormat.format) {\n\t                        case 'fractional':\n\t                            ctx.fillText((valueCounter.toFixed(2)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n\t                            break;\n\t\n\t                        case 'scientific':\n\t                            ctx.fillText((valueCounter.toPrecision(2)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n\t                            break;\n\t\n\t                        case 'standard':\n\t                        /* falls through */\n\t                        default:\n\t                            ctx.fillText((valueCounter.toFixed(0)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n\t                            break;\n\t                        }\n\t                    }\n\t\n\t                    valueCounter += majorTickSpacing;\n\t                    majorTickCounter = 0;\n\t                    continue;\n\t                }\n\t\n\t                // Draw tickmark every minor tickmark spacing\n\t                if (0 === maxNoOfMinorTicks % 2 && majorTickCounter === (maxNoOfMinorTicks / 2)) {\n\t                    ctx.lineWidth = 1;\n\t                    drawLinearTicks(ctx, mediumTickStart, mediumTickStop, currentPos, vertical);\n\t                } else {\n\t                    ctx.lineWidth = 0.5;\n\t                    drawLinearTicks(ctx, minorTickStart, minorTickStop, currentPos, vertical);\n\t                }\n\t            }\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawLinearTicks = function (ctx, tickStart, tickStop, currentPos, vertical) {\n\t            if (vertical) {\n\t                // Vertical orientation\n\t                ctx.beginPath();\n\t                ctx.moveTo(tickStart, currentPos);\n\t                ctx.lineTo(tickStop, currentPos);\n\t                ctx.closePath();\n\t                ctx.stroke();\n\t            } else {\n\t                // Horizontal orientation\n\t                ctx.beginPath();\n\t                ctx.moveTo(currentPos, tickStart);\n\t                ctx.lineTo(currentPos, tickStop);\n\t                ctx.closePath();\n\t                ctx.stroke();\n\t            }\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        var init = function (parameters) {\n\t            parameters = parameters || {};\n\t            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n\t            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n\t            var drawLed = (undefined === parameters.led ? false : parameters.led);\n\t            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\t\n\t            var yOffset;\n\t            var yRange;\n\t            var valuePos;\n\t\n\t            initialized = true;\n\t\n\t            // Calculate the current min and max values and the range\n\t            calculate();\n\t\n\t            // Create frame in frame buffer (backgroundBuffer)\n\t            if (drawFrame && frameVisible) {\n\t                drawLinearFrameImage(frameContext, frameDesign, imageWidth, imageHeight, vertical);\n\t            }\n\t\n\t            // Create background in background buffer (backgroundBuffer)\n\t            if (drawBackground && backgroundVisible) {\n\t                drawLinearBackgroundImage(backgroundContext, backgroundColor, imageWidth, imageHeight, vertical);\n\t            }\n\t\n\t            // draw Thermometer outline\n\t            if (drawBackground && gaugeType.type === 'type2') {\n\t                drawBackgroundImage(backgroundContext);\n\t            }\n\t\n\t            if (drawLed) {\n\t                if (vertical) {\n\t                    // Draw LED ON in ledBuffer_ON\n\t                    ledContextOn.drawImage(createLedImage(ledSize, 1, ledColor), 0, 0);\n\t\n\t                    // Draw LED ON in ledBuffer_OFF\n\t                    ledContextOff.drawImage(createLedImage(ledSize, 0, ledColor), 0, 0);\n\t                } else {\n\t                    // Draw LED ON in ledBuffer_ON\n\t                    ledContextOn.drawImage(createLedImage(ledSize, 1, ledColor), 0, 0);\n\t\n\t                    // Draw LED ON in ledBuffer_OFF\n\t                    ledContextOff.drawImage(createLedImage(ledSize, 0, ledColor), 0, 0);\n\t                }\n\t            }\n\t\n\t            // Draw min measured value indicator in minMeasuredValueBuffer\n\t            if (minMeasuredValueVisible) {\n\t                if (vertical) {\n\t                    minMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.BLUE.dark.getRgbaColor(), false, vertical), 0, 0);\n\t                } else {\n\t                    minMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.BLUE.dark.getRgbaColor(), false, vertical), 0, 0);\n\t                }\n\t            }\n\t\n\t            // Draw max measured value indicator in maxMeasuredValueBuffer\n\t            if (maxMeasuredValueVisible) {\n\t                if (vertical) {\n\t                    maxMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.RED.medium.getRgbaColor(), false, vertical), 0, 0);\n\t                } else {\n\t                    maxMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.RED.medium.getRgbaColor(), false, vertical), 0, 0);\n\t                }\n\t            }\n\t\n\t            // Create alignment posts in background buffer (backgroundBuffer)\n\t            if (drawBackground && backgroundVisible) {\n\t\n\t                // Create tickmarks in background buffer (backgroundBuffer)\n\t                drawTickmarksImage(backgroundContext, labelNumberFormat, vertical);\n\t\n\t                // Create title in background buffer (backgroundBuffer)\n\t                if (vertical) {\n\t                    drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, vertical, null, lcdVisible, gaugeType);\n\t                } else {\n\t                    drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, vertical, null, lcdVisible, gaugeType);\n\t                }\n\t            }\n\t\n\t            // Draw threshold image to background context\n\t            if (drawBackground && thresholdVisible) {\n\t                backgroundContext.save();\n\t                if (vertical) {\n\t                    // Vertical orientation\n\t                    yOffset = (gaugeType.type === 'type1' ? 0.856796 : 0.7475);\n\t                    yRange = yOffset - 0.128640;\n\t                    valuePos = imageHeight * yOffset - (imageHeight * yRange) * (threshold - minValue) / (maxValue - minValue);\n\t                    backgroundContext.translate(imageWidth * 0.365, valuePos - minMaxIndSize / 2);\n\t                } else {\n\t                    // Horizontal orientation\n\t                    yOffset = (gaugeType.type === 'type1' ? 0.871012 : 0.82);\n\t                    yRange = yOffset - (gaugeType.type === 'type1' ? 0.142857 : 0.19857);\n\t                    valuePos = imageWidth * yRange * (threshold - minValue) / (maxValue - minValue);\n\t                    backgroundContext.translate(imageWidth * (gaugeType.type === 'type1' ? 0.142857 : 0.19857) - minMaxIndSize / 2 + valuePos, imageHeight * 0.58);\n\t                }\n\t                backgroundContext.drawImage(createThresholdImage(vertical), 0, 0);\n\t                backgroundContext.restore();\n\t            }\n\t\n\t            // Create lcd background if selected in background buffer (backgroundBuffer)\n\t            if (drawBackground && lcdVisible) {\n\t                if (vertical) {\n\t                    lcdBuffer = createLcdBackgroundImage(imageWidth * 0.571428, imageHeight * 0.055, lcdColor);\n\t                    backgroundContext.drawImage(lcdBuffer, ((imageWidth - (imageWidth * 0.571428)) / 2), imageHeight * 0.88);\n\t                } else {\n\t                    lcdBuffer = createLcdBackgroundImage(imageWidth * 0.18, imageHeight * 0.15, lcdColor);\n\t                    backgroundContext.drawImage(lcdBuffer, imageWidth * 0.695, imageHeight * 0.22);\n\t                }\n\t            }\n\t\n\t            // add thermometer stem foreground\n\t            if (drawForeground && gaugeType.type === 'type2') {\n\t                drawForegroundImage(foregroundContext);\n\t            }\n\t\n\t            // Create foreground in foreground buffer (foregroundBuffer)\n\t            if (drawForeground && foregroundVisible) {\n\t                drawLinearForegroundImage(foregroundContext, imageWidth, imageHeight, vertical, false);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function (buffers) {\n\t            buffers = buffers || {};\n\t            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n\t            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n\t            var resetLed = (undefined === buffers.led ? false : buffers.led);\n\t            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\t\n\t            if (resetFrame) {\n\t                frameBuffer.width = width;\n\t                frameBuffer.height = height;\n\t                frameContext = frameBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetBackground) {\n\t                backgroundBuffer.width = width;\n\t                backgroundBuffer.height = height;\n\t                backgroundContext = backgroundBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetLed) {\n\t                ledBufferOn.width = Math.ceil(width * 0.093457);\n\t                ledBufferOn.height = Math.ceil(height * 0.093457);\n\t                ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t                ledBufferOff.width = Math.ceil(width * 0.093457);\n\t                ledBufferOff.height = Math.ceil(height * 0.093457);\n\t                ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t                // Buffer for current led painting code\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t\n\t            if (resetForeground) {\n\t                foregroundBuffer.width = width;\n\t                foregroundBuffer.height = height;\n\t                foregroundContext = foregroundBuffer.getContext('2d');\n\t            }\n\t        };\n\t\n\t        var blink = function (blinking) {\n\t            if (blinking) {\n\t                ledTimerId = setInterval(toggleAndRepaintLed, 1000);\n\t            } else {\n\t                clearInterval(ledTimerId);\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t        };\n\t\n\t        var toggleAndRepaintLed = function () {\n\t            if (ledVisible) {\n\t                if (ledBuffer === ledBufferOn) {\n\t                    ledBuffer = ledBufferOff;\n\t                } else {\n\t                    ledBuffer = ledBufferOn;\n\t                }\n\t                if (!repainting) {\n\t                    repainting = true;\n\t                    requestAnimFrame(self.repaint);\n\t                }\n\t            }\n\t        };\n\t\n\t        var drawValue = function (ctx, imageWidth, imageHeight) {\n\t            var top; // position of max value\n\t            var bottom; // position of min value\n\t            var labelColor = backgroundColor.labelColor;\n\t            var fullSize;\n\t            var valueSize, valueTop;\n\t            var valueStartX, valueStartY, valueStopX, valueStopY;\n\t            var valueBackgroundStartX, valueBackgroundStartY, valueBackgroundStopX, valueBackgroundStopY;\n\t            var valueBorderStartX, valueBorderStartY, valueBorderStopX, valueBorderStopY;\n\t            var valueForegroundStartX, valueForegroundStartY, valueForegroundStopX, valueForegroundStopY;\n\t\n\t            // Orientation dependend definitions\n\t            if (vertical) {\n\t                // Vertical orientation\n\t                top =  imageHeight * 0.128640; // position of max value\n\t                if (gaugeType.type === 'type1') {\n\t                    bottom = imageHeight * 0.856796; // position of min value\n\t                } else {\n\t                    bottom = imageHeight * 0.7475;\n\t                }\n\t                fullSize = bottom - top;\n\t                valueSize = fullSize * (value - minValue) / (maxValue - minValue);\n\t                valueTop = bottom - valueSize;\n\t                valueBackgroundStartX = 0;\n\t                valueBackgroundStartY = top;\n\t                valueBackgroundStopX = 0;\n\t                valueBackgroundStopY = bottom;\n\t            } else {\n\t                // Horizontal orientation\n\t                if (gaugeType.type === 'type1') {\n\t                    top = imageWidth * 0.871012; // position of max value\n\t                    bottom = imageWidth * 0.142857; // position of min value\n\t                } else {\n\t                    top = imageWidth * 0.82; // position of max value\n\t                    bottom = imageWidth * 0.19857; // position of min value\n\t                }\n\t                fullSize = top - bottom;\n\t                valueSize = fullSize * (value - minValue) / (maxValue - minValue);\n\t                valueTop = bottom;\n\t                valueBackgroundStartX = top;\n\t                valueBackgroundStartY = 0;\n\t                valueBackgroundStopX = bottom;\n\t                valueBackgroundStopY = 0;\n\t            }\n\t            if (gaugeType.type === 'type1') {\n\t                var darker = (backgroundColor === steelseries.BackgroundColor.CARBON ||\n\t                              backgroundColor === steelseries.BackgroundColor.PUNCHED_SHEET ||\n\t                              backgroundColor === steelseries.BackgroundColor.STAINLESS ||\n\t                              backgroundColor === steelseries.BackgroundColor.BRUSHED_STAINLESS ||\n\t                              backgroundColor === steelseries.BackgroundColor.TURNED) ? 0.3 : 0;\n\t                var valueBackgroundTrackGradient = ctx.createLinearGradient(valueBackgroundStartX, valueBackgroundStartY, valueBackgroundStopX, valueBackgroundStopY);\n\t                labelColor.setAlpha(0.05 + darker);\n\t                valueBackgroundTrackGradient.addColorStop(0, labelColor.getRgbaColor());\n\t                labelColor.setAlpha(0.15 + darker);\n\t                valueBackgroundTrackGradient.addColorStop(0.48, labelColor.getRgbaColor());\n\t                labelColor.setAlpha(0.15 + darker);\n\t                valueBackgroundTrackGradient.addColorStop(0.49, labelColor.getRgbaColor());\n\t                labelColor.setAlpha(0.05 + darker);\n\t                valueBackgroundTrackGradient.addColorStop(1, labelColor.getRgbaColor());\n\t                ctx.fillStyle = valueBackgroundTrackGradient;\n\t\n\t                if (vertical) {\n\t                    ctx.fillRect(imageWidth * 0.435714, top, imageWidth * 0.142857, fullSize);\n\t                } else {\n\t                    ctx.fillRect(imageWidth * 0.142857, imageHeight * 0.435714, fullSize, imageHeight * 0.142857);\n\t                }\n\t\n\t                if (vertical) {\n\t                    // Vertical orientation\n\t                    valueBorderStartX = 0;\n\t                    valueBorderStartY = top;\n\t                    valueBorderStopX = 0;\n\t                    valueBorderStopY = top + fullSize;\n\t                } else {\n\t                    // Horizontal orientation\n\t                    valueBorderStartX = imageWidth * 0.142857 + fullSize;\n\t                    valueBorderStartY = 0;\n\t                    valueBorderStopX = imageWidth * 0.142857;\n\t                    valueBorderStopY = 0;\n\t                }\n\t                var valueBorderGradient = ctx.createLinearGradient(valueBorderStartX, valueBorderStartY, valueBorderStopX, valueBorderStopY);\n\t                labelColor.setAlpha(0.3 + darker);\n\t                valueBorderGradient.addColorStop(0, labelColor.getRgbaColor());\n\t                labelColor.setAlpha(0.69);\n\t                valueBorderGradient.addColorStop(0.48, labelColor.getRgbaColor());\n\t                labelColor.setAlpha(0.7);\n\t                valueBorderGradient.addColorStop(0.49, labelColor.getRgbaColor());\n\t                labelColor.setAlpha(0.4);\n\t                valueBorderGradient.addColorStop(1, labelColor.getRgbaColor());\n\t                ctx.fillStyle = valueBorderGradient;\n\t                if (vertical) {\n\t                    ctx.fillRect(imageWidth * 0.435714, top, imageWidth * 0.007142, fullSize);\n\t                    ctx.fillRect(imageWidth * 0.571428, top, imageWidth * 0.007142, fullSize);\n\t                } else {\n\t                    ctx.fillRect(imageWidth * 0.142857, imageHeight * 0.435714, fullSize, imageHeight * 0.007142);\n\t                    ctx.fillRect(imageWidth * 0.142857, imageHeight * 0.571428, fullSize, imageHeight * 0.007142);\n\t                }\n\t            }\n\t            if (vertical) {\n\t                // Vertical orientation\n\t                if (gaugeType.type === 'type1') {\n\t                    valueStartX = imageWidth * 0.45;\n\t                    valueStartY = 0;\n\t                    valueStopX = imageWidth * 0.45 + imageWidth * 0.114285;\n\t                    valueStopY = 0;\n\t                } else {\n\t                    valueStartX = imageWidth / 2 - imageHeight * 0.0486 / 2;\n\t                    valueStartY = 0;\n\t                    valueStopX = valueStartX + imageHeight * 0.053;\n\t                    valueStopY = 0;\n\t                }\n\t            } else {\n\t                // Horizontal orientation\n\t                if (gaugeType.type === 'type1') {\n\t                    valueStartX = 0;\n\t                    valueStartY = imageHeight * 0.45;\n\t                    valueStopX = 0;\n\t                    valueStopY = imageHeight * 0.45 + imageHeight * 0.114285;\n\t                } else {\n\t                    valueStartX = 0;\n\t                    valueStartY = imageHeight / 2 - imageWidth * 0.0250;\n\t                    valueStopX = 0;\n\t                    valueStopY = valueStartY + imageWidth * 0.053;\n\t                }\n\t            }\n\t\n\t            var valueBackgroundGradient = ctx.createLinearGradient(valueStartX, valueStartY, valueStopX, valueStopY);\n\t            valueBackgroundGradient.addColorStop(0, valueColor.medium.getRgbaColor());\n\t            valueBackgroundGradient.addColorStop(1, valueColor.light.getRgbaColor());\n\t            ctx.fillStyle = valueBackgroundGradient;\n\t            var thermoTweak = (gaugeType.type === 'type1' ? 0 : (vertical ? imageHeight * 0.05 : imageWidth * 0.05));\n\t            if (vertical) {\n\t                ctx.fillRect(valueStartX, valueTop, valueStopX - valueStartX, valueSize + thermoTweak);\n\t            } else {\n\t                ctx.fillRect(valueTop - thermoTweak, valueStartY, valueSize + thermoTweak, valueStopY - valueStartY);\n\t            }\n\t\n\t            if (gaugeType.type === 'type1') {\n\t                // The light effect on the value\n\t                if (vertical) {\n\t                    // Vertical orientation\n\t                    valueForegroundStartX = imageWidth * 0.45;\n\t                    valueForegroundStartY = 0;\n\t                    valueForegroundStopX = valueForegroundStartX + imageWidth * 0.05;\n\t                    valueForegroundStopY = 0;\n\t                } else {\n\t                    // Horizontal orientation\n\t                    valueForegroundStartX = 0;\n\t                    valueForegroundStartY = imageHeight * 0.45;\n\t                    valueForegroundStopX = 0;\n\t                    valueForegroundStopY = valueForegroundStartY + imageHeight * 0.05;\n\t                }\n\t                var valueForegroundGradient = ctx.createLinearGradient(valueForegroundStartX, valueForegroundStartY, valueForegroundStopX, valueForegroundStopY);\n\t                valueForegroundGradient.addColorStop(0, 'rgba(255, 255, 255, 0.7)');\n\t                valueForegroundGradient.addColorStop(0.98, 'rgba(255, 255, 255, 0.0)');\n\t                ctx.fillStyle = valueForegroundGradient;\n\t                if (vertical) {\n\t                    ctx.fillRect(valueForegroundStartX, valueTop, valueForegroundStopX, valueSize);\n\t                } else {\n\t                    ctx.fillRect(valueTop, valueForegroundStartY, valueSize, valueForegroundStopY - valueForegroundStartY);\n\t                }\n\t            }\n\t        };\n\t\n\t        var drawForegroundImage = function (ctx) {\n\t            var foreSize = (vertical ? imageHeight : imageWidth);\n\t\n\t            ctx.save();\n\t            if (vertical) {\n\t                ctx.translate(imageWidth / 2, 0);\n\t            } else {\n\t                ctx.translate(imageWidth / 2, imageHeight / 2);\n\t                ctx.rotate(HALF_PI);\n\t                ctx.translate(0, -imageWidth / 2 + imageWidth * 0.05);\n\t            }\n\t\n\t            // draw bulb\n\t            ctx.beginPath();\n\t            ctx.moveTo(-0.0490 * foreSize, 0.825 * foreSize);\n\t            ctx.bezierCurveTo(-0.0490 * foreSize, 0.7975 * foreSize, -0.0264 * foreSize, 0.775 * foreSize, 0.0013 * foreSize, 0.775 * foreSize);\n\t            ctx.bezierCurveTo(0.0264 * foreSize, 0.775 * foreSize, 0.0490 * foreSize, 0.7975 * foreSize, 0.0490 * foreSize, 0.825 * foreSize);\n\t            ctx.bezierCurveTo(0.0490 * foreSize, 0.85 * foreSize, 0.0264 * foreSize, 0.8725 * foreSize, 0.0013 * foreSize, 0.8725 * foreSize);\n\t            ctx.bezierCurveTo(-0.0264 * foreSize, 0.8725 * foreSize, -0.0490 * foreSize, 0.85 * foreSize, -0.0490 * foreSize, 0.825 * foreSize);\n\t            ctx.closePath();\n\t            var grad = ctx.createRadialGradient(0 * foreSize, 0.825 * foreSize, 0, 0 * foreSize, 0.825 * foreSize, 0.0490 * foreSize);\n\t            grad.addColorStop(0, valueColor.medium.getRgbaColor());\n\t            grad.addColorStop(0.3, valueColor.medium.getRgbaColor());\n\t            grad.addColorStop(1, valueColor.light.getRgbaColor());\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            // draw bulb highlight\n\t            ctx.beginPath();\n\t            if (vertical) {\n\t                ctx.moveTo(-0.0365 * foreSize, 0.8075 * foreSize);\n\t                ctx.bezierCurveTo(-0.0365 * foreSize, 0.7925 * foreSize, -0.0214 * foreSize, 0.7875 * foreSize, -0.0214 * foreSize, 0.7825 * foreSize);\n\t                ctx.bezierCurveTo(0.0189 * foreSize, 0.785 * foreSize, 0.0365 * foreSize, 0.7925 * foreSize, 0.0365 * foreSize, 0.8075 * foreSize);\n\t                ctx.bezierCurveTo(0.0365 * foreSize, 0.8175 * foreSize, 0.0214 * foreSize, 0.815 * foreSize, 0.0013 * foreSize, 0.8125 * foreSize);\n\t                ctx.bezierCurveTo(-0.0189 * foreSize, 0.8125 * foreSize, -0.0365 * foreSize, 0.8175 * foreSize, -0.0365 * foreSize, 0.8075 * foreSize);\n\t                grad = ctx.createRadialGradient(0, 0.8 * foreSize, 0, 0, 0.8 * foreSize, 0.0377 * foreSize);\n\t            } else {\n\t                ctx.beginPath();\n\t                ctx.moveTo(-0.0214 * foreSize, 0.86 * foreSize);\n\t                ctx.bezierCurveTo(-0.0365 * foreSize, 0.86 * foreSize, -0.0415 * foreSize, 0.845 * foreSize, -0.0465 * foreSize, 0.825 * foreSize);\n\t                ctx.bezierCurveTo(-0.0465 * foreSize, 0.805 * foreSize, -0.0365 * foreSize, 0.7875 * foreSize, -0.0214 * foreSize, 0.7875 * foreSize);\n\t                ctx.bezierCurveTo(-0.0113 * foreSize, 0.7875 * foreSize, -0.0163 * foreSize, 0.8025 * foreSize, -0.0163 * foreSize, 0.8225 * foreSize);\n\t                ctx.bezierCurveTo(-0.0163 * foreSize, 0.8425 * foreSize, -0.0113 * foreSize, 0.86 * foreSize, -0.0214 * foreSize, 0.86 * foreSize);\n\t                grad = ctx.createRadialGradient(-0.03 * foreSize, 0.8225 * foreSize, 0, -0.03 * foreSize, 0.8225 * foreSize, 0.0377 * foreSize);\n\t            }\n\t            grad.addColorStop(0.0, 'rgba(255, 255, 255, 0.55)');\n\t            grad.addColorStop(1.0, 'rgba(255, 255, 255, 0.05)');\n\t            ctx.fillStyle = grad;\n\t            ctx.closePath();\n\t            ctx.fill();\n\t\n\t            // stem highlight\n\t            ctx.beginPath();\n\t            ctx.moveTo(-0.0214 * foreSize, 0.115 * foreSize);\n\t            ctx.bezierCurveTo(-0.0214 * foreSize, 0.1075 * foreSize, -0.0163 * foreSize, 0.1025 * foreSize, -0.0113 * foreSize, 0.1025 * foreSize);\n\t            ctx.bezierCurveTo(-0.0113 * foreSize, 0.1025 * foreSize, -0.0113 * foreSize, 0.1025 * foreSize, -0.0113 * foreSize, 0.1025 * foreSize);\n\t            ctx.bezierCurveTo(-0.0038 * foreSize, 0.1025 * foreSize, 0.0013 * foreSize, 0.1075 * foreSize, 0.0013 * foreSize, 0.115 * foreSize);\n\t            ctx.bezierCurveTo(0.0013 * foreSize, 0.115 * foreSize, 0.0013 * foreSize, 0.76 * foreSize, 0.0013 * foreSize, 0.76 * foreSize);\n\t            ctx.bezierCurveTo(0.0013 * foreSize, 0.7675 * foreSize, -0.0038 * foreSize, 0.7725 * foreSize, -0.0113 * foreSize, 0.7725 * foreSize);\n\t            ctx.bezierCurveTo(-0.0113 * foreSize, 0.7725 * foreSize, -0.0113 * foreSize, 0.7725 * foreSize, -0.0113 * foreSize, 0.7725 * foreSize);\n\t            ctx.bezierCurveTo(-0.0163 * foreSize, 0.7725 * foreSize, -0.0214 * foreSize, 0.7675 * foreSize, -0.0214 * foreSize, 0.76 * foreSize);\n\t            ctx.bezierCurveTo(-0.0214 * foreSize, 0.76 * foreSize, -0.0214 * foreSize, 0.115 * foreSize, -0.0214 * foreSize, 0.115 * foreSize);\n\t            ctx.closePath();\n\t            grad = ctx.createLinearGradient(-0.0189 * foreSize, 0, 0.0013 * foreSize, 0);\n\t            grad.addColorStop(0.0, 'rgba(255, 255, 255, 0.1)');\n\t            grad.addColorStop(0.34, 'rgba(255, 255, 255, 0.5)');\n\t            grad.addColorStop(1.0, 'rgba(255, 255, 255, 0.1)');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawBackgroundImage = function (ctx) {\n\t            var backSize = (vertical ? imageHeight : imageWidth);\n\t            ctx.save();\n\t            if (vertical) {\n\t                ctx.translate(imageWidth / 2, 0);\n\t            } else {\n\t                ctx.translate(imageWidth / 2, imageHeight / 2);\n\t                ctx.rotate(HALF_PI);\n\t                ctx.translate(0, -imageWidth / 2 + imageWidth * 0.05);\n\t            }\n\t            ctx.beginPath();\n\t            ctx.moveTo(-0.0516 * backSize, 0.825 * backSize);\n\t            ctx.bezierCurveTo(-0.0516 * backSize, 0.8525 * backSize, -0.0289 * backSize, 0.875 * backSize, 0.0013 * backSize, 0.875 * backSize);\n\t            ctx.bezierCurveTo(0.0289 * backSize, 0.875 * backSize, 0.0516 * backSize, 0.8525 * backSize, 0.0516 * backSize, 0.825 * backSize);\n\t            ctx.bezierCurveTo(0.0516 * backSize, 0.8075 * backSize, 0.0440 * backSize, 0.7925 * backSize, 0.0314 * backSize, 0.7825 * backSize);\n\t            ctx.bezierCurveTo(0.0314 * backSize, 0.7825 * backSize, 0.0314 * backSize, 0.12 * backSize, 0.0314 * backSize, 0.12 * backSize);\n\t            ctx.bezierCurveTo(0.0314 * backSize, 0.1025 * backSize, 0.0189 * backSize, 0.0875 * backSize, 0.0013 * backSize, 0.0875 * backSize);\n\t            ctx.bezierCurveTo(-0.0163 * backSize, 0.0875 * backSize, -0.0289 * backSize, 0.1025 * backSize, -0.0289 * backSize, 0.12 * backSize);\n\t            ctx.bezierCurveTo(-0.0289 * backSize, 0.12 * backSize, -0.0289 * backSize, 0.7825 * backSize, -0.0289 * backSize, 0.7825 * backSize);\n\t            ctx.bezierCurveTo(-0.0415 * backSize, 0.79 * backSize, -0.0516 * backSize, 0.805 * backSize, -0.0516 * backSize, 0.825 * backSize);\n\t            ctx.closePath();\n\t            var grad = ctx.createLinearGradient(-0.0163 * backSize, 0, 0.0289 * backSize, 0);\n\t            grad.addColorStop(0, 'rgba(226, 226, 226, 0.5)');\n\t            grad.addColorStop(0.5, 'rgba(226, 226, 226, 0.2)');\n\t            grad.addColorStop(1, 'rgba(226, 226, 226, 0.5)');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t            ctx.lineWidth = 1;\n\t            ctx.strokeStyle = 'rgba(153, 153, 153, 0.5)';\n\t            ctx.stroke();\n\t            ctx.restore();\n\t        };\n\t\n\t        //************************************ Public methods **************************************\n\t        this.setValue = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n\t            if (value !== targetValue) {\n\t                value = targetValue;\n\t\n\t                if (value > maxMeasuredValue) {\n\t                    maxMeasuredValue = value;\n\t                }\n\t                if (value < minMeasuredValue) {\n\t                    minMeasuredValue = value;\n\t                }\n\t\n\t                if ((value >= threshold && !ledBlinking && thresholdRising) ||\n\t                    (value <= threshold && !ledBlinking && !thresholdRising)) {\n\t                    ledBlinking = true;\n\t                    blink(ledBlinking);\n\t                    if (playAlarm) {\n\t                        audioElement.play();\n\t                    }\n\t                } else if ((value < threshold && ledBlinking && thresholdRising) ||\n\t                           (value > threshold && ledBlinking && !thresholdRising)) {\n\t                    ledBlinking = false;\n\t                    blink(ledBlinking);\n\t                    if (playAlarm) {\n\t                        audioElement.pause();\n\t                    }\n\t                }\n\t\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getValue = function () {\n\t            return value;\n\t        };\n\t\n\t        this.setValueAnimated = function (newValue, callback) {\n\t            var targetValue,\n\t                gauge = this,\n\t                time;\n\t            newValue = parseFloat(newValue);\n\t            targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n\t            if (value !== targetValue) {\n\t                if (undefined !== tween && tween.isPlaying) {\n\t                    tween.stop();\n\t                }\n\t\n\t                time = fullScaleDeflectionTime * Math.abs(targetValue - value) / (maxValue - minValue);\n\t                time = Math.max(time, fullScaleDeflectionTime / 5);\n\t                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n\t                //tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, 1);\n\t\n\t                tween.onMotionChanged = function (event) {\n\t                    value = event.target._pos;\n\t                    if (value > maxMeasuredValue) {\n\t                        maxMeasuredValue = value;\n\t                    }\n\t                    if (value < minMeasuredValue) {\n\t                        minMeasuredValue = value;\n\t                    }\n\t\n\t                    if ((value >= threshold && !ledBlinking && thresholdRising) ||\n\t                        (value <= threshold && !ledBlinking && !thresholdRising)) {\n\t                        ledBlinking = true;\n\t                        blink(ledBlinking);\n\t                        if (playAlarm) {\n\t                            audioElement.play();\n\t                        }\n\t                    } else if ((value < threshold && ledBlinking && thresholdRising) ||\n\t                               (value > threshold && ledBlinking && !thresholdRising)) {\n\t                        ledBlinking = false;\n\t                        blink(ledBlinking);\n\t                        if (playAlarm) {\n\t                            audioElement.pause();\n\t                        }\n\t                    }\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tween.onMotionFinished = callback;\n\t                }\n\t\n\t                tween.start();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.resetMinMeasuredValue = function () {\n\t            minMeasuredValue = value;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.resetMaxMeasuredValue = function () {\n\t            maxMeasuredValue = value;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMinMeasuredValueVisible = function (visible) {\n\t            minMeasuredValueVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMaxMeasuredValueVisible = function (visible) {\n\t            maxMeasuredValueVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setThreshold = function (threshVal) {\n\t            threshVal = parseFloat(threshVal);\n\t            var targetValue = (threshVal < minValue ? minValue : (threshVal > maxValue ? maxValue : threshVal));\n\t            threshold = targetValue;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setThresholdVisible = function (visible) {\n\t            thresholdVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setThresholdRising = function (rising) {\n\t            thresholdRising = !!rising;\n\t            // reset existing threshold alerts\n\t            ledBlinking = !ledBlinking;\n\t            blink(ledBlinking);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdDecimals = function (decimals) {\n\t            lcdDecimals = parseInt(decimals, 10);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers({frame: true});\n\t            frameDesign = newFrameDesign;\n\t            init({frame: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            resetBuffers({background: true});\n\t            backgroundColor = newBackgroundColor;\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setValueColor = function (newValueColor) {\n\t            resetBuffers({foreground: true});\n\t            valueColor = newValueColor;\n\t            init({foreground: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLedColor = function (newLedColor) {\n\t            resetBuffers({led: true});\n\t            ledColor = newLedColor;\n\t            init({led: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLedVisible = function (visible) {\n\t            ledVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdColor = function (newLcdColor) {\n\t            resetBuffers({background: true});\n\t            lcdColor = newLcdColor;\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMaxMeasuredValue = function (newVal) {\n\t            newVal = parseFloat(newVal);\n\t            var targetValue = (newVal < minValue ? minValue : (newVal > maxValue ? maxValue : newVal));\n\t            maxMeasuredValue = targetValue;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMinMeasuredValue = function (newVal) {\n\t            newVal = parseFloat(newVal);\n\t            var targetValue = (newVal < minValue ? minValue : (newVal > maxValue ? maxValue : newVal));\n\t            minMeasuredValue = targetValue;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setTitleString = function (title) {\n\t            titleString = title;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setUnitString = function (unit) {\n\t            unitString = unit;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMinValue = function (newVal) {\n\t            resetBuffers({background: true});\n\t            minValue = parseFloat(newVal);\n\t            if (minMeasuredValue < minValue) {\n\t                minMeasuredValue = minValue;\n\t            }\n\t            if (value < minValue) {\n\t                value = minValue;\n\t            }\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getMinValue = function () {\n\t            return minValue;\n\t        };\n\t\n\t        this.setMaxValue = function (newVal) {\n\t            resetBuffers({background: true});\n\t            maxValue = parseFloat(newVal);\n\t            if (maxMeasuredValue > maxValue) {\n\t                maxMeasuredValue = maxValue;\n\t            }\n\t            if (value > maxValue) {\n\t                value = maxValue;\n\t            }\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getMaxValue = function () {\n\t            return maxValue;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init({frame: true,\n\t                      background: true,\n\t                      led: true,\n\t                      foreground: true});\n\t            }\n\t\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            // Draw frame\n\t            if (frameVisible) {\n\t                mainCtx.drawImage(frameBuffer, 0, 0);\n\t            }\n\t\n\t            // Draw buffered image to visible canvas\n\t            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t\n\t            // Draw lcd display\n\t            if (lcdVisible) {\n\t                drawLcdText(mainCtx, value, vertical);\n\t            }\n\t\n\t            // Draw led\n\t            if (ledVisible) {\n\t                mainCtx.drawImage(ledBuffer, ledPosX, ledPosY);\n\t            }\n\t\n\t            var valuePos;\n\t            var yOffset;\n\t            var yRange;\n\t            var minMaxX, minMaxY;\n\t            // Draw min measured value indicator\n\t            if (minMeasuredValueVisible) {\n\t                if (vertical) {\n\t                    yOffset = (gaugeType.type === 'type1' ? 0.856796 : 0.7475);\n\t                    yRange = (yOffset - 0.128640);\n\t                    valuePos = imageHeight * yOffset - (imageHeight * yRange) * (minMeasuredValue - minValue) / (maxValue - minValue);\n\t                    minMaxX = imageWidth * 0.34 - minMeasuredValueBuffer.width;\n\t                    minMaxY = valuePos - minMeasuredValueBuffer.height / 2;\n\t                } else {\n\t                    yOffset = (gaugeType.type === 'type1' ? 0.871012 : 0.82);\n\t                    yRange = yOffset - (gaugeType.type === 'type1' ? 0.142857 : 0.19857);\n\t                    valuePos = (imageWidth * yRange) * (minMeasuredValue - minValue) / (maxValue - minValue);\n\t                    minMaxX = imageWidth * (gaugeType.type === 'type1' ? 0.142857 : 0.19857) - minMeasuredValueBuffer.height / 2 + valuePos;\n\t                    minMaxY = imageHeight * 0.65;\n\t                }\n\t                mainCtx.drawImage(minMeasuredValueBuffer, minMaxX, minMaxY);\n\t            }\n\t\n\t            // Draw max measured value indicator\n\t            if (maxMeasuredValueVisible) {\n\t                if (vertical) {\n\t                    valuePos = imageHeight * yOffset - (imageHeight * yRange) * (maxMeasuredValue - minValue) / (maxValue - minValue);\n\t                    minMaxX = imageWidth * 0.34 - maxMeasuredValueBuffer.width;\n\t                    minMaxY = valuePos - maxMeasuredValueBuffer.height / 2;\n\t                } else {\n\t                    yOffset = (gaugeType.type === 'type1' ? 0.871012 : 0.8);\n\t                    yRange = yOffset - (gaugeType.type === 'type1' ? 0.14857 : 0.19857);\n\t                    valuePos = (imageWidth * yRange) * (maxMeasuredValue - minValue) / (maxValue - minValue);\n\t                    minMaxX = imageWidth * (gaugeType.type === 'type1' ? 0.142857 : 0.19857) - maxMeasuredValueBuffer.height / 2 + valuePos;\n\t                    minMaxY = imageHeight * 0.65;\n\t                }\n\t                mainCtx.drawImage(maxMeasuredValueBuffer, minMaxX, minMaxY);\n\t            }\n\t\n\t            mainCtx.save();\n\t            drawValue(mainCtx, imageWidth, imageHeight);\n\t            mainCtx.restore();\n\t\n\t            // Draw foreground\n\t            if (foregroundVisible || gaugeType.type === 'type2') {\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var linearBargraph = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var width = (undefined === parameters.width ? 0 : parameters.width),\n\t            height = (undefined === parameters.height ? 0 : parameters.height),\n\t            minValue = (undefined === parameters.minValue ? 0 : parameters.minValue),\n\t            maxValue = (undefined === parameters.maxValue ? (minValue + 100) : parameters.maxValue),\n\t            section = (undefined === parameters.section ? null : parameters.section),\n\t            useSectionColors = (undefined === parameters.useSectionColors ? false : parameters.useSectionColors),\n\t            niceScale = (undefined === parameters.niceScale ? true : parameters.niceScale),\n\t            threshold = (undefined === parameters.threshold ? (maxValue - minValue) / 2 + minValue: parameters.threshold),\n\t            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n\t            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            valueColor = (undefined === parameters.valueColor ? steelseries.ColorDef.RED : parameters.valueColor),\n\t            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n\t            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n\t            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n\t            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n\t            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor),\n\t            ledVisible = (undefined === parameters.ledVisible ? true : parameters.ledVisible),\n\t            thresholdVisible = (undefined === parameters.thresholdVisible ? true : parameters.thresholdVisible),\n\t            thresholdRising = (undefined === parameters.thresholdRising ? true : parameters.thresholdRising),\n\t            minMeasuredValueVisible = (undefined === parameters.minMeasuredValueVisible ? false : parameters.minMeasuredValueVisible),\n\t            maxMeasuredValueVisible = (undefined === parameters.maxMeasuredValueVisible ? false : parameters.maxMeasuredValueVisible),\n\t            labelNumberFormat = (undefined === parameters.labelNumberFormat ? steelseries.LabelNumberFormat.STANDARD : parameters.labelNumberFormat),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),\n\t            alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),\n\t            valueGradient = (undefined === parameters.valueGradient ? null : parameters.valueGradient),\n\t            useValueGradient = (undefined === parameters.useValueGradient ? false : parameters.useValueGradient),\n\t            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (width === 0) {\n\t            width = mainCtx.canvas.width;\n\t        }\n\t        if (height === 0) {\n\t            height = mainCtx.canvas.height;\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = width;\n\t        mainCtx.canvas.height = height;\n\t\n\t        var imageWidth = width;\n\t        var imageHeight = height;\n\t\n\t        // Create audio tag for alarm sound\n\t        if (playAlarm && alarmSound !== false) {\n\t            var audioElement = doc.createElement('audio');\n\t            audioElement.setAttribute('src', alarmSound);\n\t            audioElement.setAttribute('preload', 'auto');\n\t        }\n\t\n\t        var self = this;\n\t        var value = minValue;\n\t\n\t        // Properties\n\t        var minMeasuredValue = maxValue;\n\t        var maxMeasuredValue = minValue;\n\t\n\t        var tween;\n\t        var ledBlinking = false;\n\t        var repainting = false;\n\t        var isSectionsVisible = false;\n\t        var isGradientVisible = false;\n\t        var sectionPixels = [];\n\t        var ledTimerId = 0;\n\t\n\t        var vertical = width <= height;\n\t\n\t        // Constants\n\t        var ledPosX;\n\t        var ledPosY;\n\t        var ledSize = Math.round((vertical ? height : width) * 0.05);\n\t        var minMaxIndSize = Math.round((vertical ? width : height) * 0.05);\n\t        var stdFont;\n\t        var lcdFont;\n\t\n\t        if (vertical) {\n\t            ledPosX = imageWidth / 2 - ledSize / 2;\n\t            ledPosY = 0.053 * imageHeight;\n\t            stdFont = Math.floor(imageHeight / 22) + 'px ' + stdFontName;\n\t            lcdFont = Math.floor(imageHeight / 22) + 'px ' + lcdFontName;\n\t        } else {\n\t            ledPosX = 0.89 * imageWidth;\n\t            ledPosY = imageHeight / 1.95 - ledSize / 2;\n\t            stdFont = Math.floor(imageHeight / 10) + 'px ' + stdFontName;\n\t            lcdFont = Math.floor(imageHeight / 10) + 'px ' + lcdFontName;\n\t        }\n\t\n\t        var initialized = false;\n\t\n\t        // Tickmark specific private variables\n\t        var niceMinValue = minValue;\n\t        var niceMaxValue = maxValue;\n\t        var niceRange = maxValue - minValue;\n\t        var range = niceMaxValue - niceMinValue;\n\t        var minorTickSpacing = 0;\n\t        var majorTickSpacing = 0;\n\t        var maxNoOfMinorTicks = 10;\n\t        var maxNoOfMajorTicks = 10;\n\t\n\t        // Method to calculate nice values for min, max and range for the tickmarks\n\t        var calculate = function calculate() {\n\t            if (niceScale) {\n\t                niceRange = calcNiceNumber(maxValue - minValue, false);\n\t                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n\t                niceMinValue = Math.floor(minValue / majorTickSpacing) * majorTickSpacing;\n\t                niceMaxValue = Math.ceil(maxValue / majorTickSpacing) * majorTickSpacing;\n\t                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n\t                minValue = niceMinValue;\n\t                maxValue = niceMaxValue;\n\t                range = maxValue - minValue;\n\t            } else {\n\t                niceRange = (maxValue - minValue);\n\t                niceMinValue = minValue;\n\t                niceMaxValue = maxValue;\n\t                range = niceRange;\n\t                minorTickSpacing = 1;\n\t                majorTickSpacing = 10;\n\t            }\n\t        };\n\t\n\t        // **************   Buffer creation  ********************\n\t        // Buffer for the frame\n\t        var frameBuffer = createBuffer(width, height);\n\t        var frameContext = frameBuffer.getContext('2d');\n\t\n\t        // Buffer for the background\n\t        var backgroundBuffer = createBuffer(width, height);\n\t        var backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        var lcdBuffer;\n\t\n\t        // Buffer for active bargraph led\n\t        var activeLedBuffer = doc.createElement('canvas');\n\t        if (vertical) {\n\t            activeLedBuffer.width = imageWidth * 0.121428;\n\t            activeLedBuffer.height = imageHeight * 0.012135;\n\t        } else {\n\t            activeLedBuffer.width = imageWidth * 0.012135;\n\t            activeLedBuffer.height = imageHeight * 0.121428;\n\t        }\n\t        var activeLedContext = activeLedBuffer.getContext('2d');\n\t\n\t        // Buffer for active bargraph led\n\t        var inActiveLedBuffer = doc.createElement('canvas');\n\t        if (vertical) {\n\t            inActiveLedBuffer.width = imageWidth * 0.121428;\n\t            inActiveLedBuffer.height = imageHeight * 0.012135;\n\t        } else {\n\t            inActiveLedBuffer.width = imageWidth * 0.012135;\n\t            inActiveLedBuffer.height = imageHeight * 0.121428;\n\t        }\n\t        var inActiveLedContext = inActiveLedBuffer.getContext('2d');\n\t\n\t        // Buffer for led on painting code\n\t        var ledBufferOn = createBuffer(ledSize, ledSize);\n\t        var ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t        // Buffer for led off painting code\n\t        var ledBufferOff = createBuffer(ledSize, ledSize);\n\t        var ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t        // Buffer for current led painting code\n\t        var ledBuffer = ledBufferOff;\n\t\n\t        // Buffer for the minMeasuredValue indicator\n\t        var minMeasuredValueBuffer = createBuffer(minMaxIndSize, minMaxIndSize);\n\t        var minMeasuredValueCtx = minMeasuredValueBuffer.getContext('2d');\n\t\n\t        // Buffer for the maxMeasuredValue indicator\n\t        var maxMeasuredValueBuffer = createBuffer(minMaxIndSize, minMaxIndSize);\n\t        var maxMeasuredValueCtx = maxMeasuredValueBuffer.getContext('2d');\n\t\n\t        // Buffer for static foreground painting code\n\t        var foregroundBuffer = createBuffer(width, height);\n\t        var foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        // **************   Image creation  ********************\n\t        var drawLcdText = function (ctx, value, vertical) {\n\t            ctx.save();\n\t            ctx.textAlign = 'right';\n\t            ctx.textBaseline = 'middle';\n\t            ctx.strokeStyle = lcdColor.textColor;\n\t            ctx.fillStyle = lcdColor.textColor;\n\t\n\t            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n\t                ctx.shadowColor = 'gray';\n\t                if (vertical) {\n\t                    ctx.shadowOffsetX = imageWidth * 0.007;\n\t                    ctx.shadowOffsetY = imageWidth * 0.007;\n\t                    ctx.shadowBlur = imageWidth * 0.009;\n\t                } else {\n\t                    ctx.shadowOffsetX = imageHeight * 0.007;\n\t                    ctx.shadowOffsetY = imageHeight * 0.007;\n\t                    ctx.shadowBlur = imageHeight * 0.009;\n\t                }\n\t            }\n\t\n\t            var lcdTextX;\n\t            var lcdTextY;\n\t            var lcdTextWidth;\n\t\n\t            if (digitalFont) {\n\t                ctx.font = lcdFont;\n\t            } else {\n\t                ctx.font = stdFont;\n\t            }\n\t\n\t            if (vertical) {\n\t                lcdTextX = (imageWidth - (imageWidth * 0.571428)) / 2 + 1 + imageWidth * 0.571428 - 2;\n\t                lcdTextY = imageHeight * 0.88 + 1 + (imageHeight * 0.055 - 2) / 2;\n\t                lcdTextWidth = imageWidth * 0.7 - 2;\n\t            } else {\n\t                lcdTextX = (imageWidth * 0.695) + imageWidth * 0.18 - 2;\n\t                lcdTextY = (imageHeight * 0.22) + 1 + (imageHeight * 0.15 - 2) / 2;\n\t                lcdTextWidth = imageHeight * 0.22 - 2;\n\t            }\n\t\n\t            ctx.fillText(value.toFixed(lcdDecimals), lcdTextX, lcdTextY, lcdTextWidth);\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var createThresholdImage = function (vertical) {\n\t            var thresholdBuffer = doc.createElement('canvas');\n\t            thresholdBuffer.height = thresholdBuffer.width = minMaxIndSize;\n\t            var thresholdCtx = thresholdBuffer.getContext('2d');\n\t\n\t            thresholdCtx.save();\n\t            var gradThreshold = thresholdCtx.createLinearGradient(0, 0.1, 0, thresholdBuffer.height * 0.9);\n\t            gradThreshold.addColorStop(0, '#520000');\n\t            gradThreshold.addColorStop(0.3, '#fc1d00');\n\t            gradThreshold.addColorStop(0.59, '#fc1d00');\n\t            gradThreshold.addColorStop(1, '#520000');\n\t            thresholdCtx.fillStyle = gradThreshold;\n\t\n\t            if (vertical) {\n\t                thresholdCtx.beginPath();\n\t                thresholdCtx.moveTo(0.1, thresholdBuffer.height * 0.5);\n\t                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, 0.1);\n\t                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, thresholdBuffer.height * 0.9);\n\t                thresholdCtx.closePath();\n\t            } else {\n\t                thresholdCtx.beginPath();\n\t                thresholdCtx.moveTo(0.1, 0.1);\n\t                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, 0.1);\n\t                thresholdCtx.lineTo(thresholdBuffer.width * 0.5, thresholdBuffer.height * 0.9);\n\t                thresholdCtx.closePath();\n\t            }\n\t\n\t            thresholdCtx.fill();\n\t            thresholdCtx.strokeStyle = '#FFFFFF';\n\t            thresholdCtx.stroke();\n\t\n\t            thresholdCtx.restore();\n\t\n\t            return thresholdBuffer;\n\t        };\n\t\n\t        var drawTickmarksImage = function (ctx, labelNumberFormat, vertical) {\n\t            backgroundColor.labelColor.setAlpha(1);\n\t            ctx.save();\n\t            ctx.textBaseline = 'middle';\n\t            var TEXT_WIDTH = imageWidth * 0.1;\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t\n\t            var valueCounter = minValue;\n\t            var majorTickCounter = maxNoOfMinorTicks - 1;\n\t            var tickCounter;\n\t            var currentPos;\n\t            var scaleBoundsX;\n\t            var scaleBoundsY;\n\t            var scaleBoundsW;\n\t            var scaleBoundsH;\n\t            var tickSpaceScaling = 1;\n\t\n\t            var minorTickStart;\n\t            var minorTickStop;\n\t            var mediumTickStart;\n\t            var mediumTickStop;\n\t            var majorTickStart;\n\t            var majorTickStop;\n\t            if (vertical) {\n\t                minorTickStart = (0.34 * imageWidth);\n\t                minorTickStop = (0.36 * imageWidth);\n\t                mediumTickStart = (0.33 * imageWidth);\n\t                mediumTickStop = (0.36 * imageWidth);\n\t                majorTickStart = (0.32 * imageWidth);\n\t                majorTickStop = (0.36 * imageWidth);\n\t                ctx.textAlign = 'right';\n\t                scaleBoundsX = 0;\n\t                scaleBoundsY = imageHeight * 0.128640;\n\t                scaleBoundsW = 0;\n\t                scaleBoundsH = (imageHeight * 0.856796 - imageHeight * 0.128640);\n\t                tickSpaceScaling = scaleBoundsH / (maxValue - minValue);\n\t            } else {\n\t                minorTickStart = (0.65 * imageHeight);\n\t                minorTickStop = (0.63 * imageHeight);\n\t                mediumTickStart = (0.66 * imageHeight);\n\t                mediumTickStop = (0.63 * imageHeight);\n\t                majorTickStart = (0.67 * imageHeight);\n\t                majorTickStop = (0.63 * imageHeight);\n\t                ctx.textAlign = 'center';\n\t                scaleBoundsX = imageWidth * 0.142857;\n\t                scaleBoundsY = 0;\n\t                scaleBoundsW = (imageWidth * 0.871012 - imageWidth * 0.142857);\n\t                scaleBoundsH = 0;\n\t                tickSpaceScaling = scaleBoundsW / (maxValue - minValue);\n\t            }\n\t\n\t            var labelCounter;\n\t            for (labelCounter = minValue, tickCounter = 0; labelCounter <= maxValue; labelCounter += minorTickSpacing, tickCounter += minorTickSpacing) {\n\t\n\t                // Calculate the bounds of the scaling\n\t                if (vertical) {\n\t                    currentPos = scaleBoundsY + scaleBoundsH - tickCounter * tickSpaceScaling;\n\t                } else {\n\t                    currentPos = scaleBoundsX + tickCounter * tickSpaceScaling;\n\t                }\n\t\n\t                majorTickCounter++;\n\t\n\t                // Draw tickmark every major tickmark spacing\n\t                if (majorTickCounter === maxNoOfMinorTicks) {\n\t\n\t                    // Draw the major tickmarks\n\t                    ctx.lineWidth = 1.5;\n\t                    drawLinearTicks(ctx, majorTickStart, majorTickStop, currentPos, vertical);\n\t\n\t                    // Draw the standard tickmark labels\n\t                    if (vertical) {\n\t                        // Vertical orientation\n\t                        switch (labelNumberFormat.format) {\n\t                        case 'fractional':\n\t                            ctx.fillText((valueCounter.toFixed(2)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n\t                            break;\n\t\n\t                        case 'scientific':\n\t                            ctx.fillText((valueCounter.toPrecision(2)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n\t                            break;\n\t\n\t                        case 'standard':\n\t                        /* falls through */\n\t                        default:\n\t                            ctx.fillText((valueCounter.toFixed(0)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n\t                            break;\n\t                        }\n\t                    } else {\n\t                        // Horizontal orientation\n\t                        switch (labelNumberFormat.format) {\n\t                        case 'fractional':\n\t                            ctx.fillText((valueCounter.toFixed(2)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n\t                            break;\n\t\n\t                        case 'scientific':\n\t                            ctx.fillText((valueCounter.toPrecision(2)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n\t                            break;\n\t\n\t                        case 'standard':\n\t                        /* falls through */\n\t                        default:\n\t                            ctx.fillText((valueCounter.toFixed(0)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n\t                            break;\n\t                        }\n\t                    }\n\t\n\t                    valueCounter += majorTickSpacing;\n\t                    majorTickCounter = 0;\n\t                    continue;\n\t                }\n\t\n\t                // Draw tickmark every minor tickmark spacing\n\t                if (0 === maxNoOfMinorTicks % 2 && majorTickCounter === (maxNoOfMinorTicks / 2)) {\n\t                    ctx.lineWidth = 1;\n\t                    drawLinearTicks(ctx, mediumTickStart, mediumTickStop, currentPos, vertical);\n\t                } else {\n\t                    ctx.lineWidth = 0.5;\n\t                    drawLinearTicks(ctx, minorTickStart, minorTickStop, currentPos, vertical);\n\t                }\n\t            }\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawLinearTicks = function (ctx, tickStart, tickStop, currentPos, vertical) {\n\t            if (vertical) {\n\t                // Vertical orientation\n\t                ctx.beginPath();\n\t                ctx.moveTo(tickStart, currentPos);\n\t                ctx.lineTo(tickStop, currentPos);\n\t                ctx.closePath();\n\t                ctx.stroke();\n\t            } else {\n\t                // Horizontal orientation\n\t                ctx.beginPath();\n\t                ctx.moveTo(currentPos, tickStart);\n\t                ctx.lineTo(currentPos, tickStop);\n\t                ctx.closePath();\n\t                ctx.stroke();\n\t            }\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        var init = function (parameters) {\n\t            parameters = parameters || {};\n\t            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n\t            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n\t            var drawLed = (undefined === parameters.led ? false : parameters.led);\n\t            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\t            var drawBargraphLed = (undefined === parameters.bargraphled ? false : parameters.bargraphled);\n\t\n\t            initialized = true;\n\t\n\t            // Calculate the current min and max values and the range\n\t            calculate();\n\t\n\t            // Create frame in frame buffer (backgroundBuffer)\n\t            if (drawFrame && frameVisible) {\n\t                drawLinearFrameImage(frameContext, frameDesign, imageWidth, imageHeight, vertical);\n\t            }\n\t\n\t            // Create background in background buffer (backgroundBuffer)\n\t            if (drawBackground && backgroundVisible) {\n\t                drawLinearBackgroundImage(backgroundContext, backgroundColor, imageWidth, imageHeight, vertical);\n\t            }\n\t\n\t            if (drawLed) {\n\t                if (vertical) {\n\t                    // Draw LED ON in ledBuffer_ON\n\t                    ledContextOn.drawImage(createLedImage(ledSize, 1, ledColor), 0, 0);\n\t\n\t                    // Draw LED ON in ledBuffer_OFF\n\t                    ledContextOff.drawImage(createLedImage(ledSize, 0, ledColor), 0, 0);\n\t                } else {\n\t                    // Draw LED ON in ledBuffer_ON\n\t                    ledContextOn.drawImage(createLedImage(ledSize, 1, ledColor), 0, 0);\n\t\n\t                    // Draw LED ON in ledBuffer_OFF\n\t                    ledContextOff.drawImage(createLedImage(ledSize, 0, ledColor), 0, 0);\n\t                }\n\t            }\n\t\n\t            // Draw min measured value indicator in minMeasuredValueBuffer\n\t            if (minMeasuredValueVisible) {\n\t                if (vertical) {\n\t                    minMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.BLUE.dark.getRgbaColor(), false, vertical), 0, 0);\n\t                } else {\n\t                    minMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.BLUE.dark.getRgbaColor(), false, vertical), 0, 0);\n\t                }\n\t            }\n\t\n\t            // Draw max measured value indicator in maxMeasuredValueBuffer\n\t            if (maxMeasuredValueVisible) {\n\t                if (vertical) {\n\t                    maxMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.RED.medium.getRgbaColor(), false, vertical), 0, 0);\n\t                } else {\n\t                    maxMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.RED.medium.getRgbaColor(), false, vertical), 0, 0);\n\t                }\n\t            }\n\t\n\t            // Create alignment posts in background buffer (backgroundBuffer)\n\t            if (drawBackground && backgroundVisible) {\n\t                var valuePos;\n\t                // Create tickmarks in background buffer (backgroundBuffer)\n\t                drawTickmarksImage(backgroundContext, labelNumberFormat, vertical);\n\t\n\t                // Draw threshold image to background context\n\t                if (thresholdVisible) {\n\t                    backgroundContext.save();\n\t                    if (vertical) {\n\t                        // Vertical orientation\n\t                        valuePos = imageHeight * 0.856796 - (imageHeight * 0.728155) * (threshold - minValue) / (maxValue - minValue);\n\t                        backgroundContext.translate(imageWidth * 0.365, valuePos - minMaxIndSize / 2);\n\t                    } else {\n\t                        // Horizontal orientation\n\t                        valuePos = (imageWidth * 0.856796 - imageWidth * 0.128640) * (threshold - minValue) / (maxValue - minValue);\n\t                        backgroundContext.translate(imageWidth * 0.142857 - minMaxIndSize / 2 + valuePos, imageHeight * 0.58);\n\t                    }\n\t                    backgroundContext.drawImage(createThresholdImage(vertical), 0, 0);\n\t                    backgroundContext.restore();\n\t                }\n\t\n\t                // Create title in background buffer (backgroundBuffer)\n\t                if (vertical) {\n\t                    drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, vertical, null, lcdVisible);\n\t                } else {\n\t                    drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, vertical, null, lcdVisible);\n\t                }\n\t            }\n\t\n\t            // Create lcd background if selected in background buffer (backgroundBuffer)\n\t            if (drawBackground && lcdVisible) {\n\t                if (vertical) {\n\t                    lcdBuffer = createLcdBackgroundImage(imageWidth * 0.571428, imageHeight * 0.055, lcdColor);\n\t                    backgroundContext.drawImage(lcdBuffer, ((imageWidth - (imageWidth * 0.571428)) / 2), imageHeight * 0.88);\n\t                } else {\n\t                    lcdBuffer = createLcdBackgroundImage(imageWidth * 0.18, imageHeight * 0.15, lcdColor);\n\t                    backgroundContext.drawImage(lcdBuffer, imageWidth * 0.695, imageHeight * 0.22);\n\t                }\n\t            }\n\t\n\t            // Draw leds of bargraph\n\t            if (drawBargraphLed) {\n\t                drawInActiveLed(inActiveLedContext);\n\t                drawActiveLed(activeLedContext, valueColor);\n\t            }\n\t\n\t            // Convert Section values into pixels\n\t            isSectionsVisible = false;\n\t            if (null !== section && 0 < section.length) {\n\t                isSectionsVisible = true;\n\t                var sectionIndex = section.length;\n\t                var top, bottom, fullSize, ledWidth2;\n\t\n\t                if (vertical) {\n\t                    // Vertical orientation\n\t                    top =  imageHeight * 0.128640; // position of max value\n\t                    bottom = imageHeight * 0.856796; // position of min value\n\t                    fullSize = bottom - top;\n\t                    ledWidth2 = 0;\n\t                } else {\n\t                    // Horizontal orientation\n\t                    top = imageWidth * 0.856796; // position of max value\n\t                    bottom = imageWidth * 0.128640;\n\t                    fullSize = top - bottom;\n\t                    ledWidth2 = imageWidth * 0.012135 / 2;\n\t                }\n\t                sectionPixels = [];\n\t                do {\n\t                    sectionIndex--;\n\t                    sectionPixels.push({start: (((section[sectionIndex].start + Math.abs(minValue)) / (maxValue - minValue)) * fullSize - ledWidth2),\n\t                                         stop: (((section[sectionIndex].stop + Math.abs(minValue)) / (maxValue - minValue)) * fullSize - ledWidth2),\n\t                                        color: customColorDef(section[sectionIndex].color)});\n\t                } while (0 < sectionIndex);\n\t            }\n\t\n\t            // Use a gradient for the valueColor?\n\t            isGradientVisible = false;\n\t            if (useValueGradient && valueGradient !== null) {\n\t                // force section colors off!\n\t                isSectionsVisible = false;\n\t                isGradientVisible = true;\n\t            }\n\t\n\t            // Create foreground in foreground buffer (foregroundBuffer)\n\t            if (drawForeground && foregroundVisible) {\n\t                drawLinearForegroundImage(foregroundContext, imageWidth, imageHeight, vertical, false);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function (buffers) {\n\t            buffers = buffers || {};\n\t            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n\t            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n\t            var resetLed = (undefined === buffers.led ? false : buffers.led);\n\t            var resetBargraphLed = (undefined === buffers.bargraphled ? false : buffers.bargraphled);\n\t            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\t\n\t            if (resetFrame) {\n\t                frameBuffer.width = width;\n\t                frameBuffer.height = height;\n\t                frameContext = frameBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetBackground) {\n\t                backgroundBuffer.width = width;\n\t                backgroundBuffer.height = height;\n\t                backgroundContext = backgroundBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetBargraphLed) {\n\t                if (vertical) {\n\t                    activeLedBuffer.width = width * 0.121428;\n\t                    activeLedBuffer.height = height * 0.012135;\n\t                } else {\n\t                    activeLedBuffer.width = width * 0.012135;\n\t                    activeLedBuffer.height = height * 0.121428;\n\t                }\n\t                activeLedContext = activeLedBuffer.getContext('2d');\n\t\n\t                // Buffer for active bargraph led\n\t                if (vertical) {\n\t                    inActiveLedBuffer.width = width * 0.121428;\n\t                    inActiveLedBuffer.height = height * 0.012135;\n\t                } else {\n\t                    inActiveLedBuffer.width = width * 0.012135;\n\t                    inActiveLedBuffer.height = height * 0.121428;\n\t                }\n\t                inActiveLedContext = inActiveLedBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetLed) {\n\t                ledBufferOn.width = Math.ceil(width * 0.093457);\n\t                ledBufferOn.height = Math.ceil(height * 0.093457);\n\t                ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t                ledBufferOff.width = Math.ceil(width * 0.093457);\n\t                ledBufferOff.height = Math.ceil(height * 0.093457);\n\t                ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t                // Buffer for current led painting code\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t\n\t            if (resetForeground) {\n\t                foregroundBuffer.width = width;\n\t                foregroundBuffer.height = height;\n\t                foregroundContext = foregroundBuffer.getContext('2d');\n\t            }\n\t        };\n\t\n\t        var blink = function (blinking) {\n\t            if (blinking) {\n\t                ledTimerId = setInterval(toggleAndRepaintLed, 1000);\n\t            } else {\n\t                clearInterval(ledTimerId);\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t        };\n\t\n\t        var toggleAndRepaintLed = function () {\n\t            if (ledVisible) {\n\t                if (ledBuffer === ledBufferOn) {\n\t                    ledBuffer = ledBufferOff;\n\t                } else {\n\t                    ledBuffer = ledBufferOn;\n\t                }\n\t                if (!repainting) {\n\t                    repainting = true;\n\t                    requestAnimFrame(self.repaint);\n\t                }\n\t            }\n\t        };\n\t\n\t        var drawValue = function (ctx, imageWidth, imageHeight) {\n\t            var top; // position of max value\n\t            var bottom; // position of min value\n\t            var labelColor = backgroundColor.labelColor;\n\t            var fullSize;\n\t            var valueSize;\n\t            var valueTop;\n\t            var valueBackgroundStartX;\n\t            var valueBackgroundStartY;\n\t            var valueBackgroundStopX;\n\t            var valueBackgroundStopY;\n\t            var valueBorderStartX;\n\t            var valueBorderStartY;\n\t            var valueBorderStopX;\n\t            var valueBorderStopY;\n\t            var currentValue;\n\t            var gradRange;\n\t            var fraction;\n\t\n\t            // Orientation dependend definitions\n\t            if (vertical) {\n\t                // Vertical orientation\n\t                top =  imageHeight * 0.128640; // position of max value\n\t                bottom = imageHeight * 0.856796; // position of min value\n\t                fullSize = bottom - top;\n\t                valueSize = fullSize * (value - minValue) / (maxValue - minValue);\n\t                valueTop = top + fullSize - valueSize;\n\t                valueBackgroundStartX = 0;\n\t                valueBackgroundStartY = top;\n\t                valueBackgroundStopX = 0;\n\t                valueBackgroundStopY = top + fullSize * 1.014;\n\t            } else {\n\t                // Horizontal orientation\n\t                top = imageWidth * 0.856796; // position of max value\n\t                bottom = imageWidth * 0.128640;\n\t                fullSize = top - bottom;\n\t                valueSize = fullSize * (value - minValue) / (maxValue - minValue);\n\t                valueTop = bottom;\n\t                valueBackgroundStartX = imageWidth * 0.13;\n\t                valueBackgroundStartY = imageHeight * 0.435714;\n\t                valueBackgroundStopX = valueBackgroundStartX + fullSize * 1.035;\n\t                valueBackgroundStopY = valueBackgroundStartY;\n\t            }\n\t\n\t            var darker = (backgroundColor === steelseries.BackgroundColor.CARBON ||\n\t                          backgroundColor === steelseries.BackgroundColor.PUNCHED_SHEET ||\n\t                          backgroundColor === steelseries.BackgroundColor.STAINLESS ||\n\t                          backgroundColor === steelseries.BackgroundColor.BRUSHED_STAINLESS ||\n\t                          backgroundColor === steelseries.BackgroundColor.TURNED) ? 0.3 : 0;\n\t\n\t            var valueBackgroundTrackGradient = ctx.createLinearGradient(valueBackgroundStartX, valueBackgroundStartY, valueBackgroundStopX, valueBackgroundStopY);\n\t            labelColor.setAlpha(0.047058 + darker);\n\t            valueBackgroundTrackGradient.addColorStop(0, labelColor.getRgbaColor());\n\t            labelColor.setAlpha(0.145098 + darker);\n\t            valueBackgroundTrackGradient.addColorStop(0.48, labelColor.getRgbaColor());\n\t            labelColor.setAlpha(0.149019 + darker);\n\t            valueBackgroundTrackGradient.addColorStop(0.49, labelColor.getRgbaColor());\n\t            labelColor.setAlpha(0.047058 + darker);\n\t            valueBackgroundTrackGradient.addColorStop(1, labelColor.getRgbaColor());\n\t            ctx.fillStyle = valueBackgroundTrackGradient;\n\t\n\t            if (vertical) {\n\t                ctx.fillRect(imageWidth * 0.435714, top, imageWidth * 0.15, fullSize * 1.014);\n\t            } else {\n\t                ctx.fillRect(valueBackgroundStartX, valueBackgroundStartY, fullSize * 1.035, imageHeight * 0.152857);\n\t            }\n\t\n\t            if (vertical) {\n\t                // Vertical orientation\n\t                valueBorderStartX = 0;\n\t                valueBorderStartY = top;\n\t                valueBorderStopX = 0;\n\t                valueBorderStopY = top + fullSize * 1.014;\n\t            } else {\n\t                // Horizontal orientation                ;\n\t                valueBorderStartX = valueBackgroundStartX;\n\t                valueBorderStartY = 0;\n\t                valueBorderStopX = valueBackgroundStopX;\n\t                valueBorderStopY = 0;\n\t            }\n\t\n\t            var valueBorderGradient = ctx.createLinearGradient(valueBorderStartX, valueBorderStartY, valueBorderStopX, valueBorderStopY);\n\t            labelColor.setAlpha(0.298039 + darker);\n\t            valueBorderGradient.addColorStop(0, labelColor.getRgbaColor());\n\t            labelColor.setAlpha(0.686274 + darker);\n\t            valueBorderGradient.addColorStop(0.48, labelColor.getRgbaColor());\n\t            labelColor.setAlpha(0.698039 + darker);\n\t            valueBorderGradient.addColorStop(0.49, labelColor.getRgbaColor());\n\t            labelColor.setAlpha(0.4 + darker);\n\t            valueBorderGradient.addColorStop(1, labelColor.getRgbaColor());\n\t            ctx.fillStyle = valueBorderGradient;\n\t            if (vertical) {\n\t                ctx.fillRect(imageWidth * 0.435714, top, imageWidth * 0.007142, fullSize * 1.014);\n\t                ctx.fillRect(imageWidth * 0.571428, top, imageWidth * 0.007142, fullSize * 1.014);\n\t            } else {\n\t                ctx.fillRect(imageWidth * 0.13, imageHeight * 0.435714, fullSize * 1.035, imageHeight * 0.007142);\n\t                ctx.fillRect(imageWidth * 0.13, imageHeight * 0.571428, fullSize * 1.035, imageHeight * 0.007142);\n\t            }\n\t\n\t            // Prepare led specific variables\n\t            var ledX;\n\t            var ledY;\n\t            var ledW;\n\t            var ledH;\n\t            var ledCenterX;\n\t            var ledCenterY;\n\t            var activeLeds;\n\t            var inactiveLeds;\n\t            if (vertical) {\n\t                // VERTICAL\n\t                ledX = imageWidth * 0.45;\n\t                ledY = imageHeight * 0.851941;\n\t                ledW = imageWidth * 0.121428;\n\t                ledH = imageHeight * 0.012135;\n\t                ledCenterX = (ledX + ledW) / 2;\n\t                ledCenterY = (ledY + ledH) / 2;\n\t            } else {\n\t                // HORIZONTAL\n\t                ledX = imageWidth * 0.142857;\n\t                ledY = imageHeight * 0.45;\n\t                ledW = imageWidth * 0.012135;\n\t                ledH = imageHeight * 0.121428;\n\t                ledCenterX = (ledX + ledW) / 2;\n\t                ledCenterY = (ledY + ledH) / 2;\n\t            }\n\t\n\t            var translateX, translateY;\n\t            var activeLedColor;\n\t            var lastActiveLedColor = valueColor;\n\t            var i;\n\t            // Draw the value\n\t            if (vertical) {\n\t                // Draw the inactive leds\n\t                inactiveLeds = fullSize;\n\t                for (translateY = 0 ; translateY <= inactiveLeds ; translateY += ledH + 1) {\n\t                    ctx.translate(0, -translateY);\n\t                    ctx.drawImage(inActiveLedBuffer, ledX, ledY);\n\t                    ctx.translate(0, translateY);\n\t                }\n\t                // Draw the active leds in dependence on the current value\n\t                activeLeds = ((value - minValue) / (maxValue - minValue)) * fullSize;\n\t                for (translateY = 0 ; translateY <= activeLeds ; translateY += ledH + 1) {\n\t                    //check for LED color\n\t                    activeLedColor = valueColor;\n\t                    // Use a gradient for value colors?\n\t                    if (isGradientVisible) {\n\t                        // Convert pixel back to value\n\t                        currentValue = minValue + (translateY / fullSize) * (maxValue - minValue);\n\t                        gradRange = valueGradient.getEnd() - valueGradient.getStart();\n\t                        fraction = currentValue / gradRange;\n\t                        fraction = Math.max(Math.min(fraction, 1), 0);\n\t                        activeLedColor = customColorDef(valueGradient.getColorAt(fraction).getRgbaColor());\n\t                    } else if (isSectionsVisible) {\n\t                        for (i = 0; i < sectionPixels.length; i++) {\n\t                            if (translateY >= sectionPixels[i].start && translateY < sectionPixels[i].stop) {\n\t                                activeLedColor = sectionPixels[i].color;\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t                    // Has LED color changed? If so redraw the buffer\n\t                    if (lastActiveLedColor.medium.getHexColor() !== activeLedColor.medium.getHexColor()) {\n\t                        drawActiveLed(activeLedContext, activeLedColor);\n\t                        lastActiveLedColor = activeLedColor;\n\t                    }\n\t                    // Draw LED\n\t                    ctx.translate(0, -translateY);\n\t                    ctx.drawImage(activeLedBuffer, ledX, ledY);\n\t                    ctx.translate(0, translateY);\n\t                }\n\t            } else {\n\t                // Draw the inactive leds\n\t                inactiveLeds = fullSize;\n\t                for (translateX = -(ledW / 2) ; translateX <= inactiveLeds ; translateX += ledW + 1) {\n\t                    ctx.translate(translateX, 0);\n\t                    ctx.drawImage(inActiveLedBuffer, ledX, ledY);\n\t                    ctx.translate(-translateX, 0);\n\t                }\n\t                // Draw the active leds in dependence on the current value\n\t                activeLeds = ((value - minValue) / (maxValue - minValue)) * fullSize;\n\t                for (translateX = -(ledW / 2) ; translateX <= activeLeds ; translateX += ledW + 1) {\n\t                    //check for LED color\n\t                    activeLedColor = valueColor;\n\t                    if (isGradientVisible) {\n\t                        // Convert pixel back to value\n\t                        currentValue = minValue + (translateX / fullSize) * (maxValue - minValue);\n\t                        gradRange = valueGradient.getEnd() - valueGradient.getStart();\n\t                        fraction = currentValue / gradRange;\n\t                        fraction = Math.max(Math.min(fraction, 1), 0);\n\t                        activeLedColor = customColorDef(valueGradient.getColorAt(fraction).getRgbaColor());\n\t                    } else if (isSectionsVisible) {\n\t                        for (i = 0; i < sectionPixels.length; i++) {\n\t                            if (translateX >= sectionPixels[i].start && translateX < sectionPixels[i].stop) {\n\t                                activeLedColor = sectionPixels[i].color;\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t                    // Has LED color changed? If so redraw the buffer\n\t                    if (lastActiveLedColor.medium.getHexColor() !== activeLedColor.medium.getHexColor()) {\n\t                        drawActiveLed(activeLedContext, activeLedColor);\n\t                        lastActiveLedColor = activeLedColor;\n\t                    }\n\t                    ctx.translate(translateX, 0);\n\t                    ctx.drawImage(activeLedBuffer, ledX, ledY);\n\t                    ctx.translate(-translateX, 0);\n\t                }\n\t            }\n\t        };\n\t\n\t        var drawInActiveLed = function (ctx) {\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t            ctx.closePath();\n\t            var ledCenterX = (ctx.canvas.width / 2);\n\t            var ledCenterY = (ctx.canvas.height / 2);\n\t            var ledGradient = mainCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, ctx.canvas.width / 2);\n\t            ledGradient.addColorStop(0, '#3c3c3c');\n\t            ledGradient.addColorStop(1, '#323232');\n\t            ctx.fillStyle = ledGradient;\n\t            ctx.fill();\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawActiveLed = function (ctx, color) {\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t            ctx.closePath();\n\t            var ledCenterX = (ctx.canvas.width / 2);\n\t            var ledCenterY = (ctx.canvas.height / 2);\n\t            var outerRadius;\n\t            if (vertical) {\n\t                outerRadius = ctx.canvas.width / 2;\n\t            } else {\n\t                outerRadius = ctx.canvas.height / 2;\n\t            }\n\t            var ledGradient = mainCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, outerRadius);\n\t            ledGradient.addColorStop(0, color.light.getRgbaColor());\n\t            ledGradient.addColorStop(1, color.dark.getRgbaColor());\n\t            ctx.fillStyle = ledGradient;\n\t            ctx.fill();\n\t            ctx.restore();\n\t        };\n\t\n\t        //************************************ Public methods **************************************\n\t        this.setValue = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n\t            if (value !== targetValue) {\n\t                value = targetValue;\n\t\n\t                if (value > maxMeasuredValue) {\n\t                    maxMeasuredValue = value;\n\t                }\n\t                if (value < minMeasuredValue) {\n\t                    minMeasuredValue = value;\n\t                }\n\t\n\t                if ((value >= threshold && !ledBlinking && thresholdRising) ||\n\t                    (value <= threshold && !ledBlinking && !thresholdRising)) {\n\t                    ledBlinking = true;\n\t                    blink(ledBlinking);\n\t                    if (playAlarm) {\n\t                        audioElement.play();\n\t                    }\n\t                } else if ((value < threshold && ledBlinking && thresholdRising) ||\n\t                           (value > threshold && ledBlinking && !thresholdRising)) {\n\t                    ledBlinking = false;\n\t                    blink(ledBlinking);\n\t                    if (playAlarm) {\n\t                        audioElement.pause();\n\t                    }\n\t                }\n\t\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getValue = function () {\n\t            return value;\n\t        };\n\t\n\t        this.setValueAnimated = function (newValue, callback) {\n\t            var targetValue,\n\t                gauge = this,\n\t                time;\n\t            newValue = parseFloat(newValue);\n\t            targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n\t\n\t            if (value !== targetValue) {\n\t                if (undefined !== tween && tween.isPlaying) {\n\t                    tween.stop();\n\t                }\n\t\n\t                time = fullScaleDeflectionTime * Math.abs(targetValue - value) / (maxValue - minValue);\n\t                time = Math.max(time, fullScaleDeflectionTime / 5);\n\t                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n\t                //tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, 1);\n\t                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, value, targetValue, 1);\n\t                tween.onMotionChanged = function (event) {\n\t                    value = event.target._pos;\n\t\n\t                    if ((value >= threshold && !ledBlinking && thresholdRising) ||\n\t                        (value <= threshold && !ledBlinking && !thresholdRising)) {\n\t                        ledBlinking = true;\n\t                        blink(ledBlinking);\n\t                        if (playAlarm) {\n\t                            audioElement.play();\n\t                        }\n\t                    } else if ((value < threshold && ledBlinking && thresholdRising) ||\n\t                               (value > threshold && ledBlinking && !thresholdRising)) {\n\t                        ledBlinking = false;\n\t                        blink(ledBlinking);\n\t                        if (playAlarm) {\n\t                            audioElement.pause();\n\t                        }\n\t                    }\n\t\n\t                    if (value > maxMeasuredValue) {\n\t                        maxMeasuredValue = value;\n\t                    }\n\t                    if (value < minMeasuredValue) {\n\t                        minMeasuredValue = value;\n\t                    }\n\t\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tween.onMotionFinished = callback;\n\t                }\n\t\n\t                tween.start();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.resetMinMeasuredValue = function () {\n\t            minMeasuredValue = value;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.resetMaxMeasuredValue = function () {\n\t            maxMeasuredValue = value;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMinMeasuredValueVisible = function (visible) {\n\t            minMeasuredValueVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMaxMeasuredValueVisible = function (visible) {\n\t            maxMeasuredValueVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setThresholdVisible = function (visible) {\n\t            thresholdVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setThresholdRising = function (rising) {\n\t            thresholdRising = !!rising;\n\t            // reset existing threshold alerts\n\t            ledBlinking = !ledBlinking;\n\t            blink(ledBlinking);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdDecimals = function (decimals) {\n\t            lcdDecimals = parseInt(decimals, 10);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers({frame: true});\n\t            frameDesign = newFrameDesign;\n\t            init({frame: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            resetBuffers({background: true});\n\t            backgroundColor = newBackgroundColor;\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setValueColor = function (newValueColor) {\n\t            resetBuffers({bargraphled: true});\n\t            valueColor = newValueColor;\n\t            init({bargraphled: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLedColor = function (newLedColor) {\n\t            resetBuffers({led: true});\n\t            ledColor = newLedColor;\n\t            init({led: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLedVisible = function (visible) {\n\t            ledVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdColor = function (newLcdColor) {\n\t            lcdColor = newLcdColor;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setSection = function (areaSec) {\n\t            section = areaSec;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setSectionActive = function (value) {\n\t            useSectionColors = value;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setGradient = function (grad) {\n\t            valueGradient = grad;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setGradientActive = function (value) {\n\t            useValueGradient = value;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMaxMeasuredValue = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n\t            if (maxMeasuredValue !== targetValue) {\n\t                maxMeasuredValue = targetValue;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setMinMeasuredValue = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n\t            if (minMeasuredValue !== targetValue) {\n\t                minMeasuredValue = targetValue;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setTitleString = function (title) {\n\t            titleString = title;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setUnitString = function (unit) {\n\t            unitString = unit;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setMinValue = function (value) {\n\t            minValue = parseFloat(value);\n\t            resetBuffers({background: true,\n\t                          foreground: true,\n\t                          pointer: true});\n\t            init({background: true,\n\t                foreground: true,\n\t                pointer: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getMinValue = function () {\n\t            return minValue;\n\t        };\n\t\n\t        this.setMaxValue = function (value) {\n\t            maxValue = parseFloat(value);\n\t            resetBuffers({background: true,\n\t                          foreground: true,\n\t                          pointer: true});\n\t            init({background: true,\n\t                  foreground: true,\n\t                  pointer: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getMaxValue = function () {\n\t            return maxValue;\n\t        };\n\t\n\t        this.setThreshold = function (newValue) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n\t            if (threshold !== targetValue) {\n\t                threshold = targetValue;\n\t                resetBuffers({background: true});\n\t                init({background: true});\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setThresholdVisible = function (visible) {\n\t            thresholdVisible = !!visible;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init({frame: true,\n\t                      background: true,\n\t                      led: true,\n\t                      pointer: true,\n\t                      foreground: true,\n\t                      bargraphled: true});\n\t            }\n\t\n\t            //mainCtx.save();\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            // Draw frame\n\t            if (frameVisible) {\n\t                mainCtx.drawImage(frameBuffer, 0, 0);\n\t            }\n\t\n\t            // Draw buffered image to visible canvas\n\t            if (backgroundVisible) {\n\t                mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t            }\n\t\n\t            // Draw lcd display\n\t            if (lcdVisible) {\n\t                drawLcdText(mainCtx, value, vertical);\n\t            }\n\t\n\t            // Draw led\n\t            if (ledVisible) {\n\t                mainCtx.drawImage(ledBuffer, ledPosX, ledPosY);\n\t            }\n\t            var valuePos;\n\t            var minMaxX, minMaxY;\n\t           // Draw min measured value indicator\n\t            if (minMeasuredValueVisible) {\n\t                if (vertical) {\n\t                    valuePos = imageHeight * 0.856796 - (imageHeight * 0.728155) * (minMeasuredValue - minValue) / (maxValue - minValue);\n\t                    minMaxX = imageWidth * 0.34 - minMeasuredValueBuffer.width;\n\t                    minMaxY = valuePos - minMeasuredValueBuffer.height / 2;\n\t                } else {\n\t                    valuePos = ((imageWidth * 0.856796) - (imageWidth * 0.128640)) * (minMeasuredValue - minValue) / (maxValue - minValue);\n\t                    minMaxX = imageWidth * 0.142857 - minMeasuredValueBuffer.height / 2 + valuePos;\n\t                    minMaxY = imageHeight * 0.65;\n\t                }\n\t                mainCtx.drawImage(minMeasuredValueBuffer, minMaxX, minMaxY);\n\t            }\n\t\n\t            // Draw max measured value indicator\n\t            if (maxMeasuredValueVisible) {\n\t                if (vertical) {\n\t                    valuePos = imageHeight * 0.856796 - (imageHeight * 0.728155) * (maxMeasuredValue - minValue) / (maxValue - minValue);\n\t                    minMaxX = imageWidth * 0.34 - maxMeasuredValueBuffer.width;\n\t                    minMaxY = valuePos - maxMeasuredValueBuffer.height / 2;\n\t                } else {\n\t                    valuePos = ((imageWidth * 0.856796) - (imageWidth * 0.128640)) * (maxMeasuredValue - minValue) / (maxValue - minValue);\n\t                    minMaxX = imageWidth * 0.142857 - maxMeasuredValueBuffer.height / 2 + valuePos;\n\t                    minMaxY = imageHeight * 0.65;\n\t                }\n\t                mainCtx.drawImage(maxMeasuredValueBuffer, minMaxX, minMaxY);\n\t            }\n\t\n\t            mainCtx.save();\n\t            drawValue(mainCtx, imageWidth, imageHeight);\n\t            mainCtx.restore();\n\t\n\t            // Draw foreground\n\t            if (foregroundVisible) {\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var displaySingle = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var width = (undefined === parameters.width ? 0 : parameters.width),\n\t            height = (undefined === parameters.height ? 0 : parameters.height),\n\t            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n\t            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n\t            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n\t            unitStringVisible = (undefined === parameters.unitStringVisible ? false : parameters.unitStringVisible),\n\t            headerString = (undefined === parameters.headerString ? '' : parameters.headerString),\n\t            headerStringVisible = (undefined === parameters.headerStringVisible ? false : parameters.headerStringVisible),\n\t            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n\t            valuesNumeric = (undefined === parameters.valuesNumeric ? true : parameters.valuesNumeric),\n\t            value = (undefined === parameters.value ? 0 : parameters.value),\n\t            alwaysScroll = (undefined === parameters.alwaysScroll ? false : parameters.alwaysScroll),\n\t            autoScroll = (undefined === parameters.autoScroll ? false : parameters.autoScroll),\n\t            section = (undefined === parameters.section ? null : parameters.section);\n\t\n\t        var scrolling = false;\n\t        var scrollX = 0;\n\t        var scrollTimer;\n\t        var repainting = false;\n\t\n\t        var self = this;\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (width === 0) {\n\t            width = mainCtx.canvas.width;\n\t        }\n\t        if (height === 0) {\n\t            height = mainCtx.canvas.height;\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = width;\n\t        mainCtx.canvas.height = height;\n\t\n\t        var imageWidth = width;\n\t        var imageHeight = height;\n\t        var textWidth = 0;\n\t\n\t        var fontHeight = Math.floor(imageHeight / 1.5);\n\t        var stdFont = fontHeight + 'px ' + stdFontName;\n\t        var lcdFont = fontHeight + 'px ' + lcdFontName;\n\t\n\t        var initialized = false;\n\t\n\t        // **************   Buffer creation  ********************\n\t        // Buffer for the lcd\n\t        var lcdBuffer;\n\t        var sectionBuffer = [];\n\t        var sectionForegroundColor = [];\n\t\n\t        // **************   Image creation  ********************\n\t        var drawLcdText = function (value, color) {\n\t            mainCtx.save();\n\t            mainCtx.textAlign = 'right';\n\t            //mainCtx.textBaseline = 'top';\n\t            mainCtx.strokeStyle = color;\n\t            mainCtx.fillStyle = color;\n\t\n\t            mainCtx.beginPath();\n\t            mainCtx.rect(2, 0, imageWidth - 4, imageHeight);\n\t            mainCtx.closePath();\n\t            mainCtx.clip();\n\t\n\t            if ((lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) &&\n\t                 section === null) {\n\t                mainCtx.shadowColor = 'gray';\n\t                mainCtx.shadowOffsetX = imageHeight * 0.035;\n\t                mainCtx.shadowOffsetY = imageHeight * 0.035;\n\t                mainCtx.shadowBlur = imageHeight * 0.055;\n\t            }\n\t\n\t            mainCtx.font = digitalFont ? lcdFont : stdFont;\n\t\n\t            if (valuesNumeric) {\n\t                // Numeric value\n\t                var unitWidth = 0;\n\t                textWidth = 0;\n\t                if (unitStringVisible) {\n\t                    mainCtx.font = Math.floor(imageHeight / 2.5) + 'px ' + stdFontName;\n\t                    unitWidth = mainCtx.measureText(unitString).width;\n\t                }\n\t                mainCtx.font = digitalFont ? lcdFont : stdFont;\n\t                var lcdText = value.toFixed(lcdDecimals);\n\t                textWidth = mainCtx.measureText(lcdText).width;\n\t                var vPos = 0.38;\n\t                if (headerStringVisible) {\n\t                    vPos = 0.52;\n\t                }\n\t\n\t                mainCtx.fillText(lcdText, imageWidth - unitWidth - 4 - scrollX, imageHeight * 0.5 + fontHeight * vPos);\n\t\n\t                if (unitStringVisible) {\n\t                    mainCtx.font = Math.floor(imageHeight / 2.5) + 'px ' + stdFontName;\n\t                    mainCtx.fillText(unitString, imageWidth - 2 - scrollX, imageHeight * 0.5 + fontHeight * vPos);\n\t                }\n\t                if (headerStringVisible) {\n\t                    mainCtx.textAlign = 'center';\n\t                    mainCtx.font = Math.floor(imageHeight / 3.5) + 'px ' + stdFontName;\n\t                    mainCtx.fillText(headerString, imageWidth / 2, imageHeight * 0.3);\n\t                }\n\t            } else {\n\t                // Text value\n\t                textWidth = mainCtx.measureText(value).width;\n\t                if (alwaysScroll || (autoScroll && textWidth > imageWidth - 4)) {\n\t                    if (!scrolling) {\n\t                        if (textWidth > imageWidth * 0.8) {\n\t                            scrollX = imageWidth - textWidth - imageWidth * 0.2; // leave 20% blank leading space to give time to read start of message\n\t                        } else {\n\t                            scrollX = 0;\n\t                        }\n\t                        scrolling = true;\n\t                        clearTimeout(scrollTimer);  // kill any pending animate\n\t                        scrollTimer = setTimeout(animate, 200);\n\t                    }\n\t                } else if (autoScroll && textWidth <= imageWidth - 4) {\n\t                    scrollX = 0;\n\t                    scrolling = false;\n\t                }\n\t                mainCtx.fillText(value, imageWidth - 2 - scrollX, imageHeight * 0.5 + fontHeight * 0.38);\n\t            }\n\t            mainCtx.restore();\n\t        };\n\t\n\t        var createLcdSectionImage = function (width, height, color, lcdColor) {\n\t            var lcdSectionBuffer = createBuffer(width, height);\n\t            var lcdCtx = lcdSectionBuffer.getContext('2d');\n\t\n\t            lcdCtx.save();\n\t            var xB = 0;\n\t            var yB = 0;\n\t            var wB = width;\n\t            var hB = height;\n\t            var rB = Math.min(width, height) * 0.095;\n\t\n\t            var lcdBackground = lcdCtx.createLinearGradient(0, yB, 0, yB + hB);\n\t\n\t            lcdBackground.addColorStop(0, '#4c4c4c');\n\t            lcdBackground.addColorStop(0.08, '#666666');\n\t            lcdBackground.addColorStop(0.92, '#666666');\n\t            lcdBackground.addColorStop(1, '#e6e6e6');\n\t            lcdCtx.fillStyle = lcdBackground;\n\t\n\t            roundedRectangle(lcdCtx, xB, yB, wB, hB, rB);\n\t\n\t            lcdCtx.fill();\n\t            lcdCtx.restore();\n\t\n\t            lcdCtx.save();\n\t\n\t            var rgb = getColorValues(color);\n\t            var hsb = rgbToHsb(rgb[0], rgb[1], rgb[2]);\n\t\n\t            var rgbStart = getColorValues(lcdColor.gradientStartColor);\n\t            var hsbStart = rgbToHsb(rgbStart[0], rgbStart[1], rgbStart[2]);\n\t            var rgbFraction1 = getColorValues(lcdColor.gradientFraction1Color);\n\t            var hsbFraction1 = rgbToHsb(rgbFraction1[0], rgbFraction1[1], rgbFraction1[2]);\n\t            var rgbFraction2 = getColorValues(lcdColor.gradientFraction2Color);\n\t            var hsbFraction2 = rgbToHsb(rgbFraction2[0], rgbFraction2[1], rgbFraction2[2]);\n\t            var rgbFraction3 = getColorValues(lcdColor.gradientFraction3Color);\n\t            var hsbFraction3 = rgbToHsb(rgbFraction3[0], rgbFraction3[1], rgbFraction3[2]);\n\t            var rgbStop = getColorValues(lcdColor.gradientStopColor);\n\t            var hsbStop = rgbToHsb(rgbStop[0], rgbStop[1], rgbStop[2]);\n\t\n\t            var startColor = hsbToRgb(hsb[0], hsb[1], hsbStart[2] - 0.31);\n\t            var fraction1Color = hsbToRgb(hsb[0], hsb[1], hsbFraction1[2] - 0.31);\n\t            var fraction2Color = hsbToRgb(hsb[0], hsb[1], hsbFraction2[2] - 0.31);\n\t            var fraction3Color = hsbToRgb(hsb[0], hsb[1], hsbFraction3[2] - 0.31);\n\t            var stopColor = hsbToRgb(hsb[0], hsb[1], hsbStop[2] - 0.31);\n\t\n\t            var xF = 1;\n\t            var yF = 1;\n\t            var wF = width - 2;\n\t            var hF = height - 2;\n\t            var rF = rB - 1;\n\t            var lcdForeground = lcdCtx.createLinearGradient(0, yF, 0, yF + hF);\n\t            lcdForeground.addColorStop(0, 'rgb(' + startColor[0] + ', ' + startColor[1] + ', ' + startColor[2] + ')');\n\t            lcdForeground.addColorStop(0.03, 'rgb(' + fraction1Color[0] + ',' + fraction1Color[1] + ',' + fraction1Color[2] + ')');\n\t            lcdForeground.addColorStop(0.49, 'rgb(' + fraction2Color[0] + ',' + fraction2Color[1] + ',' + fraction2Color[2] + ')');\n\t            lcdForeground.addColorStop(0.5, 'rgb(' + fraction3Color[0] + ',' + fraction3Color[1] + ',' + fraction3Color[2] + ')');\n\t            lcdForeground.addColorStop(1, 'rgb(' + stopColor[0] + ',' + stopColor[1] + ',' + stopColor[2] + ')');\n\t            lcdCtx.fillStyle = lcdForeground;\n\t\n\t            roundedRectangle(lcdCtx, xF, yF, wF, hF, rF);\n\t\n\t            lcdCtx.fill();\n\t            lcdCtx.restore();\n\t\n\t            return lcdSectionBuffer;\n\t        };\n\t\n\t        var createSectionForegroundColor = function (sectionColor) {\n\t            var rgbSection = getColorValues(sectionColor);\n\t            var hsbSection = rgbToHsb(rgbSection[0], rgbSection[1], rgbSection[2]);\n\t            var sectionForegroundRgb = hsbToRgb(hsbSection[0], 0.57, 0.83);\n\t            return 'rgb(' + sectionForegroundRgb[0] + ', ' + sectionForegroundRgb[1] + ', ' + sectionForegroundRgb[2] + ')';\n\t        };\n\t\n\t        var animate = function () {\n\t            if (scrolling) {\n\t                if (scrollX > imageWidth) {\n\t                    scrollX = -textWidth;\n\t                }\n\t                scrollX += 2;\n\t                scrollTimer = setTimeout(animate, 50);\n\t            } else {\n\t                scrollX = 0;\n\t            }\n\t            if (!repainting) {\n\t                repainting = true;\n\t                requestAnimFrame(self.repaint);\n\t            }\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        var init = function () {\n\t            var sectionIndex;\n\t            initialized = true;\n\t\n\t            // Create lcd background if selected in background buffer (backgroundBuffer)\n\t            lcdBuffer = createLcdBackgroundImage(width, height, lcdColor);\n\t\n\t            if (null !== section && 0 < section.length) {\n\t                for (sectionIndex = 0 ; sectionIndex < section.length ; sectionIndex++) {\n\t                    sectionBuffer[sectionIndex] = createLcdSectionImage(width, height, section[sectionIndex].color, lcdColor);\n\t                    sectionForegroundColor[sectionIndex] = createSectionForegroundColor(section[sectionIndex].color);\n\t                }\n\t            }\n\t\n\t        };\n\t\n\t        // **************   Public methods  ********************\n\t        this.setValue = function (newValue) {\n\t            if (value !== newValue) {\n\t                value = newValue;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setLcdColor = function (newLcdColor) {\n\t            lcdColor = newLcdColor;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setSection = function (newSection) {\n\t            section = newSection;\n\t            init({background: true, foreground: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setScrolling = function (scroll) {\n\t            if (scroll) {\n\t                if (scrolling) {\n\t                    return;\n\t                } else {\n\t                    scrolling = scroll;\n\t                    animate();\n\t                }\n\t            } else { //disable scrolling\n\t                scrolling = scroll;\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init();\n\t            }\n\t\n\t            //mainCtx.save();\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            var lcdBackgroundBuffer = lcdBuffer;\n\t            var lcdTextColor = lcdColor.textColor;\n\t            var sectionIndex;\n\t            // Draw sections\n\t            if (null !== section && 0 < section.length) {\n\t                for (sectionIndex = 0 ; sectionIndex < section.length ; sectionIndex++) {\n\t                    if (value >= section[sectionIndex].start && value <= section[sectionIndex].stop) {\n\t                        lcdBackgroundBuffer = sectionBuffer[sectionIndex];\n\t                        lcdTextColor = sectionForegroundColor[sectionIndex];\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // Draw lcd background\n\t            mainCtx.drawImage(lcdBackgroundBuffer, 0, 0);\n\t\n\t            // Draw lcd text\n\t            drawLcdText(value, lcdTextColor);\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var displayMulti = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var width = (undefined === parameters.width ? 0 : parameters.width),\n\t            height = (undefined === parameters.height ? 0 : parameters.height),\n\t            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n\t            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n\t            headerString = (undefined === parameters.headerString ? '' : parameters.headerString),\n\t            headerStringVisible = (undefined === parameters.headerStringVisible ? false : parameters.headerStringVisible),\n\t            detailString = (undefined === parameters.detailString ? '' : parameters.detailString),\n\t            detailStringVisible = (undefined === parameters.detailStringVisible ? false : parameters.detailStringVisible),\n\t            linkAltValue = (undefined === parameters.linkAltValue ? true : parameters.linkAltValue),\n\t            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n\t            unitStringVisible = (undefined === parameters.unitStringVisible ? false : parameters.unitStringVisible),\n\t            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n\t            valuesNumeric = (undefined === parameters.valuesNumeric ? true : parameters.valuesNumeric),\n\t            value = (undefined === parameters.value ? 0 : parameters.value),\n\t            altValue = (undefined === parameters.altValue ? 0 : parameters.altValue);\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (width === 0) {\n\t            width = mainCtx.canvas.width;\n\t        }\n\t        if (height === 0) {\n\t            height = mainCtx.canvas.height;\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = width;\n\t        mainCtx.canvas.height = height;\n\t\n\t        var imageWidth = width;\n\t        var imageHeight = height;\n\t\n\t        var stdFont = Math.floor(imageHeight / 1.875) + 'px ' + stdFontName;\n\t        var lcdFont = Math.floor(imageHeight / 1.875) + 'px ' + lcdFontName;\n\t        var stdAltFont = Math.floor(imageHeight / 3.5) + 'px ' + stdFontName;\n\t        var lcdAltFont = Math.floor(imageHeight / 3.5) + 'px ' + lcdFontName;\n\t\n\t        var initialized = false;\n\t\n\t        // **************   Buffer creation  ********************\n\t        // Buffer for the lcd\n\t        var lcdBuffer;\n\t\n\t        // **************   Image creation  ********************\n\t        var drawLcdText = function (value) {\n\t            mainCtx.save();\n\t            mainCtx.textAlign = 'right';\n\t            mainCtx.textBaseline = 'middle';\n\t            mainCtx.strokeStyle = lcdColor.textColor;\n\t            mainCtx.fillStyle = lcdColor.textColor;\n\t\n\t            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n\t                mainCtx.shadowColor = 'gray';\n\t                mainCtx.shadowOffsetX = imageHeight * 0.025;\n\t                mainCtx.shadowOffsetY = imageHeight * 0.025;\n\t                mainCtx.shadowBlur = imageHeight * 0.05;\n\t            }\n\t\n\t            if (valuesNumeric) {\n\t                // Numeric value\n\t                if (headerStringVisible) {\n\t                    mainCtx.font = Math.floor(imageHeight / 3) + 'px ' + stdFontName;\n\t                } else {\n\t                    mainCtx.font = Math.floor(imageHeight / 2.5) + 'px ' + stdFontName;\n\t                }\n\t                var unitWidth = 0;\n\t                if (unitStringVisible) {\n\t                    if (headerStringVisible) {\n\t                        mainCtx.font = Math.floor(imageHeight / 3) + 'px ' + stdFontName;\n\t                        unitWidth = mainCtx.measureText(unitString).width;\n\t                    } else {\n\t                        mainCtx.font = Math.floor(imageHeight / 2.5) + 'px ' + stdFontName;\n\t                        unitWidth = mainCtx.measureText(unitString).width;\n\t                    }\n\t                }\n\t                mainCtx.font = digitalFont ? lcdFont : stdFont;\n\t                var valueText = value.toFixed(lcdDecimals);\n\t                if (headerStringVisible) {\n\t                    mainCtx.fillText(valueText, imageWidth - unitWidth - 4, imageHeight * 0.5);\n\t                } else {\n\t                    mainCtx.fillText(valueText, imageWidth - unitWidth - 4, imageHeight * 0.38);\n\t                }\n\t\n\t                if (unitStringVisible) {\n\t                    mainCtx.font = Math.floor(imageHeight / 3) + 'px ' + stdFontName;\n\t                    mainCtx.fillText(unitString, imageWidth - 2, imageHeight * 0.55);\n\t                }\n\t\n\t                var altValueText = altValue.toFixed(lcdDecimals);\n\t                if (detailStringVisible) {\n\t                    altValueText = detailString + altValueText;\n\t                }\n\t                if (digitalFont) {\n\t                    mainCtx.font = lcdAltFont;\n\t                } else {\n\t                    if (headerStringVisible) {\n\t                        mainCtx.font = Math.floor(imageHeight / 5) + 'px ' + stdFontName;\n\t                    } else {\n\t                        mainCtx.font = stdAltFont;\n\t                    }\n\t                }\n\t                mainCtx.textAlign = 'center';\n\t                if (headerStringVisible) {\n\t                    mainCtx.fillText(altValueText, imageWidth / 2, imageHeight * 0.83);\n\t                    mainCtx.fillText(headerString, imageWidth / 2, imageHeight * 0.16);\n\t                } else {\n\t                    mainCtx.fillText(altValueText, imageWidth / 2, imageHeight * 0.8);\n\t                }\n\t            } else {\n\t                if (headerStringVisible) {\n\t                    // Text value\n\t                    mainCtx.font = Math.floor(imageHeight / 3.5) + 'px ' + stdFontName;\n\t                    mainCtx.fillText(value, imageWidth - 2, imageHeight * 0.48);\n\t\n\t                    //mainCtx.font = stdAltFont;\n\t                    mainCtx.font = Math.floor(imageHeight / 5) + 'px ' + stdFontName;\n\t                    mainCtx.textAlign = 'center';\n\t                    mainCtx.fillText(altValue, imageWidth / 2, imageHeight * 0.83);\n\t                    mainCtx.fillText(headerString, imageWidth / 2, imageHeight * 0.17);\n\t                } else {\n\t                    // Text value\n\t                    mainCtx.font = Math.floor(imageHeight / 2.5) + 'px ' + stdFontName;\n\t                    mainCtx.fillText(value, imageWidth - 2, imageHeight * 0.38);\n\t\n\t                    mainCtx.font = stdAltFont;\n\t                    mainCtx.textAlign = 'center';\n\t                    mainCtx.fillText(altValue, imageWidth / 2, imageHeight * 0.8);\n\t                }\n\t            }\n\t            mainCtx.restore();\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        var init = function () {\n\t            initialized = true;\n\t\n\t            // Create lcd background if selected in background buffer (backgroundBuffer)\n\t            lcdBuffer = createLcdBackgroundImage(width, height, lcdColor);\n\t        };\n\t\n\t        // **************   Public methods  ********************\n\t        this.setValue = function (newValue) {\n\t            if (value !== newValue || altValue !== newValue) {\n\t                if (linkAltValue) {\n\t                    altValue = value;\n\t                }\n\t                value = newValue;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setAltValue = function (altValue) {\n\t            if (altValue !== altValue) {\n\t                altValue = altValue;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setLcdColor = function (newLcdColor) {\n\t            lcdColor = newLcdColor;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init();\n\t            }\n\t\n\t            //mainCtx.save();\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            // Draw lcd background\n\t            mainCtx.drawImage(lcdBuffer, 0, 0);\n\t\n\t            // Draw lcd text\n\t            drawLcdText(value);\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var level = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var size = (undefined === parameters.size ? 0 : parameters.size),\n\t            decimalsVisible = (undefined === parameters.decimalsVisible ? false : parameters.decimalsVisible),\n\t            textOrientationFixed = (undefined === parameters.textOrientationFixed ? false : parameters.textOrientationFixed),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.RED : parameters.pointerColor),\n\t            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            rotateFace = (undefined === parameters.rotateFace ? false : parameters.rotateFace);\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (size === 0) {\n\t            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        var tween;\n\t        var repainting = false;\n\t\n\t        var value = 0;\n\t        var stepValue = 0;\n\t        var visibleValue = 0;\n\t        var angleStep = TWO_PI / 360;\n\t        var angle = this.value;\n\t        var decimals = decimalsVisible ? 1 : 0;\n\t\n\t        var imageWidth = size;\n\t        var imageHeight = size;\n\t\n\t        var centerX = imageWidth / 2;\n\t        var centerY = imageHeight / 2;\n\t\n\t        var initialized = false;\n\t\n\t        // **************   Buffer creation  ********************\n\t        // Buffer for all static background painting code\n\t        var backgroundBuffer = createBuffer(size, size);\n\t        var backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        // Buffer for pointer image painting code\n\t        var pointerBuffer = createBuffer(size, size);\n\t        var pointerContext = pointerBuffer.getContext('2d');\n\t\n\t        // Buffer for step pointer image painting code\n\t        var stepPointerBuffer = createBuffer(size, size);\n\t        var stepPointerContext = stepPointerBuffer.getContext('2d');\n\t\n\t        // Buffer for static foreground painting code\n\t        var foregroundBuffer = createBuffer(size, size);\n\t        var foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        // **************   Image creation  ********************\n\t        var drawTickmarksImage = function (ctx) {\n\t            var stdFont, smlFont, i;\n\t\n\t            ctx.textAlign = 'center';\n\t            ctx.textBaseline = 'middle';\n\t            ctx.save();\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.translate(centerX, centerY);\n\t\n\t            for (i = 0; 360 > i; i++) {\n\t                ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t                ctx.lineWidth = 0.5;\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.38, 0);\n\t                ctx.lineTo(imageWidth * 0.37, 0);\n\t                ctx.closePath();\n\t                ctx.stroke();\n\t\n\t                if (0 === i % 5) {\n\t                    ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t                    ctx.lineWidth = 1;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(imageWidth * 0.38, 0);\n\t                    ctx.lineTo(imageWidth * 0.36, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                }\n\t\n\t                if (0 === i % 45) {\n\t                    ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t                    ctx.lineWidth = 1;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(imageWidth * 0.38, 0);\n\t                    ctx.lineTo(imageWidth * 0.34, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                }\n\t\n\t                // Draw the labels\n\t                if (300 < imageWidth) {\n\t                    stdFont = '14px ' + stdFont;\n\t                    smlFont = '12px '  + stdFont;\n\t                }\n\t                if (300 >= imageWidth) {\n\t                    stdFont = '12px '  + stdFont;\n\t                    smlFont = '10px '  + stdFont;\n\t                }\n\t                if (200 >= imageWidth) {\n\t                    stdFont = '10px '  + stdFont;\n\t                    smlFont = '8px '  + stdFont;\n\t                }\n\t                if (100 >= imageWidth) {\n\t                    stdFont = '8px '  + stdFont;\n\t                    smlFont = '6px '  + stdFont;\n\t                }\n\t                ctx.save();\n\t                switch (i) {\n\t                case 0:\n\t                    ctx.translate(imageWidth * 0.31, 0);\n\t                    ctx.rotate((i * RAD_FACTOR) + HALF_PI);\n\t                    ctx.font = stdFont;\n\t                    ctx.fillText('0\\u00B0', 0, 0, imageWidth);\n\t                    ctx.rotate(-(i * RAD_FACTOR) + HALF_PI);\n\t                    ctx.translate(-imageWidth * 0.31, 0);\n\t\n\t                    ctx.translate(imageWidth * 0.41, 0);\n\t                    ctx.rotate((i * RAD_FACTOR) - HALF_PI);\n\t                    ctx.font = smlFont;\n\t                    ctx.fillText('0%', 0, 0, imageWidth);\n\t                    break;\n\t                case 45:\n\t                    ctx.translate(imageWidth * 0.31, 0);\n\t                    ctx.rotate((i * RAD_FACTOR) + 0.25 * PI);\n\t                    ctx.font = stdFont;\n\t                    ctx.fillText('45\\u00B0', 0, 0, imageWidth);\n\t                    ctx.rotate(-(i * RAD_FACTOR) + 0.25 * PI);\n\t                    ctx.translate(-imageWidth * 0.31, 0);\n\t\n\t                    ctx.translate(imageWidth * 0.31, imageWidth * 0.085);\n\t                    ctx.rotate((i * RAD_FACTOR) - 0.25 * PI);\n\t                    ctx.font = smlFont;\n\t                    ctx.fillText('100%', 0, 0, imageWidth);\n\t                    break;\n\t                case 90:\n\t                    ctx.translate(imageWidth * 0.31, 0);\n\t                    ctx.rotate((i * RAD_FACTOR));\n\t                    ctx.font = stdFont;\n\t                    ctx.fillText('90\\u00B0', 0, 0, imageWidth);\n\t                    ctx.rotate(-(i * RAD_FACTOR));\n\t                    ctx.translate(-imageWidth * 0.31, 0);\n\t\n\t                    ctx.translate(imageWidth * 0.21, 0);\n\t                    ctx.rotate((i * RAD_FACTOR));\n\t                    ctx.font = smlFont;\n\t                    ctx.fillText('\\u221E', 0, 0, imageWidth);\n\t                    break;\n\t                case 135:\n\t                    ctx.translate(imageWidth * 0.31, 0);\n\t                    ctx.rotate((i * RAD_FACTOR) - 0.25 * PI);\n\t                    ctx.font = stdFont;\n\t                    ctx.fillText('45\\u00B0', 0, 0, imageWidth);\n\t                    ctx.rotate(-(i * RAD_FACTOR) - 0.25 * PI);\n\t                    ctx.translate(-imageWidth * 0.31, 0);\n\t\n\t                    ctx.translate(imageWidth * 0.31, -imageWidth * 0.085);\n\t                    ctx.rotate((i * RAD_FACTOR) + 0.25 * PI);\n\t                    ctx.font = smlFont;\n\t                    ctx.fillText('100%', 0, 0, imageWidth);\n\t                    break;\n\t                case 180:\n\t                    ctx.translate(imageWidth * 0.31, 0);\n\t                    ctx.rotate((i * RAD_FACTOR) - HALF_PI);\n\t                    ctx.font = stdFont;\n\t                    ctx.fillText('0\\u00B0', 0, 0, imageWidth);\n\t                    ctx.rotate(-(i * RAD_FACTOR) - HALF_PI);\n\t                    ctx.translate(-imageWidth * 0.31, 0);\n\t\n\t                    ctx.translate(imageWidth * 0.41, 0);\n\t                    ctx.rotate((i * RAD_FACTOR) + HALF_PI);\n\t                    ctx.font = smlFont;\n\t                    ctx.fillText('0%', 0, 0, imageWidth);\n\t                    ctx.translate(-imageWidth * 0.41, 0);\n\t                    break;\n\t                case 225:\n\t                    ctx.translate(imageWidth * 0.31, 0);\n\t                    ctx.rotate((i * RAD_FACTOR) - 0.75 * PI);\n\t                    ctx.font = stdFont;\n\t                    ctx.fillText('45\\u00B0', 0, 0, imageWidth);\n\t                    ctx.rotate(-(i * RAD_FACTOR) - 0.75 * PI);\n\t                    ctx.translate(-imageWidth * 0.31, 0);\n\t\n\t                    ctx.translate(imageWidth * 0.31, imageWidth * 0.085);\n\t                    ctx.rotate((i * RAD_FACTOR) + 0.75 * PI);\n\t                    ctx.font = smlFont;\n\t                    ctx.fillText('100%', 0, 0, imageWidth);\n\t                    break;\n\t                case 270:\n\t                    ctx.translate(imageWidth * 0.31, 0);\n\t                    ctx.rotate((i * RAD_FACTOR) - PI);\n\t                    ctx.font = stdFont;\n\t                    ctx.fillText('90\\u00B0', 0, 0, imageWidth);\n\t                    ctx.rotate(-(i * RAD_FACTOR) - PI);\n\t                    ctx.translate(-imageWidth * 0.31, 0);\n\t\n\t                    ctx.translate(imageWidth * 0.21, 0);\n\t                    ctx.rotate((i * RAD_FACTOR) - PI);\n\t                    ctx.font = smlFont;\n\t                    ctx.fillText('\\u221E', 0, 0, imageWidth);\n\t                    break;\n\t                case 315:\n\t                    ctx.translate(imageWidth * 0.31, 0);\n\t                    ctx.rotate((i * RAD_FACTOR) - 1.25 * PI);\n\t                    ctx.font = stdFont;\n\t                    ctx.fillText('45\\u00B0', 0, 0, imageWidth);\n\t                    ctx.rotate(-(i * RAD_FACTOR) - 1.25 * PI);\n\t                    ctx.translate(-imageWidth * 0.31, 0);\n\t\n\t                    ctx.translate(imageWidth * 0.31, -imageWidth * 0.085);\n\t                    ctx.rotate((i * RAD_FACTOR) + 1.25 * PI);\n\t                    ctx.font = smlFont;\n\t                    ctx.fillText('100%', 0, 0, imageWidth);\n\t                    break;\n\t                }\n\t                ctx.restore();\n\t\n\t                ctx.rotate(angleStep);\n\t            }\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawMarkerImage = function (ctx) {\n\t            ctx.save();\n\t\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t\n\t            // FRAMELEFT\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.200934, imageHeight * 0.434579);\n\t            ctx.lineTo(imageWidth * 0.163551, imageHeight * 0.434579);\n\t            ctx.lineTo(imageWidth * 0.163551, imageHeight * 0.560747);\n\t            ctx.lineTo(imageWidth * 0.200934, imageHeight * 0.560747);\n\t            ctx.lineWidth = 1;\n\t            ctx.lineCap = 'square';\n\t            ctx.lineJoin = 'miter';\n\t            ctx.stroke();\n\t\n\t            // TRIANGLELEFT\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.163551, imageHeight * 0.471962);\n\t            ctx.lineTo(imageWidth * 0.205607, imageHeight * 0.5);\n\t            ctx.lineTo(imageWidth * 0.163551, imageHeight * 0.523364);\n\t            ctx.lineTo(imageWidth * 0.163551, imageHeight * 0.471962);\n\t            ctx.closePath();\n\t            ctx.fill();\n\t\n\t            // FRAMERIGHT\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.799065, imageHeight * 0.434579);\n\t            ctx.lineTo(imageWidth * 0.836448, imageHeight * 0.434579);\n\t            ctx.lineTo(imageWidth * 0.836448, imageHeight * 0.560747);\n\t            ctx.lineTo(imageWidth * 0.799065, imageHeight * 0.560747);\n\t            ctx.lineWidth = 1;\n\t            ctx.lineCap = 'square';\n\t            ctx.lineJoin = 'miter';\n\t            ctx.stroke();\n\t\n\t            // TRIANGLERIGHT\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.836448, imageHeight * 0.471962);\n\t            ctx.lineTo(imageWidth * 0.794392, imageHeight * 0.5);\n\t            ctx.lineTo(imageWidth * 0.836448, imageHeight * 0.523364);\n\t            ctx.lineTo(imageWidth * 0.836448, imageHeight * 0.471962);\n\t            ctx.closePath();\n\t            ctx.fill();\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawPointerImage = function (ctx) {\n\t            ctx.save();\n\t\n\t            // POINTER_LEVEL\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.523364, imageHeight * 0.350467);\n\t            ctx.lineTo(imageWidth * 0.5, imageHeight * 0.130841);\n\t            ctx.lineTo(imageWidth * 0.476635, imageHeight * 0.350467);\n\t            ctx.bezierCurveTo(imageWidth * 0.476635, imageHeight * 0.350467, imageWidth * 0.490654, imageHeight * 0.345794, imageWidth * 0.5, imageHeight * 0.345794);\n\t            ctx.bezierCurveTo(imageWidth * 0.509345, imageHeight * 0.345794, imageWidth * 0.523364, imageHeight * 0.350467, imageWidth * 0.523364, imageHeight * 0.350467);\n\t            ctx.closePath();\n\t            var POINTER_LEVEL_GRADIENT = ctx.createLinearGradient(0, 0.154205 * imageHeight, 0, 0.350466 * imageHeight);\n\t            var tmpDarkColor = pointerColor.dark;\n\t            var tmpLightColor = pointerColor.light;\n\t            tmpDarkColor.setAlpha(0.70588);\n\t            tmpLightColor.setAlpha(0.70588);\n\t            POINTER_LEVEL_GRADIENT.addColorStop(0, tmpDarkColor.getRgbaColor());\n\t            POINTER_LEVEL_GRADIENT.addColorStop(0.3, tmpLightColor.getRgbaColor());\n\t            POINTER_LEVEL_GRADIENT.addColorStop(0.59, tmpLightColor.getRgbaColor());\n\t            POINTER_LEVEL_GRADIENT.addColorStop(1, tmpDarkColor.getRgbaColor());\n\t            ctx.fillStyle = POINTER_LEVEL_GRADIENT;\n\t            var strokeColor_POINTER_LEVEL = pointerColor.light.getRgbaColor();\n\t            ctx.lineWidth = 1;\n\t            ctx.lineCap = 'square';\n\t            ctx.lineJoin = 'miter';\n\t            ctx.strokeStyle = strokeColor_POINTER_LEVEL;\n\t            ctx.fill();\n\t            ctx.stroke();\n\t\n\t            tmpDarkColor.setAlpha(1);\n\t            tmpLightColor.setAlpha(1);\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawStepPointerImage = function (ctx) {\n\t            ctx.save();\n\t\n\t            var tmpDarkColor = pointerColor.dark;\n\t            var tmpLightColor = pointerColor.light;\n\t            tmpDarkColor.setAlpha(0.70588);\n\t            tmpLightColor.setAlpha(0.70588);\n\t\n\t            // POINTER_LEVEL_LEFT\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.285046, imageHeight * 0.514018);\n\t            ctx.lineTo(imageWidth * 0.210280, imageHeight * 0.5);\n\t            ctx.lineTo(imageWidth * 0.285046, imageHeight * 0.481308);\n\t            ctx.bezierCurveTo(imageWidth * 0.285046, imageHeight * 0.481308, imageWidth * 0.280373, imageHeight * 0.490654, imageWidth * 0.280373, imageHeight * 0.495327);\n\t            ctx.bezierCurveTo(imageWidth * 0.280373, imageHeight * 0.504672, imageWidth * 0.285046, imageHeight * 0.514018, imageWidth * 0.285046, imageHeight * 0.514018);\n\t            ctx.closePath();\n\t            var POINTER_LEVEL_LEFT_GRADIENT = ctx.createLinearGradient(0.224299 * imageWidth, 0, 0.289719 * imageWidth, 0);\n\t            POINTER_LEVEL_LEFT_GRADIENT.addColorStop(0, tmpDarkColor.getRgbaColor());\n\t            POINTER_LEVEL_LEFT_GRADIENT.addColorStop(0.3, tmpLightColor.getRgbaColor());\n\t            POINTER_LEVEL_LEFT_GRADIENT.addColorStop(0.59, tmpLightColor.getRgbaColor());\n\t            POINTER_LEVEL_LEFT_GRADIENT.addColorStop(1, tmpDarkColor.getRgbaColor());\n\t            ctx.fillStyle = POINTER_LEVEL_LEFT_GRADIENT;\n\t            var strokeColor_POINTER_LEVEL_LEFT = pointerColor.light.getRgbaColor();\n\t            ctx.lineWidth = 1;\n\t            ctx.lineCap = 'square';\n\t            ctx.lineJoin = 'miter';\n\t            ctx.strokeStyle = strokeColor_POINTER_LEVEL_LEFT;\n\t            ctx.fill();\n\t            ctx.stroke();\n\t\n\t            // POINTER_LEVEL_RIGHT\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.714953, imageHeight * 0.514018);\n\t            ctx.lineTo(imageWidth * 0.789719, imageHeight * 0.5);\n\t            ctx.lineTo(imageWidth * 0.714953, imageHeight * 0.481308);\n\t            ctx.bezierCurveTo(imageWidth * 0.714953, imageHeight * 0.481308, imageWidth * 0.719626, imageHeight * 0.490654, imageWidth * 0.719626, imageHeight * 0.495327);\n\t            ctx.bezierCurveTo(imageWidth * 0.719626, imageHeight * 0.504672, imageWidth * 0.714953, imageHeight * 0.514018, imageWidth * 0.714953, imageHeight * 0.514018);\n\t            ctx.closePath();\n\t            var POINTER_LEVEL_RIGHT_GRADIENT = ctx.createLinearGradient(0.775700 * imageWidth, 0, 0.71028 * imageWidth, 0);\n\t            POINTER_LEVEL_RIGHT_GRADIENT.addColorStop(0, tmpDarkColor.getRgbaColor());\n\t            POINTER_LEVEL_RIGHT_GRADIENT.addColorStop(0.3, tmpLightColor.getRgbaColor());\n\t            POINTER_LEVEL_RIGHT_GRADIENT.addColorStop(0.59, tmpLightColor.getRgbaColor());\n\t            POINTER_LEVEL_RIGHT_GRADIENT.addColorStop(1, tmpDarkColor.getRgbaColor());\n\t            ctx.fillStyle = POINTER_LEVEL_RIGHT_GRADIENT;\n\t            var strokeColor_POINTER_LEVEL_RIGHT = pointerColor.light.getRgbaColor();\n\t            ctx.lineWidth = 1;\n\t            ctx.lineCap = 'square';\n\t            ctx.lineJoin = 'miter';\n\t            ctx.strokeStyle = strokeColor_POINTER_LEVEL_RIGHT;\n\t            ctx.fill();\n\t            ctx.stroke();\n\t\n\t            tmpDarkColor.setAlpha(1);\n\t            tmpLightColor.setAlpha(1);\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        // Draw all static painting code to background\n\t        var init = function () {\n\t            initialized = true;\n\t\n\t            if (frameVisible) {\n\t                drawRadialFrameImage(backgroundContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n\t            }\n\t\n\t            if (backgroundVisible) {\n\t                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\t                drawTickmarksImage(backgroundContext);\n\t            }\n\t\n\t            drawMarkerImage(pointerContext);\n\t\n\t            drawPointerImage(pointerContext);\n\t\n\t            drawStepPointerImage(stepPointerContext);\n\t\n\t            if (foregroundVisible) {\n\t                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, false);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function () {\n\t            backgroundBuffer.width = size;\n\t            backgroundBuffer.height = size;\n\t            backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t            // Buffer for pointer image painting code\n\t            pointerBuffer.width = size;\n\t            pointerBuffer.height = size;\n\t            pointerContext = pointerBuffer.getContext('2d');\n\t\n\t            // Buffer for step pointer image painting code\n\t            stepPointerBuffer.width = size;\n\t            stepPointerBuffer.height = size;\n\t            stepPointerContext = stepPointerBuffer.getContext('2d');\n\t\n\t            // Buffer for static foreground painting code\n\t            foregroundBuffer.width = size;\n\t            foregroundBuffer.height = size;\n\t            foregroundContext = foregroundBuffer.getContext('2d');\n\t        };\n\t\n\t        //************************************ Public methods **************************************\n\t        this.setValue = function (newValue) {\n\t            var targetValue;\n\t            newValue = parseFloat(newValue);\n\t            targetValue = 0 > newValue ? (360 + newValue) : newValue;\n\t            targetValue = 359.9 < newValue ? (newValue - 360) : newValue;\n\t\n\t            if (value !== targetValue) {\n\t                value = targetValue;\n\t                stepValue = 2 * ((Math.abs(value) * 10) % 10);\n\t                if (10 < stepValue) {\n\t                    stepValue -= 20;\n\t                }\n\t\n\t                if (0 === value) {\n\t                    visibleValue = 90;\n\t                }\n\t\n\t                if (0 < value && 90 >= value) {\n\t                    visibleValue = (90 - value);\n\t                }\n\t\n\t                if (90 < value && 180 >= value) {\n\t                    visibleValue = (value - 90);\n\t                }\n\t\n\t                if (180 < value && 270 >= value) {\n\t                    visibleValue = (270 - value);\n\t                }\n\t\n\t                if (270 < value && 360 >= value) {\n\t                    visibleValue = (value - 270);\n\t                }\n\t\n\t                if (0 > value && value >= -90) {\n\t                    visibleValue = (90 - Math.abs(value));\n\t                }\n\t\n\t                if (value < -90 && value >= -180) {\n\t                    visibleValue = Math.abs(value) - 90;\n\t                }\n\t\n\t                if (value < -180 && value >= -270) {\n\t                    visibleValue = 270 - Math.abs(value);\n\t                }\n\t\n\t                if (value < -270 && value >= -360) {\n\t                    visibleValue = Math.abs(value) - 270;\n\t                }\n\t\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getValue = function () {\n\t            return value;\n\t        };\n\t\n\t        this.setValueAnimated = function (newValue, callback) {\n\t            newValue = parseFloat(newValue);\n\t            if (360 - newValue + value < newValue - value) {\n\t                newValue = 360 - newValue;\n\t            }\n\t            if (value !== newValue) {\n\t                if (undefined !== tween && tween.isPlaying) {\n\t                    tween.stop();\n\t                }\n\t\n\t                //tween = new Tween(new Object(),'',Tween.elasticEaseOut,this.value,targetValue, 1);\n\t                tween = new Tween({}, '', Tween.regularEaseInOut, value, newValue, 1);\n\t                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, this.value, targetValue, 1);\n\t\n\t                var gauge = this;\n\t\n\t                tween.onMotionChanged = function (event) {\n\t                    value = event.target._pos;\n\t                    stepValue = 2 * ((Math.abs(value) * 10) % 10);\n\t                    if (10 < stepValue) {\n\t                        stepValue -= 20;\n\t                    }\n\t\n\t                    if (0 === value) {\n\t                        visibleValue = 90;\n\t                    }\n\t\n\t                    if (0 < value && 90 >= value) {\n\t                        visibleValue = (90 - value);\n\t                    }\n\t\n\t                    if (90 < value && 180 >= value) {\n\t                        visibleValue = (value - 90);\n\t                    }\n\t\n\t                    if (180 < value && 270 >= value) {\n\t                        visibleValue = (270 - value);\n\t                    }\n\t\n\t                    if (270 < value && 360 >= value) {\n\t                        visibleValue = (value - 270);\n\t                    }\n\t\n\t                    if (0 > value && value >= -90) {\n\t                        visibleValue = (90 - Math.abs(value));\n\t                    }\n\t\n\t                    if (value < -90 && value >= -180) {\n\t                        visibleValue = Math.abs(value) - 90;\n\t                    }\n\t\n\t                    if (value < -180 && value >= -270) {\n\t                        visibleValue = 270 - Math.abs(value);\n\t                    }\n\t\n\t                    if (value < -270 && value >= -360) {\n\t                        visibleValue = Math.abs(value) - 270;\n\t                    }\n\t\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tween.onMotionFinished = callback;\n\t                }\n\t\n\t                tween.start();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers();\n\t            frameDesign = newFrameDesign;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            resetBuffers();\n\t            backgroundColor = newBackgroundColor;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setForegroundType = function (newForegroundType) {\n\t            resetBuffers();\n\t            foregroundType = newForegroundType;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerColor = function (newPointerColor) {\n\t            resetBuffers();\n\t            pointerColor = newPointerColor;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init();\n\t            }\n\t\n\t            mainCtx.save();\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            angle = HALF_PI + value * angleStep - HALF_PI;\n\t            if (rotateFace) {\n\t                mainCtx.translate(centerX, centerY);\n\t                mainCtx.rotate(-angle);\n\t                mainCtx.translate(-centerX, -centerY);\n\t            }\n\t            // Draw buffered image to visible canvas\n\t            if (frameVisible || backgroundVisible) {\n\t                mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t            }\n\t\n\t            mainCtx.save();\n\t            // Define rotation center\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate(angle);\n\t\n\t            // Draw pointer\n\t            mainCtx.translate(-centerX, -centerY);\n\t            mainCtx.drawImage(pointerBuffer, 0, 0);\n\t\n\t            mainCtx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t            mainCtx.textAlign = 'center';\n\t            mainCtx.textBaseline = 'middle';\n\t\n\t            if (textOrientationFixed) {\n\t                mainCtx.restore();\n\t                if (decimalsVisible) {\n\t                    mainCtx.font = imageWidth * 0.1 + 'px ' + stdFontName;\n\t                } else {\n\t                    mainCtx.font = imageWidth * 0.15 + 'px ' + stdFontName;\n\t                }\n\t                mainCtx.fillText(visibleValue.toFixed(decimals) + '\\u00B0', centerX, centerY, imageWidth * 0.35);\n\t            } else {\n\t                if (decimalsVisible) {\n\t                    mainCtx.font = imageWidth * 0.15 + 'px ' + stdFontName;\n\t                } else {\n\t                    mainCtx.font = imageWidth * 0.2 + 'px ' + stdFontName;\n\t                }\n\t                mainCtx.fillText(visibleValue.toFixed(decimals) + '\\u00B0', centerX, centerY, imageWidth * 0.35);\n\t                mainCtx.restore();\n\t            }\n\t\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate(angle + stepValue * RAD_FACTOR);\n\t            mainCtx.translate(-centerX, -centerY);\n\t            mainCtx.drawImage(stepPointerBuffer, 0, 0);\n\t            mainCtx.restore();\n\t\n\t            // Draw foreground\n\t            if (foregroundVisible) {\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t\n\t            mainCtx.restore();\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var compass = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var size = (undefined === parameters.size ? 0 : parameters.size),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            pointerType = (undefined === parameters.pointerType ? steelseries.PointerType.TYPE2 : parameters.pointerType),\n\t            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.RED : parameters.pointerColor),\n\t            knobType = (undefined === parameters.knobType ? steelseries.KnobType.STANDARD_KNOB : parameters.knobType),\n\t            knobStyle = (undefined === parameters.knobStyle ? steelseries.KnobStyle.SILVER : parameters.knobStyle),\n\t            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            pointSymbols = (undefined === parameters.pointSymbols ? ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'] : parameters.pointSymbols),\n\t            pointSymbolsVisible = (undefined === parameters.pointSymbolsVisible ? true : parameters.pointSymbolsVisible),\n\t            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n\t            degreeScale = (undefined === parameters.degreeScale ? false : parameters.degreeScale),\n\t            roseVisible = (undefined === parameters.roseVisible ? true : parameters.roseVisible),\n\t            rotateFace = (undefined === parameters.rotateFace ? false : parameters.rotateFace);\n\t\n\t        var tween;\n\t        var repainting = false;\n\t        var value = 0;\n\t        var angleStep = RAD_FACTOR;\n\t        var angle = this.value;\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (size === 0) {\n\t            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        var imageWidth = size;\n\t        var imageHeight = size;\n\t\n\t        var centerX = imageWidth / 2;\n\t        var centerY = imageHeight / 2;\n\t\n\t        var shadowOffset = imageWidth * 0.006;\n\t\n\t        var initialized = false;\n\t\n\t        // **************   Buffer creation  ********************\n\t        // Buffer for all static background painting code\n\t        var backgroundBuffer = createBuffer(size, size);\n\t        var backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        // Buffer for symbol/rose painting code\n\t        var roseBuffer = createBuffer(size, size);\n\t        var roseContext = roseBuffer.getContext('2d');\n\t\n\t        // Buffer for pointer image painting code\n\t        var pointerBuffer = createBuffer(size, size);\n\t        var pointerContext = pointerBuffer.getContext('2d');\n\t\n\t        // Buffer for static foreground painting code\n\t        var foregroundBuffer = createBuffer(size, size);\n\t        var foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        // **************   Image creation  ********************\n\t        var drawTickmarksImage = function (ctx) {\n\t            var val;\n\t            ctx.textAlign = 'center';\n\t            ctx.textBaseline = 'middle';\n\t\n\t            var stdFont, smlFont, i;\n\t\n\t            ctx.save();\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.translate(centerX, centerY);\n\t\n\t            if (!degreeScale) {\n\t\n\t                stdFont = 0.12 * imageWidth + 'px serif';\n\t                smlFont = 0.06 * imageWidth + 'px serif';\n\t\n\t                for (i = 0; 360 > i; i += 2.5) {\n\t\n\t                    if (0 === i % 5) {\n\t                        ctx.lineWidth = 1;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(imageWidth * 0.38, 0);\n\t                        ctx.lineTo(imageWidth * 0.36, 0);\n\t                        ctx.closePath();\n\t                        ctx.stroke();\n\t                    }\n\t\n\t                    // Draw the labels\n\t                    ctx.save();\n\t                    switch (i) {\n\t                    case 0:\n\t                        ctx.translate(imageWidth * 0.35, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = stdFont;\n\t                        ctx.fillText(pointSymbols[2], 0, 0, imageWidth);\n\t                        ctx.translate(-imageWidth * 0.35, 0);\n\t                        break;\n\t                    case 45:\n\t                        ctx.translate(imageWidth * 0.29, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = smlFont;\n\t                        ctx.fillText(pointSymbols[3], 0, 0, imageWidth);\n\t                        ctx.translate(-imageWidth * 0.29, 0);\n\t                        break;\n\t                    case 90:\n\t                        ctx.translate(imageWidth * 0.35, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = stdFont;\n\t                        ctx.fillText(pointSymbols[4], 0, 0, imageWidth);\n\t                        ctx.translate(-imageWidth * 0.35, 0);\n\t                        break;\n\t                    case 135:\n\t                        ctx.translate(imageWidth * 0.29, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = smlFont;\n\t                        ctx.fillText(pointSymbols[5], 0, 0, imageWidth);\n\t                        ctx.translate(-imageWidth * 0.29, 0);\n\t                        break;\n\t                    case 180:\n\t                        ctx.translate(imageWidth * 0.35, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = stdFont;\n\t                        ctx.fillText(pointSymbols[6], 0, 0, imageWidth);\n\t                        ctx.translate(-imageWidth * 0.35, 0);\n\t                        break;\n\t                    case 225:\n\t                        ctx.translate(imageWidth * 0.29, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = smlFont;\n\t                        ctx.fillText(pointSymbols[7], 0, 0, imageWidth);\n\t                        ctx.translate(-imageWidth * 0.29, 0);\n\t                        break;\n\t                    case 270:\n\t                        ctx.translate(imageWidth * 0.35, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = stdFont;\n\t                        ctx.fillText(pointSymbols[0], 0, 0, imageWidth);\n\t                        ctx.translate(-imageWidth * 0.35, 0);\n\t                        break;\n\t                    case 315:\n\t                        ctx.translate(imageWidth * 0.29, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = smlFont;\n\t                        ctx.fillText(pointSymbols[1], 0, 0, imageWidth);\n\t                        ctx.translate(-imageWidth * 0.29, 0);\n\t                        break;\n\t                    }\n\t                    ctx.restore();\n\t\n\t                    if (roseVisible && (0 === i || 22.5 === i || 45 === i || 67.5 === i || 90 === i || 112.5 === i || 135 === i || 157.5 === i || 180 === i || 202.5 === i || 225 === i || 247.5 === i || 270 === i || 292.5 === i || 315 === i || 337.5 === i || 360 === i)) {\n\t                        // ROSE_LINE\n\t                        ctx.save();\n\t                        ctx.beginPath();\n\t                        // indent the 16 half quadrant lines a bit for visual effect\n\t                        if (i % 45) {\n\t                            ctx.moveTo(imageWidth * 0.29, 0);\n\t                        } else {\n\t                            ctx.moveTo(imageWidth * 0.38, 0);\n\t                        }\n\t                        ctx.lineTo(imageWidth * 0.1, 0);\n\t                        ctx.closePath();\n\t                        ctx.restore();\n\t                        ctx.lineWidth = 1;\n\t                        ctx.strokeStyle = backgroundColor.symbolColor.getRgbaColor();\n\t                        ctx.stroke();\n\t                    }\n\t                    ctx.rotate(angleStep * 2.5);\n\t                }\n\t            } else {\n\t                stdFont = 0.08 * imageWidth + 'px serif';\n\t                smlFont = imageWidth * 0.033 + 'px serif';\n\t\n\t                ctx.rotate(angleStep * 10);\n\t\n\t                for (i = 10; 360 >= i; i += 10) {\n\t                    // Draw the labels\n\t                    ctx.save();\n\t                    if (pointSymbolsVisible) {\n\t                        switch (i) {\n\t                        case 360:\n\t                            ctx.translate(imageWidth * 0.35, 0);\n\t                            ctx.rotate(HALF_PI);\n\t                            ctx.font = stdFont;\n\t                            ctx.fillText(pointSymbols[2], 0, 0, imageWidth);\n\t                            ctx.translate(-imageWidth * 0.35, 0);\n\t                            break;\n\t                        case 90:\n\t                            ctx.translate(imageWidth * 0.35, 0);\n\t                            ctx.rotate(HALF_PI);\n\t                            ctx.font = stdFont;\n\t                            ctx.fillText(pointSymbols[4], 0, 0, imageWidth);\n\t                            ctx.translate(-imageWidth * 0.35, 0);\n\t                            break;\n\t                        case 180:\n\t                            ctx.translate(imageWidth * 0.35, 0);\n\t                            ctx.rotate(HALF_PI);\n\t                            ctx.font = stdFont;\n\t                            ctx.fillText(pointSymbols[6], 0, 0, imageWidth);\n\t                            ctx.translate(-imageWidth * 0.35, 0);\n\t                            break;\n\t                        case 270:\n\t                            ctx.translate(imageWidth * 0.35, 0);\n\t                            ctx.rotate(HALF_PI);\n\t                            ctx.font = stdFont;\n\t                            ctx.fillText(pointSymbols[0], 0, 0, imageWidth);\n\t                            ctx.translate(-imageWidth * 0.35, 0);\n\t                            break;\n\t                        default:\n\t                            val = (i + 90) % 360;\n\t                            ctx.translate(imageWidth * 0.37, 0);\n\t                            ctx.rotate(HALF_PI);\n\t                            ctx.font = smlFont;\n\t                            ctx.fillText(('0'.substring(val >= 100) + val), 0, 0, imageWidth);\n\t                            ctx.translate(-imageWidth * 0.37, 0);\n\t                        }\n\t                    } else {\n\t                        val = (i + 90) % 360;\n\t                        ctx.translate(imageWidth * 0.37, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = smlFont;\n\t                        ctx.fillText(('0'.substring(val >= 100) + val), 0, 0, imageWidth);\n\t                        ctx.translate(-imageWidth * 0.37, 0);\n\t                    }\n\t                    ctx.restore();\n\t                    ctx.rotate(angleStep * 10);\n\t                }\n\t\n\t            }\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawPointerImage = function (ctx) {\n\t            ctx.save();\n\t\n\t            switch (pointerType.type) {\n\t            case 'type2':\n\t                // NORTHPOINTER\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.532710, imageHeight * 0.453271);\n\t                ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.453271, imageWidth * 0.5, imageHeight * 0.149532, imageWidth * 0.5, imageHeight * 0.149532);\n\t                ctx.bezierCurveTo(imageWidth * 0.5, imageHeight * 0.149532, imageWidth * 0.467289, imageHeight * 0.453271, imageWidth * 0.467289, imageHeight * 0.453271);\n\t                ctx.bezierCurveTo(imageWidth * 0.453271, imageHeight * 0.462616, imageWidth * 0.443925, imageHeight * 0.481308, imageWidth * 0.443925, imageHeight * 0.5);\n\t                ctx.bezierCurveTo(imageWidth * 0.443925, imageHeight * 0.5, imageWidth * 0.556074, imageHeight * 0.5, imageWidth * 0.556074, imageHeight * 0.5);\n\t                ctx.bezierCurveTo(imageWidth * 0.556074, imageHeight * 0.481308, imageWidth * 0.546728, imageHeight * 0.462616, imageWidth * 0.532710, imageHeight * 0.453271);\n\t                ctx.closePath();\n\t                var NORTHPOINTER2_GRADIENT = ctx.createLinearGradient(0.471962 * imageWidth, 0, 0.528036 * imageWidth, 0);\n\t                NORTHPOINTER2_GRADIENT.addColorStop(0, pointerColor.light.getRgbaColor());\n\t                NORTHPOINTER2_GRADIENT.addColorStop(0.46, pointerColor.light.getRgbaColor());\n\t                NORTHPOINTER2_GRADIENT.addColorStop(0.47, pointerColor.medium.getRgbaColor());\n\t                NORTHPOINTER2_GRADIENT.addColorStop(1, pointerColor.medium.getRgbaColor());\n\t                ctx.fillStyle = NORTHPOINTER2_GRADIENT;\n\t                ctx.strokeStyle = pointerColor.dark.getRgbaColor();\n\t                ctx.lineWidth = 1;\n\t                ctx.lineCap = 'square';\n\t                ctx.lineJoin = 'miter';\n\t                ctx.fill();\n\t                ctx.stroke();\n\t\n\t                // SOUTHPOINTER\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.467289, imageHeight * 0.546728);\n\t                ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.546728, imageWidth * 0.5, imageHeight * 0.850467, imageWidth * 0.5, imageHeight * 0.850467);\n\t                ctx.bezierCurveTo(imageWidth * 0.5, imageHeight * 0.850467, imageWidth * 0.532710, imageHeight * 0.546728, imageWidth * 0.532710, imageHeight * 0.546728);\n\t                ctx.bezierCurveTo(imageWidth * 0.546728, imageHeight * 0.537383, imageWidth * 0.556074, imageHeight * 0.518691, imageWidth * 0.556074, imageHeight * 0.5);\n\t                ctx.bezierCurveTo(imageWidth * 0.556074, imageHeight * 0.5, imageWidth * 0.443925, imageHeight * 0.5, imageWidth * 0.443925, imageHeight * 0.5);\n\t                ctx.bezierCurveTo(imageWidth * 0.443925, imageHeight * 0.518691, imageWidth * 0.453271, imageHeight * 0.537383, imageWidth * 0.467289, imageHeight * 0.546728);\n\t                ctx.closePath();\n\t                var SOUTHPOINTER2_GRADIENT = ctx.createLinearGradient(0.471962 * imageWidth, 0, 0.528036 * imageWidth, 0);\n\t                SOUTHPOINTER2_GRADIENT.addColorStop(0, '#e3e5e8');\n\t                SOUTHPOINTER2_GRADIENT.addColorStop(0.48, '#e3e5e8');\n\t                SOUTHPOINTER2_GRADIENT.addColorStop(0.48, '#abb1b8');\n\t                SOUTHPOINTER2_GRADIENT.addColorStop(1, '#abb1b8');\n\t                ctx.fillStyle = SOUTHPOINTER2_GRADIENT;\n\t                var strokeColor_SOUTHPOINTER2 = '#abb1b8';\n\t                ctx.strokeStyle = strokeColor_SOUTHPOINTER2;\n\t                ctx.lineWidth = 1;\n\t                ctx.lineCap = 'square';\n\t                ctx.lineJoin = 'miter';\n\t                ctx.fill();\n\t                ctx.stroke();\n\t                break;\n\t\n\t            case 'type3':\n\t                // NORTHPOINTER\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.5, imageHeight * 0.149532);\n\t                ctx.bezierCurveTo(imageWidth * 0.5, imageHeight * 0.149532, imageWidth * 0.443925, imageHeight * 0.490654, imageWidth * 0.443925, imageHeight * 0.5);\n\t                ctx.bezierCurveTo(imageWidth * 0.443925, imageHeight * 0.532710, imageWidth * 0.467289, imageHeight * 0.556074, imageWidth * 0.5, imageHeight * 0.556074);\n\t                ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.556074, imageWidth * 0.556074, imageHeight * 0.532710, imageWidth * 0.556074, imageHeight * 0.5);\n\t                ctx.bezierCurveTo(imageWidth * 0.556074, imageHeight * 0.490654, imageWidth * 0.5, imageHeight * 0.149532, imageWidth * 0.5, imageHeight * 0.149532);\n\t                ctx.closePath();\n\t                var NORTHPOINTER3_GRADIENT = ctx.createLinearGradient(0.471962 * imageWidth, 0, 0.528036 * imageWidth, 0);\n\t                NORTHPOINTER3_GRADIENT.addColorStop(0, pointerColor.light.getRgbaColor());\n\t                NORTHPOINTER3_GRADIENT.addColorStop(0.46, pointerColor.light.getRgbaColor());\n\t                NORTHPOINTER3_GRADIENT.addColorStop(0.47, pointerColor.medium.getRgbaColor());\n\t                NORTHPOINTER3_GRADIENT.addColorStop(1, pointerColor.medium.getRgbaColor());\n\t                ctx.fillStyle = NORTHPOINTER3_GRADIENT;\n\t                ctx.strokeStyle = pointerColor.dark.getRgbaColor();\n\t                ctx.lineWidth = 1;\n\t                ctx.lineCap = 'square';\n\t                ctx.lineJoin = 'miter';\n\t                ctx.fill();\n\t                ctx.stroke();\n\t                break;\n\t\n\t            case 'type1:':\n\t            /* falls through */\n\t            default:\n\t                // NORTHPOINTER\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.5, imageHeight * 0.495327);\n\t                ctx.lineTo(imageWidth * 0.528037, imageHeight * 0.495327);\n\t                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.149532);\n\t                ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.495327);\n\t                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.495327);\n\t                ctx.closePath();\n\t                var NORTHPOINTER1_GRADIENT = ctx.createLinearGradient(0.471962 * imageWidth, 0, 0.528036 * imageWidth, 0);\n\t                NORTHPOINTER1_GRADIENT.addColorStop(0, pointerColor.light.getRgbaColor());\n\t                NORTHPOINTER1_GRADIENT.addColorStop(0.46, pointerColor.light.getRgbaColor());\n\t                NORTHPOINTER1_GRADIENT.addColorStop(0.47, pointerColor.medium.getRgbaColor());\n\t                NORTHPOINTER1_GRADIENT.addColorStop(1, pointerColor.medium.getRgbaColor());\n\t                ctx.fillStyle = NORTHPOINTER1_GRADIENT;\n\t                ctx.strokeStyle = pointerColor.dark.getRgbaColor();\n\t                ctx.lineWidth = 1;\n\t                ctx.lineCap = 'square';\n\t                ctx.lineJoin = 'miter';\n\t                ctx.fill();\n\t                ctx.stroke();\n\t\n\t                // SOUTHPOINTER\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.5, imageHeight * 0.504672);\n\t                ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.504672);\n\t                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.850467);\n\t                ctx.lineTo(imageWidth * 0.528037, imageHeight * 0.504672);\n\t                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.504672);\n\t                ctx.closePath();\n\t                var SOUTHPOINTER1_GRADIENT = ctx.createLinearGradient(0.471962 * imageWidth, 0, 0.528036 * imageWidth, 0);\n\t                SOUTHPOINTER1_GRADIENT.addColorStop(0, '#e3e5e8');\n\t                SOUTHPOINTER1_GRADIENT.addColorStop(0.48, '#e3e5e8');\n\t                SOUTHPOINTER1_GRADIENT.addColorStop(0.480099, '#abb1b8');\n\t                SOUTHPOINTER1_GRADIENT.addColorStop(1, '#abb1b8');\n\t                ctx.fillStyle = SOUTHPOINTER1_GRADIENT;\n\t                var strokeColor_SOUTHPOINTER = '#abb1b8';\n\t                ctx.strokeStyle = strokeColor_SOUTHPOINTER;\n\t                ctx.lineWidth = 1;\n\t                ctx.lineCap = 'square';\n\t                ctx.lineJoin = 'miter';\n\t                ctx.fill();\n\t                ctx.stroke();\n\t                break;\n\t            }\n\t            ctx.restore();\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        // Draw all static painting code to background\n\t        var init = function () {\n\t            initialized = true;\n\t\n\t            if (frameVisible) {\n\t                drawRadialFrameImage(backgroundContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n\t            }\n\t\n\t            if (backgroundVisible) {\n\t                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\t                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                if (roseVisible) {\n\t                    drawRoseImage(roseContext, centerX, centerY, imageWidth, imageHeight, backgroundColor);\n\t                }\n\t\n\t                drawTickmarksImage(roseContext);\n\t            }\n\t\n\t            drawPointerImage(pointerContext, false);\n\t\n\t            if (foregroundVisible) {\n\t                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, true, knobType, knobStyle);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function () {\n\t            // Buffer for all static background painting code\n\t            backgroundBuffer.width = size;\n\t            backgroundBuffer.height = size;\n\t            backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t            // Buffer for symbols/rose painting code\n\t            roseBuffer.width = size;\n\t            roseBuffer.height = size;\n\t            roseContext = roseBuffer.getContext('2d');\n\t\n\t            // Buffer for pointer image painting code\n\t            pointerBuffer.width = size;\n\t            pointerBuffer.height = size;\n\t            pointerContext = pointerBuffer.getContext('2d');\n\t\n\t            // Buffer for static foreground painting code\n\t            foregroundBuffer.width = size;\n\t            foregroundBuffer.height = size;\n\t            foregroundContext = foregroundBuffer.getContext('2d');\n\t        };\n\t\n\t        //************************************ Public methods **************************************\n\t        this.setValue = function (newValue) {\n\t            newValue = parseFloat(newValue) % 360;\n\t            if (value !== newValue) {\n\t                value = newValue;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getValue = function () {\n\t            return value;\n\t        };\n\t\n\t        this.setValueAnimated = function (newValue, callback) {\n\t            var targetValue = newValue % 360;\n\t            var gauge = this;\n\t            var diff;\n\t            if (value !== targetValue) {\n\t                if (undefined !==  tween && tween.isPlaying) {\n\t                    tween.stop();\n\t                }\n\t\n\t                diff = getShortestAngle(value, targetValue);\n\t                if (rotateFace) {\n\t                    tween = new Tween({}, '', Tween.regularEaseInOut, value, value + diff, 2);\n\t                } else {\n\t                    tween = new Tween({}, '', Tween.elasticEaseOut, value, value + diff, 2);\n\t                }\n\t                tween.onMotionChanged = function (event) {\n\t                    value = event.target._pos % 360;\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tween.onMotionFinished = callback;\n\t                }\n\t\n\t                tween.start();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers();\n\t            frameDesign = newFrameDesign;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            resetBuffers();\n\t            backgroundColor = newBackgroundColor;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setForegroundType = function (newForegroundType) {\n\t            resetBuffers();\n\t            foregroundType = newForegroundType;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerColor = function (newPointerColor) {\n\t            resetBuffers();\n\t            pointerColor = newPointerColor;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerType = function (newPointerType) {\n\t            resetBuffers();\n\t            pointerType = newPointerType;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointSymbols = function (newPointSymbols) {\n\t            resetBuffers();\n\t            pointSymbols = newPointSymbols;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init();\n\t            }\n\t\n\t            mainCtx.save();\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t            // Define rotation center\n\t            angle = HALF_PI + value * angleStep - HALF_PI;\n\t\n\t            if (backgroundVisible || frameVisible) {\n\t                mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t            }\n\t\n\t            if (rotateFace) {\n\t                mainCtx.save();\n\t                mainCtx.translate(centerX, centerY);\n\t                mainCtx.rotate(-angle);\n\t                mainCtx.translate(-centerX, -centerY);\n\t                if (backgroundVisible) {\n\t                    mainCtx.drawImage(roseBuffer, 0, 0);\n\t                }\n\t                mainCtx.restore();\n\t            } else {\n\t                if (backgroundVisible) {\n\t                    mainCtx.drawImage(roseBuffer, 0, 0);\n\t                }\n\t                mainCtx.translate(centerX, centerY);\n\t                mainCtx.rotate(angle);\n\t                mainCtx.translate(-centerX, -centerY);\n\t            }\n\t            // Set the pointer shadow params\n\t            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\t            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\t            mainCtx.shadowBlur = shadowOffset * 2;\n\t            // Draw the pointer\n\t            mainCtx.drawImage(pointerBuffer, 0, 0);\n\t            // Undo the translations & shadow settings\n\t            mainCtx.restore();\n\t\n\t            if (foregroundVisible) {\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var windDirection = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var size = (undefined === parameters.size ? 0 : parameters.size),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            pointerTypeLatest = (undefined === parameters.pointerTypeLatest ? steelseries.PointerType.TYPE1 : parameters.pointerTypeLatest),\n\t            pointerTypeAverage = (undefined === parameters.pointerTypeAverage ? steelseries.PointerType.TYPE8 : parameters.pointerTypeAverage),\n\t            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.RED : parameters.pointerColor),\n\t            pointerColorAverage = (undefined === parameters.pointerColorAverage ? steelseries.ColorDef.BLUE : parameters.pointerColorAverage),\n\t            knobType = (undefined === parameters.knobType ? steelseries.KnobType.STANDARD_KNOB : parameters.knobType),\n\t            knobStyle = (undefined === parameters.knobStyle ? steelseries.KnobStyle.SILVER : parameters.knobStyle),\n\t            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            pointSymbols = (undefined === parameters.pointSymbols ? ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'] : parameters.pointSymbols),\n\t            pointSymbolsVisible = (undefined === parameters.pointSymbolsVisible ? true : parameters.pointSymbolsVisible),\n\t            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n\t            degreeScale = (undefined === parameters.degreeScale ? true : parameters.degreeScale),\n\t            degreeScaleHalf = (undefined === parameters.degreeScaleHalf ? false : parameters.degreeScaleHalf),\n\t            roseVisible = (undefined === parameters.roseVisible ? false : parameters.roseVisible),\n\t            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n\t            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n\t            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n\t            section = (undefined === parameters.section ? null : parameters.section),\n\t            area = (undefined === parameters.area ? null : parameters.area),\n\t            lcdTitleStrings = (undefined === parameters.lcdTitleStrings ? ['Latest', 'Average'] : parameters.lcdTitleStrings),\n\t            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n\t            useColorLabels = (undefined === parameters.useColorLabels ? false : parameters.useColorLabels),\n\t            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\t\n\t        var tweenLatest;\n\t        var tweenAverage;\n\t        var valueLatest = 0;\n\t        var valueAverage = 0;\n\t        var angleStep = RAD_FACTOR;\n\t        var angleLatest = this.valueLatest;\n\t        var angleAverage = this.valueAverage;\n\t        var rotationOffset = -HALF_PI;\n\t        var angleRange = TWO_PI;\n\t        var range = 360;\n\t        var repainting = false;\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (size === 0) {\n\t            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        var imageWidth = size;\n\t        var imageHeight = size;\n\t\n\t        var centerX = imageWidth / 2;\n\t        var centerY = imageHeight / 2;\n\t\n\t        var lcdFontHeight = Math.floor(imageWidth / 10);\n\t        var stdFont = lcdFontHeight + 'px ' + stdFontName;\n\t        var lcdFont = lcdFontHeight + 'px ' + lcdFontName;\n\t        var lcdWidth = imageWidth * 0.3;\n\t        var lcdHeight = imageHeight * 0.12;\n\t        var lcdPosX = (imageWidth - lcdWidth) / 2;\n\t        var lcdPosY1 = imageHeight * 0.32;\n\t        var lcdPosY2 = imageHeight * 0.565;\n\t\n\t        var initialized = false;\n\t\n\t        // **************   Buffer creation  ********************\n\t        // Buffer for all static background painting code\n\t        var backgroundBuffer = createBuffer(size, size);\n\t        var backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        // Buffer for LCD displays\n\t        var lcdBuffer;\n\t\n\t        // Buffer for latest pointer images painting code\n\t        var pointerBufferLatest = createBuffer(size, size);\n\t        var pointerContextLatest = pointerBufferLatest.getContext('2d');\n\t\n\t        // Buffer for average pointer image\n\t        var pointerBufferAverage = createBuffer(size, size);\n\t        var pointerContextAverage = pointerBufferAverage.getContext('2d');\n\t\n\t        // Buffer for static foreground painting code\n\t        var foregroundBuffer = createBuffer(size, size);\n\t        var foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        // **************   Image creation  ********************\n\t        var drawLcdText = function (value, bLatest) {\n\t            mainCtx.save();\n\t            mainCtx.textAlign = 'center';\n\t            mainCtx.strokeStyle = lcdColor.textColor;\n\t            mainCtx.fillStyle = lcdColor.textColor;\n\t\n\t            //convert value from -180,180 range into 0-360 range\n\t            while (value < -180) {\n\t                value += 360;\n\t            }\n\t            if (!degreeScaleHalf && value < 0) {\n\t                value += 360;\n\t            }\n\t\n\t            if (degreeScaleHalf && value > 180) {\n\t                value = -(360 - value);\n\t            }\n\t\n\t            if (value >= 0) {\n\t                value = '00' + Math.round(value);\n\t                value = value.substring(value.length, value.length - 3);\n\t            } else {\n\t                value = '00' + Math.abs(Math.round(value));\n\t                value = '-' + value.substring(value.length, value.length - 3);\n\t            }\n\t\n\t            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n\t                mainCtx.shadowColor = 'gray';\n\t                mainCtx.shadowOffsetX = imageWidth * 0.007;\n\t                mainCtx.shadowOffsetY = imageWidth * 0.007;\n\t                mainCtx.shadowBlur = imageWidth * 0.007;\n\t            }\n\t            mainCtx.font = (digitalFont ? lcdFont : stdFont);\n\t            mainCtx.fillText(value + '\\u00B0', imageWidth / 2 + lcdWidth * 0.05, (bLatest ? lcdPosY1 : lcdPosY2) + lcdHeight * 0.5 + lcdFontHeight * 0.38, lcdWidth * 0.9);\n\t\n\t            mainCtx.restore();\n\t        };\n\t\n\t        var drawAreaSectionImage = function (ctx, start, stop, color, filled) {\n\t\n\t            ctx.save();\n\t            ctx.strokeStyle = color;\n\t            ctx.fillStyle = color;\n\t            ctx.lineWidth = imageWidth * 0.035;\n\t            var startAngle = (angleRange / range * start);\n\t            var stopAngle = startAngle + (stop - start) / (range / angleRange);\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(rotationOffset);\n\t            ctx.beginPath();\n\t            if (filled) {\n\t                ctx.moveTo(0, 0);\n\t                ctx.arc(0, 0, imageWidth * 0.365 - ctx.lineWidth / 2, startAngle, stopAngle, false);\n\t            } else {\n\t                ctx.arc(0, 0, imageWidth * 0.365, startAngle, stopAngle, false);\n\t            }\n\t            if (filled) {\n\t                ctx.moveTo(0, 0);\n\t                ctx.fill();\n\t            } else {\n\t                ctx.stroke();\n\t            }\n\t\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawTickmarksImage = function (ctx) {\n\t            var OUTER_POINT = imageWidth * 0.38,\n\t                MAJOR_INNER_POINT = imageWidth * 0.35,\n\t                //MED_INNER_POINT = imageWidth * 0.355,\n\t                MINOR_INNER_POINT = imageWidth * 0.36,\n\t                TEXT_WIDTH = imageWidth * 0.1,\n\t                TEXT_TRANSLATE_X = imageWidth * 0.31,\n\t                CARDINAL_TRANSLATE_X = imageWidth * 0.36,\n\t                stdFont, smlFont,\n\t                i, val, to;\n\t\n\t            ctx.textAlign = 'center';\n\t            ctx.textBaseline = 'middle';\n\t\n\t            ctx.save();\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.translate(centerX, centerY);\n\t\n\t            if (!degreeScale) {\n\t\n\t                stdFont = 0.12 * imageWidth + 'px serif';\n\t                smlFont = 0.06 * imageWidth + 'px serif';\n\t\n\t                //var angleStep = RAD_FACTOR;\n\t                ctx.lineWidth = 1;\n\t                ctx.strokeStyle = backgroundColor.symbolColor.getRgbaColor();\n\t\n\t                for (i = 0; 360 > i; i += 2.5) {\n\t\n\t                    if (0 === i % 5) {\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(imageWidth * 0.38, 0);\n\t                        ctx.lineTo(imageWidth * 0.36, 0);\n\t                        ctx.closePath();\n\t                        ctx.stroke();\n\t                    }\n\t\n\t                    // Draw the labels\n\t                    ctx.save();\n\t                    switch (i) {\n\t                    case 0: //E\n\t                        ctx.translate(imageWidth * 0.35, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = stdFont;\n\t                        ctx.fillText(pointSymbols[2], 0, 0);\n\t                        ctx.translate(-imageWidth * 0.35, 0);\n\t                        break;\n\t                    case 45: //SE\n\t                        ctx.translate(imageWidth * 0.29, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = smlFont;\n\t                        ctx.fillText(pointSymbols[3], 0, 0);\n\t                        ctx.translate(-imageWidth * 0.29, 0);\n\t                        break;\n\t                    case 90: //S\n\t                        ctx.translate(imageWidth * 0.35, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = stdFont;\n\t                        ctx.fillText(pointSymbols[4], 0, 0);\n\t                        ctx.translate(-imageWidth * 0.35, 0);\n\t                        break;\n\t                    case 135: //SW\n\t                        ctx.translate(imageWidth * 0.29, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = smlFont;\n\t                        ctx.fillText(pointSymbols[5], 0, 0);\n\t                        ctx.translate(-imageWidth * 0.29, 0);\n\t                        break;\n\t                    case 180: //W\n\t                        ctx.translate(imageWidth * 0.35, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = stdFont;\n\t                        ctx.fillText(pointSymbols[6], 0, 0);\n\t                        ctx.translate(-imageWidth * 0.35, 0);\n\t                        break;\n\t                    case 225: //NW\n\t                        ctx.translate(imageWidth * 0.29, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = smlFont;\n\t                        ctx.fillText(pointSymbols[7], 0, 0);\n\t                        ctx.translate(-imageWidth * 0.29, 0);\n\t                        break;\n\t                    case 270: //N\n\t                        ctx.translate(imageWidth * 0.35, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = stdFont;\n\t                        ctx.fillText(pointSymbols[0], 0, 0);\n\t                        ctx.translate(-imageWidth * 0.35, 0);\n\t                        break;\n\t                    case 315: //NE\n\t                        ctx.translate(imageWidth * 0.29, 0);\n\t                        ctx.rotate(HALF_PI);\n\t                        ctx.font = smlFont;\n\t                        ctx.fillText(pointSymbols[1], 0, 0);\n\t                        ctx.translate(-imageWidth * 0.29, 0);\n\t                        break;\n\t                    }\n\t                    ctx.restore();\n\t\n\t                    if (roseVisible && (0 === i || 22.5 === i || 45 === i || 67.5 === i || 90 === i || 112.5 === i || 135 === i || 157.5 === i || 180 === i || 202.5 === i || 225 === i || 247.5 === i || 270 === i || 292.5 === i || 315 === i || 337.5 === i || 360 === i)) {\n\t                        // ROSE_LINE\n\t                        ctx.save();\n\t                        ctx.beginPath();\n\t                        // indent the 16 half quadrant lines a bit for visual effect\n\t                        if (i % 45) {\n\t                            ctx.moveTo(imageWidth * 0.29, 0);\n\t                        } else {\n\t                            ctx.moveTo(imageWidth * 0.38, 0);\n\t                        }\n\t                        ctx.lineTo(imageWidth * 0.1, 0);\n\t                        ctx.closePath();\n\t                        ctx.restore();\n\t                        ctx.stroke();\n\t                    }\n\t                    ctx.rotate(angleStep * 2.5);\n\t                }\n\t            } else {\n\t                stdFont = Math.floor(0.1 * imageWidth) + 'px serif bold';\n\t                smlFont = Math.floor(imageWidth * 0.04) + 'px ' + stdFontName;\n\t\n\t                ctx.rotate(angleStep * 5);\n\t                for (i = 5; 360 >= i; i += 5) {\n\t                    // Draw the labels\n\t                    ctx.save();\n\t                    if (pointSymbolsVisible) {\n\t\n\t                        switch (i) {\n\t                        case 360:\n\t                            ctx.translate(CARDINAL_TRANSLATE_X, 0);\n\t                            ctx.rotate(HALF_PI);\n\t                            ctx.font = stdFont;\n\t                            ctx.fillText(pointSymbols[2], 0, 0, TEXT_WIDTH);\n\t                            ctx.translate(-CARDINAL_TRANSLATE_X, 0);\n\t                            break;\n\t                        case 90:\n\t                            ctx.translate(CARDINAL_TRANSLATE_X, 0);\n\t                            ctx.rotate(HALF_PI);\n\t                            ctx.font = stdFont;\n\t                            ctx.fillText(pointSymbols[4], 0, 0, TEXT_WIDTH);\n\t                            ctx.translate(-CARDINAL_TRANSLATE_X, 0);\n\t                            break;\n\t                        case 180:\n\t                            ctx.translate(CARDINAL_TRANSLATE_X, 0);\n\t                            ctx.rotate(HALF_PI);\n\t                            ctx.font = stdFont;\n\t                            ctx.fillText(pointSymbols[6], 0, 0, TEXT_WIDTH);\n\t                            ctx.translate(-CARDINAL_TRANSLATE_X, 0);\n\t                            break;\n\t                        case 270:\n\t                            ctx.translate(CARDINAL_TRANSLATE_X, 0);\n\t                            ctx.rotate(HALF_PI);\n\t                            ctx.font = stdFont;\n\t                            ctx.fillText(pointSymbols[0], 0, 0, TEXT_WIDTH);\n\t                            ctx.translate(-CARDINAL_TRANSLATE_X, 0);\n\t                            break;\n\t\n\t                        case 5:\n\t                        case 85:\n\t                        case 95:\n\t                        case 175:\n\t                        case 185:\n\t                        case 265:\n\t                        case 275:\n\t                        case 355:\n\t                            //leave room for ordinal labels\n\t                            break;\n\t\n\t                        default:\n\t                            if ((i + 90) % 20) {\n\t                                ctx.lineWidth = ((i + 90) % 5) ? 1.5 : 1;\n\t                                ctx.beginPath();\n\t                                ctx.moveTo(OUTER_POINT, 0);\n\t                                to = (i + 90) % 10 ? MINOR_INNER_POINT : MAJOR_INNER_POINT;\n\t                                ctx.lineTo(to, 0);\n\t                                ctx.closePath();\n\t                                ctx.stroke();\n\t                            } else {\n\t                                ctx.lineWidth = 1.5;\n\t                                ctx.beginPath();\n\t                                ctx.moveTo(OUTER_POINT, 0);\n\t                                ctx.lineTo(MAJOR_INNER_POINT, 0);\n\t                                ctx.closePath();\n\t                                ctx.stroke();\n\t                                val = (i + 90) % 360;\n\t                                ctx.translate(TEXT_TRANSLATE_X, 0);\n\t                                ctx.rotate(HALF_PI);\n\t                                ctx.font = smlFont;\n\t                                ctx.fillText(('0'.substring(val >= 100) + val), 0, 0, TEXT_WIDTH);\n\t                                ctx.translate(-TEXT_TRANSLATE_X, 0);\n\t                            }\n\t                        }\n\t                    } else {\n\t\n\t                        if ((i + 90) % 20) {\n\t                            ctx.lineWidth = ((i + 90) % 5) ? 1.5 : 1;\n\t                            ctx.beginPath();\n\t                            ctx.moveTo(OUTER_POINT, 0);\n\t                            to = (i + 90) % 10 ? MINOR_INNER_POINT : MAJOR_INNER_POINT;\n\t                            ctx.lineTo(to, 0);\n\t                            ctx.closePath();\n\t                            ctx.stroke();\n\t                        } else {\n\t                            ctx.lineWidth = 1.5;\n\t                            ctx.beginPath();\n\t                            ctx.moveTo(OUTER_POINT, 0);\n\t                            ctx.lineTo(MAJOR_INNER_POINT, 0);\n\t                            ctx.closePath();\n\t                            ctx.stroke();\n\t                            val = (i + 90) % 360;\n\t                            if (degreeScaleHalf) {\n\t                                //invert 180-360\n\t                                if (val > 180) {\n\t                                    val = -(360 - val);\n\t                                }\n\t                            }\n\t                            ctx.translate(TEXT_TRANSLATE_X, 0);\n\t                            ctx.rotate(HALF_PI);\n\t                            ctx.font = smlFont;\n\t                            ctx.fillText(val, 0, 0, TEXT_WIDTH);\n\t                            ctx.translate(-TEXT_TRANSLATE_X, 0);\n\t                        }\n\t                    }\n\t                    ctx.restore();\n\t                    ctx.rotate(angleStep * 5);\n\t                }\n\t\n\t            }\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawLcdTitles = function (ctx) {\n\t            if (lcdTitleStrings.length > 0) {\n\t                ctx.save();\n\t                ctx.textAlign = 'center';\n\t                ctx.textBaseline = 'middle';\n\t                ctx.fillStyle = (useColorLabels ? pointerColor.medium.getRgbaColor() : backgroundColor.labelColor.getRgbaColor());\n\t                ctx.font = 0.040 * imageWidth + 'px ' + stdFontName;\n\t                ctx.fillText(lcdTitleStrings[0], imageWidth / 2, imageHeight * 0.29, imageWidth * 0.3);\n\t                ctx.fillStyle = (useColorLabels ? pointerColorAverage.medium.getRgbaColor() : backgroundColor.labelColor.getRgbaColor());\n\t                ctx.fillText(lcdTitleStrings[1], imageWidth / 2, imageHeight * 0.71, imageWidth * 0.3);\n\t                if (titleString.length > 0) {\n\t                    ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t                    ctx.font = 0.0467 * imageWidth + 'px ' + stdFontName;\n\t                    ctx.fillText(titleString, imageWidth / 2, imageHeight * 0.5, imageWidth * 0.3);\n\t                }\n\t            }\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        // Draw all static painting code to background\n\t\n\t        var init = function (parameters) {\n\t            parameters = parameters || {};\n\t            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n\t            var drawPointer = (undefined === parameters.pointer ? false : parameters.pointer);\n\t            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\t\n\t            initialized = true;\n\t\n\t            if (drawBackground && frameVisible) {\n\t                drawRadialFrameImage(backgroundContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n\t            }\n\t\n\t            if (drawBackground && backgroundVisible) {\n\t                // Create background in background buffer (backgroundBuffer)\n\t                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                // Create custom layer in background buffer (backgroundBuffer)\n\t                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                // Create section in background buffer (backgroundBuffer)\n\t                if (null !== section && 0 < section.length) {\n\t                    var sectionIndex = section.length;\n\t                    do {\n\t                        sectionIndex--;\n\t                        drawAreaSectionImage(backgroundContext, section[sectionIndex].start, section[sectionIndex].stop, section[sectionIndex].color, false);\n\t                    }\n\t                    while (0 < sectionIndex);\n\t                }\n\t\n\t                // Create area in background buffer (backgroundBuffer)\n\t                if (null !== area && 0 < area.length) {\n\t                    var areaIndex = area.length;\n\t                    do {\n\t                        areaIndex--;\n\t                        drawAreaSectionImage(backgroundContext, area[areaIndex].start, area[areaIndex].stop, area[areaIndex].color, true);\n\t                    }\n\t                    while (0 < areaIndex);\n\t                }\n\t\n\t                drawTickmarksImage(backgroundContext);\n\t            }\n\t\n\t            if (drawBackground && roseVisible) {\n\t                drawRoseImage(backgroundContext, centerX, centerY, imageWidth, imageHeight, backgroundColor);\n\t            }\n\t\n\t            // Create lcd background if selected in background buffer (backgroundBuffer)\n\t            if (drawBackground && lcdVisible) {\n\t                lcdBuffer = createLcdBackgroundImage(lcdWidth, lcdHeight, lcdColor);\n\t                backgroundContext.drawImage(lcdBuffer, lcdPosX, lcdPosY1);\n\t                backgroundContext.drawImage(lcdBuffer, lcdPosX, lcdPosY2);\n\t                // Create title in background buffer (backgroundBuffer)\n\t                drawLcdTitles(backgroundContext);\n\t            }\n\t\n\t            if (drawPointer) {\n\t                drawPointerImage(pointerContextAverage, imageWidth, pointerTypeAverage, pointerColorAverage, backgroundColor.labelColor);\n\t                drawPointerImage(pointerContextLatest, imageWidth, pointerTypeLatest, pointerColor, backgroundColor.labelColor);\n\t            }\n\t\n\t            if (drawForeground && foregroundVisible) {\n\t                var knobVisible = (pointerTypeLatest.type === 'type15' || pointerTypeLatest.type === 'type16' ? false : true);\n\t                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, knobVisible, knobType, knobStyle);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function (buffers) {\n\t            buffers = buffers || {};\n\t            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n\t            var resetPointer = (undefined === buffers.pointer ? false : buffers.pointer);\n\t            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\t\n\t            // Buffer for all static background painting code\n\t            if (resetBackground) {\n\t                backgroundBuffer.width = size;\n\t                backgroundBuffer.height = size;\n\t                backgroundContext = backgroundBuffer.getContext('2d');\n\t            }\n\t            // Buffers for pointer image painting code\n\t            if (resetPointer) {\n\t                pointerBufferLatest.width = size;\n\t                pointerBufferLatest.height = size;\n\t                pointerContextLatest = pointerBufferLatest.getContext('2d');\n\t\n\t                pointerBufferAverage.width = size;\n\t                pointerBufferAverage.height = size;\n\t                pointerContextAverage = pointerBufferAverage.getContext('2d');\n\t            }\n\t            // Buffer for static foreground painting code\n\t            if (resetForeground) {\n\t                foregroundBuffer.width = size;\n\t                foregroundBuffer.height = size;\n\t                foregroundContext = foregroundBuffer.getContext('2d');\n\t            }\n\t        };\n\t\n\t        //************************************ Public methods **************************************\n\t        this.setValueLatest = function (newValue) {\n\t            // Actually need to handle 0-360 rather than 0-359\n\t            // 1-360 are used for directions\n\t            // 0 is used as a special case to indicate 'calm'\n\t            newValue = parseFloat(newValue);\n\t            newValue = newValue === 360 ? 360 : newValue % 360;\n\t            if (valueLatest !== newValue) {\n\t                valueLatest = newValue;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getValueLatest = function () {\n\t            return valueLatest;\n\t        };\n\t\n\t        this.setValueAverage = function (newValue) {\n\t            // Actually need to handle 0-360 rather than 0-359\n\t            // 1-360 are used for directions\n\t            // 0 is used as a special case to indicate 'calm'\n\t            newValue = parseFloat(newValue);\n\t            newValue = newValue === 360 ? 360 : newValue % 360;\n\t            if (valueAverage !== newValue) {\n\t                valueAverage = newValue;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getValueAverage = function () {\n\t            return valueAverage;\n\t        };\n\t\n\t        this.setValueAnimatedLatest = function (newValue, callback) {\n\t            var targetValue,\n\t                gauge = this,\n\t                diff,\n\t                time;\n\t            // Actually need to handle 0-360 rather than 0-359\n\t            // 1-360 are used for directions\n\t            // 0 is used as a special case to indicate 'calm'\n\t            newValue = parseFloat(newValue);\n\t            targetValue = (newValue === 360 ? 360 : newValue % 360);\n\t\n\t            if (valueLatest !== targetValue) {\n\t                if (undefined !== tweenLatest && tweenLatest.isPlaying) {\n\t                    tweenLatest.stop();\n\t                }\n\t\n\t                diff = getShortestAngle(valueLatest, targetValue);\n\t\n\t                if (diff !== 0) { // 360 - 0 is a diff of zero\n\t                    time = fullScaleDeflectionTime * Math.abs(diff) / 180;\n\t                    time = Math.max(time, fullScaleDeflectionTime / 5);\n\t                    tweenLatest = new Tween({}, '', Tween.regularEaseInOut, valueLatest, valueLatest + diff, time);\n\t                    tweenLatest.onMotionChanged = function (event) {\n\t                        valueLatest = event.target._pos === 360 ? 360 : event.target._pos % 360;\n\t                        if (!repainting) {\n\t                            repainting = true;\n\t                            requestAnimFrame(gauge.repaint);\n\t                        }\n\t                    };\n\t\n\t                    tweenLatest.onMotionFinished = function (event) {\n\t                        valueLatest = event.target._pos === 360 ? 360 : event.target._pos % 360;\n\t                        if (!repainting) {\n\t                            repainting = true;\n\t                            requestAnimFrame(gauge.repaint);\n\t                        }\n\t                        // do we have a callback function to process?\n\t                        if (callback && typeof(callback) === \"function\") {\n\t                            callback();\n\t                        }\n\t                    };\n\t\n\t                    tweenLatest.start();\n\t                } else {\n\t                    // target different from current, but diff is zero (0 -> 360 for instance), so just repaint\n\t                    valueLatest = targetValue;\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                }\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setValueAnimatedAverage = function (newValue, callback) {\n\t            var targetValue,\n\t                gauge = this,\n\t                diff, time;\n\t            // Actually need to handle 0-360 rather than 0-359\n\t            // 1-360 are used for directions\n\t            // 0 is used as a special case to indicate 'calm'\n\t            newValue = parseFloat(newValue);\n\t            targetValue = (newValue === 360 ? 360 : newValue % 360);\n\t            if (valueAverage !== newValue) {\n\t                if (undefined !== tweenAverage && tweenAverage.isPlaying) {\n\t                    tweenAverage.stop();\n\t                }\n\t\n\t                diff = getShortestAngle(valueAverage, targetValue);\n\t                if (diff !== 0) { // 360 - 0 is a diff of zero\n\t                    time = fullScaleDeflectionTime * Math.abs(diff) / 180;\n\t                    time = Math.max(time, fullScaleDeflectionTime / 5);\n\t                    tweenAverage = new Tween({}, '', Tween.regularEaseInOut, valueAverage, valueAverage + diff, time);\n\t                    tweenAverage.onMotionChanged = function (event) {\n\t                        valueAverage = event.target._pos === 360 ? 360 : event.target._pos % 360;\n\t                        if (!repainting) {\n\t                            repainting = true;\n\t                            requestAnimFrame(gauge.repaint);\n\t                        }\n\t                    };\n\t\n\t                    tweenAverage.onMotionFinished = function (event) {\n\t                        valueLatest = event.target._pos === 360 ? 360 : event.target._pos % 360;\n\t                        if (!repainting) {\n\t                            repainting = true;\n\t                            requestAnimFrame(gauge.repaint);\n\t                        }\n\t                        // do we have a callback function to process?\n\t                        if (callback && typeof(callback) === \"function\") {\n\t                            callback();\n\t                        }\n\t                    };\n\t                    \n\t                    tweenAverage.start();\n\t                } else {\n\t                    // target different from current, but diff is zero (0 -> 360 for instance), so just repaint\n\t                    valueAverage = targetValue;\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                }\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setArea = function (areaVal) {\n\t            area = areaVal;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setSection = function (areaSec) {\n\t            section = areaSec;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            frameDesign = newFrameDesign;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            backgroundColor = newBackgroundColor;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setForegroundType = function (newForegroundType) {\n\t            resetBuffers({foreground: true});\n\t            foregroundType = newForegroundType;\n\t            init({foreground: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerColor = function (newPointerColor) {\n\t            resetBuffers({pointer: true});\n\t            pointerColor = newPointerColor;\n\t            init({pointer: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerColorAverage = function (newPointerColor) {\n\t            resetBuffers({pointer: true});\n\t            pointerColorAverage = newPointerColor;\n\t            init({pointer: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerType = function (newPointerType) {\n\t            pointerTypeLatest = newPointerType;\n\t            resetBuffers({pointer: true,\n\t                          foreground: true\n\t                         });\n\t            init({pointer: true,\n\t                  foreground: true\n\t                  });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerTypeAverage = function (newPointerType) {\n\t            pointerTypeAverage = newPointerType;\n\t            resetBuffers({pointer: true,\n\t                          foreground: true\n\t                         });\n\t            init({pointer: true,\n\t                  foreground: true\n\t                  });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointSymbols = function (newPointSymbols) {\n\t            pointSymbols = newPointSymbols;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdColor = function (newLcdColor) {\n\t            lcdColor = newLcdColor;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdTitleStrings = function (titles) {\n\t            lcdTitleStrings = titles;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init({frame: true,\n\t                      background: true,\n\t                      led: true,\n\t                      pointer: true,\n\t                      foreground: true});\n\t            }\n\t\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            if (frameVisible || backgroundVisible) {\n\t                mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t            }\n\t\n\t            // Draw lcd display\n\t            if (lcdVisible) {\n\t                drawLcdText(valueLatest, true);\n\t                drawLcdText(valueAverage, false);\n\t            }\n\t\n\t            // Define rotation angle\n\t            angleAverage = valueAverage * angleStep;\n\t\n\t            // we have to draw to a rotated temporary image area so we can translate in\n\t            // absolute x, y values when drawing to main context\n\t            var shadowOffset = imageWidth * 0.006;\n\t\n\t            // Define rotation center\n\t            mainCtx.save();\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate(angleAverage);\n\t            mainCtx.translate(-centerX, -centerY);\n\t            // Set the pointer shadow params\n\t            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\t            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\t            mainCtx.shadowBlur = shadowOffset * 2;\n\t            // Draw the pointer\n\t            mainCtx.drawImage(pointerBufferAverage, 0, 0);\n\t            // Define rotation angle difference for average pointer\n\t            angleLatest = valueLatest * angleStep  - angleAverage;\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate(angleLatest);\n\t            mainCtx.translate(-centerX, -centerY);\n\t            mainCtx.drawImage(pointerBufferLatest, 0, 0);\n\t            mainCtx.restore();\n\t\n\t            if (foregroundVisible) {\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var horizon = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var size = (undefined === parameters.size ? 0 : parameters.size),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.WHITE : parameters.pointerColor);\n\t\n\t        var tweenRoll;\n\t        var tweenPitch;\n\t        var repainting = false;\n\t        var roll = 0;\n\t        var pitch = 0;\n\t        var pitchPixel = (PI * size) / 360;\n\t        var pitchOffset = 0;\n\t        var upsidedown = false;\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (size === 0) {\n\t            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        var imageWidth = size;\n\t        var imageHeight = size;\n\t\n\t        var centerX = imageWidth / 2;\n\t        var centerY = imageHeight / 2;\n\t\n\t        var initialized = false;\n\t\n\t        // **************   Buffer creation  ********************\n\t        // Buffer for all static background painting code\n\t        var backgroundBuffer = createBuffer(size, size);\n\t        var backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        // Buffer for pointer image painting code\n\t        var valueBuffer = createBuffer(size, size * PI);\n\t        var valueContext = valueBuffer.getContext('2d');\n\t\n\t        // Buffer for indicator painting code\n\t        var indicatorBuffer = createBuffer(size * 0.037383, size * 0.056074);\n\t        var indicatorContext = indicatorBuffer.getContext('2d');\n\t\n\t        // Buffer for static foreground painting code\n\t        var foregroundBuffer = createBuffer(size, size);\n\t        var foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        // **************   Image creation  ********************\n\t        var drawHorizonBackgroundImage = function (ctx) {\n\t            ctx.save();\n\t\n\t            var imgWidth = size;\n\t            var imgHeight = size * PI;\n\t            var y;\n\t\n\t            // HORIZON\n\t            ctx.beginPath();\n\t            ctx.rect(0, 0, imgWidth, imgHeight);\n\t            ctx.closePath();\n\t            var HORIZON_GRADIENT = ctx.createLinearGradient(0, 0, 0, imgHeight);\n\t            HORIZON_GRADIENT.addColorStop(0, '#7fd5f0');\n\t            HORIZON_GRADIENT.addColorStop(0.5, '#7fd5f0');\n\t            HORIZON_GRADIENT.addColorStop(0.5, '#3c4439');\n\t            HORIZON_GRADIENT.addColorStop(1, '#3c4439');\n\t            ctx.fillStyle = HORIZON_GRADIENT;\n\t            ctx.fill();\n\t\n\t            ctx.lineWidth = 1;\n\t            var stepSizeY = imgHeight / 360 * 5;\n\t            var stepTen = false;\n\t            var step = 10;\n\t\n\t            ctx.textAlign = 'center';\n\t            ctx.textBaseline = 'middle';\n\t            var fontSize = imgWidth * 0.04;\n\t            ctx.font = fontSize + 'px ' + stdFontName;\n\t            ctx.fillStyle = '#37596e';\n\t            for (y = imgHeight / 2 - stepSizeY; y > 0; y -= stepSizeY) {\n\t                if (step <= 90) {\n\t                    if (stepTen) {\n\t                        ctx.fillText(step, (imgWidth - (imgWidth * 0.2)) / 2 - 8, y, imgWidth * 0.375);\n\t                        ctx.fillText(step, imgWidth - (imgWidth - (imgWidth * 0.2)) / 2 + 8, y, imgWidth * 0.375);\n\t                        ctx.beginPath();\n\t                        ctx.moveTo((imgWidth - (imgWidth * 0.2)) / 2, y);\n\t                        ctx.lineTo(imgWidth - (imgWidth - (imgWidth * 0.2)) / 2, y);\n\t                        ctx.closePath();\n\t                        step += 10;\n\t                    } else {\n\t                        ctx.beginPath();\n\t                        ctx.moveTo((imgWidth - (imgWidth * 0.1)) / 2, y);\n\t                        ctx.lineTo(imgWidth - (imgWidth - (imgWidth * 0.1)) / 2, y);\n\t                        ctx.closePath();\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                stepTen ^= true;\n\t            }\n\t            stepTen = false;\n\t            step = 10;\n\t            ctx.strokeStyle = '#FFFFFF';\n\t            ctx.lineWidth = 1.5;\n\t            ctx.beginPath();\n\t            ctx.moveTo(0, imgHeight / 2);\n\t            ctx.lineTo(imgWidth, imgHeight / 2);\n\t            ctx.closePath();\n\t            ctx.stroke();\n\t            ctx.fillStyle = '#FFFFFF';\n\t            ctx.lineWidth = 1;\n\t            for (y = imgHeight / 2 + stepSizeY; y <= imgHeight; y += stepSizeY) {\n\t                if (step <= 90) {\n\t                    if (stepTen) {\n\t                        ctx.fillText(-step, (imgWidth - (imgWidth * 0.2)) / 2 - 8, y, imgWidth * 0.375);\n\t                        ctx.fillText(-step, imgWidth - (imgWidth - (imgWidth * 0.2)) / 2 + 8, y, imgWidth * 0.375);\n\t                        ctx.beginPath();\n\t                        ctx.moveTo((imgWidth - (imgWidth * 0.2)) / 2, y);\n\t                        ctx.lineTo(imgWidth - (imgWidth - (imgWidth * 0.2)) / 2, y);\n\t                        ctx.closePath();\n\t                        step += 10;\n\t                    } else {\n\t                        ctx.beginPath();\n\t                        ctx.moveTo((imgWidth - (imgWidth * 0.1)) / 2, y);\n\t                        ctx.lineTo(imgWidth - (imgWidth - (imgWidth * 0.1)) / 2, y);\n\t                        ctx.closePath();\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                stepTen ^= true;\n\t            }\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawHorizonForegroundImage = function (ctx) {\n\t            ctx.save();\n\t\n\t            ctx.fillStyle = pointerColor.light.getRgbaColor();\n\t\n\t            // CENTERINDICATOR\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.476635, imageHeight * 0.5);\n\t            ctx.bezierCurveTo(imageWidth * 0.476635, imageHeight * 0.514018, imageWidth * 0.485981, imageHeight * 0.523364, imageWidth * 0.5, imageHeight * 0.523364);\n\t            ctx.bezierCurveTo(imageWidth * 0.514018, imageHeight * 0.523364, imageWidth * 0.523364, imageHeight * 0.514018, imageWidth * 0.523364, imageHeight * 0.5);\n\t            ctx.bezierCurveTo(imageWidth * 0.523364, imageHeight * 0.485981, imageWidth * 0.514018, imageHeight * 0.476635, imageWidth * 0.5, imageHeight * 0.476635);\n\t            ctx.bezierCurveTo(imageWidth * 0.485981, imageHeight * 0.476635, imageWidth * 0.476635, imageHeight * 0.485981, imageWidth * 0.476635, imageHeight * 0.5);\n\t            ctx.closePath();\n\t            ctx.moveTo(imageWidth * 0.415887, imageHeight * 0.504672);\n\t            ctx.lineTo(imageWidth * 0.415887, imageHeight * 0.495327);\n\t            ctx.bezierCurveTo(imageWidth * 0.415887, imageHeight * 0.495327, imageWidth * 0.467289, imageHeight * 0.495327, imageWidth * 0.467289, imageHeight * 0.495327);\n\t            ctx.bezierCurveTo(imageWidth * 0.471962, imageHeight * 0.481308, imageWidth * 0.481308, imageHeight * 0.471962, imageWidth * 0.495327, imageHeight * 0.467289);\n\t            ctx.bezierCurveTo(imageWidth * 0.495327, imageHeight * 0.467289, imageWidth * 0.495327, imageHeight * 0.415887, imageWidth * 0.495327, imageHeight * 0.415887);\n\t            ctx.lineTo(imageWidth * 0.504672, imageHeight * 0.415887);\n\t            ctx.bezierCurveTo(imageWidth * 0.504672, imageHeight * 0.415887, imageWidth * 0.504672, imageHeight * 0.467289, imageWidth * 0.504672, imageHeight * 0.467289);\n\t            ctx.bezierCurveTo(imageWidth * 0.518691, imageHeight * 0.471962, imageWidth * 0.528037, imageHeight * 0.481308, imageWidth * 0.532710, imageHeight * 0.495327);\n\t            ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.495327, imageWidth * 0.584112, imageHeight * 0.495327, imageWidth * 0.584112, imageHeight * 0.495327);\n\t            ctx.lineTo(imageWidth * 0.584112, imageHeight * 0.504672);\n\t            ctx.bezierCurveTo(imageWidth * 0.584112, imageHeight * 0.504672, imageWidth * 0.532710, imageHeight * 0.504672, imageWidth * 0.532710, imageHeight * 0.504672);\n\t            ctx.bezierCurveTo(imageWidth * 0.528037, imageHeight * 0.518691, imageWidth * 0.518691, imageHeight * 0.532710, imageWidth * 0.5, imageHeight * 0.532710);\n\t            ctx.bezierCurveTo(imageWidth * 0.481308, imageHeight * 0.532710, imageWidth * 0.471962, imageHeight * 0.518691, imageWidth * 0.467289, imageHeight * 0.504672);\n\t            ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.504672, imageWidth * 0.415887, imageHeight * 0.504672, imageWidth * 0.415887, imageHeight * 0.504672);\n\t            ctx.closePath();\n\t            ctx.fill();\n\t\n\t            // Tickmarks\n\t            var step = 5;\n\t            var stepRad = 5 * RAD_FACTOR;\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(-HALF_PI);\n\t            ctx.translate(-centerX, -centerY);\n\t            var angle;\n\t            for (angle = -90; angle <= 90; angle += step) {\n\t                if (angle % 45 === 0 || angle === 0) {\n\t                    ctx.strokeStyle = pointerColor.medium.getRgbaColor();\n\t                    ctx.lineWidth = 2;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(imageWidth * 0.5, imageHeight * 0.088785);\n\t                    ctx.lineTo(imageWidth * 0.5, imageHeight * 0.113);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                } else if (angle % 15 === 0) {\n\t                    ctx.strokeStyle = '#FFFFFF';\n\t                    ctx.lineWidth = 1;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(imageWidth * 0.5, imageHeight * 0.088785);\n\t                    ctx.lineTo(imageWidth * 0.5, imageHeight * 0.103785);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                } else {\n\t                    ctx.strokeStyle = '#FFFFFF';\n\t                    ctx.lineWidth = 0.5;\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(imageWidth * 0.5, imageHeight * 0.088785);\n\t                    ctx.lineTo(imageWidth * 0.5, imageHeight * 0.093785);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                }\n\t                ctx.translate(centerX, centerY);\n\t                ctx.rotate(stepRad, centerX, centerY);\n\t                ctx.translate(-centerX, -centerY);\n\t            }\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawIndicatorImage = function (ctx) {\n\t            ctx.save();\n\t\n\t            var imgWidth = imageWidth * 0.037383;\n\t            var imgHeight = imageHeight * 0.056074;\n\t\n\t            ctx.beginPath();\n\t            ctx.moveTo(imgWidth * 0.5, 0);\n\t            ctx.lineTo(0, imgHeight);\n\t            ctx.lineTo(imgWidth, imgHeight);\n\t            ctx.closePath();\n\t\n\t            ctx.fillStyle = pointerColor.light.getRgbaColor();\n\t            ctx.fill();\n\t            ctx.strokeStyle = pointerColor.medium.getRgbaColor();\n\t            ctx.stroke();\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        // Draw all static painting code to background\n\t        var init = function () {\n\t            initialized = true;\n\t\n\t            if (frameVisible) {\n\t                drawRadialFrameImage(backgroundContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n\t            }\n\t\n\t            drawHorizonBackgroundImage(valueContext);\n\t\n\t            drawIndicatorImage(indicatorContext);\n\t\n\t            drawHorizonForegroundImage(foregroundContext);\n\t\n\t            if (foregroundVisible) {\n\t                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, true, knobType, knobStyle, gaugeType);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function () {\n\t            // Buffer for all static background painting code\n\t            backgroundBuffer.width = size;\n\t            backgroundBuffer.height = size;\n\t            backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t            // Buffer for pointer image painting code\n\t            valueBuffer.width = size;\n\t            valueBuffer.height = size * PI;\n\t            valueContext = valueBuffer.getContext('2d');\n\t\n\t            // Buffer for the indicator\n\t            indicatorBuffer.width = size * 0.037383;\n\t            indicatorBuffer.height = size * 0.056074;\n\t            indicatorContext = indicatorBuffer.getContext('2d');\n\t\n\t            // Buffer for static foreground painting code\n\t            foregroundBuffer.width = size;\n\t            foregroundBuffer.height = size;\n\t            foregroundContext = foregroundBuffer.getContext('2d');\n\t        };\n\t\n\t        //************************************ Public methods **************************************\n\t        this.setRoll = function (newRoll) {\n\t            newRoll = parseFloat(newRoll) % 360;\n\t            if (roll !== newRoll) {\n\t                roll = newRoll;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getRoll = function () {\n\t            return roll;\n\t        };\n\t\n\t        this.setRollAnimated = function (newRoll, callback) {\n\t            var gauge = this;\n\t            newRoll = parseFloat(newRoll) % 360;\n\t            if (roll !== newRoll) {\n\t\n\t                if (undefined !== tweenRoll && tweenRoll.isPlaying) {\n\t                    tweenRoll.stop();\n\t                }\n\t\n\t                tweenRoll = new Tween({}, '', Tween.regularEaseInOut, roll, newRoll, 1);\n\t\n\t                tweenRoll.onMotionChanged = function (event) {\n\t                    roll = event.target._pos;\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tweenRoll.onMotionFinished = callback;\n\t                }\n\t\n\t                tweenRoll.start();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setPitch = function (newPitch) {\n\t            // constrain to range -180..180\n\t            // normal range -90..90 and -180..-90/90..180 indicate inverted\n\t            newPitch = ((parseFloat(newPitch) + 180 - pitchOffset) % 360) - 180;\n\t            //pitch = -(newPitch + pitchOffset) % 180;\n\t            if (pitch !== newPitch) {\n\t                pitch = newPitch;\n\t                if (pitch > 90) {\n\t                    pitch = 90 - (pitch - 90);\n\t                    if (!upsidedown) {\n\t                        this.setRoll(roll - 180);\n\t                    }\n\t                    upsidedown = true;\n\t                } else if (pitch < -90) {\n\t                    pitch = -90 + (-90 - pitch);\n\t                    if (!upsidedown) {\n\t                        this.setRoll(roll + 180);\n\t                    }\n\t                    upsidedown = true;\n\t                } else {\n\t                    upsidedown = false;\n\t                }\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getPitch = function () {\n\t            return pitch;\n\t        };\n\t\n\t        this.setPitchAnimated = function (newPitch, callback) {\n\t            var gauge = this;\n\t            newPitch = parseFloat(newPitch);\n\t            // perform all range checking in setPitch()\n\t            if (pitch !== newPitch) {\n\t                if (undefined !== tweenPitch && tweenPitch.isPlaying) {\n\t                    tweenPitch.stop();\n\t                }\n\t                tweenPitch = new Tween({}, '', Tween.regularEaseInOut, pitch, newPitch, 1);\n\t                tweenPitch.onMotionChanged = function (event) {\n\t                    pitch = event.target._pos;\n\t                    if (pitch > 90) {\n\t                        pitch = 90 - (pitch - 90);\n\t                        if (!upsidedown) {\n\t                            this.setRoll(roll - 180);\n\t                        }\n\t                        upsidedown = true;\n\t                    } else if (pitch < -90) {\n\t                        pitch = -90 + (-90 - pitch);\n\t                        if (!upsidedown) {\n\t                            this.setRoll(roll + 180);\n\t                        }\n\t                        upsidedown = true;\n\t                    } else {\n\t                        upsidedown = false;\n\t                    }\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                    gauge.setPitch(event.target._pos);\n\t                };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tweenPitch.onMotionFinished = callback;\n\t                }\n\t\n\t                tweenPitch.start();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setPitchOffset = function (newPitchOffset) {\n\t            pitchOffset = parseFloat(newPitchOffset);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers();\n\t            frameDesign = newFrameDesign;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setForegroundType = function (newForegroundType) {\n\t            resetBuffers();\n\t            foregroundType = newForegroundType;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init();\n\t            }\n\t\n\t            mainCtx.save();\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t\n\t            mainCtx.save();\n\t\n\t            // Set the clipping area\n\t            mainCtx.beginPath();\n\t            mainCtx.arc(centerX, centerY, imageWidth * 0.831775 / 2, 0, TWO_PI, true);\n\t            mainCtx.closePath();\n\t            mainCtx.clip();\n\t\n\t            // Rotate around roll\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate(-(roll * RAD_FACTOR));\n\t            mainCtx.translate(-centerX, 0);\n\t            // Translate about dive\n\t            mainCtx.translate(0, (pitch * pitchPixel));\n\t\n\t            // Draw horizon\n\t            mainCtx.drawImage(valueBuffer, 0, -valueBuffer.height / 2);\n\t\n\t            // Draw the scale and angle indicator\n\t            mainCtx.translate(0, -(pitch * pitchPixel) - centerY);\n\t            mainCtx.drawImage(indicatorBuffer, (imageWidth * 0.5 - indicatorBuffer.width / 2), (imageWidth * 0.107476));\n\t            mainCtx.restore();\n\t\n\t            mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t\n\t            mainCtx.restore();\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var led = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var size = (undefined === parameters.size ? 0 : parameters.size),\n\t            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor);\n\t\n\t        var ledBlinking = false;\n\t        var ledTimerId = 0;\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (size === 0) {\n\t            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        var initialized = false;\n\t\n\t        // Buffer for led on painting code\n\t        var ledBufferOn = doc.createElement('canvas');\n\t        ledBufferOn.width = size;\n\t        ledBufferOn.height = size;\n\t        var ledContextOn = ledBufferOn.getContext('2d');\n\t\n\t        // Buffer for led off painting code\n\t        var ledBufferOff = doc.createElement('canvas');\n\t        ledBufferOff.width = size;\n\t        ledBufferOff.height = size;\n\t        var ledContextOff = ledBufferOff.getContext('2d');\n\t\n\t        // Buffer for current led painting code\n\t        var ledBuffer = ledBufferOff;\n\t\n\t        var init = function () {\n\t            initialized = true;\n\t\n\t            // Draw LED ON in ledBuffer_ON\n\t            ledContextOn.clearRect(0, 0, ledContextOn.canvas.width, ledContextOn.canvas.height);\n\t            ledContextOn.drawImage(createLedImage(size, 1, ledColor), 0, 0);\n\t\n\t            // Draw LED ON in ledBuffer_OFF\n\t            ledContextOff.clearRect(0, 0, ledContextOff.canvas.width, ledContextOff.canvas.height);\n\t            ledContextOff.drawImage(createLedImage(size, 0, ledColor), 0, 0);\n\t        };\n\t\n\t        this.toggleLed = function () {\n\t            if (ledBuffer === ledBufferOn) {\n\t                ledBuffer = ledBufferOff;\n\t            } else {\n\t                ledBuffer = ledBufferOn;\n\t            }\n\t            repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLedColor = function (newColor) {\n\t            ledColor = newColor;\n\t            initialized = false;\n\t            repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLedOnOff = function (on) {\n\t            if (!!on) {\n\t                ledBuffer = ledBufferOn;\n\t            } else {\n\t                ledBuffer = ledBufferOff;\n\t            }\n\t            repaint();\n\t            return this;\n\t        };\n\t\n\t        this.blink = function (blink) {\n\t            if (!!blink) {\n\t                if (!ledBlinking) {\n\t                    ledTimerId = setInterval(this.toggleLed, 1000);\n\t                    ledBlinking = true;\n\t                }\n\t            } else {\n\t                if (ledBlinking) {\n\t                    clearInterval(ledTimerId);\n\t                    ledBlinking = false;\n\t                    ledBuffer = ledBufferOff;\n\t                }\n\t            }\n\t            return this;\n\t        };\n\t\n\t        var repaint = function () {\n\t            if (!initialized) {\n\t                init();\n\t            }\n\t\n\t            mainCtx.save();\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            mainCtx.drawImage(ledBuffer, 0, 0);\n\t\n\t            mainCtx.restore();\n\t        };\n\t\n\t        repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var clock = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var size = (undefined === parameters.size ? 0 : parameters.size),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            pointerType = (undefined === parameters.pointerType ? steelseries.PointerType.TYPE1 : parameters.pointerType),\n\t            pointerColor = (undefined === parameters.pointerColor ? (pointerType === steelseries.PointerType.TYPE1 ? steelseries.ColorDef.GRAY : steelseries.ColorDef.BLACK) : parameters.pointerColor),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? (pointerType === steelseries.PointerType.TYPE1 ? steelseries.BackgroundColor.ANTHRACITE : steelseries.BackgroundColor.LIGHT_GRAY) : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n\t            isAutomatic = (undefined === parameters.isAutomatic ? true : parameters.isAutomatic),\n\t            hour = (undefined === parameters.hour ? 11 : parameters.hour),\n\t            minute = (undefined === parameters.minute ? 5 : parameters.minute),\n\t            second = (undefined === parameters.second ? 0 : parameters.second),\n\t            secondMovesContinuous = (undefined === parameters.secondMovesContinuous ? false : parameters.secondMovesContinuous),\n\t            timeZoneOffsetHour = (undefined === parameters.timeZoneOffsetHour ? 0 : parameters.timeZoneOffsetHour),\n\t            timeZoneOffsetMinute = (undefined === parameters.timeZoneOffsetMinute ? 0 : parameters.timeZoneOffsetMinute),\n\t            secondPointerVisible = (undefined === parameters.secondPointerVisible ? true : parameters.secondPointerVisible);\n\t\n\t        // GaugeType specific private variables\n\t        var objDate = new Date();\n\t        var minutePointerAngle;\n\t        var hourPointerAngle;\n\t        var secondPointerAngle;\n\t        var tickTimer;\n\t        var tickInterval = (secondMovesContinuous ? 100 : 1000);\n\t        tickInterval = (secondPointerVisible ? tickInterval : 100);\n\t\n\t        var self = this;\n\t\n\t        // Constants\n\t        var ANGLE_STEP = 6;\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t        // Has a size been specified?\n\t        if (size === 0) {\n\t            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        var imageWidth = size;\n\t        var imageHeight = size;\n\t\n\t        var centerX = imageWidth / 2;\n\t        var centerY = imageHeight / 2;\n\t\n\t        var initialized = false;\n\t\n\t        // Buffer for the frame\n\t        var frameBuffer = createBuffer(size, size);\n\t        var frameContext = frameBuffer.getContext('2d');\n\t\n\t        // Buffer for static background painting code\n\t        var backgroundBuffer = createBuffer(size, size);\n\t        var backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        // Buffer for hour pointer image painting code\n\t        var hourBuffer = createBuffer(size, size);\n\t        var hourContext = hourBuffer.getContext('2d');\n\t\n\t        // Buffer for minute pointer image painting code\n\t        var minuteBuffer = createBuffer(size, size);\n\t        var minuteContext = minuteBuffer.getContext('2d');\n\t\n\t        // Buffer for second pointer image painting code\n\t        var secondBuffer = createBuffer(size, size);\n\t        var secondContext = secondBuffer.getContext('2d');\n\t\n\t        // Buffer for static foreground painting code\n\t        var foregroundBuffer = createBuffer(size, size);\n\t        var foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        var drawTickmarksImage = function (ctx, ptrType) {\n\t            var tickAngle;\n\t            var SMALL_TICK_HEIGHT;\n\t            var BIG_TICK_HEIGHT;\n\t            var OUTER_POINT, INNER_POINT;\n\t            OUTER_POINT = imageWidth * 0.405;\n\t            ctx.save();\n\t            ctx.translate(centerX, centerY);\n\t\n\t            switch (ptrType.type) {\n\t            case 'type1':\n\t                // Draw minutes tickmarks\n\t                SMALL_TICK_HEIGHT = imageWidth * 0.074766;\n\t                INNER_POINT = OUTER_POINT - SMALL_TICK_HEIGHT;\n\t                ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t                ctx.lineWidth = imageWidth * 0.014018;\n\t\n\t                for (tickAngle = 0; tickAngle < 360; tickAngle += 30) {\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(OUTER_POINT, 0);\n\t                    ctx.lineTo(INNER_POINT, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                    ctx.rotate(30 * RAD_FACTOR);\n\t                }\n\t\n\t                // Draw hours tickmarks\n\t                BIG_TICK_HEIGHT = imageWidth * 0.126168;\n\t                INNER_POINT = OUTER_POINT - BIG_TICK_HEIGHT;\n\t                ctx.lineWidth = imageWidth * 0.032710;\n\t\n\t                for (tickAngle = 0; tickAngle < 360; tickAngle += 90) {\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(OUTER_POINT, 0);\n\t                    ctx.lineTo(INNER_POINT, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                    ctx.rotate(90 * RAD_FACTOR);\n\t                }\n\t                break;\n\t\n\t            case 'type2':\n\t            /* falls through */\n\t            default:\n\t                // Draw minutes tickmarks\n\t                SMALL_TICK_HEIGHT = imageWidth * 0.037383;\n\t                INNER_POINT = OUTER_POINT - SMALL_TICK_HEIGHT;\n\t                ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t                ctx.lineWidth = imageWidth * 0.009345;\n\t\n\t                for (tickAngle = 0; tickAngle < 360; tickAngle += 6) {\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(OUTER_POINT, 0);\n\t                    ctx.lineTo(INNER_POINT, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                    ctx.rotate(6 * RAD_FACTOR);\n\t                }\n\t\n\t                // Draw hours tickmarks\n\t                BIG_TICK_HEIGHT = imageWidth * 0.084112;\n\t                INNER_POINT = OUTER_POINT - BIG_TICK_HEIGHT;\n\t                ctx.lineWidth = imageWidth * 0.028037;\n\t\n\t                for (tickAngle = 0; tickAngle < 360; tickAngle += 30) {\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(OUTER_POINT, 0);\n\t                    ctx.lineTo(INNER_POINT, 0);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                    ctx.rotate(30 * RAD_FACTOR);\n\t                }\n\t                break;\n\t            }\n\t            ctx.translate(-centerX, -centerY);\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawHourPointer = function (ctx, ptrType) {\n\t            ctx.save();\n\t            var grad;\n\t\n\t            switch (ptrType.type) {\n\t            case 'type2':\n\t                ctx.beginPath();\n\t                ctx.lineWidth = imageWidth * 0.046728;\n\t                ctx.moveTo(centerX, imageWidth * 0.289719);\n\t                ctx.lineTo(centerX, imageWidth * 0.289719 + imageWidth * 0.224299);\n\t                ctx.strokeStyle = pointerColor.medium.getRgbaColor();\n\t                ctx.closePath();\n\t                ctx.stroke();\n\t                break;\n\t\n\t            case 'type1':\n\t            /* falls through */\n\t            default:\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.471962, imageHeight * 0.560747);\n\t                ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.214953);\n\t                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.182242);\n\t                ctx.lineTo(imageWidth * 0.528037, imageHeight * 0.214953);\n\t                ctx.lineTo(imageWidth * 0.528037, imageHeight * 0.560747);\n\t                ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.560747);\n\t                ctx.closePath();\n\t                grad = ctx.createLinearGradient(imageWidth * 0.471962, imageHeight * 0.560747, imageWidth * 0.528037, imageHeight * 0.214953);\n\t                grad.addColorStop(1, pointerColor.veryLight.getRgbaColor());\n\t                grad.addColorStop(0, pointerColor.light.getRgbaColor());\n\t                ctx.fillStyle = grad;\n\t                ctx.strokeStyle = pointerColor.light.getRgbaColor();\n\t                ctx.fill();\n\t                ctx.stroke();\n\t                break;\n\t            }\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawMinutePointer = function (ctx, ptrType) {\n\t            ctx.save();\n\t            var grad;\n\t\n\t            switch (ptrType.type) {\n\t            case 'type2':\n\t                ctx.beginPath();\n\t                ctx.lineWidth = imageWidth * 0.032710;\n\t                ctx.moveTo(centerX, imageWidth * 0.116822);\n\t                ctx.lineTo(centerX, imageWidth * 0.116822 + imageWidth * 0.387850);\n\t                ctx.strokeStyle = pointerColor.medium.getRgbaColor();\n\t                ctx.closePath();\n\t                ctx.stroke();\n\t                break;\n\t\n\t            case 'type1':\n\t            /* falls through */\n\t            default:\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.518691, imageHeight * 0.574766);\n\t                ctx.lineTo(imageWidth * 0.523364, imageHeight * 0.135514);\n\t                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.107476);\n\t                ctx.lineTo(imageWidth * 0.476635, imageHeight * 0.140186);\n\t                ctx.lineTo(imageWidth * 0.476635, imageHeight * 0.574766);\n\t                ctx.lineTo(imageWidth * 0.518691, imageHeight * 0.574766);\n\t                ctx.closePath();\n\t                grad = ctx.createLinearGradient(imageWidth * 0.518691, imageHeight * 0.574766, imageWidth * 0.476635, imageHeight * 0.140186);\n\t                grad.addColorStop(1, pointerColor.veryLight.getRgbaColor());\n\t                grad.addColorStop(0, pointerColor.light.getRgbaColor());\n\t                ctx.fillStyle = grad;\n\t                ctx.strokeStyle = pointerColor.light.getRgbaColor();\n\t                ctx.fill();\n\t                ctx.stroke();\n\t                break;\n\t            }\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawSecondPointer = function (ctx, ptrType) {\n\t            ctx.save();\n\t            var grad;\n\t\n\t            switch (ptrType.type) {\n\t            case 'type2':\n\t                // top rectangle\n\t                ctx.lineWidth = imageWidth * 0.009345;\n\t                ctx.beginPath();\n\t                ctx.moveTo(centerX, imageWidth * 0.098130);\n\t                ctx.lineTo(centerX, imageWidth * 0.098130 + imageWidth * 0.126168);\n\t                ctx.closePath();\n\t                ctx.stroke();\n\t                // bottom rectangle\n\t                ctx.lineWidth = imageWidth * 0.018691;\n\t                ctx.beginPath();\n\t                ctx.moveTo(centerX, imageWidth * 0.308411);\n\t                ctx.lineTo(centerX, imageWidth * 0.308411 + imageWidth * 0.191588);\n\t                ctx.closePath();\n\t                ctx.stroke();\n\t                // circle\n\t                ctx.lineWidth = imageWidth * 0.016;\n\t                ctx.beginPath();\n\t                ctx.arc(centerX, imageWidth * 0.26, imageWidth * 0.085 / 2, 0, TWO_PI);\n\t                ctx.closePath();\n\t                ctx.stroke();\n\t                break;\n\t\n\t            case 'type1':\n\t            /* falls through */\n\t            default:\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.509345, imageHeight * 0.116822);\n\t                ctx.lineTo(imageWidth * 0.509345, imageHeight * 0.574766);\n\t                ctx.lineTo(imageWidth * 0.490654, imageHeight * 0.574766);\n\t                ctx.lineTo(imageWidth * 0.490654, imageHeight * 0.116822);\n\t                ctx.lineTo(imageWidth * 0.509345, imageHeight * 0.116822);\n\t                ctx.closePath();\n\t                grad = ctx.createLinearGradient(imageWidth * 0.509345, imageHeight * 0.116822, imageWidth * 0.490654, imageHeight * 0.574766);\n\t                grad.addColorStop(0, steelseries.ColorDef.RED.light.getRgbaColor());\n\t                grad.addColorStop(0.47, steelseries.ColorDef.RED.medium.getRgbaColor());\n\t                grad.addColorStop(1, steelseries.ColorDef.RED.dark.getRgbaColor());\n\t                ctx.fillStyle = grad;\n\t                ctx.strokeStyle = steelseries.ColorDef.RED.dark.getRgbaColor();\n\t                ctx.fill();\n\t                ctx.stroke();\n\t                break;\n\t            }\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawKnob = function (ctx) {\n\t            var grad;\n\t\n\t            // draw the knob\n\t            ctx.beginPath();\n\t            ctx.arc(centerX, centerY, imageWidth * 0.045, 0, TWO_PI);\n\t            ctx.closePath();\n\t            grad = ctx.createLinearGradient(centerX - imageWidth * 0.045 / 2, centerY - imageWidth * 0.045 / 2, centerX + imageWidth * 0.045 / 2, centerY + imageWidth * 0.045 / 2);\n\t            grad.addColorStop(0, '#eef0f2');\n\t            grad.addColorStop(1, '#65696d');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t        };\n\t\n\t        var drawTopKnob = function (ctx, ptrType) {\n\t            var grad;\n\t\n\t            ctx.save();\n\t\n\t            switch (ptrType.type) {\n\t            case 'type2':\n\t                // draw knob\n\t                ctx.fillStyle = '#000000';\n\t                ctx.beginPath();\n\t                ctx.arc(centerX, centerY, imageWidth * 0.088785 / 2, 0, TWO_PI);\n\t                ctx.closePath();\n\t                ctx.fill();\n\t                break;\n\t\n\t            case 'type1':\n\t            /* falls through */\n\t            default:\n\t                // draw knob\n\t                grad = ctx.createLinearGradient(centerX - imageWidth * 0.027 / 2, centerY - imageWidth * 0.027 / 2, centerX + imageWidth * 0.027 / 2, centerY + imageWidth * 0.027 / 2);\n\t                grad.addColorStop(0, '#f3f4f7');\n\t                grad.addColorStop(0.11, '#f3f5f7');\n\t                grad.addColorStop(0.12, '#f1f3f5');\n\t                grad.addColorStop(0.2, '#c0c5cb');\n\t                grad.addColorStop(0.2, '#bec3c9');\n\t                grad.addColorStop(1, '#bec3c9');\n\t                ctx.fillStyle = grad;\n\t                ctx.beginPath();\n\t                ctx.arc(centerX, centerY, imageWidth * 0.027, 0, TWO_PI);\n\t                ctx.closePath();\n\t                ctx.fill();\n\t                break;\n\t            }\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var calculateAngles = function (hour, minute, second) {\n\t            secondPointerAngle = second * ANGLE_STEP * RAD_FACTOR;\n\t            minutePointerAngle = minute * ANGLE_STEP * RAD_FACTOR;\n\t            hourPointerAngle = (hour + minute / 60) * ANGLE_STEP * 5 * RAD_FACTOR;\n\t        };\n\t\n\t        var tickTock = function () {\n\t            if (isAutomatic) {\n\t                objDate = new Date();\n\t            } else {\n\t                objDate.setHours(hour);\n\t                objDate.setMinutes(minute);\n\t                objDate.setSeconds(second);\n\t            }\n\t            // Seconds\n\t            second = objDate.getSeconds() + (secondMovesContinuous ? objDate.getMilliseconds() / 1000 : 0);\n\t\n\t            // Hours\n\t            if (timeZoneOffsetHour !== 0 && timeZoneOffsetMinute !== 0) {\n\t                hour = objDate.getUTCHours() + timeZoneOffsetHour;\n\t            } else {\n\t                hour = objDate.getHours();\n\t            }\n\t            hour = hour % 12;\n\t\n\t            // Minutes\n\t            if (timeZoneOffsetHour !== 0 && timeZoneOffsetMinute !== 0) {\n\t                minute = objDate.getUTCMinutes() + timeZoneOffsetMinute;\n\t            } else {\n\t                minute = objDate.getMinutes();\n\t            }\n\t            if (minute > 60) {\n\t                minute -= 60;\n\t                hour++;\n\t            }\n\t            if (minute < 0) {\n\t                minute += 60;\n\t                hour--;\n\t            }\n\t            hour = hour % 12;\n\t            // Calculate angles from current hour and minute values\n\t            calculateAngles(hour, minute, second);\n\t\n\t            if (isAutomatic) {\n\t                tickTimer = setTimeout(tickTock, tickInterval);\n\t            }\n\t\n\t            self.repaint();\n\t        };\n\t\n\t        // **************   Initialization  ********************\n\t        // Draw all static painting code to background\n\t        var init = function (parameters) {\n\t            parameters = parameters || {};\n\t            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n\t            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n\t            var drawPointers = (undefined === parameters.pointers ? false : parameters.pointers);\n\t            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\t\n\t            initialized = true;\n\t\n\t            if (drawFrame && frameVisible) {\n\t                drawRadialFrameImage(frameContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n\t            }\n\t\n\t            if (drawBackground && backgroundVisible) {\n\t                // Create background in background buffer (backgroundBuffer)\n\t                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                // Create custom layer in background buffer (backgroundBuffer)\n\t                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                drawTickmarksImage(backgroundContext, pointerType);\n\t            }\n\t\n\t            if (drawPointers) {\n\t                drawHourPointer(hourContext, pointerType);\n\t                drawMinutePointer(minuteContext, pointerType);\n\t                drawSecondPointer(secondContext, pointerType);\n\t            }\n\t\n\t            if (drawForeground && foregroundVisible) {\n\t                drawTopKnob(foregroundContext, pointerType);\n\t                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, false);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function (buffers) {\n\t            buffers = buffers || {};\n\t            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n\t            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n\t            var resetPointers = (undefined === buffers.pointers ? false : buffers.pointers);\n\t            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\t\n\t            if (resetFrame) {\n\t                frameBuffer.width = size;\n\t                frameBuffer.height = size;\n\t                frameContext = frameBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetBackground) {\n\t                backgroundBuffer.width = size;\n\t                backgroundBuffer.height = size;\n\t                backgroundContext = backgroundBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetPointers) {\n\t                hourBuffer.width = size;\n\t                hourBuffer.height = size;\n\t                hourContext = hourBuffer.getContext('2d');\n\t\n\t                minuteBuffer.width = size;\n\t                minuteBuffer.height = size;\n\t                minuteContext = minuteBuffer.getContext('2d');\n\t\n\t                secondBuffer.width = size;\n\t                secondBuffer.height = size;\n\t                secondContext = secondBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetForeground) {\n\t                foregroundBuffer.width = size;\n\t                foregroundBuffer.height = size;\n\t                foregroundContext = foregroundBuffer.getContext('2d');\n\t            }\n\t        };\n\t\n\t        //************************************ Public methods **************************************\n\t        this.getAutomatic = function () {\n\t            return isAutomatic;\n\t        };\n\t\n\t        this.setAutomatic = function (newValue) {\n\t            newValue = !!newValue;\n\t            if (isAutomatic && !newValue) {\n\t                // stop the clock!\n\t                clearTimeout(tickTimer);\n\t                isAutomatic = newValue;\n\t            } else if (!isAutomatic && newValue) {\n\t                // start the clock\n\t                isAutomatic = newValue;\n\t                tickTock();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getHour = function () {\n\t            return hour;\n\t        };\n\t\n\t        this.setHour = function (newValue) {\n\t            newValue = parseInt(newValue, 10) % 12;\n\t            if (hour !== newValue) {\n\t                hour = newValue;\n\t                calculateAngles(hour, minute, second);\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getMinute = function () {\n\t            return minute;\n\t        };\n\t\n\t        this.setMinute = function (newValue) {\n\t            newValue = parseInt(newValue, 10) % 60;\n\t            if (minute !== newValue) {\n\t                minute = newValue;\n\t                calculateAngles(hour, minute, second);\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getSecond = function () {\n\t            return second;\n\t        };\n\t\n\t        this.setSecond = function (newValue) {\n\t            second = parseInt(newValue, 10) % 60;\n\t            if (second !== newValue) {\n\t                second = newValue;\n\t                calculateAngles(hour, minute, second);\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getTimeZoneOffsetHour = function () {\n\t            return timeZoneOffsetHour;\n\t        };\n\t\n\t        this.setTimeZoneOffsetHour = function (newValue) {\n\t            timeZoneOffsetHour = parseInt(newValue, 10);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getTimeZoneOffsetMinute = function () {\n\t            return timeZoneOffsetMinute;\n\t        };\n\t\n\t        this.setTimeZoneOffsetMinute = function (newValue) {\n\t            timeZoneOffsetMinute = parseInt(newValue, 10);\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getSecondPointerVisible = function () {\n\t            return secondPointerVisible;\n\t        };\n\t\n\t        this.setSecondPointerVisible = function (newValue) {\n\t            secondPointerVisible = !!newValue;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getSecondMovesContinuous = function () {\n\t            return secondMovesContinuous;\n\t        };\n\t\n\t        this.setSecondMovesContinuous = function (newValue) {\n\t            secondMovesContinuous = !!newValue;\n\t            tickInterval = (secondMovesContinuous ? 100 : 1000);\n\t            tickInterval = (secondPointerVisible ? tickInterval : 100);\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers({frame: true});\n\t            frameDesign = newFrameDesign;\n\t            init({frame: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            resetBuffers({ frame: true,\n\t                           background: true });\n\t            backgroundColor = newBackgroundColor;\n\t            init({ frame: true,\n\t                   background: true });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setForegroundType = function (newForegroundType) {\n\t            resetBuffers({foreground: true});\n\t            foregroundType = newForegroundType;\n\t            init({foreground: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerType = function (newPointerType) {\n\t            resetBuffers({ background: true,\n\t                           foreground: true,\n\t                           pointers: true });\n\t            pointerType = newPointerType;\n\t            if (pointerType.type === 'type1') {\n\t                pointerColor = steelseries.ColorDef.GRAY;\n\t                backgroundColor = steelseries.BackgroundColor.ANTHRACITE;\n\t            } else {\n\t                pointerColor = steelseries.ColorDef.BLACK;\n\t                backgroundColor = steelseries.BackgroundColor.LIGHT_GRAY;\n\t            }\n\t            init({ background: true,\n\t                   foreground: true,\n\t                   pointers: true });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerColor = function (newPointerColor) {\n\t            resetBuffers({pointers: true});\n\t            pointerColor = newPointerColor;\n\t            init({pointers: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init({frame: true,\n\t                      background: true,\n\t                      pointers: true,\n\t                      foreground: true});\n\t            }\n\t\n\t            //mainCtx.save();\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            // Draw frame\n\t            if (frameVisible) {\n\t                mainCtx.drawImage(frameBuffer, 0, 0);\n\t            }\n\t\n\t            // Draw buffered image to visible canvas\n\t            if (backgroundVisible) {\n\t                mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t            }\n\t\n\t            // have to draw to a rotated temporary image area so we can translate in\n\t            // absolute x, y values when drawing to main context\n\t            var shadowOffset = imageWidth * 0.006;\n\t\n\t            // draw hour pointer\n\t            // Define rotation center\n\t            mainCtx.save();\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate(hourPointerAngle);\n\t            mainCtx.translate(-centerX, -centerY);\n\t            // Set the pointer shadow params\n\t            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\t            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\t            mainCtx.shadowBlur = shadowOffset * 2;\n\t            // Draw the pointer\n\t            mainCtx.drawImage(hourBuffer, 0, 0);\n\t\n\t            // draw minute pointer\n\t            // Define rotation center\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate(minutePointerAngle - hourPointerAngle);\n\t            mainCtx.translate(-centerX, -centerY);\n\t            mainCtx.drawImage(minuteBuffer, 0, 0);\n\t            mainCtx.restore();\n\t\n\t            if (pointerType.type === 'type1') {\n\t                drawKnob(mainCtx);\n\t            }\n\t\n\t            if (secondPointerVisible) {\n\t                // draw second pointer\n\t                // Define rotation center\n\t                mainCtx.save();\n\t                mainCtx.translate(centerX, centerY);\n\t                mainCtx.rotate(secondPointerAngle);\n\t                mainCtx.translate(-centerX, -centerY);\n\t                // Set the pointer shadow params\n\t                mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\t                mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\t                mainCtx.shadowBlur = shadowOffset * 2;\n\t                // Draw the pointer\n\t                mainCtx.drawImage(secondBuffer, 0, 0);\n\t                mainCtx.restore();\n\t            }\n\t\n\t            // Draw foreground\n\t            if (foregroundVisible) {\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t        };\n\t\n\t        // Visualize the component\n\t        tickTock();\n\t\n\t        return this;\n\t    };\n\t\n\t    var battery = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var size = (undefined === parameters.size ? 0 : parameters.size),\n\t            value = (undefined === parameters.value ? 50 : parameters.value);\n\t\n\t        // Get the canvas context and clear it\n\t        var mainCtx = getCanvasContext(canvas);\n\t\n\t        // Has a size been specified?\n\t        if (size === 0) {\n\t            size = mainCtx.canvas.width;\n\t        }\n\t\n\t        var imageWidth = size;\n\t        var imageHeight = Math.ceil(size * 0.45);\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = imageWidth;\n\t        mainCtx.canvas.height = imageHeight;\n\t\n\t        var createBatteryImage = function (ctx, imageWidth, imageHeight, value) {\n\t            var grad;\n\t\n\t            // Background\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.025, imageHeight * 0.055555);\n\t            ctx.lineTo(imageWidth * 0.9, imageHeight * 0.055555);\n\t            ctx.lineTo(imageWidth * 0.9, imageHeight * 0.944444);\n\t            ctx.lineTo(imageWidth * 0.025, imageHeight * 0.944444);\n\t            ctx.lineTo(imageWidth * 0.025, imageHeight * 0.055555);\n\t            ctx.closePath();\n\t            //\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.925, 0);\n\t            ctx.lineTo(0, 0);\n\t            ctx.lineTo(0, imageHeight);\n\t            ctx.lineTo(imageWidth * 0.925, imageHeight);\n\t            ctx.lineTo(imageWidth * 0.925, imageHeight * 0.722222);\n\t            ctx.bezierCurveTo(imageWidth * 0.925, imageHeight * 0.722222, imageWidth * 0.975, imageHeight * 0.722222, imageWidth * 0.975, imageHeight * 0.722222);\n\t            ctx.bezierCurveTo(imageWidth, imageHeight * 0.722222, imageWidth, imageHeight * 0.666666, imageWidth, imageHeight * 0.666666);\n\t            ctx.bezierCurveTo(imageWidth, imageHeight * 0.666666, imageWidth, imageHeight * 0.333333, imageWidth, imageHeight * 0.333333);\n\t            ctx.bezierCurveTo(imageWidth, imageHeight * 0.333333, imageWidth, imageHeight * 0.277777, imageWidth * 0.975, imageHeight * 0.277777);\n\t            ctx.bezierCurveTo(imageWidth * 0.975, imageHeight * 0.277777, imageWidth * 0.925, imageHeight * 0.277777, imageWidth * 0.925, imageHeight * 0.277777);\n\t            ctx.lineTo(imageWidth * 0.925, 0);\n\t            ctx.closePath();\n\t            //\n\t            grad = ctx.createLinearGradient(0, 0, 0, imageHeight);\n\t            grad.addColorStop(0, '#ffffff');\n\t            grad.addColorStop(1, '#7e7e7e');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            // Main\n\t            ctx.beginPath();\n\t            var end = Math.max(imageWidth * 0.875 * (value / 100), Math.ceil(imageWidth * 0.01));\n\t            ctx.rect(imageWidth * 0.025, imageWidth * 0.025, end, imageHeight * 0.888888);\n\t            ctx.closePath();\n\t            var BORDER_FRACTIONS = [0, 0.4, 1];\n\t            var BORDER_COLORS = [new RgbaColor(177, 25, 2, 1),   // 0xB11902\n\t                                 new RgbaColor(219, 167, 21, 1), // 0xDBA715\n\t                                 new RgbaColor(121, 162, 75, 1)  // 0x79A24B\n\t                                ];\n\t            var border = new GradientWrapper(0, 100, BORDER_FRACTIONS, BORDER_COLORS);\n\t            ctx.fillStyle = border.getColorAt(value / 100).getRgbColor();\n\t            ctx.fill();\n\t            ctx.beginPath();\n\t            end = Math.max(end - imageWidth * 0.05, 0);\n\t            ctx.rect(imageWidth * 0.05, imageWidth * 0.05, end, imageHeight * 0.777777);\n\t            ctx.closePath();\n\t            var LIQUID_COLORS_DARK = [new RgbaColor(198, 39, 5, 1),   // 0xC62705\n\t                                      new RgbaColor(228, 189, 32, 1), // 0xE4BD20\n\t                                      new RgbaColor(163, 216, 102, 1) // 0xA3D866\n\t                                    ];\n\t\n\t            var LIQUID_COLORS_LIGHT = [new RgbaColor(246, 121, 48, 1),   // 0xF67930\n\t                                       new RgbaColor(246, 244, 157, 1),  // 0xF6F49D\n\t                                       new RgbaColor(223, 233, 86, 1)    // 0xDFE956\n\t                                      ];\n\t            var LIQUID_GRADIENT_FRACTIONS = [0, 0.4, 1];\n\t            var liquidDark = new GradientWrapper(0, 100, LIQUID_GRADIENT_FRACTIONS, LIQUID_COLORS_DARK);\n\t            var liquidLight = new GradientWrapper(0, 100, LIQUID_GRADIENT_FRACTIONS, LIQUID_COLORS_LIGHT);\n\t            grad = ctx.createLinearGradient(imageWidth * 0.05, 0, imageWidth * 0.875, 0);\n\t            grad.addColorStop(0, liquidDark.getColorAt(value / 100).getRgbColor());\n\t            grad.addColorStop(0.5, liquidLight.getColorAt(value / 100).getRgbColor());\n\t            grad.addColorStop(1, liquidDark.getColorAt(value / 100).getRgbColor());\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            // Foreground\n\t            ctx.beginPath();\n\t            ctx.rect(imageWidth * 0.025, imageWidth * 0.025, imageWidth * 0.875, imageHeight * 0.444444);\n\t            ctx.closePath();\n\t            grad = ctx.createLinearGradient(imageWidth * 0.025, imageWidth * 0.025, imageWidth * 0.875, imageHeight * 0.444444);\n\t            grad.addColorStop(0, 'rgba(255, 255, 255, 0)');\n\t            grad.addColorStop(1, 'rgba(255, 255, 255, 0.8)');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t        };\n\t\n\t        // **************   Public methods  ********************\n\t        this.setValue = function (newValue) {\n\t            newValue = (newValue < 0 ? 0 : (newValue > 100 ? 100 : newValue));\n\t            if (value !== newValue) {\n\t                value = newValue;\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getValue = function () {\n\t            return value;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t            createBatteryImage(mainCtx, imageWidth, imageHeight, value);\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var stopwatch = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var size = (undefined === parameters.size ? 0 : parameters.size),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.BLACK : parameters.pointerColor),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.LIGHT_GRAY : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n\t\n\t            minutePointerAngle = 0,\n\t            secondPointerAngle = 0,\n\t            tickTimer,\n\t            ANGLE_STEP = 6,\n\t            self = this,\n\t\n\t            start = 0,\n\t            currentMilliSeconds = 0,\n\t            minutes = 0,\n\t            seconds = 0,\n\t            milliSeconds = 0,\n\t            running = false,\n\t            lap = false,\n\t            // Get the canvas context\n\t            mainCtx = getCanvasContext(canvas),\n\t\n\t            imageWidth, imageHeight,\n\t            centerX, centerY,\n\t\n\t            smallPointerSize, smallPointerX_Offset, smallPointerY_Offset,\n\t\n\t            initialized = false,\n\t\n\t            // Buffer for the frame\n\t            frameBuffer, frameContext,\n\t\n\t            // Buffer for static background painting code\n\t            backgroundBuffer, backgroundContext,\n\t\n\t            // Buffer for small pointer image painting code\n\t            smallPointerBuffer, smallPointerContext,\n\t\n\t            // Buffer for large pointer image painting code\n\t            largePointerBuffer, largePointerContext,\n\t\n\t            // Buffer for static foreground painting code\n\t            foregroundBuffer, foregroundContext,\n\t\n\t            drawTickmarksImage = function (ctx, width, range, text_scale, text_dist_factor, x_offset, y_offset) {\n\t                var STD_FONT_SIZE = text_scale * width,\n\t                    STD_FONT = STD_FONT_SIZE + 'px ' + stdFontName,\n\t                    TEXT_WIDTH = width * 0.15,\n\t                    THIN_STROKE = 0.5,\n\t                    MEDIUM_STROKE = 1,\n\t                    THICK_STROKE = 1.5,\n\t                    TEXT_DISTANCE = text_dist_factor * width,\n\t                    MIN_LENGTH = Math.round(0.025 * width),\n\t                    MED_LENGTH = Math.round(0.035 * width),\n\t                    MAX_LENGTH = Math.round(0.045 * width),\n\t                    TEXT_COLOR = backgroundColor.labelColor.getRgbaColor(),\n\t                    TICK_COLOR = backgroundColor.labelColor.getRgbaColor(),\n\t                    CENTER = width / 2,\n\t                    // Create the ticks itself\n\t                    RADIUS = width * 0.4,\n\t                    innerPoint, outerPoint, textPoint,\n\t                    counter = 0,\n\t                    numberCounter = 0,\n\t                    tickCounter = 0,\n\t                    valueCounter, // value for the tickmarks\n\t                    sinValue = 0,\n\t                    cosValue = 0,\n\t                    alpha, // angle for the tickmarks\n\t                    ALPHA_START = -PI,\n\t                    ANGLE_STEPSIZE = TWO_PI / (range);\n\t\n\t                ctx.width = ctx.height = width;\n\t                ctx.save();\n\t                ctx.textAlign = 'center';\n\t                ctx.textBaseline = 'middle';\n\t                ctx.font = STD_FONT;\n\t\n\t                for (alpha = ALPHA_START, valueCounter = 0; valueCounter <= range + 1; alpha -= ANGLE_STEPSIZE * 0.1, valueCounter += 0.1) {\n\t                    ctx.lineWidth = THIN_STROKE;\n\t                    sinValue = Math.sin(alpha);\n\t                    cosValue = Math.cos(alpha);\n\t\n\t                    // tickmark every 2 units\n\t                    if (counter % 2 === 0) {\n\t                        //ctx.lineWidth = THIN_STROKE;\n\t                        innerPoint = [CENTER + (RADIUS - MIN_LENGTH) * sinValue + x_offset, CENTER + (RADIUS - MIN_LENGTH) * cosValue + y_offset];\n\t                        outerPoint = [CENTER + RADIUS * sinValue + x_offset, CENTER + RADIUS * cosValue + y_offset];\n\t                        // Draw ticks\n\t                        ctx.strokeStyle = TICK_COLOR;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(innerPoint[0], innerPoint[1]);\n\t                        ctx.lineTo(outerPoint[0], outerPoint[1]);\n\t                        ctx.closePath();\n\t                        ctx.stroke();\n\t                    }\n\t\n\t                    // Different tickmark every 10 units\n\t                    if (counter === 10 || counter === 0) {\n\t                        ctx.fillStyle = TEXT_COLOR;\n\t                        ctx.lineWidth = MEDIUM_STROKE;\n\t                        outerPoint = [CENTER + RADIUS * sinValue + x_offset, CENTER + RADIUS * cosValue + y_offset];\n\t                        textPoint  = [CENTER + (RADIUS - TEXT_DISTANCE) * sinValue + x_offset, CENTER + (RADIUS - TEXT_DISTANCE) * cosValue + y_offset];\n\t\n\t                        // Draw text\n\t                        if (numberCounter === 5) {\n\t                            if (valueCounter !== range) {\n\t                                if (Math.round(valueCounter) !== 60) {\n\t                                    ctx.fillText(Math.round(valueCounter), textPoint[0], textPoint[1], TEXT_WIDTH);\n\t                                }\n\t                            }\n\t                            ctx.lineWidth = THICK_STROKE;\n\t                            innerPoint = [CENTER + (RADIUS - MAX_LENGTH) * sinValue + x_offset, CENTER + (RADIUS - MAX_LENGTH) * cosValue + y_offset];\n\t                            numberCounter = 0;\n\t                        } else {\n\t                            ctx.lineWidth = MEDIUM_STROKE;\n\t                            innerPoint = [CENTER + (RADIUS - MED_LENGTH) * sinValue + x_offset, CENTER + (RADIUS - MED_LENGTH) * cosValue + y_offset];\n\t                        }\n\t\n\t                        // Draw ticks\n\t                        ctx.strokeStyle = TICK_COLOR;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(innerPoint[0], innerPoint[1]);\n\t                        ctx.lineTo(outerPoint[0], outerPoint[1]);\n\t                        ctx.closePath();\n\t                        ctx.stroke();\n\t\n\t                        counter = 0;\n\t                        tickCounter++;\n\t                        numberCounter++;\n\t                    }\n\t                    counter++;\n\t                }\n\t                ctx.restore();\n\t            },\n\t\n\t            drawLargePointer = function (ctx) {\n\t                var grad, radius;\n\t\n\t                ctx.save();\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.509345, imageWidth * 0.457943);\n\t                ctx.lineTo(imageWidth * 0.5, imageWidth * 0.102803);\n\t                ctx.lineTo(imageWidth * 0.490654, imageWidth * 0.457943);\n\t                ctx.bezierCurveTo(imageWidth * 0.490654, imageWidth * 0.457943, imageWidth * 0.490654, imageWidth * 0.457943, imageWidth * 0.490654, imageWidth * 0.457943);\n\t                ctx.bezierCurveTo(imageWidth * 0.471962, imageWidth * 0.462616, imageWidth * 0.457943, imageWidth * 0.481308, imageWidth * 0.457943, imageWidth * 0.5);\n\t                ctx.bezierCurveTo(imageWidth * 0.457943, imageWidth * 0.518691, imageWidth * 0.471962, imageWidth * 0.537383, imageWidth * 0.490654, imageWidth * 0.542056);\n\t                ctx.bezierCurveTo(imageWidth * 0.490654, imageWidth * 0.542056, imageWidth * 0.490654, imageWidth * 0.542056, imageWidth * 0.490654, imageWidth * 0.542056);\n\t                ctx.lineTo(imageWidth * 0.490654, imageWidth * 0.621495);\n\t                ctx.lineTo(imageWidth * 0.509345, imageWidth * 0.621495);\n\t                ctx.lineTo(imageWidth * 0.509345, imageWidth * 0.542056);\n\t                ctx.bezierCurveTo(imageWidth * 0.509345, imageWidth * 0.542056, imageWidth * 0.509345, imageWidth * 0.542056, imageWidth * 0.509345, imageWidth * 0.542056);\n\t                ctx.bezierCurveTo(imageWidth * 0.528037, imageWidth * 0.537383, imageWidth * 0.542056, imageWidth * 0.518691, imageWidth * 0.542056, imageWidth * 0.5);\n\t                ctx.bezierCurveTo(imageWidth * 0.542056, imageWidth * 0.481308, imageWidth * 0.528037, imageWidth * 0.462616, imageWidth * 0.509345, imageWidth * 0.457943);\n\t                ctx.bezierCurveTo(imageWidth * 0.509345, imageWidth * 0.457943, imageWidth * 0.509345, imageWidth * 0.457943, imageWidth * 0.509345, imageWidth * 0.457943);\n\t                ctx.closePath();\n\t                grad = ctx.createLinearGradient(0, 0, 0, imageWidth * 0.621495);\n\t                grad.addColorStop(0, pointerColor.medium.getRgbaColor());\n\t                grad.addColorStop(0.388888, pointerColor.medium.getRgbaColor());\n\t                grad.addColorStop(0.5, pointerColor.light.getRgbaColor());\n\t                grad.addColorStop(0.611111, pointerColor.medium.getRgbaColor());\n\t                grad.addColorStop(1, pointerColor.medium.getRgbaColor());\n\t                ctx.fillStyle = grad;\n\t                ctx.strokeStyle = pointerColor.dark.getRgbaColor();\n\t                ctx.fill();\n\t                ctx.stroke();\n\t                // Draw the rings\n\t                ctx.beginPath();\n\t                radius = imageWidth * 0.065420 / 2;\n\t                ctx.arc(centerX, centerY, radius, 0, TWO_PI);\n\t                grad = ctx.createLinearGradient(centerX - radius, centerX + radius, 0, centerX + radius);\n\t                grad.addColorStop(0, '#e6b35c');\n\t                grad.addColorStop(0.01, '#e6b35c');\n\t                grad.addColorStop(0.99, '#c48200');\n\t                grad.addColorStop(1, '#c48200');\n\t                ctx.fillStyle = grad;\n\t                ctx.closePath();\n\t                ctx.fill();\n\t                ctx.beginPath();\n\t                radius = imageWidth * 0.046728 / 2;\n\t                ctx.arc(centerX, centerY, radius, 0, TWO_PI);\n\t                grad = ctx.createRadialGradient(centerX, centerX, 0, centerX, centerX, radius);\n\t                grad.addColorStop(0, '#c5c5c5');\n\t                grad.addColorStop(0.19, '#c5c5c5');\n\t                grad.addColorStop(0.22, '#000000');\n\t                grad.addColorStop(0.8, '#000000');\n\t                grad.addColorStop(0.99, '#707070');\n\t                grad.addColorStop(1, '#707070');\n\t                ctx.fillStyle = grad;\n\t                ctx.closePath();\n\t                ctx.fill();\n\t                ctx.restore();\n\t            },\n\t\n\t            drawSmallPointer = function (ctx) {\n\t                var grad, radius;\n\t\n\t                ctx.save();\n\t                ctx.beginPath();\n\t                ctx.moveTo(imageWidth * 0.476635, imageWidth * 0.313084);\n\t                ctx.bezierCurveTo(imageWidth * 0.476635, imageWidth * 0.322429, imageWidth * 0.485981, imageWidth * 0.331775, imageWidth * 0.495327, imageWidth * 0.336448);\n\t                ctx.bezierCurveTo(imageWidth * 0.495327, imageWidth * 0.336448, imageWidth * 0.495327, imageWidth * 0.350467, imageWidth * 0.495327, imageWidth * 0.350467);\n\t                ctx.lineTo(imageWidth * 0.504672, imageWidth * 0.350467);\n\t                ctx.bezierCurveTo(imageWidth * 0.504672, imageWidth * 0.350467, imageWidth * 0.504672, imageWidth * 0.336448, imageWidth * 0.504672, imageWidth * 0.336448);\n\t                ctx.bezierCurveTo(imageWidth * 0.514018, imageWidth * 0.331775, imageWidth * 0.523364, imageWidth * 0.322429, imageWidth * 0.523364, imageWidth * 0.313084);\n\t                ctx.bezierCurveTo(imageWidth * 0.523364, imageWidth * 0.303738, imageWidth * 0.514018, imageWidth * 0.294392, imageWidth * 0.504672, imageWidth * 0.289719);\n\t                ctx.bezierCurveTo(imageWidth * 0.504672, imageWidth * 0.289719, imageWidth * 0.5, imageWidth * 0.200934, imageWidth * 0.5, imageWidth * 0.200934);\n\t                ctx.bezierCurveTo(imageWidth * 0.5, imageWidth * 0.200934, imageWidth * 0.495327, imageWidth * 0.289719, imageWidth * 0.495327, imageWidth * 0.289719);\n\t                ctx.bezierCurveTo(imageWidth * 0.485981, imageWidth * 0.294392, imageWidth * 0.476635, imageWidth * 0.303738, imageWidth * 0.476635, imageWidth * 0.313084);\n\t                ctx.closePath();\n\t                grad = ctx.createLinearGradient(0, 0, imageWidth, 0);\n\t                grad.addColorStop(0, pointerColor.medium.getRgbaColor());\n\t                grad.addColorStop(0.388888, pointerColor.medium.getRgbaColor());\n\t                grad.addColorStop(0.5, pointerColor.light.getRgbaColor());\n\t                grad.addColorStop(0.611111, pointerColor.medium.getRgbaColor());\n\t                grad.addColorStop(1, pointerColor.medium.getRgbaColor());\n\t                ctx.fillStyle = grad;\n\t                ctx.strokeStyle = pointerColor.dark.getRgbaColor();\n\t                ctx.fill();\n\t                ctx.stroke();\n\t                // Draw the rings\n\t                ctx.beginPath();\n\t                radius = imageWidth * 0.037383 / 2;\n\t                ctx.arc(centerX, smallPointerY_Offset + smallPointerSize / 2, radius, 0, TWO_PI);\n\t                ctx.fillStyle = '#C48200';\n\t                ctx.closePath();\n\t                ctx.fill();\n\t                ctx.beginPath();\n\t                radius = imageWidth * 0.028037 / 2;\n\t                ctx.arc(centerX, smallPointerY_Offset + smallPointerSize / 2, radius, 0, TWO_PI);\n\t                ctx.fillStyle = '#999999';\n\t                ctx.closePath();\n\t                ctx.fill();\n\t                ctx.beginPath();\n\t                radius = imageWidth * 0.018691 / 2;\n\t                ctx.arc(centerX, smallPointerY_Offset + smallPointerSize / 2, radius, 0, TWO_PI);\n\t                ctx.fillStyle = '#000000';\n\t                ctx.closePath();\n\t                ctx.fill();\n\t                ctx.restore();\n\t            },\n\t\n\t            calculateAngles = function () {\n\t                currentMilliSeconds = new Date().getTime() - start;\n\t                secondPointerAngle = (currentMilliSeconds * ANGLE_STEP / 1000);\n\t                minutePointerAngle = (secondPointerAngle % 10800) / 30;\n\t\n\t                minutes = (currentMilliSeconds / 60000) % 30;\n\t                seconds = (currentMilliSeconds / 1000) % 60;\n\t                milliSeconds = (currentMilliSeconds) % 1000;\n\t            },\n\t\n\t            init = function (parameters) {\n\t                parameters = parameters || {};\n\t                var drawFrame = (undefined === parameters.frame ? false : parameters.frame),\n\t                    drawBackground = (undefined === parameters.background ? false : parameters.background),\n\t                    drawPointers = (undefined === parameters.pointers ? false : parameters.pointers),\n\t                    drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\t\n\t                initialized = true;\n\t\n\t                if (drawFrame && frameVisible) {\n\t                    drawRadialFrameImage(frameContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n\t                }\n\t\n\t                if (drawBackground && backgroundVisible) {\n\t                    // Create background in background buffer (backgroundBuffer)\n\t                    drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                    // Create custom layer in background buffer (backgroundBuffer)\n\t                    drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                    drawTickmarksImage(backgroundContext, imageWidth, 60, 0.075, 0.1, 0, 0);\n\t                    drawTickmarksImage(backgroundContext, smallPointerSize, 30, 0.095, 0.13, smallPointerX_Offset, smallPointerY_Offset);\n\t                }\n\t                if (drawPointers) {\n\t                    drawLargePointer(largePointerContext);\n\t                    drawSmallPointer(smallPointerContext);\n\t                }\n\t\n\t                if (drawForeground && foregroundVisible) {\n\t                    drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, false);\n\t                }\n\t            },\n\t\n\t            resetBuffers = function (buffers) {\n\t                buffers = buffers || {};\n\t                var resetFrame = (undefined === buffers.frame ? false : buffers.frame),\n\t                    resetBackground = (undefined === buffers.background ? false : buffers.background),\n\t                    resetPointers = (undefined === buffers.pointers ? false : buffers.pointers),\n\t                    resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\t\n\t                if (resetFrame) {\n\t                    frameBuffer.width = size;\n\t                    frameBuffer.height = size;\n\t                    frameContext = frameBuffer.getContext('2d');\n\t                }\n\t\n\t                if (resetBackground) {\n\t                    backgroundBuffer.width = size;\n\t                    backgroundBuffer.height = size;\n\t                    backgroundContext = backgroundBuffer.getContext('2d');\n\t                }\n\t\n\t                if (resetPointers) {\n\t                    smallPointerBuffer.width = size;\n\t                    smallPointerBuffer.height = size;\n\t                    smallPointerContext = smallPointerBuffer.getContext('2d');\n\t\n\t                    largePointerBuffer.width = size;\n\t                    largePointerBuffer.height = size;\n\t                    largePointerContext = largePointerBuffer.getContext('2d');\n\t                }\n\t\n\t                if (resetForeground) {\n\t                    foregroundBuffer.width = size;\n\t                    foregroundBuffer.height = size;\n\t                    foregroundContext = foregroundBuffer.getContext('2d');\n\t                }\n\t            },\n\t\n\t            tickTock = function () {\n\t                if (!lap) {\n\t                    calculateAngles();\n\t                    self.repaint();\n\t                }\n\t                if (running) {\n\t                    tickTimer = setTimeout(tickTock, 200);\n\t                }\n\t\n\t            };\n\t\n\t        //************************************ Public methods **************************************\n\t        // Returns true if the stopwatch is running\n\t        this.isRunning = function () {\n\t            return running;\n\t        };\n\t\n\t        // Starts the stopwatch\n\t        this.start = function () {\n\t            if (!running) {\n\t                running = true;\n\t                start = new Date().getTime() - currentMilliSeconds;\n\t                tickTock();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        // Stops the stopwatch\n\t        this.stop = function () {\n\t            if (running) {\n\t                running = false;\n\t                clearTimeout(tickTimer);\n\t                //calculateAngles();\n\t            }\n\t            if (lap) {\n\t                lap = false;\n\t                calculateAngles();\n\t                this.repaint();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        // Resets the stopwatch\n\t        this.reset = function () {\n\t            if (running) {\n\t                running = false;\n\t                lap = false;\n\t                clearTimeout(tickTimer);\n\t            }\n\t            start = new Date().getTime();\n\t            calculateAngles();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        // Laptimer, stop/restart stopwatch\n\t        this.lap = function () {\n\t            if (running && !lap) {\n\t                lap = true;\n\t            } else if (lap) {\n\t                lap = false;\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.getMeasuredTime = function () {\n\t            return (minutes + ':' + seconds + ':' + milliSeconds);\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers({frame: true});\n\t            frameDesign = newFrameDesign;\n\t            init({frame: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            resetBuffers({ background: true });\n\t            backgroundColor = newBackgroundColor;\n\t            init({ background: true });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setForegroundType = function (newForegroundType) {\n\t            resetBuffers({foreground: true});\n\t            foregroundType = newForegroundType;\n\t            init({foreground: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setPointerColor = function (newPointerColor) {\n\t            resetBuffers({pointers: true});\n\t            pointerColor = newPointerColor;\n\t            init({pointers: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init({frame: true,\n\t                      background: true,\n\t                      pointers: true,\n\t                      foreground: true});\n\t            }\n\t\n\t            mainCtx.clearRect(0, 0, imageWidth, imageHeight);\n\t\n\t            // Draw frame\n\t            if (frameVisible) {\n\t                mainCtx.drawImage(frameBuffer, 0, 0);\n\t            }\n\t\n\t            // Draw buffered image to visible canvas\n\t            if (backgroundVisible) {\n\t                mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t            }\n\t\n\t            // have to draw to a rotated temporary image area so we can translate in\n\t            // absolute x, y values when drawing to main context\n\t            var shadowOffset = imageWidth * 0.006;\n\t\n\t            var rotationAngle = (minutePointerAngle + (2 * Math.sin(minutePointerAngle * RAD_FACTOR))) * RAD_FACTOR;\n\t            var secRotationAngle = (secondPointerAngle + (2 * Math.sin(secondPointerAngle * RAD_FACTOR))) * RAD_FACTOR;\n\t\n\t            // Draw the minute pointer\n\t            // Define rotation center\n\t            mainCtx.save();\n\t            mainCtx.translate(centerX, smallPointerY_Offset + smallPointerSize / 2);\n\t            mainCtx.rotate(rotationAngle);\n\t            mainCtx.translate(-centerX, -(smallPointerY_Offset + smallPointerSize / 2));\n\t            // Set the pointer shadow params\n\t            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\t            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset / 2;\n\t            mainCtx.shadowBlur = shadowOffset;\n\t            // Draw the pointer\n\t            mainCtx.drawImage(smallPointerBuffer, 0, 0);\n\t            mainCtx.restore();\n\t\n\t            // Draw the second pointer\n\t            // Define rotation center\n\t            mainCtx.save();\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate(secRotationAngle);\n\t            mainCtx.translate(-centerX, -centerY);\n\t            // Set the pointer shadow params\n\t            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\t            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset / 2;\n\t            mainCtx.shadowBlur = shadowOffset;\n\t            // Draw the pointer\n\t            mainCtx.drawImage(largePointerBuffer, 0, 0);\n\t            // Undo the translations & shadow settings\n\t            mainCtx.restore();\n\t\n\t            // Draw the foreground\n\t            if (foregroundVisible) {\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t        };\n\t\n\t        // Has a size been specified?\n\t        size = (size === 0 ? Math.min(mainCtx.canvas.width, mainCtx.canvas.height) : size);\n\t\n\t        // Set the size - also clears it\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        imageWidth = size;\n\t        imageHeight = size;\n\t\n\t        centerX = imageWidth / 2;\n\t        centerY = imageHeight / 2;\n\t\n\t        smallPointerSize = 0.285 * imageWidth;\n\t        smallPointerX_Offset = centerX - smallPointerSize / 2;\n\t        smallPointerY_Offset = 0.17 * imageWidth;\n\t\n\t        // Buffer for the frame\n\t        frameBuffer = createBuffer(size, size);\n\t        frameContext = frameBuffer.getContext('2d');\n\t\n\t        // Buffer for static background painting code\n\t        backgroundBuffer = createBuffer(size, size);\n\t        backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        // Buffer for small pointer image painting code\n\t        smallPointerBuffer = createBuffer(size, size);\n\t        smallPointerContext = smallPointerBuffer.getContext('2d');\n\t\n\t        // Buffer for large pointer image painting code\n\t        largePointerBuffer = createBuffer(size, size);\n\t        largePointerContext = largePointerBuffer.getContext('2d');\n\t\n\t        // Buffer for static foreground painting code\n\t        foregroundBuffer = createBuffer(size, size);\n\t        foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        // Visualize the component\n\t        start = new Date().getTime();\n\t        tickTock();\n\t\n\t        return this;\n\t    };\n\t\n\t    var altimeter = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t            // parameters\n\t        var size = (undefined === parameters.size ? 0 : parameters.size),\n\t            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n\t            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n\t            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n\t            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n\t            knobType = (undefined === parameters.knobType ? steelseries.KnobType.METAL_KNOB : parameters.knobType),\n\t            knobStyle = (undefined === parameters.knobStyle ? steelseries.KnobStyle.BLACK : parameters.knobStyle),\n\t            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.BLACK : parameters.lcdColor),\n\t            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n\t            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n\t            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n\t            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n\t            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n\t            //\n\t            minValue = 0, maxValue = 10, value = minValue,\n\t            value100 = 0, value1000 = 0, value10000 = 0,\n\t            angleStep100ft, angleStep1000ft, angleStep10000ft,\n\t            tickLabelPeriod = 1, // Draw value at every 10th tickmark\n\t            tween,\n\t            repainting = false,\n\t            imageWidth, imageHeight,\n\t            centerX, centerY,\n\t            stdFont,\n\t            mainCtx = getCanvasContext(canvas),  // Get the canvas context\n\t            // Constants\n\t            TICKMARK_OFFSET = PI,\n\t            //\n\t            initialized = false,\n\t            // **************   Buffer creation  ********************\n\t            // Buffer for the frame\n\t            frameBuffer = createBuffer(size, size),\n\t            frameContext = frameBuffer.getContext('2d'),\n\t            // Buffer for the background\n\t            backgroundBuffer = createBuffer(size, size),\n\t            backgroundContext = backgroundBuffer.getContext('2d'),\n\t\n\t            lcdBuffer,\n\t\n\t            // Buffer for 10000ft pointer image painting code\n\t            pointer10000Buffer = createBuffer(size, size),\n\t            pointer10000Context = pointer10000Buffer.getContext('2d'),\n\t\n\t            // Buffer for 1000ft pointer image painting code\n\t            pointer1000Buffer = createBuffer(size, size),\n\t            pointer1000Context = pointer1000Buffer.getContext('2d'),\n\t\n\t            // Buffer for 100ft pointer image painting code\n\t            pointer100Buffer = createBuffer(size, size),\n\t            pointer100Context = pointer100Buffer.getContext('2d'),\n\t\n\t            // Buffer for static foreground painting code\n\t            foregroundBuffer = createBuffer(size, size),\n\t            foregroundContext = foregroundBuffer.getContext('2d');\n\t            // End of variables\n\t\n\t        // Get the canvas context and clear it\n\t        mainCtx.save();\n\t        // Has a size been specified?\n\t        size = (size === 0 ? Math.min(mainCtx.canvas.width, mainCtx.canvas.height) : size);\n\t\n\t        // Set the size\n\t        mainCtx.canvas.width = size;\n\t        mainCtx.canvas.height = size;\n\t\n\t        imageWidth = size;\n\t        imageHeight = size;\n\t\n\t        centerX = imageWidth / 2;\n\t        centerY = imageHeight / 2;\n\t\n\t        stdFont = Math.floor(imageWidth * 0.09) + 'px ' + stdFontName;\n\t\n\t        // **************   Image creation  ********************\n\t        var drawLcdText = function (value) {\n\t            mainCtx.save();\n\t            mainCtx.textAlign = 'right';\n\t            mainCtx.textBaseline = 'middle';\n\t            mainCtx.strokeStyle = lcdColor.textColor;\n\t            mainCtx.fillStyle = lcdColor.textColor;\n\t\n\t            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n\t                mainCtx.shadowColor = 'gray';\n\t                mainCtx.shadowOffsetX = imageWidth * 0.007;\n\t                mainCtx.shadowOffsetY = imageWidth * 0.007;\n\t                mainCtx.shadowBlur = imageWidth * 0.009;\n\t            }\n\t            if (digitalFont) {\n\t                mainCtx.font = Math.floor(imageWidth * 0.075) + 'px ' + lcdFontName;\n\t            } else {\n\t                mainCtx.font = Math.floor(imageWidth * 0.075) + 'px ' + stdFontName;\n\t            }\n\t            mainCtx.fillText(Math.round(value), (imageWidth + (imageWidth * 0.4)) / 2 - 4, imageWidth * 0.607, imageWidth * 0.4);\n\t            mainCtx.restore();\n\t        };\n\t\n\t        var drawTickmarksImage = function (ctx, freeAreaAngle, offset, minVal, maxVal, angleStep) {\n\t            var MEDIUM_STROKE = Math.max(imageWidth * 0.012, 2),\n\t                THIN_STROKE = Math.max(imageWidth * 0.007, 1.5),\n\t                TEXT_DISTANCE = imageWidth * 0.13,\n\t                MED_LENGTH = imageWidth * 0.05,\n\t                MAX_LENGTH = imageWidth * 0.07,\n\t                RADIUS = imageWidth * 0.4,\n\t                counter = 0,\n\t                tickCounter = 0,\n\t                sinValue = 0,\n\t                cosValue = 0,\n\t                alpha,          // angle for tickmarks\n\t                valueCounter,   // value for tickmarks\n\t                ALPHA_START = -offset - (freeAreaAngle / 2);\n\t\n\t            ctx.save();\n\t            ctx.textAlign = 'center';\n\t            ctx.textBaseline = 'middle';\n\t            ctx.font = stdFont;\n\t            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t\n\t            for (alpha = ALPHA_START, valueCounter = 0; valueCounter <= 10; alpha -= angleStep * 0.1, valueCounter += 0.1) {\n\t                sinValue = Math.sin(alpha);\n\t                cosValue = Math.cos(alpha);\n\t\n\t                // tickmark every 2 units\n\t                if (counter % 2 === 0) {\n\t                    ctx.lineWidth = THIN_STROKE;\n\t                    // Draw ticks\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(centerX + (RADIUS - MED_LENGTH) * sinValue, centerY + (RADIUS - MED_LENGTH) * cosValue);\n\t                    ctx.lineTo(centerX + RADIUS * sinValue, centerY + RADIUS * cosValue);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                }\n\t\n\t                // Different tickmark every 10 units\n\t                if (counter === 10 || counter === 0) {\n\t                    ctx.lineWidth = MEDIUM_STROKE;\n\t\n\t                    // if gauge is full circle, avoid painting maxValue over minValue\n\t                    if (freeAreaAngle === 0) {\n\t                        if (Math.round(valueCounter) !== maxValue) {\n\t                            ctx.fillText(Math.round(valueCounter).toString(), centerX + (RADIUS - TEXT_DISTANCE) * sinValue, centerY + (RADIUS - TEXT_DISTANCE) * cosValue);\n\t                        }\n\t                    }\n\t                    counter = 0;\n\t                    tickCounter++;\n\t\n\t                    // Draw ticks\n\t                    ctx.beginPath();\n\t                    ctx.moveTo(centerX + (RADIUS - MAX_LENGTH) * sinValue, centerY + (RADIUS - MAX_LENGTH) * cosValue);\n\t                    ctx.lineTo(centerX + RADIUS * sinValue, centerY + RADIUS * cosValue);\n\t                    ctx.closePath();\n\t                    ctx.stroke();\n\t                }\n\t                counter++;\n\t            }\n\t            ctx.restore();\n\t        };\n\t\n\t        var draw100ftPointer = function (ctx, shadow) {\n\t            var grad;\n\t\n\t            if (shadow) {\n\t                ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n\t                ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n\t            } else {\n\t                grad = ctx.createLinearGradient(0, imageHeight * 0.168224, 0, imageHeight * 0.626168);\n\t                grad.addColorStop(0, '#ffffff');\n\t                grad.addColorStop(0.31, '#ffffff');\n\t                grad.addColorStop(0.3101, '#ffffff');\n\t                grad.addColorStop(0.32, '#202020');\n\t                grad.addColorStop(1, '#202020');\n\t                ctx.fillStyle = grad;\n\t            }\n\t\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.518691, imageHeight * 0.471962);\n\t            ctx.bezierCurveTo(imageWidth * 0.514018, imageHeight * 0.471962, imageWidth * 0.509345, imageHeight * 0.467289, imageWidth * 0.509345, imageHeight * 0.467289);\n\t            ctx.lineTo(imageWidth * 0.509345, imageHeight * 0.200934);\n\t            ctx.lineTo(imageWidth * 0.5, imageHeight * 0.168224);\n\t            ctx.lineTo(imageWidth * 0.490654, imageHeight * 0.200934);\n\t            ctx.lineTo(imageWidth * 0.490654, imageHeight * 0.467289);\n\t            ctx.bezierCurveTo(imageWidth * 0.490654, imageHeight * 0.467289, imageWidth * 0.481308, imageHeight * 0.471962, imageWidth * 0.481308, imageHeight * 0.471962);\n\t            ctx.bezierCurveTo(imageWidth * 0.471962, imageHeight * 0.481308, imageWidth * 0.467289, imageHeight * 0.490654, imageWidth * 0.467289, imageHeight * 0.5);\n\t            ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.514018, imageWidth * 0.476635, imageHeight * 0.528037, imageWidth * 0.490654, imageHeight * 0.532710);\n\t            ctx.bezierCurveTo(imageWidth * 0.490654, imageHeight * 0.532710, imageWidth * 0.490654, imageHeight * 0.579439, imageWidth * 0.490654, imageHeight * 0.588785);\n\t            ctx.bezierCurveTo(imageWidth * 0.485981, imageHeight * 0.593457, imageWidth * 0.481308, imageHeight * 0.598130, imageWidth * 0.481308, imageHeight * 0.607476);\n\t            ctx.bezierCurveTo(imageWidth * 0.481308, imageHeight * 0.616822, imageWidth * 0.490654, imageHeight * 0.626168, imageWidth * 0.5, imageHeight * 0.626168);\n\t            ctx.bezierCurveTo(imageWidth * 0.509345, imageHeight * 0.626168, imageWidth * 0.518691, imageHeight * 0.616822, imageWidth * 0.518691, imageHeight * 0.607476);\n\t            ctx.bezierCurveTo(imageWidth * 0.518691, imageHeight * 0.598130, imageWidth * 0.514018, imageHeight * 0.593457, imageWidth * 0.504672, imageHeight * 0.588785);\n\t            ctx.bezierCurveTo(imageWidth * 0.504672, imageHeight * 0.579439, imageWidth * 0.504672, imageHeight * 0.532710, imageWidth * 0.509345, imageHeight * 0.532710);\n\t            ctx.bezierCurveTo(imageWidth * 0.523364, imageHeight * 0.528037, imageWidth * 0.532710, imageHeight * 0.514018, imageWidth * 0.532710, imageHeight * 0.5);\n\t            ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.490654, imageWidth * 0.528037, imageHeight * 0.481308, imageWidth * 0.518691, imageHeight * 0.471962);\n\t            ctx.closePath();\n\t            ctx.fill();\n\t            ctx.restore();\n\t        };\n\t\n\t        var draw1000ftPointer = function (ctx) {\n\t            var grad;\n\t\n\t            grad = ctx.createLinearGradient(0, imageHeight * 0.401869, 0, imageHeight * 0.616822);\n\t            grad.addColorStop(0, '#ffffff');\n\t            grad.addColorStop(0.51, '#ffffff');\n\t            grad.addColorStop(0.52, '#ffffff');\n\t            grad.addColorStop(0.5201, '#202020');\n\t            grad.addColorStop(0.53, '#202020');\n\t            grad.addColorStop(1, '#202020');\n\t            ctx.fillStyle = grad;\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.518691, imageHeight * 0.471962);\n\t            ctx.bezierCurveTo(imageWidth * 0.514018, imageHeight * 0.462616, imageWidth * 0.528037, imageHeight * 0.401869, imageWidth * 0.528037, imageHeight * 0.401869);\n\t            ctx.lineTo(imageWidth * 0.5, imageHeight * 0.331775);\n\t            ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.401869);\n\t            ctx.bezierCurveTo(imageWidth * 0.471962, imageHeight * 0.401869, imageWidth * 0.485981, imageHeight * 0.462616, imageWidth * 0.481308, imageHeight * 0.471962);\n\t            ctx.bezierCurveTo(imageWidth * 0.471962, imageHeight * 0.481308, imageWidth * 0.467289, imageHeight * 0.490654, imageWidth * 0.467289, imageHeight * 0.5);\n\t            ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.514018, imageWidth * 0.476635, imageHeight * 0.528037, imageWidth * 0.490654, imageHeight * 0.532710);\n\t            ctx.bezierCurveTo(imageWidth * 0.490654, imageHeight * 0.532710, imageWidth * 0.462616, imageHeight * 0.574766, imageWidth * 0.462616, imageHeight * 0.593457);\n\t            ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.616822, imageWidth * 0.5, imageHeight * 0.612149, imageWidth * 0.5, imageHeight * 0.612149);\n\t            ctx.bezierCurveTo(imageWidth * 0.5, imageHeight * 0.612149, imageWidth * 0.532710, imageHeight * 0.616822, imageWidth * 0.537383, imageHeight * 0.593457);\n\t            ctx.bezierCurveTo(imageWidth * 0.537383, imageHeight * 0.574766, imageWidth * 0.509345, imageHeight * 0.532710, imageWidth * 0.509345, imageHeight * 0.532710);\n\t            ctx.bezierCurveTo(imageWidth * 0.523364, imageHeight * 0.528037, imageWidth * 0.532710, imageHeight * 0.514018, imageWidth * 0.532710, imageHeight * 0.5);\n\t            ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.490654, imageWidth * 0.528037, imageHeight * 0.481308, imageWidth * 0.518691, imageHeight * 0.471962);\n\t            ctx.closePath();\n\t            ctx.fill();\n\t            ctx.restore();\n\t        };\n\t\n\t        var draw10000ftPointer = function (ctx) {\n\t            ctx.fillStyle = '#ffffff';\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.518691, imageHeight * 0.471962);\n\t            ctx.bezierCurveTo(imageWidth * 0.514018, imageHeight * 0.471962, imageWidth * 0.514018, imageHeight * 0.467289, imageWidth * 0.514018, imageHeight * 0.467289);\n\t            ctx.lineTo(imageWidth * 0.514018, imageHeight * 0.317757);\n\t            ctx.lineTo(imageWidth * 0.504672, imageHeight * 0.303738);\n\t            ctx.lineTo(imageWidth * 0.504672, imageHeight * 0.182242);\n\t            ctx.lineTo(imageWidth * 0.532710, imageHeight * 0.116822);\n\t            ctx.lineTo(imageWidth * 0.462616, imageHeight * 0.116822);\n\t            ctx.lineTo(imageWidth * 0.495327, imageHeight * 0.182242);\n\t            ctx.lineTo(imageWidth * 0.495327, imageHeight * 0.299065);\n\t            ctx.lineTo(imageWidth * 0.485981, imageHeight * 0.317757);\n\t            ctx.lineTo(imageWidth * 0.485981, imageHeight * 0.467289);\n\t            ctx.bezierCurveTo(imageWidth * 0.485981, imageHeight * 0.467289, imageWidth * 0.485981, imageHeight * 0.471962, imageWidth * 0.481308, imageHeight * 0.471962);\n\t            ctx.bezierCurveTo(imageWidth * 0.471962, imageHeight * 0.481308, imageWidth * 0.467289, imageHeight * 0.490654, imageWidth * 0.467289, imageHeight * 0.5);\n\t            ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.518691, imageWidth * 0.481308, imageHeight * 0.532710, imageWidth * 0.5, imageHeight * 0.532710);\n\t            ctx.bezierCurveTo(imageWidth * 0.518691, imageHeight * 0.532710, imageWidth * 0.532710, imageHeight * 0.518691, imageWidth * 0.532710, imageHeight * 0.5);\n\t            ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.490654, imageWidth * 0.528037, imageHeight * 0.481308, imageWidth * 0.518691, imageHeight * 0.471962);\n\t            ctx.closePath();\n\t            ctx.fill();\n\t        };\n\t\n\t        function calcAngleStep() {\n\t            angleStep100ft = (TWO_PI) / (maxValue - minValue);\n\t            angleStep1000ft = angleStep100ft / 10;\n\t            angleStep10000ft = angleStep1000ft / 10;\n\t        }\n\t\n\t        function calcValues() {\n\t            value100 = (value % 1000) / 100;\n\t            value1000 = (value % 10000) / 100;\n\t            value10000 = (value % 100000) / 100;\n\t        }\n\t\n\t        // **************   Initialization  ********************\n\t        // Draw all static painting code to background\n\t        var init = function (parameters) {\n\t            parameters = parameters || {};\n\t            // Parameters\n\t            var drawFrame = (undefined === parameters.frame ? false : parameters.frame),\n\t                drawBackground = (undefined === parameters.background ? false : parameters.background),\n\t                drawPointers = (undefined === parameters.pointers ? false : parameters.pointers),\n\t                drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\t\n\t            initialized = true;\n\t\n\t            calcAngleStep();\n\t\n\t            // Create frame in frame buffer (backgroundBuffer)\n\t            if (drawFrame && frameVisible) {\n\t                drawRadialFrameImage(frameContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n\t            }\n\t\n\t            if (drawBackground && backgroundVisible) {\n\t                // Create background in background buffer (backgroundBuffer)\n\t                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                // Create custom layer in background buffer (backgroundBuffer)\n\t                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\t\n\t                // Create tickmarks in background buffer (backgroundBuffer)\n\t                drawTickmarksImage(backgroundContext, 0, TICKMARK_OFFSET, 0, 10, angleStep100ft, tickLabelPeriod, 0, true, true, null);\n\t            }\n\t\n\t            // Create lcd background if selected in background buffer (backgroundBuffer)\n\t            if (drawBackground && lcdVisible) {\n\t                lcdBuffer = createLcdBackgroundImage(imageWidth * 0.4, imageHeight * 0.09, lcdColor);\n\t                backgroundContext.drawImage(lcdBuffer, (imageWidth - (imageWidth * 0.4)) / 2, imageHeight * 0.56);\n\t            }\n\t\n\t            if (drawPointers) {\n\t                // Create 100ft pointer in buffer\n\t                draw100ftPointer(pointer100Context, false);\n\t                // Create 1000ft pointer in buffer\n\t                draw1000ftPointer(pointer1000Context, false);\n\t                // Create 10000ft pointer in buffer\n\t                draw10000ftPointer(pointer10000Context, false);\n\t            }\n\t\n\t            if (drawForeground && foregroundVisible) {\n\t                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, true, knobType, knobStyle);\n\t            }\n\t        };\n\t\n\t        var resetBuffers = function (buffers) {\n\t            buffers = buffers || {};\n\t            var resetFrame = (undefined === buffers.frame ? false : buffers.frame),\n\t                resetBackground = (undefined === buffers.background ? false : buffers.background),\n\t                resetPointers = (undefined === buffers.pointers ? false : buffers.pointers),\n\t                resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\t\n\t            if (resetFrame) {\n\t                frameBuffer.width = size;\n\t                frameBuffer.height = size;\n\t                frameContext = frameBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetBackground) {\n\t                backgroundBuffer.width = size;\n\t                backgroundBuffer.height = size;\n\t                backgroundContext = backgroundBuffer.getContext('2d');\n\t            }\n\t\n\t            if (resetPointers) {\n\t                pointer100Buffer.width = size;\n\t                pointer100Buffer.height = size;\n\t                pointer100Context = pointer100Buffer.getContext('2d');\n\t\n\t                pointer1000Buffer.width = size;\n\t                pointer1000Buffer.height = size;\n\t                pointer1000Context = pointer1000Buffer.getContext('2d');\n\t\n\t                pointer10000Buffer.width = size;\n\t                pointer10000Buffer.height = size;\n\t                pointer10000Context = pointer10000Buffer.getContext('2d');\n\t            }\n\t\n\t            if (resetForeground) {\n\t                foregroundBuffer.width = size;\n\t                foregroundBuffer.height = size;\n\t                foregroundContext = foregroundBuffer.getContext('2d');\n\t            }\n\t        };\n\t\n\t        //************************************ Public methods **************************************\n\t        this.setValue = function (newValue) {\n\t            value = parseFloat(newValue);\n\t            this.repaint();\n\t        };\n\t\n\t        this.getValue = function () {\n\t            return value;\n\t        };\n\t\n\t        this.setValueAnimated = function (newValue, callback) {\n\t            newValue = parseFloat(newValue);\n\t            var targetValue = (newValue < minValue ? minValue : newValue),\n\t                gauge = this,\n\t                time;\n\t\n\t            if (value !== targetValue) {\n\t                if (undefined !==  tween && tween.isPlaying) {\n\t                    tween.stop();\n\t                }\n\t                // Allow 5 secs per 10,000ft\n\t                time = Math.max(Math.abs(value - targetValue) / 10000 * 5, 1);\n\t                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n\t                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, value, targetValue, 1);\n\t                tween.onMotionChanged = function (event) {\n\t                        value = event.target._pos;\n\t                        if (!repainting) {\n\t                            repainting = true;\n\t                            requestAnimFrame(gauge.repaint);\n\t                        }\n\t                    };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tween.onMotionFinished = callback;\n\t                }\n\t\n\t                tween.start();\n\t            }\n\t            return this;\n\t        };\n\t\n\t        this.setFrameDesign = function (newFrameDesign) {\n\t            resetBuffers({frame: true});\n\t            frameDesign = newFrameDesign;\n\t            init({frame: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setBackgroundColor = function (newBackgroundColor) {\n\t            resetBuffers({background: true,\n\t                          pointer: true       // type2 & 13 depend on background\n\t                });\n\t            backgroundColor = newBackgroundColor;\n\t            init({background: true,   // type2 & 13 depend on background\n\t                  pointer: true\n\t                });\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setForegroundType = function (newForegroundType) {\n\t            resetBuffers({foreground: true});\n\t            foregroundType = newForegroundType;\n\t            init({foreground: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setLcdColor = function (newLcdColor) {\n\t            lcdColor = newLcdColor;\n\t            resetBuffers({background: true});\n\t            init({background: true});\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init({frame: true,\n\t                      background: true,\n\t                      led: true,\n\t                      pointers: true,\n\t                      foreground: true});\n\t            }\n\t\n\t            //mainCtx.save();\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            // Draw frame\n\t            if (frameVisible) {\n\t                mainCtx.drawImage(frameBuffer, 0, 0);\n\t            }\n\t\n\t            // Draw buffered image to visible canvas\n\t            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\t\n\t            // Draw lcd display\n\t            if (lcdVisible) {\n\t                drawLcdText(value);\n\t            }\n\t\n\t            // re-calculate the spearate pointer values\n\t            calcValues();\n\t\n\t            var shadowOffset = imageWidth * 0.006 * 0.5;\n\t\n\t            mainCtx.save();\n\t            //Draw 10000ft pointer\n\t            // Define rotation center\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate((value10000 - minValue) * angleStep10000ft);\n\t            mainCtx.translate(-centerX, -centerY);\n\t            // Set the pointer shadow params\n\t            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\t            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\t            mainCtx.shadowBlur = shadowOffset * 2;\n\t            // Draw the pointer\n\t            mainCtx.drawImage(pointer10000Buffer, 0, 0);\n\t\n\t            shadowOffset = imageWidth * 0.006 * 0.75;\n\t            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\t\n\t            //Draw 1000ft pointer\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate((value1000 - minValue) * angleStep1000ft - (value10000 - minValue) * angleStep10000ft);\n\t            mainCtx.translate(-centerX, -centerY);\n\t            mainCtx.drawImage(pointer1000Buffer, 0, 0);\n\t\n\t            shadowOffset = imageWidth * 0.006;\n\t            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\t\n\t            //Draw 100ft pointer\n\t            mainCtx.translate(centerX, centerY);\n\t            mainCtx.rotate((value100 - minValue) * angleStep100ft - (value1000 - minValue) * angleStep1000ft);\n\t            mainCtx.translate(-centerX, -centerY);\n\t            mainCtx.drawImage(pointer100Buffer, 0, 0);\n\t            mainCtx.restore();\n\t\n\t            //Draw the foregound\n\t            if (foregroundVisible) {\n\t                mainCtx.drawImage(foregroundBuffer, 0, 0);\n\t            }\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var trafficlight = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var width = (undefined === parameters.width ? 0 : parameters.width),\n\t            height = (undefined === parameters.height ? 0 : parameters.height),\n\t            //\n\t            mainCtx = getCanvasContext(canvas),\n\t            prefHeight, imageWidth, imageHeight,\n\t            redOn = false,\n\t            yellowOn = false,\n\t            greenOn = false,\n\t            initialized = false,\n\t            housingBuffer = doc.createElement('canvas'),\n\t            housingCtx = housingBuffer.getContext('2d'),\n\t            lightGreenBuffer = doc.createElement('canvas'),\n\t            lightGreenCtx = lightGreenBuffer.getContext('2d'),\n\t            greenOnBuffer = doc.createElement('canvas'),\n\t            greenOnCtx = greenOnBuffer.getContext('2d'),\n\t            greenOffBuffer = doc.createElement('canvas'),\n\t            greenOffCtx = greenOffBuffer.getContext('2d'),\n\t            lightYellowBuffer = doc.createElement('canvas'),\n\t            lightYellowCtx = lightYellowBuffer.getContext('2d'),\n\t            yellowOnBuffer = doc.createElement('canvas'),\n\t            yellowOnCtx = yellowOnBuffer.getContext('2d'),\n\t            yellowOffBuffer = doc.createElement('canvas'),\n\t            yellowOffCtx = yellowOffBuffer.getContext('2d'),\n\t            lightRedBuffer = doc.createElement('canvas'),\n\t            lightRedCtx = lightRedBuffer.getContext('2d'),\n\t            redOnBuffer = doc.createElement('canvas'),\n\t            redOnCtx = redOnBuffer.getContext('2d'),\n\t            redOffBuffer = doc.createElement('canvas'),\n\t            redOffCtx = redOffBuffer.getContext('2d');\n\t            // End of variables\n\t\n\t        // Has a size been specified?\n\t        if (width === 0) {\n\t            width = mainCtx.canvas.width;\n\t        }\n\t        if (height === 0) {\n\t            height = mainCtx.canvas.height;\n\t        }\n\t\n\t        // Set the size - also clears the canvas\n\t        mainCtx.canvas.width = width;\n\t        mainCtx.canvas.height = height;\n\t\n\t        prefHeight = width < (height * 0.352517) ? (width * 2.836734) : height;\n\t        imageWidth = prefHeight * 0.352517;\n\t        imageHeight = prefHeight;\n\t\n\t        housingBuffer.width = imageWidth;\n\t        housingBuffer.height = imageHeight;\n\t\n\t        lightGreenBuffer.width = imageWidth;\n\t        lightGreenBuffer.height = imageHeight;\n\t\n\t        greenOnBuffer.width = imageWidth;\n\t        greenOnBuffer.height = imageHeight;\n\t\n\t        greenOffBuffer.width = imageWidth;\n\t        greenOffBuffer.height = imageHeight;\n\t\n\t        lightYellowBuffer.width = imageWidth;\n\t        lightYellowBuffer.height = imageHeight;\n\t\n\t        yellowOnBuffer.width = imageWidth;\n\t        yellowOnBuffer.height = imageHeight;\n\t\n\t        yellowOffBuffer.width = imageWidth;\n\t        yellowOffBuffer.height = imageHeight;\n\t\n\t        lightRedBuffer.width = imageWidth;\n\t        lightRedBuffer.height = imageHeight;\n\t\n\t        redOnBuffer.width = imageWidth;\n\t        redOnBuffer.height = imageHeight;\n\t\n\t        redOffBuffer.width = imageWidth;\n\t        redOffBuffer.height = imageHeight;\n\t\n\t        var drawHousing = function (ctx) {\n\t            var housingFill, housingFrontFill;\n\t\n\t            ctx.save();\n\t\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0.107142 * imageWidth, 0);\n\t            ctx.lineTo(imageWidth - 0.107142 * imageWidth, 0);\n\t            ctx.quadraticCurveTo(imageWidth, 0, imageWidth, 0.107142 * imageWidth);\n\t            ctx.lineTo(imageWidth, imageHeight - 0.107142 * imageWidth);\n\t            ctx.quadraticCurveTo(imageWidth, imageHeight, imageWidth - 0.107142 * imageWidth, imageHeight);\n\t            ctx.lineTo(0.107142 * imageWidth, imageHeight);\n\t            ctx.quadraticCurveTo(0, imageHeight, 0, imageHeight - 0.107142 * imageWidth);\n\t            ctx.lineTo(0, 0.107142 * imageWidth);\n\t            ctx.quadraticCurveTo(0, 0, 0.107142 * imageWidth, imageHeight);\n\t            ctx.closePath();\n\t            housingFill = ctx.createLinearGradient(0.040816 * imageWidth, 0.007194 * imageHeight, 0.952101 * imageWidth, 0.995882 * imageHeight);\n\t            housingFill.addColorStop(0, 'rgb(152, 152, 154)');\n\t            housingFill.addColorStop(0.01, 'rgb(152, 152, 154)');\n\t            housingFill.addColorStop(0.09, '#333333');\n\t            housingFill.addColorStop(0.24, 'rgb(152, 152, 154)');\n\t            housingFill.addColorStop(0.55, 'rgb(31, 31, 31)');\n\t            housingFill.addColorStop(0.78, '#363636');\n\t            housingFill.addColorStop(0.98, '#000000');\n\t            housingFill.addColorStop(1, '#000000');\n\t            ctx.fillStyle = housingFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0.030612 * imageWidth + 0.084183 * imageWidth, 0.010791 * imageHeight);\n\t            ctx.lineTo(0.030612 * imageWidth + 0.938775 * imageWidth - 0.084183 * imageWidth, 0.010791 * imageHeight);\n\t            ctx.quadraticCurveTo(0.030612 * imageWidth + 0.938775 * imageWidth, 0.010791 * imageHeight, 0.030612 * imageWidth + 0.938775 * imageWidth, 0.010791 * imageHeight + 0.084183 * imageWidth);\n\t            ctx.lineTo(0.030612 * imageWidth + 0.938775 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight - 0.084183 * imageWidth);\n\t            ctx.quadraticCurveTo(0.030612 * imageWidth + 0.938775 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight, 0.030612 * imageWidth + 0.938775 * imageWidth - 0.084183 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight);\n\t            ctx.lineTo(0.030612 * imageWidth + 0.084183 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight);\n\t            ctx.quadraticCurveTo(0.030612 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight, 0.030612 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight - 0.084183 * imageWidth);\n\t            ctx.lineTo(0.030612 * imageWidth, 0.010791 * imageHeight + 0.084183 * imageWidth);\n\t            ctx.quadraticCurveTo(0.030612 * imageWidth, 0.010791 * imageHeight, 0.030612 * imageWidth + 0.084183 * imageWidth, 0.010791 * imageHeight);\n\t            ctx.closePath();\n\t            housingFrontFill = ctx.createLinearGradient(-0.132653 * imageWidth, -0.053956 * imageHeight, 2.061408 * imageWidth, 0.667293 * imageHeight);\n\t            housingFrontFill.addColorStop(0, '#000000');\n\t            housingFrontFill.addColorStop(0.01, '#000000');\n\t            housingFrontFill.addColorStop(0.16, '#373735');\n\t            housingFrontFill.addColorStop(0.31, '#000000');\n\t            housingFrontFill.addColorStop(0.44, '#303030');\n\t            housingFrontFill.addColorStop(0.65, '#000000');\n\t            housingFrontFill.addColorStop(0.87, '#363636');\n\t            housingFrontFill.addColorStop(0.98, '#000000');\n\t            housingFrontFill.addColorStop(1, '#000000');\n\t            ctx.fillStyle = housingFrontFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawLightGreen = function (ctx) {\n\t            var lightGreenFrameFill, lightGreenInnerFill, lightGreenEffectFill, lightGreenInnerShadowFill;\n\t\n\t            ctx.save();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.805755 * imageHeight, 0.397959 * imageWidth, 0, TWO_PI, false);\n\t            lightGreenFrameFill = ctx.createLinearGradient(0, 0.665467 * imageHeight, 0, 0.946043 * imageHeight);\n\t            lightGreenFrameFill.addColorStop(0, '#ffffff');\n\t            lightGreenFrameFill.addColorStop(0.05, 'rgb(204, 204, 204)');\n\t            lightGreenFrameFill.addColorStop(0.1, 'rgb(153, 153, 153)');\n\t            lightGreenFrameFill.addColorStop(0.17, '#666666');\n\t            lightGreenFrameFill.addColorStop(0.27, '#333333');\n\t            lightGreenFrameFill.addColorStop(1, '#010101');\n\t            ctx.fillStyle = lightGreenFrameFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.scale(1.083333, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.461538 * imageWidth, 0.816546 * imageHeight, 0.367346 * imageWidth, 0, TWO_PI, false);\n\t            lightGreenInnerFill = ctx.createLinearGradient(0, 0.687050 * imageHeight, 0, 0.946043 * imageHeight);\n\t            lightGreenInnerFill.addColorStop(0, '#000000');\n\t            lightGreenInnerFill.addColorStop(0.35, '#040404');\n\t            lightGreenInnerFill.addColorStop(0.66, '#000000');\n\t            lightGreenInnerFill.addColorStop(1, '#010101');\n\t            ctx.fillStyle = lightGreenInnerFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.809352 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n\t            lightGreenEffectFill = ctx.createRadialGradient(0.5 * imageWidth, 0.809352 * imageHeight, 0, 0.5 * imageWidth, 0.809352 * imageHeight, 0.362244 * imageWidth);\n\t            lightGreenEffectFill.addColorStop(0, '#000000');\n\t            lightGreenEffectFill.addColorStop(0.88, '#000000');\n\t            lightGreenEffectFill.addColorStop(0.95, 'rgb(94, 94, 94)');\n\t            lightGreenEffectFill.addColorStop(1, '#010101');\n\t            ctx.fillStyle = lightGreenEffectFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.809352 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n\t            lightGreenInnerShadowFill = ctx.createLinearGradient(0, 0.687050 * imageHeight, 0, 0.917266 * imageHeight);\n\t            lightGreenInnerShadowFill.addColorStop(0, '#000000');\n\t            lightGreenInnerShadowFill.addColorStop(1, 'rgba(1, 1, 1, 0)');\n\t            ctx.fillStyle = lightGreenInnerShadowFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawGreenOn = function (ctx) {\n\t            var greenOnFill, greenOnGlowFill;\n\t\n\t            ctx.save();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n\t            greenOnFill = ctx.createRadialGradient(0.5 * imageWidth, 0.809352 * imageHeight, 0, 0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth);\n\t            greenOnFill.addColorStop(0, 'rgb(85, 185, 123)');\n\t            greenOnFill.addColorStop(1, 'rgb(0, 31, 0)');\n\t            ctx.fillStyle = greenOnFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0, 0.812949 * imageHeight);\n\t            ctx.bezierCurveTo(0, 0.910071 * imageHeight, 0.224489 * imageWidth, 0.989208 * imageHeight, 0.5 * imageWidth, 0.989208 * imageHeight);\n\t            ctx.bezierCurveTo(0.775510 * imageWidth, 0.989208 * imageHeight, imageWidth, 0.910071 * imageHeight, imageWidth, 0.809352 * imageHeight);\n\t            ctx.bezierCurveTo(0.908163 * imageWidth, 0.751798 * imageHeight, 0.704081 * imageWidth, 0.687050 * imageHeight, 0.5 * imageWidth, 0.687050 * imageHeight);\n\t            ctx.bezierCurveTo(0.285714 * imageWidth, 0.687050 * imageHeight, 0.081632 * imageWidth, 0.751798 * imageHeight, 0, 0.812949 * imageHeight);\n\t            ctx.closePath();\n\t            greenOnGlowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.809352 * imageHeight, 0, 0.5 * imageWidth, 0.809352 * imageHeight, 0.515306 * imageWidth);\n\t            greenOnGlowFill.addColorStop(0, 'rgb(65, 187, 126)');\n\t            greenOnGlowFill.addColorStop(1, 'rgba(4, 37, 8, 0)');\n\t            ctx.fillStyle = greenOnGlowFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawGreenOff = function (ctx) {\n\t            var greenOffFill, greenOffInnerShadowFill;\n\t\n\t            ctx.save();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n\t            greenOffFill = ctx.createRadialGradient(0.5 * imageWidth, 0.809352 * imageHeight, 0, 0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth);\n\t            greenOffFill.addColorStop(0, 'rgba(0, 255, 0, 0.25)');\n\t            greenOffFill.addColorStop(1, 'rgba(0, 255, 0, 0.05)');\n\t            ctx.fillStyle = greenOffFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n\t            greenOffInnerShadowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.809352 * imageHeight, 0, 0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth);\n\t            greenOffInnerShadowFill.addColorStop(0, 'rgba(1, 1, 1, 0)');\n\t            greenOffInnerShadowFill.addColorStop(0.55, 'rgba(0, 0, 0, 0)');\n\t            greenOffInnerShadowFill.addColorStop(0.5501, 'rgba(0, 0, 0, 0)');\n\t            greenOffInnerShadowFill.addColorStop(0.78, 'rgba(0, 0, 0, 0.12)');\n\t            greenOffInnerShadowFill.addColorStop(0.79, 'rgba(0, 0, 0, 0.12)');\n\t            greenOffInnerShadowFill.addColorStop(1, 'rgba(0, 0, 0, 0.5)');\n\t            ctx.fillStyle = greenOffInnerShadowFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.fillStyle = ctx.createPattern(hatchBuffer, 'repeat');\n\t            ctx.fill();\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawLightYellow = function (ctx) {\n\t            var lightYellowFrameFill, lightYellowInnerFill, lightYellowEffectFill, lightYellowInnerShadowFill;\n\t\n\t            ctx.save();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.496402 * imageHeight, 0.397959 * imageWidth, 0, TWO_PI, false);\n\t            lightYellowFrameFill = ctx.createLinearGradient(0, 0.356115 * imageHeight, 0, 0.636690 * imageHeight);\n\t            lightYellowFrameFill.addColorStop(0, '#ffffff');\n\t            lightYellowFrameFill.addColorStop(0.05, 'rgb(204, 204, 204)');\n\t            lightYellowFrameFill.addColorStop(0.1, 'rgb(153, 153, 153)');\n\t            lightYellowFrameFill.addColorStop(0.17, '#666666');\n\t            lightYellowFrameFill.addColorStop(0.27, '#333333');\n\t            lightYellowFrameFill.addColorStop(1, '#010101');\n\t            ctx.fillStyle = lightYellowFrameFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.scale(1.083333, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.461538 * imageWidth, 0.507194 * imageHeight, 0.367346 * imageWidth, 0, TWO_PI, false);\n\t            lightYellowInnerFill = ctx.createLinearGradient(0, 0.377697 * imageHeight, 0, 0.636690 * imageHeight);\n\t            lightYellowInnerFill.addColorStop(0, '#000000');\n\t            lightYellowInnerFill.addColorStop(0.35, '#040404');\n\t            lightYellowInnerFill.addColorStop(0.66, '#000000');\n\t            lightYellowInnerFill.addColorStop(1, '#010101');\n\t            ctx.fillStyle = lightYellowInnerFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n\t            lightYellowEffectFill = ctx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageHeight, 0.362244 * imageWidth);\n\t            lightYellowEffectFill.addColorStop(0, '#000000');\n\t            lightYellowEffectFill.addColorStop(0.88, '#000000');\n\t            lightYellowEffectFill.addColorStop(0.95, '#5e5e5e');\n\t            lightYellowEffectFill.addColorStop(1, '#010101');\n\t            ctx.fillStyle = lightYellowEffectFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            //lIGHT_YELLOW_4_E_INNER_SHADOW_3_4\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n\t            lightYellowInnerShadowFill = ctx.createLinearGradient(0, 0.377697 * imageHeight, 0, 0.607913 * imageHeight);\n\t            lightYellowInnerShadowFill.addColorStop(0, '#000000');\n\t            lightYellowInnerShadowFill.addColorStop(1, 'rgba(1, 1, 1, 0)');\n\t            ctx.fillStyle = lightYellowInnerShadowFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawYellowOn = function (ctx) {\n\t            var yellowOnFill, yellowOnGlowFill;\n\t\n\t            ctx.save();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n\t            yellowOnFill = ctx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth);\n\t            yellowOnFill.addColorStop(0, '#fed434');\n\t            yellowOnFill.addColorStop(1, '#82330c');\n\t            ctx.fillStyle = yellowOnFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0, 0.503597 * imageHeight);\n\t            ctx.bezierCurveTo(0, 0.600719 * imageHeight, 0.224489 * imageWidth, 0.679856 * imageHeight, 0.5 * imageWidth, 0.679856 * imageHeight);\n\t            ctx.bezierCurveTo(0.775510 * imageWidth, 0.679856 * imageHeight, imageWidth, 0.600719 * imageHeight, imageWidth, 0.5 * imageHeight);\n\t            ctx.bezierCurveTo(0.908163 * imageWidth, 0.442446 * imageHeight, 0.704081 * imageWidth, 0.377697 * imageHeight, 0.5 * imageWidth, 0.377697 * imageHeight);\n\t            ctx.bezierCurveTo(0.285714 * imageWidth, 0.377697 * imageHeight, 0.081632 * imageWidth, 0.442446 * imageHeight, 0, 0.503597 * imageHeight);\n\t            ctx.closePath();\n\t            yellowOnGlowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageHeight, 0.515306 * imageWidth);\n\t            yellowOnGlowFill.addColorStop(0, '#fed434');\n\t            yellowOnGlowFill.addColorStop(1, 'rgba(130, 51, 12, 0)');\n\t            ctx.fillStyle = yellowOnGlowFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawYellowOff = function (ctx) {\n\t            var yellowOffFill, yellowOffInnerShadowFill;\n\t\n\t            ctx.save();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n\t            yellowOffFill = ctx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth);\n\t            yellowOffFill.addColorStop(0, 'rgba(255, 255, 0, 0.25)');\n\t            yellowOffFill.addColorStop(1, 'rgba(255, 255, 0, 0.05)');\n\t            ctx.fillStyle = yellowOffFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n\t            yellowOffInnerShadowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth);\n\t            yellowOffInnerShadowFill.addColorStop(0, 'rgba(1, 1, 1, 0)');\n\t            yellowOffInnerShadowFill.addColorStop(0.55, 'rgba(0, 0, 0, 0)');\n\t            yellowOffInnerShadowFill.addColorStop(0.5501, 'rgba(0, 0, 0, 0)');\n\t            yellowOffInnerShadowFill.addColorStop(0.78, 'rgba(0, 0, 0, 0.12)');\n\t            yellowOffInnerShadowFill.addColorStop(0.79, 'rgba(0, 0, 0, 0.13)');\n\t            yellowOffInnerShadowFill.addColorStop(1, 'rgba(0, 0, 0, 0.5)');\n\t            ctx.fillStyle = yellowOffInnerShadowFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.fillStyle = ctx.createPattern(hatchBuffer, 'repeat');\n\t            ctx.fill();\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawLightRed = function (ctx) {\n\t            var lightRedFrameFill, lightRedInnerFill, lightRedEffectFill, lightRedInnerShadowFill;\n\t\n\t            ctx.save();\n\t\n\t            //lIGHT_RED_7_E_FRAME_0_1\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.187050 * imageHeight, 0.397959 * imageWidth, 0, TWO_PI, false);\n\t            lightRedFrameFill = ctx.createLinearGradient((0.5 * imageWidth), (0.046762 * imageHeight), ((0.500000) * imageWidth), ((0.327338) * imageHeight));\n\t            lightRedFrameFill.addColorStop(0, '#ffffff');\n\t            lightRedFrameFill.addColorStop(0.05, '#cccccc');\n\t            lightRedFrameFill.addColorStop(0.1, '#999999');\n\t            lightRedFrameFill.addColorStop(0.17, '#666666');\n\t            lightRedFrameFill.addColorStop(0.27, '#333333');\n\t            lightRedFrameFill.addColorStop(1, '#010101');\n\t            ctx.fillStyle = lightRedFrameFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            //lIGHT_RED_7_E_INNER_CLIP_1_2\n\t            ctx.save();\n\t            ctx.scale(1.083333, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.461538 * imageWidth, 0.197841 * imageHeight, 0.367346 * imageWidth, 0, TWO_PI, false);\n\t            lightRedInnerFill = ctx.createLinearGradient((0.5 * imageWidth), (0.068345 * imageHeight), ((0.500000) * imageWidth), ((0.327338) * imageHeight));\n\t            lightRedInnerFill.addColorStop(0, '#000000');\n\t            lightRedInnerFill.addColorStop(0.35, '#040404');\n\t            lightRedInnerFill.addColorStop(0.66, '#000000');\n\t            lightRedInnerFill.addColorStop(1, '#010101');\n\t            ctx.fillStyle = lightRedInnerFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            //lIGHT_RED_7_E_LIGHT_EFFECT_2_3\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.190647 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n\t            lightRedEffectFill = ctx.createRadialGradient((0.5) * imageWidth, ((0.190647) * imageHeight), 0, ((0.5) * imageWidth), ((0.190647) * imageHeight), 0.362244 * imageWidth);\n\t            lightRedEffectFill.addColorStop(0, '#000000');\n\t            lightRedEffectFill.addColorStop(0.88, '#000000');\n\t            lightRedEffectFill.addColorStop(0.95, '#5e5e5e');\n\t            lightRedEffectFill.addColorStop(1, '#010101');\n\t            ctx.fillStyle = lightRedEffectFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            //lIGHT_RED_7_E_INNER_SHADOW_3_4\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.190647 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n\t            lightRedInnerShadowFill = ctx.createLinearGradient((0.5 * imageWidth), (0.068345 * imageHeight), ((0.500000) * imageWidth), ((0.298561) * imageHeight));\n\t            lightRedInnerShadowFill.addColorStop(0, '#000000');\n\t            lightRedInnerShadowFill.addColorStop(1, 'rgba(1, 1, 1, 0)');\n\t            ctx.fillStyle = lightRedInnerShadowFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawRedOn = function (ctx) {\n\t            var redOnFill, redOnGlowFill;\n\t\n\t            ctx.save();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n\t            redOnFill = ctx.createRadialGradient(0.5 * imageWidth, 0.190647 * imageHeight, 0, 0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth);\n\t            redOnFill.addColorStop(0, '#ff0000');\n\t            redOnFill.addColorStop(1, '#410004');\n\t            ctx.fillStyle = redOnFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0, 0.194244 * imageHeight);\n\t            ctx.bezierCurveTo(0, 0.291366 * imageHeight, 0.224489 * imageWidth, 0.370503 * imageHeight, 0.5 * imageWidth, 0.370503 * imageHeight);\n\t            ctx.bezierCurveTo(0.775510 * imageWidth, 0.370503 * imageHeight, imageWidth, 0.291366 * imageHeight, imageWidth, 0.190647 * imageHeight);\n\t            ctx.bezierCurveTo(0.908163 * imageWidth, 0.133093 * imageHeight, 0.704081 * imageWidth, 0.068345 * imageHeight, 0.5 * imageWidth, 0.068345 * imageHeight);\n\t            ctx.bezierCurveTo(0.285714 * imageWidth, 0.068345 * imageHeight, 0.081632 * imageWidth, 0.133093 * imageHeight, 0, 0.194244 * imageHeight);\n\t            ctx.closePath();\n\t            redOnGlowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.190647 * imageHeight, 0, 0.5 * imageWidth, 0.190647 * imageHeight, 0.515306 * imageWidth);\n\t            redOnGlowFill.addColorStop(0, '#ff0000');\n\t            redOnGlowFill.addColorStop(1, 'rgba(118, 5, 1, 0)');\n\t            ctx.fillStyle = redOnGlowFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawRedOff = function (ctx) {\n\t            var redOffFill, redOffInnerShadowFill;\n\t\n\t            ctx.save();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n\t            redOffFill = ctx.createRadialGradient(0.5 * imageWidth, 0.190647 * imageHeight, 0, 0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth);\n\t            redOffFill.addColorStop(0, 'rgba(255, 0, 0, 0.25)');\n\t            redOffFill.addColorStop(1, 'rgba(255, 0, 0, 0.05)');\n\t            ctx.fillStyle = redOffFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.save();\n\t            ctx.scale(1, 1);\n\t            ctx.beginPath();\n\t            ctx.arc(0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n\t            redOffInnerShadowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.190647 * imageHeight, 0, 0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth);\n\t            redOffInnerShadowFill.addColorStop(0, 'rgba(1, 1, 1, 0)');\n\t            redOffInnerShadowFill.addColorStop(0.55, 'rgba(0, 0, 0, 0)');\n\t            redOffInnerShadowFill.addColorStop(0.5501, 'rgba(0, 0, 0, 0)');\n\t            redOffInnerShadowFill.addColorStop(0.78, 'rgba(0, 0, 0, 0.12)');\n\t            redOffInnerShadowFill.addColorStop(0.79, 'rgba(0, 0, 0, 0.13)');\n\t            redOffInnerShadowFill.addColorStop(1, 'rgba(0, 0, 0, 0.5)');\n\t            ctx.fillStyle = redOffInnerShadowFill;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            ctx.fillStyle = ctx.createPattern(hatchBuffer, 'repeat');\n\t            ctx.fill();\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        function drawToBuffer(width, height, drawFunction) {\n\t            var buffer = doc.createElement('canvas');\n\t            buffer.width = width;\n\t            buffer.height = height;\n\t            drawFunction(buffer.getContext('2d'));\n\t            return buffer;\n\t        }\n\t\n\t        var hatchBuffer = drawToBuffer(2, 2, function (ctx) {\n\t            ctx.save();\n\t            ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\n\t            ctx.beginPath();\n\t            ctx.lineTo(0, 0, 1, 0);\n\t            ctx.lineTo(0, 1, 0, 1);\n\t            ctx.stroke();\n\t            ctx.restore();\n\t        });\n\t\n\t        var init = function () {\n\t            initialized = true;\n\t\n\t            drawHousing(housingCtx);\n\t            drawLightGreen(lightGreenCtx);\n\t            drawGreenOn(greenOnCtx);\n\t            drawGreenOff(greenOffCtx);\n\t            drawLightYellow(lightYellowCtx);\n\t            drawYellowOn(yellowOnCtx);\n\t            drawYellowOff(yellowOffCtx);\n\t            drawLightRed(lightRedCtx);\n\t            drawRedOn(redOnCtx);\n\t            drawRedOff(redOffCtx);\n\t        };\n\t\n\t        // **************   P U B L I C   M E T H O D S   ********************************\n\t        this.setRedOn = function (on) {\n\t            redOn = !!on;\n\t            this.repaint();\n\t        };\n\t\n\t        this.isRedOn = function () {\n\t            return redOn;\n\t        };\n\t\n\t        this.setYellowOn = function (on) {\n\t            yellowOn = !!on;\n\t            this.repaint();\n\t        };\n\t\n\t        this.isYellowOn = function () {\n\t            return yellowOn;\n\t        };\n\t\n\t        this.setGreenOn = function (on) {\n\t            greenOn = !!on;\n\t            this.repaint();\n\t        };\n\t\n\t        this.isGreenOn = function () {\n\t            return greenOn;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init();\n\t            }\n\t\n\t            mainCtx.save();\n\t            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\t\n\t            // housing\n\t            mainCtx.drawImage(housingBuffer, 0, 0);\n\t\n\t            // Green light\n\t            mainCtx.drawImage(lightGreenBuffer, 0, 0);\n\t\n\t            if (greenOn) {\n\t                mainCtx.drawImage(greenOnBuffer, 0, 0);\n\t            }\n\t\n\t            mainCtx.drawImage(greenOffBuffer, 0, 0);\n\t\n\t            // Yellow light\n\t            mainCtx.drawImage(lightYellowBuffer, 0, 0);\n\t\n\t            if (yellowOn) {\n\t                mainCtx.drawImage(yellowOnBuffer, 0, 0);\n\t            }\n\t\n\t            mainCtx.drawImage(yellowOffBuffer, 0, 0);\n\t\n\t            // Red light\n\t            mainCtx.drawImage(lightRedBuffer, 0, 0);\n\t\n\t            if (redOn) {\n\t                mainCtx.drawImage(redOnBuffer, 0, 0);\n\t            }\n\t\n\t            mainCtx.drawImage(redOffBuffer, 0, 0);\n\t            mainCtx.restore();\n\t        };\n\t\n\t        // Visualize the component\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var lightbulb = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t        var mainCtx,\n\t            // parameters\n\t            width = (undefined === parameters.width ? 0 : parameters.width),\n\t            height = (undefined === parameters.height ? 0 : parameters.height),\n\t            glowColor = (undefined === parameters.glowColor ? '#ffff00' : parameters.glowColor),\n\t            //\n\t            size, imageWidth, imageHeight,\n\t            initialized = false,\n\t            lightOn = false,\n\t            alpha = 1,\n\t            offBuffer = doc.createElement('canvas'),\n\t            offCtx = offBuffer.getContext('2d'),\n\t            onBuffer = doc.createElement('canvas'),\n\t            onCtx = onBuffer.getContext('2d'),\n\t            bulbBuffer = doc.createElement('canvas'),\n\t            bulbCtx = bulbBuffer.getContext('2d');\n\t            // End of variables\n\t\n\t        // Get the canvas context and clear it\n\t        mainCtx = document.getElementById(canvas).getContext('2d');\n\t\n\t        // Has a size been specified?\n\t        if (width === 0) {\n\t            width = mainCtx.canvas.width;\n\t        }\n\t        if (height === 0) {\n\t            height = mainCtx.canvas.height;\n\t        }\n\t\n\t        // Get the size\n\t        mainCtx.canvas.width = width;\n\t        mainCtx.canvas.height = height;\n\t        size = width < height ? width : height;\n\t        imageWidth = size;\n\t        imageHeight = size;\n\t\n\t        function drawToBuffer(width, height, drawFunction) {\n\t            var buffer = doc.createElement('canvas');\n\t            buffer.width = width;\n\t            buffer.height = height;\n\t            drawFunction(buffer.getContext('2d'));\n\t            return buffer;\n\t        }\n\t\n\t        var getColorValues = function (color) {\n\t            var colorData,\n\t                lookupBuffer = drawToBuffer(1, 1, function (ctx) {\n\t                    ctx.fillStyle = color;\n\t                    ctx.beginPath();\n\t                    ctx.rect(0, 0, 1, 1);\n\t                    ctx.fill();\n\t                });\n\t\n\t            colorData = lookupBuffer.getContext('2d').getImageData(0, 0, 2, 2).data;\n\t            return [colorData[0], colorData[1], colorData[2]];\n\t        };\n\t\n\t        offBuffer.width = imageWidth;\n\t        offBuffer.height = imageHeight;\n\t\n\t        onBuffer.width = imageWidth;\n\t        onBuffer.height = imageHeight;\n\t\n\t        bulbBuffer.width = imageWidth;\n\t        bulbBuffer.height = imageHeight;\n\t\n\t        var drawOff = function (ctx) {\n\t            var glassOffFill;\n\t\n\t            ctx.save();\n\t\n\t            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0.289473 * imageWidth, 0.438596 * imageHeight);\n\t            ctx.bezierCurveTo(0.289473 * imageWidth, 0.561403 * imageHeight, 0.385964 * imageWidth, 0.605263 * imageHeight, 0.385964 * imageWidth, 0.745614 * imageHeight);\n\t            ctx.bezierCurveTo(0.385964 * imageWidth, 0.745614 * imageHeight, 0.587719 * imageWidth, 0.745614 * imageHeight, 0.587719 * imageWidth, 0.745614 * imageHeight);\n\t            ctx.bezierCurveTo(0.587719 * imageWidth, 0.605263 * imageHeight, 0.692982 * imageWidth, 0.561403 * imageHeight, 0.692982 * imageWidth, 0.438596 * imageHeight);\n\t            ctx.bezierCurveTo(0.692982 * imageWidth, 0.324561 * imageHeight, 0.605263 * imageWidth, 0.228070 * imageHeight, 0.5 * imageWidth, 0.228070 * imageHeight);\n\t            ctx.bezierCurveTo(0.385964 * imageWidth, 0.228070 * imageHeight, 0.289473 * imageWidth, 0.324561 * imageHeight, 0.289473 * imageWidth, 0.438596 * imageHeight);\n\t            ctx.closePath();\n\t            glassOffFill = ctx.createLinearGradient(0, 0.289473 * imageHeight, 0, 0.701754 * imageHeight);\n\t            glassOffFill.addColorStop(0, '#eeeeee');\n\t            glassOffFill.addColorStop(0.99, '#999999');\n\t            glassOffFill.addColorStop(1, '#999999');\n\t            ctx.fillStyle = glassOffFill;\n\t            ctx.fill();\n\t            ctx.lineCap = 'butt';\n\t            ctx.lineJoin = 'round';\n\t            ctx.lineWidth = 0.008771 * imageWidth;\n\t            ctx.strokeStyle = '#cccccc';\n\t            ctx.stroke();\n\t            ctx.restore();\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawOn = function (ctx) {\n\t            var glassOnFill,\n\t                data = getColorValues(glowColor),\n\t                red = data[0],\n\t                green = data[1],\n\t                blue = data[2],\n\t                hsl = rgbToHsl(red, green, blue);\n\t\n\t            ctx.save();\n\t            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0.289473 * imageWidth, 0.438596 * imageHeight);\n\t            ctx.bezierCurveTo(0.289473 * imageWidth, 0.561403 * imageHeight, 0.385964 * imageWidth, 0.605263 * imageHeight, 0.385964 * imageWidth, 0.745614 * imageHeight);\n\t            ctx.bezierCurveTo(0.385964 * imageWidth, 0.745614 * imageHeight, 0.587719 * imageWidth, 0.745614 * imageHeight, 0.587719 * imageWidth, 0.745614 * imageHeight);\n\t            ctx.bezierCurveTo(0.587719 * imageWidth, 0.605263 * imageHeight, 0.692982 * imageWidth, 0.561403 * imageHeight, 0.692982 * imageWidth, 0.438596 * imageHeight);\n\t            ctx.bezierCurveTo(0.692982 * imageWidth, 0.324561 * imageHeight, 0.605263 * imageWidth, 0.228070 * imageHeight, 0.5 * imageWidth, 0.228070 * imageHeight);\n\t            ctx.bezierCurveTo(0.385964 * imageWidth, 0.228070 * imageHeight, 0.289473 * imageWidth, 0.324561 * imageHeight, 0.289473 * imageWidth, 0.438596 * imageHeight);\n\t            ctx.closePath();\n\t\n\t            glassOnFill = ctx.createLinearGradient(0, 0.289473 * imageHeight, 0, 0.701754 * imageHeight);\n\t\n\t            if (red === green && green === blue) {\n\t                glassOnFill.addColorStop(0, 'hsl(0, 60%, 0%)');\n\t                glassOnFill.addColorStop(1, 'hsl(0, 40%, 0%)');\n\t            } else {\n\t                glassOnFill.addColorStop(0, 'hsl(' + hsl[0] * 255 + ', ' + hsl[1] * 100 + '%, 70%)');\n\t                glassOnFill.addColorStop(1, 'hsl(' + hsl[0] * 255 + ', ' + hsl[1] * 100 + '%, 80%)');\n\t            }\n\t            ctx.fillStyle = glassOnFill;\n\t\n\t            // sets shadow properties\n\t            ctx.shadowOffsetX = 0;\n\t            ctx.shadowOffsetY = 0;\n\t            ctx.shadowBlur = 30;\n\t            ctx.shadowColor = glowColor;\n\t\n\t            ctx.fill();\n\t\n\t            ctx.lineCap = 'butt';\n\t            ctx.lineJoin = 'round';\n\t            ctx.lineWidth = 0.008771 * imageWidth;\n\t            ctx.strokeStyle = 'rgba(' + red + ', ' + green + ', ' + blue + ', 0.4)';\n\t            ctx.stroke();\n\t\n\t            ctx.restore();\n\t\n\t            ctx.restore();\n\t        };\n\t\n\t        var drawBulb = function (ctx) {\n\t            var highlight, winding, winding1, contactPlate;\n\t\n\t            ctx.save();\n\t\n\t            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0.350877 * imageWidth, 0.333333 * imageHeight);\n\t            ctx.bezierCurveTo(0.350877 * imageWidth, 0.280701 * imageHeight, 0.412280 * imageWidth, 0.236842 * imageHeight, 0.5 * imageWidth, 0.236842 * imageHeight);\n\t            ctx.bezierCurveTo(0.578947 * imageWidth, 0.236842 * imageHeight, 0.640350 * imageWidth, 0.280701 * imageHeight, 0.640350 * imageWidth, 0.333333 * imageHeight);\n\t            ctx.bezierCurveTo(0.640350 * imageWidth, 0.385964 * imageHeight, 0.578947 * imageWidth, 0.429824 * imageHeight, 0.5 * imageWidth, 0.429824 * imageHeight);\n\t            ctx.bezierCurveTo(0.412280 * imageWidth, 0.429824 * imageHeight, 0.350877 * imageWidth, 0.385964 * imageHeight, 0.350877 * imageWidth, 0.333333 * imageHeight);\n\t            ctx.closePath();\n\t            highlight = ctx.createLinearGradient(0, 0.245614 * imageHeight, 0, 0.429824 * imageHeight);\n\t            highlight.addColorStop(0, '#ffffff');\n\t            highlight.addColorStop(0.99, 'rgba(255, 255, 255, 0)');\n\t            highlight.addColorStop(1, 'rgba(255, 255, 255, 0)');\n\t            ctx.fillStyle = highlight;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            //winding\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0.377192 * imageWidth, 0.745614 * imageHeight);\n\t            ctx.bezierCurveTo(0.377192 * imageWidth, 0.745614 * imageHeight, 0.429824 * imageWidth, 0.728070 * imageHeight, 0.491228 * imageWidth, 0.728070 * imageHeight);\n\t            ctx.bezierCurveTo(0.561403 * imageWidth, 0.728070 * imageHeight, 0.605263 * imageWidth, 0.736842 * imageHeight, 0.605263 * imageWidth, 0.736842 * imageHeight);\n\t            ctx.lineTo(0.605263 * imageWidth, 0.763157 * imageHeight);\n\t            ctx.lineTo(0.596491 * imageWidth, 0.780701 * imageHeight);\n\t            ctx.lineTo(0.605263 * imageWidth, 0.798245 * imageHeight);\n\t            ctx.lineTo(0.596491 * imageWidth, 0.815789 * imageHeight);\n\t            ctx.lineTo(0.605263 * imageWidth, 0.833333 * imageHeight);\n\t            ctx.lineTo(0.596491 * imageWidth, 0.850877 * imageHeight);\n\t            ctx.lineTo(0.605263 * imageWidth, 0.868421 * imageHeight);\n\t            ctx.lineTo(0.596491 * imageWidth, 0.885964 * imageHeight);\n\t            ctx.lineTo(0.605263 * imageWidth, 0.894736 * imageHeight);\n\t            ctx.bezierCurveTo(0.605263 * imageWidth, 0.894736 * imageHeight, 0.570175 * imageWidth, 0.956140 * imageHeight, 0.535087 * imageWidth, 0.991228 * imageHeight);\n\t            ctx.bezierCurveTo(0.526315 * imageWidth, 0.991228 * imageHeight, 0.517543 * imageWidth, imageHeight, 0.5 * imageWidth, imageHeight);\n\t            ctx.bezierCurveTo(0.482456 * imageWidth, imageHeight, 0.473684 * imageWidth, imageHeight, 0.464912 * imageWidth, 0.991228 * imageHeight);\n\t            ctx.bezierCurveTo(0.421052 * imageWidth, 0.947368 * imageHeight, 0.394736 * imageWidth, 0.903508 * imageHeight, 0.394736 * imageWidth, 0.903508 * imageHeight);\n\t            ctx.lineTo(0.394736 * imageWidth, 0.894736 * imageHeight);\n\t            ctx.lineTo(0.385964 * imageWidth, 0.885964 * imageHeight);\n\t            ctx.lineTo(0.394736 * imageWidth, 0.868421 * imageHeight);\n\t            ctx.lineTo(0.385964 * imageWidth, 0.850877 * imageHeight);\n\t            ctx.lineTo(0.394736 * imageWidth, 0.833333 * imageHeight);\n\t            ctx.lineTo(0.385964 * imageWidth, 0.815789 * imageHeight);\n\t            ctx.lineTo(0.394736 * imageWidth, 0.798245 * imageHeight);\n\t            ctx.lineTo(0.377192 * imageWidth, 0.789473 * imageHeight);\n\t            ctx.lineTo(0.394736 * imageWidth, 0.771929 * imageHeight);\n\t            ctx.lineTo(0.377192 * imageWidth, 0.763157 * imageHeight);\n\t            ctx.lineTo(0.377192 * imageWidth, 0.745614 * imageHeight);\n\t            ctx.closePath();\n\t            winding = ctx.createLinearGradient(0.473684 * imageWidth, 0.728070 * imageHeight, 0.484702 * imageWidth, 0.938307 * imageHeight);\n\t            winding.addColorStop(0, '#333333');\n\t            winding.addColorStop(0.04, '#d9dad6');\n\t            winding.addColorStop(0.19, '#e4e5e0');\n\t            winding.addColorStop(0.24, '#979996');\n\t            winding.addColorStop(0.31, '#fbffff');\n\t            winding.addColorStop(0.4, '#818584');\n\t            winding.addColorStop(0.48, '#f5f7f4');\n\t            winding.addColorStop(0.56, '#959794');\n\t            winding.addColorStop(0.64, '#f2f2f0');\n\t            winding.addColorStop(0.7, '#828783');\n\t            winding.addColorStop(0.78, '#fcfcfc');\n\t            winding.addColorStop(1, '#666666');\n\t            ctx.fillStyle = winding;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            // winding\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0.377192 * imageWidth, 0.745614 * imageHeight);\n\t            ctx.bezierCurveTo(0.377192 * imageWidth, 0.745614 * imageHeight, 0.429824 * imageWidth, 0.728070 * imageHeight, 0.491228 * imageWidth, 0.728070 * imageHeight);\n\t            ctx.bezierCurveTo(0.561403 * imageWidth, 0.728070 * imageHeight, 0.605263 * imageWidth, 0.736842 * imageHeight, 0.605263 * imageWidth, 0.736842 * imageHeight);\n\t            ctx.lineTo(0.605263 * imageWidth, 0.763157 * imageHeight);\n\t            ctx.lineTo(0.596491 * imageWidth, 0.780701 * imageHeight);\n\t            ctx.lineTo(0.605263 * imageWidth, 0.798245 * imageHeight);\n\t            ctx.lineTo(0.596491 * imageWidth, 0.815789 * imageHeight);\n\t            ctx.lineTo(0.605263 * imageWidth, 0.833333 * imageHeight);\n\t            ctx.lineTo(0.596491 * imageWidth, 0.850877 * imageHeight);\n\t            ctx.lineTo(0.605263 * imageWidth, 0.868421 * imageHeight);\n\t            ctx.lineTo(0.596491 * imageWidth, 0.885964 * imageHeight);\n\t            ctx.lineTo(0.605263 * imageWidth, 0.894736 * imageHeight);\n\t            ctx.bezierCurveTo(0.605263 * imageWidth, 0.894736 * imageHeight, 0.570175 * imageWidth, 0.956140 * imageHeight, 0.535087 * imageWidth, 0.991228 * imageHeight);\n\t            ctx.bezierCurveTo(0.526315 * imageWidth, 0.991228 * imageHeight, 0.517543 * imageWidth, imageHeight, 0.5 * imageWidth, imageHeight);\n\t            ctx.bezierCurveTo(0.482456 * imageWidth, imageHeight, 0.473684 * imageWidth, imageHeight, 0.464912 * imageWidth, 0.991228 * imageHeight);\n\t            ctx.bezierCurveTo(0.421052 * imageWidth, 0.947368 * imageHeight, 0.394736 * imageWidth, 0.903508 * imageHeight, 0.394736 * imageWidth, 0.903508 * imageHeight);\n\t            ctx.lineTo(0.394736 * imageWidth, 0.894736 * imageHeight);\n\t            ctx.lineTo(0.385964 * imageWidth, 0.885964 * imageHeight);\n\t            ctx.lineTo(0.394736 * imageWidth, 0.868421 * imageHeight);\n\t            ctx.lineTo(0.385964 * imageWidth, 0.850877 * imageHeight);\n\t            ctx.lineTo(0.394736 * imageWidth, 0.833333 * imageHeight);\n\t            ctx.lineTo(0.385964 * imageWidth, 0.815789 * imageHeight);\n\t            ctx.lineTo(0.394736 * imageWidth, 0.798245 * imageHeight);\n\t            ctx.lineTo(0.377192 * imageWidth, 0.789473 * imageHeight);\n\t            ctx.lineTo(0.394736 * imageWidth, 0.771929 * imageHeight);\n\t            ctx.lineTo(0.377192 * imageWidth, 0.763157 * imageHeight);\n\t            ctx.lineTo(0.377192 * imageWidth, 0.745614 * imageHeight);\n\t            ctx.closePath();\n\t            winding1 = ctx.createLinearGradient(0.377192 * imageWidth, 0.789473 * imageHeight, 0.605263 * imageWidth, 0.789473 * imageHeight);\n\t            winding1.addColorStop(0, 'rgba(0, 0, 0, 0.4)');\n\t            winding1.addColorStop(0.15, 'rgba(0, 0, 0, 0.32)');\n\t            winding1.addColorStop(0.85, 'rgba(0, 0, 0, 0.33)');\n\t            winding1.addColorStop(1, 'rgba(0, 0, 0, 0.4)');\n\t            ctx.fillStyle = winding1;\n\t            ctx.fill();\n\t            ctx.restore();\n\t\n\t            // contact plate\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.moveTo(0.421052 * imageWidth, 0.947368 * imageHeight);\n\t            ctx.bezierCurveTo(0.438596 * imageWidth, 0.956140 * imageHeight, 0.447368 * imageWidth, 0.973684 * imageHeight, 0.464912 * imageWidth, 0.991228 * imageHeight);\n\t            ctx.bezierCurveTo(0.473684 * imageWidth, imageHeight, 0.482456 * imageWidth, imageHeight, 0.5 * imageWidth, imageHeight);\n\t            ctx.bezierCurveTo(0.517543 * imageWidth, imageHeight, 0.526315 * imageWidth, 0.991228 * imageHeight, 0.535087 * imageWidth, 0.991228 * imageHeight);\n\t            ctx.bezierCurveTo(0.543859 * imageWidth, 0.982456 * imageHeight, 0.561403 * imageWidth, 0.956140 * imageHeight, 0.578947 * imageWidth, 0.947368 * imageHeight);\n\t            ctx.bezierCurveTo(0.552631 * imageWidth, 0.938596 * imageHeight, 0.526315 * imageWidth, 0.938596 * imageHeight, 0.5 * imageWidth, 0.938596 * imageHeight);\n\t            ctx.bezierCurveTo(0.473684 * imageWidth, 0.938596 * imageHeight, 0.447368 * imageWidth, 0.938596 * imageHeight, 0.421052 * imageWidth, 0.947368 * imageHeight);\n\t            ctx.closePath();\n\t            contactPlate = ctx.createLinearGradient(0, 0.938596 * imageHeight, 0, imageHeight);\n\t            contactPlate.addColorStop(0, '#050a06');\n\t            contactPlate.addColorStop(0.61, '#070602');\n\t            contactPlate.addColorStop(0.71, '#999288');\n\t            contactPlate.addColorStop(0.83, '#010101');\n\t            contactPlate.addColorStop(1, '#000000');\n\t            ctx.fillStyle = contactPlate;\n\t            ctx.fill();\n\t            ctx.restore();\n\t            ctx.restore();\n\t        };\n\t\n\t        var clearCanvas = function (ctx) {\n\t            // Store the current transformation matrix\n\t            ctx.save();\n\t\n\t            // Use the identity matrix while clearing the canvas\n\t            ctx.setTransform(1, 0, 0, 1, 0, 0);\n\t            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t\n\t            // Restore the transform\n\t            ctx.restore();\n\t        };\n\t\n\t        var init = function () {\n\t            initialized = true;\n\t            drawOff(offCtx);\n\t            drawOn(onCtx);\n\t            drawBulb(bulbCtx);\n\t        };\n\t\n\t        // **************   P U B L I C   M E T H O D S   ********************************\n\t        this.setOn = function (on) {\n\t            lightOn = !!on;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.isOn = function () {\n\t            return lightOn;\n\t        };\n\t\n\t        this.setAlpha = function (a) {\n\t            alpha = a;\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getAlpha = function () {\n\t            return alpha;\n\t        };\n\t\n\t        this.setGlowColor = function (color) {\n\t            glowColor = color;\n\t            init();\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getGlowColor = function () {\n\t            return glowColor;\n\t        };\n\t\n\t        // Component visualization\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init();\n\t            }\n\t\n\t            clearCanvas(mainCtx);\n\t\n\t            mainCtx.save();\n\t\n\t            mainCtx.drawImage(offBuffer, 0, 0);\n\t\n\t            mainCtx.globalAlpha = alpha;\n\t            if (lightOn) {\n\t                mainCtx.drawImage(onBuffer, 0, 0);\n\t            }\n\t            mainCtx.globalAlpha = 1;\n\t            mainCtx.drawImage(bulbBuffer, 0, 0);\n\t            mainCtx.restore();\n\t        };\n\t\n\t        this.repaint();\n\t\n\t        return this;\n\t    };\n\t\n\t    var odometer = function (canvas, parameters) {\n\t        parameters = parameters || {};\n\t\n\t        // parameters\n\t        var _context = (undefined === parameters._context ? null : parameters._context),  // If component used internally by steelseries\n\t            height = (undefined === parameters.height ? 0 : parameters.height),\n\t            digits = (undefined === parameters.digits ? 6 : parameters.digits),\n\t            decimals = (undefined === parameters.decimals ? 1 : parameters.decimals),\n\t            decimalBackColor = (undefined === parameters.decimalBackColor ? '#F0F0F0' : parameters.decimalBackColor),\n\t            decimalForeColor = (undefined === parameters.decimalForeColor ? '#F01010' : parameters.decimalForeColor),\n\t            font = (undefined === parameters.font ? 'sans-serif' : parameters.font),\n\t            value = (undefined === parameters.value ? 0 : parameters.value),\n\t            valueBackColor = (undefined === parameters.valueBackColor ? '#050505' : parameters.valueBackColor),\n\t            valueForeColor = (undefined === parameters.valueForeColor ? '#F8F8F8' : parameters.valueForeColor),\n\t            wobbleFactor = (undefined === parameters.wobbleFactor ? 0.07 : parameters.wobbleFactor),\n\t            //\n\t            initialized = false,\n\t            tween, ctx,\n\t            repainting = false,\n\t            digitHeight, digitWidth, stdFont,\n\t            width, columnHeight, verticalSpace, zeroOffset,\n\t            wobble = [],\n\t            //buffers\n\t            backgroundBuffer, backgroundContext,\n\t            foregroundBuffer, foregroundContext,\n\t            digitBuffer, digitContext,\n\t            decimalBuffer, decimalContext;\n\t            // End of variables\n\t\n\t        // Get the canvas context and clear it\n\t        if (_context) {\n\t            ctx = _context;\n\t        } else {\n\t            ctx = getCanvasContext(canvas);\n\t        }\n\t\n\t        // Has a height been specified?\n\t        if (height === 0) {\n\t            height = ctx.canvas.height;\n\t        }\n\t\n\t        // Cannot display negative values yet\n\t        if (value < 0) {\n\t            value = 0;\n\t        }\n\t\n\t        digitHeight = Math.floor(height * 0.85);\n\t        stdFont = '600 ' + digitHeight + 'px ' + font;\n\t\n\t        digitWidth = Math.floor(height * 0.68);\n\t        width = digitWidth * (digits + decimals);\n\t        columnHeight = digitHeight * 11;\n\t        verticalSpace = columnHeight / 12;\n\t        zeroOffset = verticalSpace * 0.81;\n\t\n\t        // Resize and clear the main context\n\t        ctx.canvas.width = width;\n\t        ctx.canvas.height = height;\n\t\n\t        // Create buffers\n\t        backgroundBuffer = createBuffer(width, height);\n\t        backgroundContext = backgroundBuffer.getContext('2d');\n\t\n\t        foregroundBuffer = createBuffer(width, height);\n\t        foregroundContext = foregroundBuffer.getContext('2d');\n\t\n\t        digitBuffer = createBuffer(digitWidth, columnHeight * 1.1);\n\t        digitContext = digitBuffer.getContext('2d');\n\t\n\t        decimalBuffer = createBuffer(digitWidth, columnHeight * 1.1);\n\t        decimalContext = decimalBuffer.getContext('2d');\n\t\n\t        function init() {\n\t            var grad, i;\n\t\n\t            initialized = true;\n\t\n\t            // Create the foreground\n\t            foregroundContext.rect(0, 0, width, height);\n\t            grad = foregroundContext.createLinearGradient(0, 0, 0, height);\n\t            grad.addColorStop(0, 'rgba(0, 0, 0, 1)');\n\t            grad.addColorStop(0.1, 'rgba(0, 0, 0, 0.4)');\n\t            grad.addColorStop(0.33, 'rgba(255, 255, 255, 0.45)');\n\t            grad.addColorStop(0.46, 'rgba(255, 255, 255, 0)');\n\t            grad.addColorStop(0.9, 'rgba(0, 0, 0, 0.4)');\n\t            grad.addColorStop(1, 'rgba(0, 0, 0, 1)');\n\t            foregroundContext.fillStyle = grad;\n\t            foregroundContext.fill();\n\t\n\t            // Create a digit column\n\t            // background\n\t            digitContext.rect(0, 0, digitWidth, columnHeight * 1.1);\n\t            digitContext.fillStyle = valueBackColor;\n\t            digitContext.fill();\n\t            // edges\n\t            digitContext.strokeStyle = '#f0f0f0';\n\t            digitContext.lineWidth = '1px'; //height * 0.1 + 'px';\n\t            digitContext.moveTo(0, 0);\n\t            digitContext.lineTo(0, columnHeight * 1.1);\n\t            digitContext.stroke();\n\t            digitContext.strokeStyle = '#202020';\n\t            digitContext.moveTo(digitWidth, 0);\n\t            digitContext.lineTo(digitWidth, columnHeight * 1.1);\n\t            digitContext.stroke();\n\t            // numerals\n\t            digitContext.textAlign = 'center';\n\t            digitContext.textBaseline = 'middle';\n\t            digitContext.font = stdFont;\n\t            digitContext.fillStyle = valueForeColor;\n\t            // put the digits 901234567890 vertically into the buffer\n\t            for (i = 9; i < 21; i++) {\n\t                digitContext.fillText(i % 10, digitWidth * 0.5, verticalSpace * (i - 9) + verticalSpace / 2);\n\t            }\n\t\n\t            // Create a decimal column\n\t            if (decimals > 0) {\n\t                // background\n\t                decimalContext.rect(0, 0, digitWidth, columnHeight * 1.1);\n\t                decimalContext.fillStyle = decimalBackColor;\n\t                decimalContext.fill();\n\t                // edges\n\t                decimalContext.strokeStyle = '#f0f0f0';\n\t                decimalContext.lineWidth = '1px'; //height * 0.1 + 'px';\n\t                decimalContext.moveTo(0, 0);\n\t                decimalContext.lineTo(0, columnHeight * 1.1);\n\t                decimalContext.stroke();\n\t                decimalContext.strokeStyle = '#202020';\n\t                decimalContext.moveTo(digitWidth, 0);\n\t                decimalContext.lineTo(digitWidth, columnHeight * 1.1);\n\t                decimalContext.stroke();\n\t                // numerals\n\t                decimalContext.textAlign = 'center';\n\t                decimalContext.textBaseline = 'middle';\n\t                decimalContext.font = stdFont;\n\t                decimalContext.fillStyle = decimalForeColor;\n\t                // put the digits 901234567890 vertically into the buffer\n\t                for (i = 9; i < 21; i++) {\n\t                    decimalContext.fillText(i % 10, digitWidth * 0.5, verticalSpace * (i - 9) + verticalSpace / 2);\n\t                }\n\t            }\n\t            // wobble factors\n\t            for (i = 0; i < (digits + decimals); i++) {\n\t                wobble[i] = Math.random() * wobbleFactor * height - wobbleFactor * height / 2;\n\t            }\n\t\n\t        }\n\t\n\t        function drawDigits() {\n\t            var pos = 1,\n\t            val = value, i, num, numb, frac, prevNum;\n\t\n\t            // do not use Math.pow() - rounding errors!\n\t            for (i = 0; i < decimals; i++) {\n\t                val *= 10;\n\t            }\n\t\n\t            numb = Math.floor(val);\n\t            frac = val - numb;\n\t            numb = String(numb);\n\t            prevNum = 9;\n\t\n\t            for (i = 0; i < decimals + digits; i++) {\n\t                num = +numb.substring(numb.length - i - 1, numb.length - i) || 0;\n\t                if (prevNum !== 9) {\n\t                    frac = 0;\n\t                }\n\t                if (i < decimals) {\n\t                    backgroundContext.drawImage(decimalBuffer, width - digitWidth * pos, -(verticalSpace * (num + frac) + zeroOffset + wobble[i]));\n\t                } else {\n\t                    backgroundContext.drawImage(digitBuffer, width - digitWidth * pos, -(verticalSpace * (num + frac) + zeroOffset + wobble[i]));\n\t                }\n\t                pos++;\n\t                prevNum = num;\n\t            }\n\t        }\n\t\n\t        this.setValueAnimated = function (newVal, callback) {\n\t            var gauge = this;\n\t            newVal = parseFloat(newVal);\n\t\n\t            if (newVal < 0) {\n\t                newVal = 0;\n\t            }\n\t            if (value !== newVal) {\n\t                if (undefined !== tween && tween.isPlaying) {\n\t                    tween.stop();\n\t                }\n\t\n\t                tween = new Tween({}, '', Tween.strongEaseOut, value, newVal, 2);\n\t                tween.onMotionChanged = function (event) {\n\t                    value = event.target._pos;\n\t                    if (!repainting) {\n\t                        repainting = true;\n\t                        requestAnimFrame(gauge.repaint);\n\t                    }\n\t                };\n\t\n\t                // do we have a callback function to process?\n\t                if (callback && typeof(callback) === \"function\") {\n\t                    tween.onMotionFinished = callback;\n\t                }\n\t\n\t                tween.start();\n\t            }\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.setValue = function (newVal) {\n\t            value = parseFloat(newVal);\n\t            if (value < 0) {\n\t                value = 0;\n\t            }\n\t            this.repaint();\n\t            return this;\n\t        };\n\t\n\t        this.getValue = function () {\n\t            return value;\n\t        };\n\t\n\t        this.repaint = function () {\n\t            if (!initialized) {\n\t                init();\n\t            }\n\t\n\t            // draw digits\n\t            drawDigits();\n\t\n\t            // draw the foreground\n\t            backgroundContext.drawImage(foregroundBuffer, 0, 0);\n\t\n\t            // paint back to the main context\n\t            ctx.drawImage(backgroundBuffer, 0, 0);\n\t\n\t            repainting = false;\n\t        };\n\t\n\t        this.repaint();\n\t    };\n\t\n\t    //************************************  I M A G E   -   F U N C T I O N S  *****************************************\n\t\n\t    var drawRoseImage = function (ctx, centerX, centerY, imageWidth, imageHeight, backgroundColor) {\n\t        var fill = true,\n\t            i, grad,\n\t            symbolColor = backgroundColor.symbolColor.getRgbaColor();\n\t\n\t        ctx.save();\n\t        ctx.lineWidth = 1;\n\t        ctx.fillStyle = symbolColor;\n\t        ctx.strokeStyle = symbolColor;\n\t        ctx.translate(centerX, centerY);\n\t        // broken ring\n\t        for (i = 0; i < 360; i += 15) {\n\t            fill = !fill;\n\t\n\t            ctx.beginPath();\n\t            ctx.arc(0, 0, imageWidth * 0.26, i * RAD_FACTOR, (i + 15) * RAD_FACTOR, false);\n\t            ctx.arc(0, 0, imageWidth * 0.23, (i + 15) * RAD_FACTOR, i * RAD_FACTOR, true);\n\t            ctx.closePath();\n\t            if (fill) {\n\t                ctx.fill();\n\t            }\n\t            ctx.stroke();\n\t        }\n\t\n\t        ctx.translate(-centerX, -centerY);\n\t\n\t/*\n\t        // PATH1_2\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.560747, imageHeight * 0.584112);\n\t        ctx.lineTo(imageWidth * 0.640186, imageHeight * 0.644859);\n\t        ctx.lineTo(imageWidth * 0.584112, imageHeight * 0.560747);\n\t        ctx.lineTo(imageWidth * 0.560747, imageHeight * 0.584112);\n\t        ctx.closePath();\n\t        ctx.fillStyle = fillColorPath;\n\t        ctx.fill();\n\t        ctx.stroke();\n\t\n\t        // PATH2_2\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.411214, imageHeight * 0.560747);\n\t        ctx.lineTo(imageWidth * 0.355140, imageHeight * 0.644859);\n\t        ctx.lineTo(imageWidth * 0.439252, imageHeight * 0.588785);\n\t        ctx.lineTo(imageWidth * 0.411214, imageHeight * 0.560747);\n\t        ctx.closePath();\n\t        ctx.fillStyle = fillColorPath;\n\t        ctx.fill();\n\t        ctx.stroke();\n\t\n\t        // PATH3_2\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.584112, imageHeight * 0.443925);\n\t        ctx.lineTo(imageWidth * 0.640186, imageHeight * 0.359813);\n\t        ctx.lineTo(imageWidth * 0.560747, imageHeight * 0.420560);\n\t        ctx.lineTo(imageWidth * 0.584112, imageHeight * 0.443925);\n\t        ctx.closePath();\n\t        ctx.fillStyle = fillColorPath;\n\t        ctx.fill();\n\t        ctx.stroke();\n\t\n\t        // PATH4_2\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.439252, imageHeight * 0.415887);\n\t        ctx.lineTo(imageWidth * 0.355140, imageHeight * 0.359813);\n\t        ctx.lineTo(imageWidth * 0.415887, imageHeight * 0.439252);\n\t        ctx.lineTo(imageWidth * 0.439252, imageHeight * 0.415887);\n\t        ctx.closePath();\n\t        ctx.fillStyle = fillColorPath;\n\t        ctx.fill();\n\t        ctx.stroke();\n\t\n\t        // PATH5_2\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.523364, imageHeight * 0.397196);\n\t        ctx.lineTo(imageWidth * 0.5, imageHeight * 0.196261);\n\t        ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.397196);\n\t        ctx.lineTo(imageWidth * 0.523364, imageHeight * 0.397196);\n\t        ctx.closePath();\n\t        var PATH5_2_GRADIENT = ctx.createLinearGradient(0.476635 * imageWidth, 0, 0.518691 * imageWidth, 0);\n\t        PATH5_2_GRADIENT.addColorStop(0, 'rgb(222, 223, 218)');\n\t        PATH5_2_GRADIENT.addColorStop(0.48, 'rgb(222, 223, 218)');\n\t        PATH5_2_GRADIENT.addColorStop(0.49, backgroundColor.symbolColor.getRgbaColor());\n\t        PATH5_2_GRADIENT.addColorStop(1, backgroundColor.symbolColor.getRgbaColor());\n\t        ctx.fillStyle = PATH5_2_GRADIENT;\n\t        ctx.fill();\n\t        ctx.stroke();\n\t\n\t        // PATH6_2\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.471962, imageHeight * 0.607476);\n\t        ctx.lineTo(imageWidth * 0.5, imageHeight * 0.813084);\n\t        ctx.lineTo(imageWidth * 0.523364, imageHeight * 0.607476);\n\t        ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.607476);\n\t        ctx.closePath();\n\t        var PATH6_2_GRADIENT = ctx.createLinearGradient(0.518691 * imageWidth, 0, (0.518691 + -0.037383) * imageWidth, 0);\n\t        PATH6_2_GRADIENT.addColorStop(0, 'rgb(222, 223, 218)');\n\t        PATH6_2_GRADIENT.addColorStop(0.56, 'rgb(222, 223, 218)');\n\t        PATH6_2_GRADIENT.addColorStop(0.5601, backgroundColor.symbolColor.getRgbaColor());\n\t        PATH6_2_GRADIENT.addColorStop(1, backgroundColor.symbolColor.getRgbaColor());\n\t        ctx.fillStyle = PATH6_2_GRADIENT;\n\t        ctx.lineWidth = 1;\n\t        ctx.lineCap = 'square';\n\t        ctx.lineJoin = 'miter';\n\t        ctx.strokeStyle = backgroundColor.symbolColor.getRgbaColor();\n\t        ctx.fill();\n\t        ctx.stroke();\n\t\n\t        // PATH7_2\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.602803, imageHeight * 0.528037);\n\t        ctx.lineTo(imageWidth * 0.803738, imageHeight * 0.5);\n\t        ctx.lineTo(imageWidth * 0.602803, imageHeight * 0.476635);\n\t        ctx.lineTo(imageWidth * 0.602803, imageHeight * 0.528037);\n\t        ctx.closePath();\n\t        var PATH7_2_GRADIENT = ctx.createLinearGradient(0, 0.485981 * imageHeight, 0, 0.514018 * imageHeight);\n\t        PATH7_2_GRADIENT.addColorStop(0, 'rgb(222, 223, 218)');\n\t        PATH7_2_GRADIENT.addColorStop(0.48, 'rgb(222, 223, 218)');\n\t        PATH7_2_GRADIENT.addColorStop(0.49, backgroundColor.symbolColor.getRgbaColor());\n\t        PATH7_2_GRADIENT.addColorStop(1, backgroundColor.symbolColor.getRgbaColor());\n\t        ctx.fillStyle = PATH7_2_GRADIENT;\n\t        ctx.fill();\n\t        ctx.stroke();\n\t\n\t        // PATH8_2\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.392523, imageHeight * 0.476635);\n\t        ctx.lineTo(imageWidth * 0.191588, imageHeight * 0.5);\n\t        ctx.lineTo(imageWidth * 0.392523, imageHeight * 0.528037);\n\t        ctx.lineTo(imageWidth * 0.392523, imageHeight * 0.476635);\n\t        ctx.closePath();\n\t        var PATH8_2_GRADIENT = ctx.createLinearGradient(0, 0.528037 * imageHeight, 0, 0.485981 * imageHeight);\n\t        PATH8_2_GRADIENT.addColorStop(0, 'rgb(222, 223, 218)');\n\t        PATH8_2_GRADIENT.addColorStop(0.52, 'rgb(222, 223, 218)');\n\t        PATH8_2_GRADIENT.addColorStop(0.53, backgroundColor.symbolColor.getRgbaColor());\n\t        PATH8_2_GRADIENT.addColorStop(1, backgroundColor.symbolColor.getRgbaColor());\n\t        ctx.fillStyle = PATH8_2_GRADIENT;\n\t        ctx.fill();\n\t        ctx.stroke();\n\t\n\t        // PATH9_2\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.406542, imageHeight * 0.504672);\n\t        ctx.bezierCurveTo(imageWidth * 0.406542, imageHeight * 0.453271, imageWidth * 0.448598, imageHeight * 0.411214, imageWidth * 0.5, imageHeight * 0.411214);\n\t        ctx.bezierCurveTo(imageWidth * 0.546728, imageHeight * 0.411214, imageWidth * 0.588785, imageHeight * 0.453271, imageWidth * 0.588785, imageHeight * 0.504672);\n\t        ctx.bezierCurveTo(imageWidth * 0.588785, imageHeight * 0.551401, imageWidth * 0.546728, imageHeight * 0.593457, imageWidth * 0.5, imageHeight * 0.593457);\n\t        ctx.bezierCurveTo(imageWidth * 0.448598, imageHeight * 0.593457, imageWidth * 0.406542, imageHeight * 0.551401, imageWidth * 0.406542, imageHeight * 0.504672);\n\t        ctx.closePath();\n\t        ctx.moveTo(imageWidth * 0.387850, imageHeight * 0.504672);\n\t        ctx.bezierCurveTo(imageWidth * 0.387850, imageHeight * 0.560747, imageWidth * 0.439252, imageHeight * 0.612149, imageWidth * 0.5, imageHeight * 0.612149);\n\t        ctx.bezierCurveTo(imageWidth * 0.556074, imageHeight * 0.612149, imageWidth * 0.607476, imageHeight * 0.560747, imageWidth * 0.607476, imageHeight * 0.504672);\n\t        ctx.bezierCurveTo(imageWidth * 0.607476, imageHeight * 0.443925, imageWidth * 0.556074, imageHeight * 0.392523, imageWidth * 0.5, imageHeight * 0.392523);\n\t        ctx.bezierCurveTo(imageWidth * 0.439252, imageHeight * 0.392523, imageWidth * 0.387850, imageHeight * 0.443925, imageWidth * 0.387850, imageHeight * 0.504672);\n\t        ctx.closePath();\n\t        ctx.fillStyle = fillColorPath;\n\t        ctx.lineWidth = 1;\n\t        ctx.lineCap = 'square';\n\t        ctx.lineJoin = 'miter';\n\t        ctx.strokeStyle = backgroundColor.symbolColor.getRgbaColor();\n\t        ctx.fill();\n\t        ctx.stroke();\n\t        ctx.restore();\n\t*/\n\t        // Replacement code, not quite the same but much smaller!\n\t\n\t        for (i = 0; 360 >= i; i += 90) {\n\t            // Small pointers\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.560747, imageHeight * 0.584112);\n\t            ctx.lineTo(imageWidth * 0.640186, imageHeight * 0.644859);\n\t            ctx.lineTo(imageWidth * 0.584112, imageHeight * 0.560747);\n\t            ctx.lineTo(imageWidth * 0.560747, imageHeight * 0.584112);\n\t            ctx.closePath();\n\t            ctx.fillStyle = symbolColor;\n\t            ctx.fill();\n\t            ctx.stroke();\n\t            // Large pointers\n\t            ctx.beginPath();\n\t            ctx.moveTo(imageWidth * 0.523364, imageHeight * 0.397196);\n\t            ctx.lineTo(imageWidth * 0.5, imageHeight * 0.196261);\n\t            ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.397196);\n\t            ctx.lineTo(imageWidth * 0.523364, imageHeight * 0.397196);\n\t            ctx.closePath();\n\t            grad = ctx.createLinearGradient(0.476635 * imageWidth, 0, 0.518691 * imageWidth, 0);\n\t            grad.addColorStop(0, 'rgb(222, 223, 218)');\n\t            grad.addColorStop(0.48, 'rgb(222, 223, 218)');\n\t            grad.addColorStop(0.49, symbolColor);\n\t            grad.addColorStop(1, symbolColor);\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t            ctx.stroke();\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(i * RAD_FACTOR);\n\t            ctx.translate(-centerX, -centerY);\n\t        }\n\t\n\t        // Central ring\n\t        ctx.beginPath();\n\t        ctx.translate(centerX, centerY);\n\t        ctx.arc(0, 0, imageWidth * 0.1, 0, TWO_PI, false);\n\t        ctx.lineWidth = imageWidth * 0.022;\n\t        ctx.stroke();\n\t        ctx.translate(-centerX, -centerY);\n\t\n\t        ctx.restore();\n\t\n\t    };\n\t\n\t    var drawPointerImage = function (ctx, size, ptrType, ptrColor, lblColor) {\n\t        var ptrBuffer, ptrCtx,\n\t            grad, radius,\n\t            cacheKey = size.toString() + ptrType.type + ptrColor.light.getHexColor() + ptrColor.medium.getHexColor();\n\t\n\t        // check if we have already created and cached this buffer, if not create it\n\t        if (!drawPointerImage.cache[cacheKey]) {\n\t            // create a pointer buffer\n\t            ptrBuffer = createBuffer(size, size);\n\t            ptrCtx = ptrBuffer.getContext('2d');\n\t\n\t            switch (ptrType.type) {\n\t            case 'type2':\n\t                grad = ptrCtx.createLinearGradient(0, size * 0.471962, 0, size * 0.130841);\n\t                grad.addColorStop(0, lblColor.getRgbaColor());\n\t                grad.addColorStop(0.36, lblColor.getRgbaColor());\n\t                grad.addColorStop(0.361, ptrColor.light.getRgbaColor());\n\t                grad.addColorStop(1, ptrColor.light.getRgbaColor());\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.518691, size * 0.471962);\n\t                ptrCtx.lineTo(size * 0.509345, size * 0.462616);\n\t                ptrCtx.lineTo(size * 0.509345, size * 0.341121);\n\t                ptrCtx.lineTo(size * 0.504672, size * 0.130841);\n\t                ptrCtx.lineTo(size * 0.495327, size * 0.130841);\n\t                ptrCtx.lineTo(size * 0.490654, size * 0.341121);\n\t                ptrCtx.lineTo(size * 0.490654, size * 0.462616);\n\t                ptrCtx.lineTo(size * 0.481308, size * 0.471962);\n\t                ptrCtx.closePath();\n\t                ptrCtx.fill();\n\t                break;\n\t\n\t            case 'type3':\n\t                ptrCtx.beginPath();\n\t                ptrCtx.rect(size * 0.495327, size * 0.130841, size * 0.009345, size * 0.373831);\n\t                ptrCtx.closePath();\n\t                ptrCtx.fillStyle = ptrColor.light.getRgbaColor();\n\t                ptrCtx.fill();\n\t                break;\n\t\n\t            case 'type4':\n\t                grad = ptrCtx.createLinearGradient(0.467289 * size, 0, 0.528036 * size, 0);\n\t                grad.addColorStop(0, ptrColor.dark.getRgbaColor());\n\t                grad.addColorStop(0.51, ptrColor.dark.getRgbaColor());\n\t                grad.addColorStop(0.52, ptrColor.light.getRgbaColor());\n\t                grad.addColorStop(1, ptrColor.light.getRgbaColor());\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.5, size * 0.126168);\n\t                ptrCtx.lineTo(size * 0.514018, size * 0.135514);\n\t                ptrCtx.lineTo(size * 0.532710, size * 0.5);\n\t                ptrCtx.lineTo(size * 0.523364, size * 0.602803);\n\t                ptrCtx.lineTo(size * 0.476635, size * 0.602803);\n\t                ptrCtx.lineTo(size * 0.467289, size * 0.5);\n\t                ptrCtx.lineTo(size * 0.485981, size * 0.135514);\n\t                ptrCtx.lineTo(size * 0.5, size * 0.126168);\n\t                ptrCtx.closePath();\n\t                ptrCtx.fill();\n\t                break;\n\t\n\t            case 'type5':\n\t                grad = ptrCtx.createLinearGradient(0.471962 * size, 0, 0.528036 * size, 0);\n\t                grad.addColorStop(0, ptrColor.light.getRgbaColor());\n\t                grad.addColorStop(0.5, ptrColor.light.getRgbaColor());\n\t                grad.addColorStop(0.5, ptrColor.medium.getRgbaColor());\n\t                grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.5, size * 0.495327);\n\t                ptrCtx.lineTo(size * 0.528037, size * 0.495327);\n\t                ptrCtx.lineTo(size * 0.5, size * 0.149532);\n\t                ptrCtx.lineTo(size * 0.471962, size * 0.495327);\n\t                ptrCtx.lineTo(size * 0.5, size * 0.495327);\n\t                ptrCtx.closePath();\n\t                ptrCtx.fill();\n\t\n\t                ptrCtx.lineWidth = 1;\n\t                ptrCtx.lineCap = 'square';\n\t                ptrCtx.lineJoin = 'miter';\n\t                ptrCtx.strokeStyle = ptrColor.dark.getRgbaColor();\n\t                ptrCtx.stroke();\n\t                break;\n\t\n\t            case 'type6':\n\t                ptrCtx.fillStyle = ptrColor.medium.getRgbaColor();\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.481308, size * 0.485981);\n\t                ptrCtx.lineTo(size * 0.481308, size * 0.392523);\n\t                ptrCtx.lineTo(size * 0.485981, size * 0.317757);\n\t                ptrCtx.lineTo(size * 0.495327, size * 0.130841);\n\t                ptrCtx.lineTo(size * 0.504672, size * 0.130841);\n\t                ptrCtx.lineTo(size * 0.514018, size * 0.317757);\n\t                ptrCtx.lineTo(size * 0.518691, size * 0.387850);\n\t                ptrCtx.lineTo(size * 0.518691, size * 0.485981);\n\t                ptrCtx.lineTo(size * 0.504672, size * 0.485981);\n\t                ptrCtx.lineTo(size * 0.504672, size * 0.387850);\n\t                ptrCtx.lineTo(size * 0.5, size * 0.317757);\n\t                ptrCtx.lineTo(size * 0.495327, size * 0.392523);\n\t                ptrCtx.lineTo(size * 0.495327, size * 0.485981);\n\t                ptrCtx.lineTo(size * 0.481308, size * 0.485981);\n\t                ptrCtx.closePath();\n\t                ptrCtx.fill();\n\t                break;\n\t\n\t            case 'type7':\n\t                grad = ptrCtx.createLinearGradient(0.481308 * size, 0, 0.518691 * size, 0);\n\t                grad.addColorStop(0, ptrColor.dark.getRgbaColor());\n\t                grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.490654, size * 0.130841);\n\t                ptrCtx.lineTo(size * 0.481308, size * 0.5);\n\t                ptrCtx.lineTo(size * 0.518691, size * 0.5);\n\t                ptrCtx.lineTo(size * 0.504672, size * 0.130841);\n\t                ptrCtx.lineTo(size * 0.490654, size * 0.130841);\n\t                ptrCtx.closePath();\n\t                ptrCtx.fill();\n\t                break;\n\t\n\t            case 'type8':\n\t                grad = ptrCtx.createLinearGradient(0.471962 * size, 0, 0.528036 * size, 0);\n\t                grad.addColorStop(0, ptrColor.light.getRgbaColor());\n\t                grad.addColorStop(0.5, ptrColor.light.getRgbaColor());\n\t                grad.addColorStop(0.5, ptrColor.medium.getRgbaColor());\n\t                grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.strokeStyle = ptrColor.dark.getRgbaColor();\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.5, size * 0.532710);\n\t                ptrCtx.lineTo(size * 0.532710, size * 0.5);\n\t                ptrCtx.bezierCurveTo(size * 0.532710, size * 0.5, size * 0.509345, size * 0.457943, size * 0.5, size * 0.149532);\n\t                ptrCtx.bezierCurveTo(size * 0.490654, size * 0.457943, size * 0.467289, size * 0.5, size * 0.467289, size * 0.5);\n\t                ptrCtx.lineTo(size * 0.5, size * 0.532710);\n\t                ptrCtx.closePath();\n\t                ptrCtx.fill();\n\t                ptrCtx.stroke();\n\t                break;\n\t\n\t            case 'type9':\n\t                grad = ptrCtx.createLinearGradient(0.471962 * size, 0, 0.528036 * size, 0);\n\t                grad.addColorStop(0, 'rgb(50, 50, 50)');\n\t                grad.addColorStop(0.5, '#666666');\n\t                grad.addColorStop(1, 'rgb(50, 50, 50)');\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.strokeStyle = '#2E2E2E';\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.495327, size * 0.233644);\n\t                ptrCtx.lineTo(size * 0.504672, size * 0.233644);\n\t                ptrCtx.lineTo(size * 0.514018, size * 0.439252);\n\t                ptrCtx.lineTo(size * 0.485981, size * 0.439252);\n\t                ptrCtx.lineTo(size * 0.495327, size * 0.233644);\n\t                ptrCtx.closePath();\n\t                ptrCtx.moveTo(size * 0.490654, size * 0.130841);\n\t                ptrCtx.lineTo(size * 0.471962, size * 0.471962);\n\t                ptrCtx.lineTo(size * 0.471962, size * 0.528037);\n\t                ptrCtx.bezierCurveTo(size * 0.471962, size * 0.528037, size * 0.476635, size * 0.602803, size * 0.476635, size * 0.602803);\n\t                ptrCtx.bezierCurveTo(size * 0.476635, size * 0.607476, size * 0.481308, size * 0.607476, size * 0.5, size * 0.607476);\n\t                ptrCtx.bezierCurveTo(size * 0.518691, size * 0.607476, size * 0.523364, size * 0.607476, size * 0.523364, size * 0.602803);\n\t                ptrCtx.bezierCurveTo(size * 0.523364, size * 0.602803, size * 0.528037, size * 0.528037, size * 0.528037, size * 0.528037);\n\t                ptrCtx.lineTo(size * 0.528037, size * 0.471962);\n\t                ptrCtx.lineTo(size * 0.509345, size * 0.130841);\n\t                ptrCtx.lineTo(size * 0.490654, size * 0.130841);\n\t                ptrCtx.closePath();\n\t                ptrCtx.fill();\n\t\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.495327, size * 0.219626);\n\t                ptrCtx.lineTo(size * 0.504672, size * 0.219626);\n\t                ptrCtx.lineTo(size * 0.504672, size * 0.135514);\n\t                ptrCtx.lineTo(size * 0.495327, size * 0.135514);\n\t                ptrCtx.lineTo(size * 0.495327, size * 0.219626);\n\t                ptrCtx.closePath();\n\t\n\t                ptrCtx.fillStyle = ptrColor.medium.getRgbaColor();\n\t                ptrCtx.fill();\n\t                break;\n\t\n\t            case 'type10':\n\t                // POINTER_TYPE10\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.5, size * 0.149532);\n\t                ptrCtx.bezierCurveTo(size * 0.5, size * 0.149532, size * 0.443925, size * 0.490654, size * 0.443925, size * 0.5);\n\t                ptrCtx.bezierCurveTo(size * 0.443925, size * 0.532710, size * 0.467289, size * 0.556074, size * 0.5, size * 0.556074);\n\t                ptrCtx.bezierCurveTo(size * 0.532710, size * 0.556074, size * 0.556074, size * 0.532710, size * 0.556074, size * 0.5);\n\t                ptrCtx.bezierCurveTo(size * 0.556074, size * 0.490654, size * 0.5, size * 0.149532, size * 0.5, size * 0.149532);\n\t                ptrCtx.closePath();\n\t                grad = ptrCtx.createLinearGradient(0.471962 * size, 0, 0.528036 * size, 0);\n\t                grad.addColorStop(0, ptrColor.light.getRgbaColor());\n\t                grad.addColorStop(0.5, ptrColor.light.getRgbaColor());\n\t                grad.addColorStop(0.5, ptrColor.medium.getRgbaColor());\n\t                grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.strokeStyle = ptrColor.medium.getRgbaColor();\n\t                ptrCtx.lineWidth = 1;\n\t                ptrCtx.lineCap = 'square';\n\t                ptrCtx.lineJoin = 'miter';\n\t                ptrCtx.fill();\n\t                ptrCtx.stroke();\n\t                break;\n\t\n\t            case 'type11':\n\t                // POINTER_TYPE11\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(0.5 * size, 0.168224 * size);\n\t                ptrCtx.lineTo(0.485981 * size, 0.5 * size);\n\t                ptrCtx.bezierCurveTo(0.485981 * size, 0.5 * size, 0.481308 * size, 0.584112 * size, 0.5 * size, 0.584112 * size);\n\t                ptrCtx.bezierCurveTo(0.514018 * size, 0.584112 * size, 0.509345 * size, 0.5 * size, 0.509345 * size, 0.5 * size);\n\t                ptrCtx.lineTo(0.5 * size, 0.168224 * size);\n\t                ptrCtx.closePath();\n\t                grad = ptrCtx.createLinearGradient(0, 0.168224 * size, 0, 0.584112 * size);\n\t                grad.addColorStop(0, ptrColor.medium.getRgbaColor());\n\t                grad.addColorStop(1, ptrColor.dark.getRgbaColor());\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.strokeStyle = ptrColor.dark.getRgbaColor();\n\t                ptrCtx.fill();\n\t                ptrCtx.stroke();\n\t                break;\n\t\n\t            case 'type12':\n\t                // POINTER_TYPE12\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(0.5 * size, 0.168224 * size);\n\t                ptrCtx.lineTo(0.485981 * size, 0.5 * size);\n\t                ptrCtx.lineTo(0.5 * size, 0.504672 * size);\n\t                ptrCtx.lineTo(0.509345 * size, 0.5 * size);\n\t                ptrCtx.lineTo(0.5 * size, 0.168224 * size);\n\t                ptrCtx.closePath();\n\t                grad = ptrCtx.createLinearGradient(0, 0.168224 * size, 0, 0.504672 * size);\n\t                grad.addColorStop(0, ptrColor.medium.getRgbaColor());\n\t                grad.addColorStop(1, ptrColor.dark.getRgbaColor());\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.strokeStyle = ptrColor.dark.getRgbaColor();\n\t                ptrCtx.fill();\n\t                ptrCtx.stroke();\n\t                break;\n\t\n\t            case 'type13':\n\t                // POINTER_TYPE13\n\t            case 'type14':\n\t                // POINTER_TYPE14 (same shape as 13)\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(0.485981 * size, 0.168224 * size);\n\t                ptrCtx.lineTo(0.5 * size, 0.130841 * size);\n\t                ptrCtx.lineTo(0.509345 * size, 0.168224 * size);\n\t                ptrCtx.lineTo(0.509345 * size, 0.509345 * size);\n\t                ptrCtx.lineTo(0.485981 * size, 0.509345 * size);\n\t                ptrCtx.lineTo(0.485981 * size, 0.168224 * size);\n\t                ptrCtx.closePath();\n\t                if (ptrType.type === 'type13') {\n\t                    // TYPE13\n\t                    grad = ptrCtx.createLinearGradient(0, 0.5 * size, 0, 0.130841 * size);\n\t                    grad.addColorStop(0, lblColor.getRgbaColor());\n\t                    grad.addColorStop(0.85, lblColor.getRgbaColor());\n\t                    grad.addColorStop(0.85, ptrColor.medium.getRgbaColor());\n\t                    grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n\t                    ptrCtx.fillStyle = grad;\n\t                } else {\n\t                    // TYPE14\n\t                    grad = ptrCtx.createLinearGradient(0.485981 * size, 0, 0.509345 * size, 0);\n\t                    grad.addColorStop(0, ptrColor.veryDark.getRgbaColor());\n\t                    grad.addColorStop(0.5, ptrColor.light.getRgbaColor());\n\t                    grad.addColorStop(1, ptrColor.veryDark.getRgbaColor());\n\t                    ptrCtx.fillStyle = grad;\n\t                }\n\t                ptrCtx.fill();\n\t                break;\n\t\n\t            case 'type15':\n\t                // POINTER TYPE15 - Classic with crescent\n\t            case 'type16':\n\t                // POINTER TYPE16 - Classic without crescent\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.509345, size * 0.457943);\n\t                ptrCtx.lineTo(size * 0.5015, size * 0.13);\n\t                ptrCtx.lineTo(size * 0.4985, size * 0.13);\n\t                ptrCtx.lineTo(size * 0.490654, size * 0.457943);\n\t                ptrCtx.bezierCurveTo(size * 0.490654, size * 0.457943, size * 0.490654, size * 0.457943, size * 0.490654, size * 0.457943);\n\t                ptrCtx.bezierCurveTo(size * 0.471962, size * 0.462616, size * 0.457943, size * 0.481308, size * 0.457943, size * 0.5);\n\t                ptrCtx.bezierCurveTo(size * 0.457943, size * 0.518691, size * 0.471962, size * 0.537383, size * 0.490654, size * 0.542056);\n\t                ptrCtx.bezierCurveTo(size * 0.490654, size * 0.542056, size * 0.490654, size * 0.542056, size * 0.490654, size * 0.542056);\n\t                if (ptrType.type === 'type15') {\n\t                    ptrCtx.lineTo(size * 0.490654, size * 0.57);\n\t                    ptrCtx.bezierCurveTo(size * 0.46, size * 0.58, size * 0.46, size * 0.62, size * 0.490654, size * 0.63);\n\t                    ptrCtx.bezierCurveTo(size * 0.47, size * 0.62, size * 0.48, size * 0.59, size * 0.5, size * 0.59);\n\t                    ptrCtx.bezierCurveTo(size * 0.53, size * 0.59, size * 0.52, size * 0.62, size * 0.509345, size * 0.63);\n\t                    ptrCtx.bezierCurveTo(size * 0.54, size * 0.62, size * 0.54, size * 0.58, size * 0.509345, size * 0.57);\n\t                    ptrCtx.lineTo(size * 0.509345, size * 0.57);\n\t                } else {\n\t                    ptrCtx.lineTo(size * 0.490654, size * 0.621495);\n\t                    ptrCtx.lineTo(size * 0.509345, size * 0.621495);\n\t                }\n\t                ptrCtx.lineTo(size * 0.509345, size * 0.542056);\n\t                ptrCtx.bezierCurveTo(size * 0.509345, size * 0.542056, size * 0.509345, size * 0.542056, size * 0.509345, size * 0.542056);\n\t                ptrCtx.bezierCurveTo(size * 0.528037, size * 0.537383, size * 0.542056, size * 0.518691, size * 0.542056, size * 0.5);\n\t                ptrCtx.bezierCurveTo(size * 0.542056, size * 0.481308, size * 0.528037, size * 0.462616, size * 0.509345, size * 0.457943);\n\t                ptrCtx.bezierCurveTo(size * 0.509345, size * 0.457943, size * 0.509345, size * 0.457943, size * 0.509345, size * 0.457943);\n\t                ptrCtx.closePath();\n\t                if (ptrType.type === 'type15') {\n\t                    grad = ptrCtx.createLinearGradient(0, 0, 0, size * 0.63);\n\t                } else {\n\t                    grad = ptrCtx.createLinearGradient(0, 0, 0, size * 0.621495);\n\t                }\n\t                grad.addColorStop(0, ptrColor.medium.getRgbaColor());\n\t                grad.addColorStop(0.388888, ptrColor.medium.getRgbaColor());\n\t                grad.addColorStop(0.5, ptrColor.light.getRgbaColor());\n\t                grad.addColorStop(0.611111, ptrColor.medium.getRgbaColor());\n\t                grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.strokeStyle = ptrColor.dark.getRgbaColor();\n\t                ptrCtx.fill();\n\t                ptrCtx.stroke();\n\t                // Draw the rings\n\t                ptrCtx.beginPath();\n\t                radius = size * 0.065420 / 2;\n\t                ptrCtx.arc(size * 0.5, size * 0.5, radius, 0, TWO_PI);\n\t                grad = ptrCtx.createLinearGradient(size * 0.5 - radius, size * 0.5 + radius, 0, size * 0.5 + radius);\n\t                grad.addColorStop(0, '#e6b35c');\n\t                grad.addColorStop(0.01, '#e6b35c');\n\t                grad.addColorStop(0.99, '#c48200');\n\t                grad.addColorStop(1, '#c48200');\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.closePath();\n\t                ptrCtx.fill();\n\t                ptrCtx.beginPath();\n\t                radius = size * 0.046728 / 2;\n\t                ptrCtx.arc(size * 0.5, size * 0.5, radius, 0, TWO_PI);\n\t                grad = ptrCtx.createRadialGradient(size * 0.5, size * 0.5, 0, size * 0.5, size * 0.5, radius);\n\t                grad.addColorStop(0, '#c5c5c5');\n\t                grad.addColorStop(0.19, '#c5c5c5');\n\t                grad.addColorStop(0.22, '#000000');\n\t                grad.addColorStop(0.8, '#000000');\n\t                grad.addColorStop(0.99, '#707070');\n\t                grad.addColorStop(1, '#707070');\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.closePath();\n\t                ptrCtx.fill();\n\t                break;\n\t\n\t            case 'type1':\n\t            /* falls through */\n\t            default:\n\t                grad = ptrCtx.createLinearGradient(0, size * 0.471962, 0, size * 0.130841);\n\t                grad.addColorStop(0, ptrColor.veryDark.getRgbaColor());\n\t                grad.addColorStop(0.3, ptrColor.medium.getRgbaColor());\n\t                grad.addColorStop(0.59, ptrColor.medium.getRgbaColor());\n\t                grad.addColorStop(1, ptrColor.veryDark.getRgbaColor());\n\t                ptrCtx.fillStyle = grad;\n\t                ptrCtx.beginPath();\n\t                ptrCtx.moveTo(size * 0.518691, size * 0.471962);\n\t                ptrCtx.bezierCurveTo(size * 0.514018, size * 0.457943, size * 0.509345, size * 0.415887, size * 0.509345, size * 0.401869);\n\t                ptrCtx.bezierCurveTo(size * 0.504672, size * 0.383177, size * 0.5, size * 0.130841, size * 0.5, size * 0.130841);\n\t                ptrCtx.bezierCurveTo(size * 0.5, size * 0.130841, size * 0.490654, size * 0.383177, size * 0.490654, size * 0.397196);\n\t                ptrCtx.bezierCurveTo(size * 0.490654, size * 0.415887, size * 0.485981, size * 0.457943, size * 0.481308, size * 0.471962);\n\t                ptrCtx.bezierCurveTo(size * 0.471962, size * 0.481308, size * 0.467289, size * 0.490654, size * 0.467289, size * 0.5);\n\t                ptrCtx.bezierCurveTo(size * 0.467289, size * 0.518691, size * 0.481308, size * 0.532710, size * 0.5, size * 0.532710);\n\t                ptrCtx.bezierCurveTo(size * 0.518691, size * 0.532710, size * 0.532710, size * 0.518691, size * 0.532710, size * 0.5);\n\t                ptrCtx.bezierCurveTo(size * 0.532710, size * 0.490654, size * 0.528037, size * 0.481308, size * 0.518691, size * 0.471962);\n\t                ptrCtx.closePath();\n\t                ptrCtx.fill();\n\t                break;\n\t            }\n\t            // cache buffer\n\t            drawPointerImage.cache[cacheKey] = ptrBuffer;\n\t        }\n\t        ctx.drawImage(drawPointerImage.cache[cacheKey], 0, 0);\n\t        return this;\n\t    };\n\t    drawPointerImage.cache = {};\n\t\n\t    var drawRadialFrameImage = function (ctx, frameDesign, centerX, centerY, imageWidth, imageHeight) {\n\t        var radFBuffer, radFCtx,\n\t            grad, outerX, innerX, fractions, colors,\n\t            cacheKey = imageWidth.toString() + imageHeight + frameDesign.design;\n\t\n\t        // check if we have already created and cached this buffer, if not create it\n\t        if (!drawRadialFrameImage.cache[cacheKey]) {\n\t            // Setup buffer\n\t            radFBuffer = createBuffer(imageWidth, imageHeight);\n\t            radFCtx = radFBuffer.getContext('2d');\n\t\n\t            // outer gray frame\n\t            radFCtx.fillStyle = '#848484';\n\t            radFCtx.strokeStyle = 'rgba(132, 132, 132, 0.5)';\n\t            radFCtx.beginPath();\n\t            radFCtx.arc(centerX, centerY, imageWidth / 2, 0, TWO_PI, true);\n\t            radFCtx.closePath();\n\t            radFCtx.fill();\n\t            radFCtx.stroke();\n\t\n\t            radFCtx.beginPath();\n\t            radFCtx.arc(centerX, centerY, imageWidth * 0.990654 / 2, 0, TWO_PI, true);\n\t            radFCtx.closePath();\n\t\n\t            // main gradient frame\n\t            switch (frameDesign.design) {\n\t            case 'metal':\n\t                grad = radFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n\t                grad.addColorStop(0, '#fefefe');\n\t                grad.addColorStop(0.07, 'rgb(210, 210, 210)');\n\t                grad.addColorStop(0.12, 'rgb(179, 179, 179)');\n\t                grad.addColorStop(1, 'rgb(213, 213, 213)');\n\t                radFCtx.fillStyle = grad;\n\t                radFCtx.fill();\n\t                break;\n\t\n\t            case 'brass':\n\t                grad = radFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n\t                grad.addColorStop(0, 'rgb(249, 243, 155)');\n\t                grad.addColorStop(0.05, 'rgb(246, 226, 101)');\n\t                grad.addColorStop(0.10, 'rgb(240, 225, 132)');\n\t                grad.addColorStop(0.50, 'rgb(90, 57, 22)');\n\t                grad.addColorStop(0.90, 'rgb(249, 237, 139)');\n\t                grad.addColorStop(0.95, 'rgb(243, 226, 108)');\n\t                grad.addColorStop(1, 'rgb(202, 182, 113)');\n\t                radFCtx.fillStyle = grad;\n\t                radFCtx.fill();\n\t                break;\n\t\n\t            case 'steel':\n\t                grad = radFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n\t                grad.addColorStop(0, 'rgb(231, 237, 237)');\n\t                grad.addColorStop(0.05, 'rgb(189, 199, 198)');\n\t                grad.addColorStop(0.10, 'rgb(192, 201, 200)');\n\t                grad.addColorStop(0.50, 'rgb(23, 31, 33)');\n\t                grad.addColorStop(0.90, 'rgb(196, 205, 204)');\n\t                grad.addColorStop(0.95, 'rgb(194, 204, 203)');\n\t                grad.addColorStop(1, 'rgb(189, 201, 199)');\n\t                radFCtx.fillStyle = grad;\n\t                radFCtx.fill();\n\t                break;\n\t\n\t            case 'gold':\n\t                grad = radFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n\t                grad.addColorStop(0, 'rgb(255, 255, 207)');\n\t                grad.addColorStop(0.15, 'rgb(255, 237, 96)');\n\t                grad.addColorStop(0.22, 'rgb(254, 199, 57)');\n\t                grad.addColorStop(0.3, 'rgb(255, 249, 203)');\n\t                grad.addColorStop(0.38, 'rgb(255, 199, 64)');\n\t                grad.addColorStop(0.44, 'rgb(252, 194, 60)');\n\t                grad.addColorStop(0.51, 'rgb(255, 204, 59)');\n\t                grad.addColorStop(0.6, 'rgb(213, 134, 29)');\n\t                grad.addColorStop(0.68, 'rgb(255, 201, 56)');\n\t                grad.addColorStop(0.75, 'rgb(212, 135, 29)');\n\t                grad.addColorStop(1, 'rgb(247, 238, 101)');\n\t                radFCtx.fillStyle = grad;\n\t                radFCtx.fill();\n\t                break;\n\t\n\t            case 'anthracite':\n\t                grad = radFCtx.createLinearGradient(0, 0.004672 * imageHeight, 0, 0.995326 * imageHeight);\n\t                grad.addColorStop(0, 'rgb(118, 117, 135)');\n\t                grad.addColorStop(0.06, 'rgb(74, 74, 82)');\n\t                grad.addColorStop(0.12, 'rgb(50, 50, 54)');\n\t                grad.addColorStop(1, 'rgb(79, 79, 87)');\n\t                radFCtx.fillStyle = grad;\n\t                radFCtx.fill();\n\t                break;\n\t\n\t            case 'tiltedGray':\n\t                grad = radFCtx.createLinearGradient(0.233644 * imageWidth, 0.084112 * imageHeight, 0.81258 * imageWidth, 0.910919 * imageHeight);\n\t                grad.addColorStop(0, '#ffffff');\n\t                grad.addColorStop(0.07, 'rgb(210, 210, 210)');\n\t                grad.addColorStop(0.16, 'rgb(179, 179, 179)');\n\t                grad.addColorStop(0.33, '#ffffff');\n\t                grad.addColorStop(0.55, '#c5c5c5');\n\t                grad.addColorStop(0.79, '#ffffff');\n\t                grad.addColorStop(1, '#666666');\n\t                radFCtx.fillStyle = grad;\n\t                radFCtx.fill();\n\t                break;\n\t\n\t            case 'tiltedBlack':\n\t                grad = radFCtx.createLinearGradient(0.228971 * imageWidth, 0.079439 * imageHeight, 0.802547 * imageWidth, 0.898591 * imageHeight);\n\t                grad.addColorStop(0, '#666666');\n\t                grad.addColorStop(0.21, '#000000');\n\t                grad.addColorStop(0.47, '#666666');\n\t                grad.addColorStop(0.99, '#000000');\n\t                grad.addColorStop(1, '#000000');\n\t                radFCtx.fillStyle = grad;\n\t                radFCtx.fill();\n\t                break;\n\t\n\t            case 'glossyMetal':\n\t                grad = radFCtx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageWidth, 0.5 * imageWidth);\n\t                grad.addColorStop(0, 'rgb(207, 207, 207)');\n\t                grad.addColorStop(0.96, 'rgb(205, 204, 205)');\n\t                grad.addColorStop(1, 'rgb(244, 244, 244)');\n\t                radFCtx.fillStyle = grad;\n\t                radFCtx.fill();\n\t                radFCtx.beginPath();\n\t                radFCtx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.973962 * imageWidth / 2, 0, TWO_PI);\n\t                radFCtx.closePath();\n\t                grad = radFCtx.createLinearGradient(0, imageHeight - 0.971962 * imageHeight, 0, 0.971962 * imageHeight);\n\t                grad.addColorStop(0, 'rgb(249, 249, 249)');\n\t                grad.addColorStop(0.23, 'rgb(200, 195, 191)');\n\t                grad.addColorStop(0.36, '#ffffff');\n\t                grad.addColorStop(0.59, 'rgb(29, 29, 29)');\n\t                grad.addColorStop(0.76, 'rgb(200, 194, 192)');\n\t                grad.addColorStop(1, 'rgb(209, 209, 209)');\n\t                radFCtx.fillStyle = grad;\n\t                radFCtx.fill();\n\t\n\t                radFCtx.beginPath();\n\t                radFCtx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.869158 * imageWidth / 2, 0, TWO_PI);\n\t                radFCtx.closePath();\n\t                radFCtx.fillStyle = '#f6f6f6';\n\t                radFCtx.fill();\n\t\n\t                radFCtx.beginPath();\n\t                radFCtx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.85 * imageWidth / 2, 0, TWO_PI);\n\t                radFCtx.closePath();\n\t                radFCtx.fillStyle = '#333333';\n\t                radFCtx.fill();\n\t                break;\n\t\n\t            case 'blackMetal':\n\t                fractions = [0,\n\t                             0.125,\n\t                             0.347222,\n\t                             0.5,\n\t                             0.680555,\n\t                             0.875,\n\t                             1];\n\t\n\t                colors = [ new RgbaColor(254, 254, 254, 1),\n\t                           new RgbaColor(0, 0, 0, 1),\n\t                           new RgbaColor(153, 153, 153, 1),\n\t                           new RgbaColor(0, 0, 0, 1),\n\t                           new RgbaColor(153, 153, 153, 1),\n\t                           new RgbaColor(0, 0, 0, 1),\n\t                           new RgbaColor(254, 254, 254, 1)];\n\t\n\t                radFCtx.save();\n\t                radFCtx.arc(centerX, centerY, imageWidth * 0.990654 / 2, 0, TWO_PI, true);\n\t                radFCtx.clip();\n\t                outerX = imageWidth * 0.495327;\n\t                innerX = imageWidth * 0.420560;\n\t                grad = new ConicalGradient(fractions, colors);\n\t                grad.fillCircle(radFCtx, centerX, centerY, innerX, outerX);\n\t                // fade outer edge\n\t                radFCtx.strokeStyle = '#848484';\n\t                radFCtx.strokeStyle = 'rgba(132, 132, 132, 0.8)';\n\t                radFCtx.beginPath();\n\t                radFCtx.lineWidth = imageWidth / 90;\n\t                radFCtx.arc(centerX, centerY, imageWidth / 2, 0, TWO_PI, true);\n\t                radFCtx.closePath();\n\t                radFCtx.stroke();\n\t                radFCtx.restore();\n\t                break;\n\t\n\t            case 'shinyMetal':\n\t                fractions = [0,\n\t                             0.125,\n\t                             0.25,\n\t                             0.347222,\n\t                             0.5,\n\t                             0.652777,\n\t                             0.75,\n\t                             0.875,\n\t                             1];\n\t\n\t                colors = [ new RgbaColor(254, 254, 254, 1),\n\t                           new RgbaColor(210, 210, 210, 1),\n\t                           new RgbaColor(179, 179, 179, 1),\n\t                           new RgbaColor(238, 238, 238, 1),\n\t                           new RgbaColor(160, 160, 160, 1),\n\t                           new RgbaColor(238, 238, 238, 1),\n\t                           new RgbaColor(179, 179, 179, 1),\n\t                           new RgbaColor(210, 210, 210, 1),\n\t                           new RgbaColor(254, 254, 254, 1)];\n\t\n\t                radFCtx.save();\n\t                radFCtx.arc(centerX, centerY, imageWidth * 0.990654 / 2, 0, TWO_PI, true);\n\t                radFCtx.clip();\n\t                outerX = imageWidth * 0.495327;\n\t                innerX = imageWidth * 0.420560;\n\t                grad = new ConicalGradient(fractions, colors);\n\t                grad.fillCircle(radFCtx, centerX, centerY, innerX, outerX);\n\t                // fade outer edge\n\t                radFCtx.strokeStyle = '#848484';\n\t                radFCtx.strokeStyle = 'rgba(132, 132, 132, 0.8)';\n\t                radFCtx.beginPath();\n\t                radFCtx.lineWidth = imageWidth / 90;\n\t                radFCtx.arc(centerX, centerY, imageWidth / 2, 0, TWO_PI, true);\n\t                radFCtx.closePath();\n\t                radFCtx.stroke();\n\t                radFCtx.restore();\n\t                break;\n\t\n\t            case 'chrome':\n\t                fractions = [0,\n\t                             0.09,\n\t                             0.12,\n\t                             0.16,\n\t                             0.25,\n\t                             0.29,\n\t                             0.33,\n\t                             0.38,\n\t                             0.48,\n\t                             0.52,\n\t                             0.63,\n\t                             0.68,\n\t                             0.8,\n\t                             0.83,\n\t                             0.87,\n\t                             0.97,\n\t                             1];\n\t\n\t                colors = [ new RgbaColor(255, 255, 255, 1),\n\t                           new RgbaColor(255, 255, 255, 1),\n\t                           new RgbaColor(136, 136, 138, 1),\n\t                           new RgbaColor(164, 185, 190, 1),\n\t                           new RgbaColor(158, 179, 182, 1),\n\t                           new RgbaColor(112, 112, 112, 1),\n\t                           new RgbaColor(221, 227, 227, 1),\n\t                           new RgbaColor(155, 176, 179, 1),\n\t                           new RgbaColor(156, 176, 177, 1),\n\t                           new RgbaColor(254, 255, 255, 1),\n\t                           new RgbaColor(255, 255, 255, 1),\n\t                           new RgbaColor(156, 180, 180, 1),\n\t                           new RgbaColor(198, 209, 211, 1),\n\t                           new RgbaColor(246, 248, 247, 1),\n\t                           new RgbaColor(204, 216, 216, 1),\n\t                           new RgbaColor(164, 188, 190, 1),\n\t                           new RgbaColor(255, 255, 255, 1)];\n\t\n\t                radFCtx.save();\n\t                radFCtx.arc(centerX, centerY, imageWidth * 0.990654 / 2, 0, TWO_PI, true);\n\t                radFCtx.clip();\n\t                outerX = imageWidth * 0.495327;\n\t                innerX = imageWidth * 0.420560;\n\t                grad = new ConicalGradient(fractions, colors);\n\t                grad.fillCircle(radFCtx, centerX, centerY, innerX, outerX);\n\t                // fade outer edge\n\t                radFCtx.strokeStyle = '#848484';\n\t                radFCtx.strokeStyle = 'rgba(132, 132, 132, 0.8)';\n\t                radFCtx.beginPath();\n\t                radFCtx.lineWidth = imageWidth / 90;\n\t                radFCtx.arc(centerX, centerY, imageWidth / 2, 0, TWO_PI, true);\n\t                radFCtx.closePath();\n\t                radFCtx.stroke();\n\t                radFCtx.restore();\n\t\n\t                break;\n\t            }\n\t\n\t            // inner bright frame\n\t            radFCtx.fillStyle = 'rgb(191, 191, 191)';\n\t            radFCtx.beginPath();\n\t            radFCtx.arc(centerX, centerY, imageWidth * 0.841121 / 2, 0, TWO_PI, true);\n\t            radFCtx.closePath();\n\t            radFCtx.fill();\n\t\n\t            // clip out center so it is transparent if the background is not visible\n\t            radFCtx.globalCompositeOperation = 'destination-out';\n\t            // Background ellipse\n\t            radFCtx.beginPath();\n\t            radFCtx.arc(centerX, centerY, imageWidth * 0.83 / 2, 0, TWO_PI, true);\n\t            radFCtx.closePath();\n\t            radFCtx.fill();\n\t\n\t            // cache the buffer\n\t            drawRadialFrameImage.cache[cacheKey] = radFBuffer;\n\t        }\n\t        ctx.drawImage(drawRadialFrameImage.cache[cacheKey], 0, 0);\n\t        return this;\n\t    };\n\t    drawRadialFrameImage.cache = {};\n\t\n\t    var drawLinearFrameImage = function (ctx, frameDesign, imageWidth, imageHeight, vertical) {\n\t        var frameWidth,\n\t            linFBuffer, linFCtx,\n\t            OUTER_FRAME_CORNER_RADIUS,\n\t            FRAME_MAIN_CORNER_RADIUS,\n\t            SUBTRACT_CORNER_RADIUS,\n\t            grad,\n\t            fractions = [],\n\t            colors = [],\n\t            cacheKey = imageWidth.toString() + imageHeight + frameDesign.design + vertical;\n\t\n\t        // check if we have already created and cached this buffer, if not create it\n\t        if (!drawLinearFrameImage.cache[cacheKey]) {\n\t            frameWidth = Math.sqrt(imageWidth * imageWidth + imageHeight * imageHeight) * 0.04;\n\t            frameWidth = Math.min(frameWidth, (vertical ? imageWidth : imageHeight) * 0.1);\n\t\n\t            // Setup buffer\n\t            linFBuffer = createBuffer(imageWidth, imageHeight);\n\t            linFCtx = linFBuffer.getContext('2d');\n\t\n\t            // Calculate corner radii\n\t            if (vertical) {\n\t                OUTER_FRAME_CORNER_RADIUS = imageWidth * 0.05;\n\t                FRAME_MAIN_CORNER_RADIUS = OUTER_FRAME_CORNER_RADIUS - 1;\n\t                SUBTRACT_CORNER_RADIUS = imageWidth * 0.028571;\n\t            } else {\n\t                OUTER_FRAME_CORNER_RADIUS = imageHeight * 0.05;\n\t                FRAME_MAIN_CORNER_RADIUS = OUTER_FRAME_CORNER_RADIUS - 1;\n\t                SUBTRACT_CORNER_RADIUS = imageHeight * 0.028571;\n\t            }\n\t\n\t            roundedRectangle(linFCtx, 0, 0, imageWidth, imageHeight, OUTER_FRAME_CORNER_RADIUS);\n\t            linFCtx.fillStyle = '#838383';\n\t            linFCtx.fill();\n\t\n\t            roundedRectangle(linFCtx, 1, 1, imageWidth - 2, imageHeight - 2, FRAME_MAIN_CORNER_RADIUS);\n\t\n\t            // main gradient frame\n\t            switch (frameDesign.design) {\n\t            case 'metal':\n\t                grad = linFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n\t                grad.addColorStop(0, '#fefefe');\n\t                grad.addColorStop(0.07, 'rgb(210, 210, 210)');\n\t                grad.addColorStop(0.12, 'rgb(179, 179, 179)');\n\t                grad.addColorStop(1, 'rgb(213, 213, 213)');\n\t                linFCtx.fillStyle = grad;\n\t                linFCtx.fill();\n\t                break;\n\t\n\t            case 'brass':\n\t                grad = linFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n\t                grad.addColorStop(0, 'rgb(249, 243, 155)');\n\t                grad.addColorStop(0.05, 'rgb(246, 226, 101)');\n\t                grad.addColorStop(0.10, 'rgb(240, 225, 132)');\n\t                grad.addColorStop(0.50, 'rgb(90, 57, 22)');\n\t                grad.addColorStop(0.90, 'rgb(249, 237, 139)');\n\t                grad.addColorStop(0.95, 'rgb(243, 226, 108)');\n\t                grad.addColorStop(1, 'rgb(202, 182, 113)');\n\t                linFCtx.fillStyle = grad;\n\t                linFCtx.fill();\n\t                break;\n\t\n\t            case 'steel':\n\t                grad = linFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n\t                grad.addColorStop(0, 'rgb(231, 237, 237)');\n\t                grad.addColorStop(0.05, 'rgb(189, 199, 198)');\n\t                grad.addColorStop(0.10, 'rgb(192, 201, 200)');\n\t                grad.addColorStop(0.50, 'rgb(23, 31, 33)');\n\t                grad.addColorStop(0.90, 'rgb(196, 205, 204)');\n\t                grad.addColorStop(0.95, 'rgb(194, 204, 203)');\n\t                grad.addColorStop(1, 'rgb(189, 201, 199)');\n\t                linFCtx.fillStyle = grad;\n\t                linFCtx.fill();\n\t                break;\n\t\n\t            case 'gold':\n\t                grad = linFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n\t                grad.addColorStop(0, 'rgb(255, 255, 207)');\n\t                grad.addColorStop(0.15, 'rgb(255, 237, 96)');\n\t                grad.addColorStop(0.22, 'rgb(254, 199, 57)');\n\t                grad.addColorStop(0.3, 'rgb(255, 249, 203)');\n\t                grad.addColorStop(0.38, 'rgb(255, 199, 64)');\n\t                grad.addColorStop(0.44, 'rgb(252, 194, 60)');\n\t                grad.addColorStop(0.51, 'rgb(255, 204, 59)');\n\t                grad.addColorStop(0.6, 'rgb(213, 134, 29)');\n\t                grad.addColorStop(0.68, 'rgb(255, 201, 56)');\n\t                grad.addColorStop(0.75, 'rgb(212, 135, 29)');\n\t                grad.addColorStop(1, 'rgb(247, 238, 101)');\n\t                linFCtx.fillStyle = grad;\n\t                linFCtx.fill();\n\t                break;\n\t\n\t            case 'anthracite':\n\t                grad = linFCtx.createLinearGradient(0, 0.004672 * imageHeight, 0, 0.995326 * imageHeight);\n\t                grad.addColorStop(0, 'rgb(118, 117, 135)');\n\t                grad.addColorStop(0.06, 'rgb(74, 74, 82)');\n\t                grad.addColorStop(0.12, 'rgb(50, 50, 54)');\n\t                grad.addColorStop(1, 'rgb(79, 79, 87)');\n\t                linFCtx.fillStyle = grad;\n\t                linFCtx.fill();\n\t                break;\n\t\n\t            case 'tiltedGray':\n\t                grad = linFCtx.createLinearGradient(0.233644 * imageWidth, 0.084112 * imageHeight, 0.81258 * imageWidth, 0.910919 * imageHeight);\n\t                grad.addColorStop(0, '#ffffff');\n\t                grad.addColorStop(0.07, 'rgb(210, 210, 210)');\n\t                grad.addColorStop(0.16, 'rgb(179, 179, 179)');\n\t                grad.addColorStop(0.33, '#ffffff');\n\t                grad.addColorStop(0.55, '#c5c5c5');\n\t                grad.addColorStop(0.79, '#ffffff');\n\t                grad.addColorStop(1, '#666666');\n\t                linFCtx.fillStyle = grad;\n\t                linFCtx.fill();\n\t                break;\n\t\n\t            case 'tiltedBlack':\n\t                grad = linFCtx.createLinearGradient(0.228971 * imageWidth, 0.079439 * imageHeight, 0.802547 * imageWidth, 0.898591 * imageHeight);\n\t                grad.addColorStop(0, '#666666');\n\t                grad.addColorStop(0.21, '#000000');\n\t                grad.addColorStop(0.47, '#666666');\n\t                grad.addColorStop(0.99, '#000000');\n\t                grad.addColorStop(1, '#000000');\n\t                linFCtx.fillStyle = grad;\n\t                linFCtx.fill();\n\t                break;\n\t\n\t            case 'glossyMetal':\n\t                // The smaller side is important for the contour gradient\n\t    // Java version uses a contour gradient for the outer frame rim\n\t    // but this is only 1 pixel wide, so a plain color fill is essentially\n\t    // the same.\n\t    /*\n\t                var frameMainFractions4 = [\n\t                                            0,\n\t                                            (imageWidth >= imageHeight ? 32 / imageHeight : 32 / imageWidth) * 0.04,\n\t                                            1\n\t                                            ];\n\t                var frameMainColors4 = [\n\t                                        new RgbaColor(244, 244, 244, 1),\n\t                                        new RgbaColor(207, 207, 207, 1),\n\t                                        new RgbaColor(207, 207, 207, 1)\n\t                                        ];\n\t                var frameMainGradient4 = new contourGradient(linFCtx, 0, 0, imageWidth,  imageHeight, frameMainFractions4, frameMainColors4);\n\t                // Outer frame rim\n\t                roundedRectangle(linFCtx, 1, 1, imageWidth-2, imageHeight-2, OUTER_FRAME_CORNER_RADIUS);\n\t                linFCtx.clip();\n\t                frameMainGradient4.paintContext();\n\t    */\n\t                // Outer frame rim\n\t    //                roundedRectangle(linFCtx, 1, 1, imageWidth-2, imageHeight-2, OUTER_FRAME_CORNER_RADIUS);\n\t    //                linFCtx.clip();\n\t    //                linFCtx.fillStyle = '#cfcfcf';\n\t    //                linFCtx.fill();\n\t\n\t                // Main frame\n\t    //                roundedRectangle(linFCtx, 2, 2, imageWidth - 4, imageHeight - 4, FRAME_MAIN_CORNER_RADIUS);\n\t    //                linFCtx.clip();\n\t                roundedRectangle(linFCtx, 1, 1, imageWidth - 2, imageHeight - 2, OUTER_FRAME_CORNER_RADIUS);\n\t                linFCtx.clip();\n\t                grad = linFCtx.createLinearGradient(0, 1, 0, imageHeight - 2);\n\t    // The fractions from the Java version of linear gauge\n\t    /*\n\t                grad.addColorStop(0, 'rgb(249, 249, 249)');\n\t                grad.addColorStop(0.1, 'rgb(200, 195, 191)');\n\t                grad.addColorStop(0.26, '#ffffff');\n\t                grad.addColorStop(0.73, 'rgb(29, 29, 29)');\n\t                grad.addColorStop(1, 'rgb(209, 209, 209)');\n\t    */\n\t    // Modified fractions from the radial gauge - looks better imho\n\t                grad.addColorStop(0, 'rgb(249, 249, 249)');\n\t                grad.addColorStop(0.2, 'rgb(200, 195, 191)');\n\t                grad.addColorStop(0.3, '#ffffff');\n\t                grad.addColorStop(0.6, 'rgb(29, 29, 29)');\n\t                grad.addColorStop(0.8, 'rgb(200, 194, 192)');\n\t                grad.addColorStop(1, 'rgb(209, 209, 209)');\n\t                linFCtx.fillStyle = grad;\n\t                linFCtx.fill();\n\t\n\t                // Inner frame bright\n\t                roundedRectangle(linFCtx, frameWidth - 2, frameWidth - 2, imageWidth - (frameWidth - 2) * 2, imageHeight - (frameWidth - 2) * 2, SUBTRACT_CORNER_RADIUS);\n\t                linFCtx.clip();\n\t                linFCtx.fillStyle = '#f6f6f6';\n\t                linFCtx.fill();\n\t\n\t                // Inner frame dark\n\t                roundedRectangle(linFCtx, frameWidth - 1, frameWidth - 1, imageWidth - (frameWidth - 1) * 2, imageHeight - (frameWidth - 1) * 2, SUBTRACT_CORNER_RADIUS);\n\t                linFCtx.clip();\n\t                linFCtx.fillStyle = '#333333';\n\t                linFCtx.fill();\n\t                break;\n\t\n\t            case 'blackMetal':\n\t                fractions = [0,\n\t                             0.125,\n\t                             0.347222,\n\t                             0.5,\n\t                             0.680555,\n\t                             0.875,\n\t                             1];\n\t\n\t                colors = [ new RgbaColor('#FFFFFF'),\n\t                           new RgbaColor('#000000'),\n\t                           new RgbaColor('#999999'),\n\t                           new RgbaColor('#000000'),\n\t                           new RgbaColor('#999999'),\n\t                           new RgbaColor('#000000'),\n\t                           new RgbaColor('#FFFFFF')];\n\t                // Set the clip\n\t                linFCtx.beginPath();\n\t                roundedRectangle(linFCtx, 1, 1, imageWidth - 2, imageHeight - 2, OUTER_FRAME_CORNER_RADIUS);\n\t                linFCtx.closePath();\n\t                linFCtx.clip();\n\t                grad = new ConicalGradient(fractions, colors);\n\t                grad.fillRect(linFCtx, imageWidth / 2, imageHeight / 2, imageWidth, imageHeight, frameWidth, frameWidth);\n\t                break;\n\t\n\t            case 'shinyMetal':\n\t                fractions = [0,\n\t                             0.125,\n\t                             0.25,\n\t                             0.347222,\n\t                             0.5,\n\t                             0.652777,\n\t                             0.75,\n\t                             0.875,\n\t                             1];\n\t\n\t                colors = [ new RgbaColor('#FFFFFF'),\n\t                           new RgbaColor('#D2D2D2'),\n\t                           new RgbaColor('#B3B3B3'),\n\t                           new RgbaColor('#EEEEEE'),\n\t                           new RgbaColor('#A0A0A0'),\n\t                           new RgbaColor('#EEEEEE'),\n\t                           new RgbaColor('#B3B3B3'),\n\t                           new RgbaColor('#D2D2D2'),\n\t                           new RgbaColor('#FFFFFF')];\n\t                // Set the clip\n\t                linFCtx.beginPath();\n\t                roundedRectangle(linFCtx, 1, 1, imageWidth - 2, imageHeight - 2, OUTER_FRAME_CORNER_RADIUS);\n\t                linFCtx.closePath();\n\t                linFCtx.clip();\n\t                grad = new ConicalGradient(fractions, colors);\n\t                grad.fillRect(linFCtx, imageWidth / 2, imageHeight / 2, imageWidth, imageHeight, frameWidth, frameWidth);\n\t                break;\n\t\n\t            case 'chrome':\n\t                fractions = [0,\n\t                             0.09,\n\t                             0.12,\n\t                             0.16,\n\t                             0.25,\n\t                             0.29,\n\t                             0.33,\n\t                             0.38,\n\t                             0.48,\n\t                             0.52,\n\t                             0.63,\n\t                             0.68,\n\t                             0.8,\n\t                             0.83,\n\t                             0.87,\n\t                             0.97,\n\t                             1];\n\t\n\t                colors = [ new RgbaColor('#FFFFFF'),\n\t                           new RgbaColor('#FFFFFF'),\n\t                           new RgbaColor('#888890'),\n\t                           new RgbaColor('#A4B9BE'),\n\t                           new RgbaColor('#9EB3B6'),\n\t                           new RgbaColor('#707070'),\n\t                           new RgbaColor('#DDE3E3'),\n\t                           new RgbaColor('#9BB0B3'),\n\t                           new RgbaColor('#9CB0B1'),\n\t                           new RgbaColor('#FEFFFF'),\n\t                           new RgbaColor('#FFFFFF'),\n\t                           new RgbaColor('#9CB4B4'),\n\t                           new RgbaColor('#C6D1D3'),\n\t                           new RgbaColor('#F6F8F7'),\n\t                           new RgbaColor('#CCD8D8'),\n\t                           new RgbaColor('#A4BCBE'),\n\t                           new RgbaColor('#FFFFFF')];\n\t                // Set the clip\n\t                linFCtx.beginPath();\n\t                roundedRectangle(linFCtx, 1, 1, imageWidth - 2, imageHeight - 2, OUTER_FRAME_CORNER_RADIUS);\n\t                linFCtx.closePath();\n\t                linFCtx.clip();\n\t                grad = new ConicalGradient(fractions, colors);\n\t                grad.fillRect(linFCtx, imageWidth / 2, imageHeight / 2, imageWidth, imageHeight, frameWidth, frameWidth);\n\t                break;\n\t            }\n\t\n\t            roundedRectangle(linFCtx, frameWidth - 1, frameWidth - 1, imageWidth - (frameWidth - 1) * 2, imageHeight - (frameWidth - 1) * 2, SUBTRACT_CORNER_RADIUS - 1);\n\t            linFCtx.fillStyle = 'rgb(192, 192, 192)';\n\t\n\t            // clip out the center of the frame for transparent backgrounds\n\t            linFCtx.globalCompositeOperation = 'destination-out';\n\t            roundedRectangle(linFCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n\t            linFCtx.fill();\n\t\n\t            // cache the buffer\n\t            drawLinearFrameImage.cache[cacheKey] = linFBuffer;\n\t        }\n\t        ctx.drawImage(drawLinearFrameImage.cache[cacheKey], 0, 0);\n\t        return this;\n\t    };\n\t    drawLinearFrameImage.cache = {};\n\t\n\t    var drawRadialBackgroundImage = function (ctx, backgroundColor, centerX, centerY, imageWidth, imageHeight) {\n\t        var radBBuffer, radBCtx,\n\t            grad, fractions, colors,\n\t            backgroundOffsetX = imageWidth * 0.831775 / 2,\n\t            mono, textureColor, texture,\n\t            radius, turnRadius, stepSize,\n\t            end, i,\n\t            cacheKey = imageWidth.toString() + imageHeight + backgroundColor.name;\n\t\n\t        // check if we have already created and cached this buffer, if not create it\n\t        if (!drawRadialBackgroundImage.cache[cacheKey]) {\n\t            // Setup buffer\n\t            radBBuffer = createBuffer(imageWidth, imageHeight);\n\t            radBCtx = radBBuffer.getContext('2d');\n\t\n\t            // Background ellipse\n\t            radBCtx.beginPath();\n\t            radBCtx.arc(centerX, centerY, backgroundOffsetX, 0, TWO_PI, true);\n\t            radBCtx.closePath();\n\t\n\t            // If the backgroundColor is a texture fill it with the texture instead of the gradient\n\t            if (backgroundColor.name === 'CARBON' || backgroundColor.name === 'PUNCHED_SHEET' ||\n\t                backgroundColor.name === 'BRUSHED_METAL' || backgroundColor.name === 'BRUSHED_STAINLESS') {\n\t\n\t                if (backgroundColor.name === 'CARBON') {\n\t                    radBCtx.fillStyle = radBCtx.createPattern(carbonBuffer, 'repeat');\n\t                    radBCtx.fill();\n\t                }\n\t\n\t                if (backgroundColor.name === 'PUNCHED_SHEET') {\n\t                    radBCtx.fillStyle = radBCtx.createPattern(punchedSheetBuffer, 'repeat');\n\t                    radBCtx.fill();\n\t                }\n\t\n\t                // Add another inner shadow to make the look more realistic\n\t                grad = radBCtx.createLinearGradient(backgroundOffsetX, 0, imageWidth - backgroundOffsetX, 0);\n\t                grad.addColorStop(0, 'rgba(0, 0, 0, 0.25)');\n\t                grad.addColorStop(0.5, 'rgba(0, 0, 0, 0)');\n\t                grad.addColorStop(1, 'rgba(0, 0, 0, 0.25)');\n\t                radBCtx.fillStyle = grad;\n\t                radBCtx.beginPath();\n\t                radBCtx.arc(centerX, centerY, backgroundOffsetX, 0, TWO_PI, true);\n\t                radBCtx.closePath();\n\t                radBCtx.fill();\n\t\n\t                if (backgroundColor.name === 'BRUSHED_METAL' || backgroundColor.name === 'BRUSHED_STAINLESS') {\n\t                    mono = (backgroundColor.name === 'BRUSHED_METAL' ? true : false);\n\t                    textureColor = parseInt(backgroundColor.gradientStop.getHexColor().substr(-6), 16);\n\t                    texture = brushedMetalTexture(textureColor, 5, 0.1, mono, 0.5);\n\t                    radBCtx.fillStyle = radBCtx.createPattern(texture.fill(0, 0, imageWidth, imageHeight), 'no-repeat');\n\t                    radBCtx.fill();\n\t                }\n\t            } else if (backgroundColor.name === 'STAINLESS' || backgroundColor.name === 'TURNED') {\n\t                // Define the fractions of the conical gradient paint\n\t                fractions = [0,\n\t                             0.03,\n\t                             0.10,\n\t                             0.14,\n\t                             0.24,\n\t                             0.33,\n\t                             0.38,\n\t                             0.5,\n\t                             0.62,\n\t                             0.67,\n\t                             0.76,\n\t                             0.81,\n\t                             0.85,\n\t                             0.97,\n\t                             1];\n\t\n\t                // Define the colors of the conical gradient paint\n\t                colors = [new RgbaColor('#FDFDFD'),\n\t                          new RgbaColor('#FDFDFD'),\n\t                          new RgbaColor('#B2B2B4'),\n\t                          new RgbaColor('#ACACAE'),\n\t                          new RgbaColor('#FDFDFD'),\n\t                          new RgbaColor('#8E8E8E'),\n\t                          new RgbaColor('#8E8E8E'),\n\t                          new RgbaColor('#FDFDFD'),\n\t                          new RgbaColor('#8E8E8E'),\n\t                          new RgbaColor('#8E8E8E'),\n\t                          new RgbaColor('#FDFDFD'),\n\t                          new RgbaColor('#ACACAE'),\n\t                          new RgbaColor('#B2B2B4'),\n\t                          new RgbaColor('#FDFDFD'),\n\t                          new RgbaColor('#FDFDFD')];\n\t\n\t                grad = new ConicalGradient(fractions, colors);\n\t                grad.fillCircle(radBCtx, centerX, centerY, 0, backgroundOffsetX);\n\t\n\t                if (backgroundColor.name === 'TURNED') {\n\t                    // Define the turning radius\n\t                    radius = backgroundOffsetX;\n\t                    turnRadius = radius * 0.55;\n\t                    // Step size proporational to radius\n\t                    stepSize = RAD_FACTOR * (500 / radius);\n\t                    // Save before we start\n\t                    radBCtx.save();\n\t                    // restrict the turnings to the desired area\n\t                    radBCtx.beginPath();\n\t                    radBCtx.arc(centerX, centerY, radius, 0, TWO_PI);\n\t                    radBCtx.closePath();\n\t                    radBCtx.clip();\n\t                    // set the style for the turnings\n\t                    radBCtx.lineWidth = 0.5;\n\t                    end = TWO_PI - stepSize * 0.3;\n\t                    // Step the engine round'n'round\n\t                    for (i = 0 ; i < end; i += stepSize) {\n\t                        // draw a 'turn'\n\t                        radBCtx.strokeStyle = 'rgba(240, 240, 255, 0.25)';\n\t                        radBCtx.beginPath();\n\t                        radBCtx.arc(centerX + turnRadius, centerY, turnRadius, 0, TWO_PI);\n\t                        radBCtx.stroke();\n\t                        // rotate the 'piece' a fraction to draw 'shadow'\n\t                        radBCtx.translate(centerX, centerY);\n\t                        radBCtx.rotate(stepSize * 0.3);\n\t                        radBCtx.translate(-centerX, -centerY);\n\t                        // draw a 'turn'\n\t                        radBCtx.strokeStyle = 'rgba(25, 10, 10, 0.1)';\n\t                        radBCtx.beginPath();\n\t                        radBCtx.arc(centerX + turnRadius, centerY, turnRadius, 0, TWO_PI);\n\t                        radBCtx.stroke();\n\t                        // now rotate on to the next 'scribe' position minus the 'fraction'\n\t                        radBCtx.translate(centerX, centerY);\n\t                        radBCtx.rotate(stepSize - stepSize * 0.3);\n\t                        radBCtx.translate(-centerX, -centerY);\n\t                    }\n\t                    // Restore canvas now we are done\n\t                    radBCtx.restore();\n\t                }\n\t            } else {\n\t                grad = radBCtx.createLinearGradient(0, imageWidth * 0.084112, 0, backgroundOffsetX * 2);\n\t                grad.addColorStop(0, backgroundColor.gradientStart.getRgbaColor());\n\t                grad.addColorStop(0.4, backgroundColor.gradientFraction.getRgbaColor());\n\t                grad.addColorStop(1, backgroundColor.gradientStop.getRgbaColor());\n\t                radBCtx.fillStyle = grad;\n\t                radBCtx.fill();\n\t            }\n\t            // Inner shadow\n\t            grad = radBCtx.createRadialGradient(centerX, centerY, 0, centerX, centerY, backgroundOffsetX);\n\t            grad.addColorStop(0, 'rgba(0, 0, 0, 0)');\n\t            grad.addColorStop(0.7, 'rgba(0, 0, 0, 0)');\n\t            grad.addColorStop(0.71, 'rgba(0, 0, 0, 0)');\n\t            grad.addColorStop(0.86, 'rgba(0, 0, 0, 0.03)');\n\t            grad.addColorStop(0.92, 'rgba(0, 0, 0, 0.07)');\n\t            grad.addColorStop(0.97, 'rgba(0, 0, 0, 0.15)');\n\t            grad.addColorStop(1, 'rgba(0, 0, 0, 0.3)');\n\t            radBCtx.fillStyle = grad;\n\t\n\t            radBCtx.beginPath();\n\t            radBCtx.arc(centerX, centerY, backgroundOffsetX, 0, TWO_PI, true);\n\t            radBCtx.closePath();\n\t            radBCtx.fill();\n\t\n\t            // cache the buffer\n\t            drawRadialBackgroundImage.cache[cacheKey] = radBBuffer;\n\t        }\n\t        ctx.drawImage(drawRadialBackgroundImage.cache[cacheKey], 0, 0);\n\t        return this;\n\t    };\n\t    drawRadialBackgroundImage.cache = {};\n\t\n\t    var drawRadialCustomImage = function (ctx, img, centerX, centerY, imageWidth, imageHeight) {\n\t        var drawWidth = imageWidth * 0.831775,\n\t            drawHeight = imageHeight * 0.831775,\n\t            x = (imageWidth - drawWidth) / 2,\n\t            y = (imageHeight - drawHeight) / 2;\n\t\n\t        if (img !== null && img.height > 0 && img.width > 0) {\n\t            ctx.save();\n\t            // Set the clipping area\n\t            ctx.beginPath();\n\t            ctx.arc(centerX, centerY, imageWidth * 0.831775 / 2, 0, TWO_PI, true);\n\t            ctx.clip();\n\t            // Add the image\n\t            ctx.drawImage(img, x, y, drawWidth, drawHeight);\n\t            ctx.restore();\n\t        }\n\t        return this;\n\t    };\n\t\n\t    var drawLinearBackgroundImage = function (ctx, backgroundColor, imageWidth, imageHeight, vertical) {\n\t        var i, end, grad, fractions, colors,\n\t            frameWidth,\n\t            linBBuffer, linBCtx, linBColor,\n\t            radius,\n\t            turnRadius, centerX, centerY, stepSize,\n\t            mono, textureColor, texture,\n\t            cacheKey = imageWidth.toString() + imageHeight + vertical + backgroundColor.name;\n\t\n\t        // check if we have already created and cached this buffer, if not create it\n\t        if (!drawLinearBackgroundImage.cache[cacheKey]) {\n\t            frameWidth = Math.sqrt(imageWidth * imageWidth + imageHeight * imageHeight) * 0.04;\n\t            frameWidth = Math.min(frameWidth, (vertical ? imageWidth : imageHeight) * 0.1);\n\t\n\t            // Setup buffer\n\t            linBBuffer = createBuffer(imageWidth, imageHeight);\n\t            linBCtx = linBBuffer.getContext('2d');\n\t            linBColor = backgroundColor;\n\t\n\t            roundedRectangle(linBCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n\t\n\t            // If the backgroundColor is a texture fill it with the texture instead of the gradient\n\t            if (backgroundColor.name === 'CARBON' || backgroundColor.name === 'PUNCHED_SHEET' ||\n\t                backgroundColor.name === 'STAINLESS' || backgroundColor.name === 'BRUSHED_METAL' ||\n\t                backgroundColor.name === 'BRUSHED_STAINLESS' || backgroundColor.name === 'TURNED') {\n\t                if (backgroundColor.name === 'CARBON') {\n\t                    linBCtx.fillStyle = linBCtx.createPattern(carbonBuffer, 'repeat');\n\t                    linBCtx.fill();\n\t                }\n\t\n\t                if (backgroundColor.name === 'PUNCHED_SHEET') {\n\t                    linBCtx.fillStyle = linBCtx.createPattern(punchedSheetBuffer, 'repeat');\n\t                    linBCtx.fill();\n\t                }\n\t\n\t                if (backgroundColor.name === 'STAINLESS' || backgroundColor.name === 'TURNED') {\n\t                    // Define the fraction of the conical gradient paint\n\t                    fractions = [0,\n\t                                 0.03,\n\t                                 0.10,\n\t                                 0.14,\n\t                                 0.24,\n\t                                 0.33,\n\t                                 0.38,\n\t                                 0.5,\n\t                                 0.62,\n\t                                 0.67,\n\t                                 0.76,\n\t                                 0.81,\n\t                                 0.85,\n\t                                 0.97,\n\t                                 1];\n\t\n\t                    // Define the colors of the conical gradient paint\n\t                    colors = [new RgbaColor('#FDFDFD'),\n\t                              new RgbaColor('#FDFDFD'),\n\t                              new RgbaColor('#B2B2B4'),\n\t                              new RgbaColor('#ACACAE'),\n\t                              new RgbaColor('#FDFDFD'),\n\t                              new RgbaColor('#8E8E8E'),\n\t                              new RgbaColor('#8E8E8E'),\n\t                              new RgbaColor('#FDFDFD'),\n\t                              new RgbaColor('#8E8E8E'),\n\t                              new RgbaColor('#8E8E8E'),\n\t                              new RgbaColor('#FDFDFD'),\n\t                              new RgbaColor('#ACACAE'),\n\t                              new RgbaColor('#B2B2B4'),\n\t                              new RgbaColor('#FDFDFD'),\n\t                              new RgbaColor('#FDFDFD')];\n\t                    grad = new ConicalGradient(fractions, colors);\n\t                    // Set a clip as we will be drawing outside the required area\n\t                    roundedRectangle(linBCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n\t                    linBCtx.clip();\n\t                    grad.fillRect(linBCtx, imageWidth / 2, imageHeight / 2, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, imageWidth / 2, imageHeight / 2);\n\t                    // Add an additional inner shadow to fade out brightness at the top\n\t                    grad = linBCtx.createLinearGradient(0, frameWidth, 0, imageHeight - frameWidth * 2);\n\t                    grad.addColorStop(0, 'rgba(0, 0, 0, 0.25)');\n\t                    grad.addColorStop(0.1, 'rgba(0, 0, 0, 0.05)');\n\t                    grad.addColorStop(1, 'rgba(0, 0, 0, 0)');\n\t                    linBCtx.fillStyle = grad;\n\t                    roundedRectangle(linBCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n\t                    linBCtx.fill();\n\t                    linBCtx.restore();\n\t\n\t                    if (backgroundColor.name === 'TURNED') {\n\t                        // Define the turning radius\n\t                        radius = Math.sqrt((imageWidth - frameWidth * 2) * (imageWidth - frameWidth * 2) + (imageHeight - frameWidth * 2) * (imageHeight - frameWidth * 2)) / 2;\n\t                        turnRadius = radius * 0.55;\n\t                        centerX = imageWidth / 2;\n\t                        centerY = imageHeight / 2;\n\t                        // Step size proporational to radius\n\t                        stepSize = TWO_PI / 360 * (400 / radius);\n\t\n\t                        // Save before we start\n\t                        linBCtx.save();\n\t\n\t                        // Set a clip as we will be drawing outside the required area\n\t                        linBCtx.beginPath();\n\t                        roundedRectangle(linBCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n\t                        linBCtx.clip();\n\t\n\t                        // set the style for the turnings\n\t                        linBCtx.lineWidth = 0.5;\n\t                        end = TWO_PI - stepSize * 0.3;\n\t                        // Step the engine round'n'round\n\t                        for (i = 0; i < end; i += stepSize) {\n\t                            // draw a 'turn'\n\t                            linBCtx.strokeStyle = 'rgba(240, 240, 255, 0.25)';\n\t                            linBCtx.beginPath();\n\t                            linBCtx.arc(centerX + turnRadius, centerY, turnRadius, 0, TWO_PI);\n\t                            linBCtx.stroke();\n\t                            // rotate the 'piece'\n\t                            linBCtx.translate(centerX, centerY);\n\t                            linBCtx.rotate(stepSize * 0.3);\n\t                            linBCtx.translate(-centerX, -centerY);\n\t                            // draw a 'turn'\n\t                            linBCtx.strokeStyle = 'rgba(25, 10, 10, 0.1)';\n\t                            linBCtx.beginPath();\n\t                            linBCtx.arc(centerX + turnRadius, centerY, turnRadius, 0, TWO_PI);\n\t                            linBCtx.stroke();\n\t                            linBCtx.translate(centerX, centerY);\n\t                            linBCtx.rotate(-stepSize * 0.3);\n\t                            linBCtx.translate(-centerX, -centerY);\n\t\n\t                            // rotate the 'piece'\n\t                            linBCtx.translate(centerX, centerY);\n\t                            linBCtx.rotate(stepSize);\n\t                            linBCtx.translate(-centerX, -centerY);\n\t                        }\n\t                        // Restore canvas now we are done\n\t                        linBCtx.restore();\n\t                    }\n\t                }\n\t                // Add an additional inner shadow to make the look more realistic\n\t                grad = linBCtx.createLinearGradient(frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2);\n\t                grad.addColorStop(0, 'rgba(0, 0, 0, 0.25)');\n\t                grad.addColorStop(0.5, 'rgba(0, 0, 0, 0)');\n\t                grad.addColorStop(1, 'rgba(0, 0, 0, 0.25)');\n\t                linBCtx.fillStyle = grad;\n\t                roundedRectangle(linBCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n\t                linBCtx.fill();\n\t\n\t                if (backgroundColor.name === 'BRUSHED_METAL' || backgroundColor.name === 'BRUSHED_STAINLESS') {\n\t                    mono = (backgroundColor.name === 'BRUSHED_METAL' ? true : false);\n\t                    textureColor = parseInt(backgroundColor.gradientStop.getHexColor().substr(-6), 16);\n\t                    texture = brushedMetalTexture(textureColor, 5, 0.1, mono, 0.5);\n\t                    linBCtx.fillStyle = linBCtx.createPattern(texture.fill(0, 0, imageWidth, imageHeight), 'no-repeat');\n\t                    linBCtx.fill();\n\t                }\n\t            } else {\n\t                grad = linBCtx.createLinearGradient(0, frameWidth, 0, imageHeight - frameWidth * 2);\n\t                grad.addColorStop(0, backgroundColor.gradientStart.getRgbaColor());\n\t                grad.addColorStop(0.4, backgroundColor.gradientFraction.getRgbaColor());\n\t                grad.addColorStop(1, backgroundColor.gradientStop.getRgbaColor());\n\t                linBCtx.fillStyle = grad;\n\t                linBCtx.fill();\n\t            }\n\t            // Add a simple inner shadow\n\t            colors = [ 'rgba(0, 0, 0, 0.3)',\n\t                       'rgba(0, 0, 0, 0.15)',\n\t                       'rgba(0, 0, 0, 0.07)',\n\t                       'rgba(0, 0, 0, 0.03)',\n\t                       'rgba(0, 0, 0, 0)',\n\t                       'rgba(0, 0, 0, 0)',\n\t                       'rgba(0, 0, 0, 0)'\n\t                     ];\n\t\n\t            for (i = 0 ; i < 7 ; i++) {\n\t                roundedRectangle(linBCtx, frameWidth + i, frameWidth + i, imageWidth - frameWidth * 2 - (2 * i), imageHeight - frameWidth * 2 - (2 * i), 4);\n\t                linBCtx.strokeStyle = colors[i];\n\t                linBCtx.stroke();\n\t            }\n\t            // cache the buffer\n\t            drawLinearBackgroundImage.cache[cacheKey] = linBBuffer;\n\t        }\n\t        ctx.drawImage(drawLinearBackgroundImage.cache[cacheKey], 0, 0);\n\t        return this;\n\t    };\n\t    drawLinearBackgroundImage.cache = {};\n\t\n\t    var drawRadialForegroundImage = function (ctx, foregroundType, imageWidth, imageHeight, withCenterKnob, knob, style, gaugeType, orientation) {\n\t        var radFgBuffer, radFgCtx,\n\t            knobSize = Math.ceil(imageHeight * 0.084112),\n\t            knobX = imageWidth * 0.5 - knobSize / 2,\n\t            knobY = imageHeight * 0.5 - knobSize / 2,\n\t            shadowOffset = imageWidth * 0.008,\n\t            gradHighlight, gradHighlight2,\n\t            cacheKey = foregroundType.type + imageWidth + imageHeight + withCenterKnob + (knob !== undefined ? knob.type : '-') +\n\t                       (style !== undefined ? style.style : '-') + (orientation !== undefined ? orientation.type : '-');\n\t\n\t        // check if we have already created and cached this buffer, if so return it and exit\n\t        if (!drawRadialForegroundImage.cache[cacheKey]) {\n\t            // Setup buffer\n\t            radFgBuffer = createBuffer(imageWidth, imageHeight);\n\t            radFgCtx = radFgBuffer.getContext('2d');\n\t\n\t            // center post\n\t            if (withCenterKnob) {\n\t                // Set the pointer shadow params\n\t                radFgCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\t                radFgCtx.shadowOffsetX = radFgCtx.shadowOffsetY = shadowOffset;\n\t                radFgCtx.shadowBlur = shadowOffset * 2;\n\t\n\t                if (gaugeType === steelseries.GaugeType.TYPE5) {\n\t                    if (steelseries.Orientation.WEST === orientation) {\n\t                        knobX = imageWidth * 0.733644 - knobSize / 2;\n\t                        radFgCtx.drawImage(createKnobImage(knobSize, knob, style), knobX, knobY);\n\t                    } else if (steelseries.Orientation.EAST === orientation) {\n\t                        knobX = imageWidth * (1 - 0.733644) - knobSize / 2;\n\t                        radFgCtx.drawImage(createKnobImage(knobSize, knob, style), knobX, knobY);\n\t                    } else {\n\t                        knobY = imageHeight * 0.733644 - knobSize / 2;\n\t                        radFgCtx.drawImage(createKnobImage(knobSize, knob, style), knobX, imageHeight * 0.6857);\n\t                    }\n\t                } else {\n\t                    radFgCtx.drawImage(createKnobImage(knobSize, knob, style), knobX, knobY);\n\t                }\n\t                // Undo shadow drawing\n\t                radFgCtx.shadowOffsetX = radFgCtx.shadowOffsetY = 0;\n\t                radFgCtx.shadowBlur = 0;\n\t            }\n\t\n\t            // highlight\n\t            switch (foregroundType.type) {\n\t            case 'type2':\n\t                radFgCtx.beginPath();\n\t                radFgCtx.moveTo(imageWidth * 0.135514, imageHeight * 0.696261);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.214953, imageHeight * 0.588785, imageWidth * 0.317757, imageHeight * 0.5, imageWidth * 0.462616, imageHeight * 0.425233);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.612149, imageHeight * 0.345794, imageWidth * 0.733644, imageHeight * 0.317757, imageWidth * 0.873831, imageHeight * 0.322429);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.766355, imageHeight * 0.112149, imageWidth * 0.528037, imageHeight * 0.023364, imageWidth * 0.313084, imageHeight * 0.130841);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.098130, imageHeight * 0.238317, imageWidth * 0.028037, imageHeight * 0.485981, imageWidth * 0.135514, imageHeight * 0.696261);\n\t                radFgCtx.closePath();\n\t                gradHighlight = radFgCtx.createLinearGradient(0.313084 * imageWidth, 0.135514 * imageHeight, 0.495528 * imageWidth, 0.493582 * imageHeight);\n\t                gradHighlight.addColorStop(0, 'rgba(255, 255, 255, 0.275)');\n\t                gradHighlight.addColorStop(1, 'rgba(255, 255, 255, 0.015)');\n\t                break;\n\t\n\t            case 'type3':\n\t                radFgCtx.beginPath();\n\t                radFgCtx.moveTo(imageWidth * 0.084112, imageHeight * 0.509345);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.210280, imageHeight * 0.556074, imageWidth * 0.462616, imageHeight * 0.560747, imageWidth * 0.5, imageHeight * 0.560747);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.537383, imageHeight * 0.560747, imageWidth * 0.794392, imageHeight * 0.560747, imageWidth * 0.915887, imageHeight * 0.509345);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.915887, imageHeight * 0.275700, imageWidth * 0.738317, imageHeight * 0.084112, imageWidth * 0.5, imageHeight * 0.084112);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.261682, imageHeight * 0.084112, imageWidth * 0.084112, imageHeight * 0.275700, imageWidth * 0.084112, imageHeight * 0.509345);\n\t                radFgCtx.closePath();\n\t                gradHighlight = radFgCtx.createLinearGradient(0, 0.093457 * imageHeight, 0, 0.556073 * imageHeight);\n\t                gradHighlight.addColorStop(0, 'rgba(255, 255, 255, 0.275)');\n\t                gradHighlight.addColorStop(1, 'rgba(255, 255, 255, 0.015)');\n\t                break;\n\t\n\t            case 'type4':\n\t                radFgCtx.beginPath();\n\t                radFgCtx.moveTo(imageWidth * 0.677570, imageHeight * 0.242990);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.771028, imageHeight * 0.308411, imageWidth * 0.822429, imageHeight * 0.411214, imageWidth * 0.813084, imageHeight * 0.528037);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.799065, imageHeight * 0.654205, imageWidth * 0.719626, imageHeight * 0.757009, imageWidth * 0.593457, imageHeight * 0.799065);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.485981, imageHeight * 0.831775, imageWidth * 0.369158, imageHeight * 0.808411, imageWidth * 0.285046, imageHeight * 0.728971);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.275700, imageHeight * 0.719626, imageWidth * 0.252336, imageHeight * 0.714953, imageWidth * 0.233644, imageHeight * 0.728971);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.214953, imageHeight * 0.747663, imageWidth * 0.219626, imageHeight * 0.771028, imageWidth * 0.228971, imageHeight * 0.775700);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.331775, imageHeight * 0.878504, imageWidth * 0.476635, imageHeight * 0.915887, imageWidth * 0.616822, imageHeight * 0.869158);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.771028, imageHeight * 0.822429, imageWidth * 0.873831, imageHeight * 0.691588, imageWidth * 0.887850, imageHeight * 0.532710);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.897196, imageHeight * 0.387850, imageWidth * 0.836448, imageHeight * 0.257009, imageWidth * 0.719626, imageHeight * 0.182242);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.705607, imageHeight * 0.172897, imageWidth * 0.682242, imageHeight * 0.163551, imageWidth * 0.663551, imageHeight * 0.186915);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.654205, imageHeight * 0.205607, imageWidth * 0.668224, imageHeight * 0.238317, imageWidth * 0.677570, imageHeight * 0.242990);\n\t                radFgCtx.closePath();\n\t                gradHighlight = radFgCtx.createRadialGradient((0.5) * imageWidth, ((0.5) * imageHeight), 0, ((0.5) * imageWidth), ((0.5) * imageHeight), 0.387850 * imageWidth);\n\t                gradHighlight.addColorStop(0, 'rgba(255, 255, 255, 0)');\n\t                gradHighlight.addColorStop(0.82, 'rgba(255, 255, 255, 0)');\n\t                gradHighlight.addColorStop(0.83, 'rgba(255, 255, 255, 0)');\n\t                gradHighlight.addColorStop(1, 'rgba(255, 255, 255, 0.15)');\n\t\n\t                radFgCtx.beginPath();\n\t                radFgCtx.moveTo(imageWidth * 0.261682, imageHeight * 0.224299);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.285046, imageHeight * 0.238317, imageWidth * 0.252336, imageHeight * 0.285046, imageWidth * 0.242990, imageHeight * 0.317757);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.242990, imageHeight * 0.350467, imageWidth * 0.271028, imageHeight * 0.383177, imageWidth * 0.271028, imageHeight * 0.397196);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.275700, imageHeight * 0.415887, imageWidth * 0.261682, imageHeight * 0.457943, imageWidth * 0.238317, imageHeight * 0.509345);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.224299, imageHeight * 0.542056, imageWidth * 0.177570, imageHeight * 0.612149, imageWidth * 0.158878, imageHeight * 0.612149);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.144859, imageHeight * 0.612149, imageWidth * 0.088785, imageHeight * 0.546728, imageWidth * 0.130841, imageHeight * 0.369158);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.140186, imageHeight * 0.336448, imageWidth * 0.214953, imageHeight * 0.200934, imageWidth * 0.261682, imageHeight * 0.224299);\n\t                radFgCtx.closePath();\n\t                gradHighlight2 = radFgCtx.createLinearGradient(0.130841 * imageWidth, 0.369158 * imageHeight, 0.273839 * imageWidth, 0.412877 * imageHeight);\n\t                gradHighlight2.addColorStop(0, 'rgba(255, 255, 255, 0.275)');\n\t                gradHighlight2.addColorStop(1, 'rgba(255, 255, 255, 0.015)');\n\t                radFgCtx.fillStyle = gradHighlight2;\n\t                radFgCtx.fill();\n\t                break;\n\t\n\t            case 'type5':\n\t                radFgCtx.beginPath();\n\t                radFgCtx.moveTo(imageWidth * 0.084112, imageHeight * 0.5);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.084112, imageHeight * 0.271028, imageWidth * 0.271028, imageHeight * 0.084112, imageWidth * 0.5, imageHeight * 0.084112);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.700934, imageHeight * 0.084112, imageWidth * 0.864485, imageHeight * 0.224299, imageWidth * 0.906542, imageHeight * 0.411214);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.911214, imageHeight * 0.439252, imageWidth * 0.911214, imageHeight * 0.518691, imageWidth * 0.845794, imageHeight * 0.537383);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.794392, imageHeight * 0.546728, imageWidth * 0.551401, imageHeight * 0.411214, imageWidth * 0.392523, imageHeight * 0.457943);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.168224, imageHeight * 0.509345, imageWidth * 0.135514, imageHeight * 0.775700, imageWidth * 0.093457, imageHeight * 0.593457);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.088785, imageHeight * 0.560747, imageWidth * 0.084112, imageHeight * 0.532710, imageWidth * 0.084112, imageHeight * 0.5);\n\t                radFgCtx.closePath();\n\t                gradHighlight = radFgCtx.createLinearGradient(0, 0.084112 * imageHeight, 0, 0.644859 * imageHeight);\n\t                gradHighlight.addColorStop(0, 'rgba(255, 255, 255, 0.275)');\n\t                gradHighlight.addColorStop(1, 'rgba(255, 255, 255, 0.015)');\n\t                break;\n\t\n\t            case 'type1':\n\t            /* falls through */\n\t            default:\n\t                radFgCtx.beginPath();\n\t                radFgCtx.moveTo(imageWidth * 0.084112, imageHeight * 0.509345);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.205607, imageHeight * 0.448598, imageWidth * 0.336448, imageHeight * 0.415887, imageWidth * 0.5, imageHeight * 0.415887);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.672897, imageHeight * 0.415887, imageWidth * 0.789719, imageHeight * 0.443925, imageWidth * 0.915887, imageHeight * 0.509345);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.915887, imageHeight * 0.275700, imageWidth * 0.738317, imageHeight * 0.084112, imageWidth * 0.5, imageHeight * 0.084112);\n\t                radFgCtx.bezierCurveTo(imageWidth * 0.261682, imageHeight * 0.084112, imageWidth * 0.084112, imageHeight * 0.275700, imageWidth * 0.084112, imageHeight * 0.509345);\n\t                radFgCtx.closePath();\n\t                gradHighlight = radFgCtx.createLinearGradient(0, 0.088785 * imageHeight, 0, 0.490654 * imageHeight);\n\t                gradHighlight.addColorStop(0, 'rgba(255, 255, 255, 0.275)');\n\t                gradHighlight.addColorStop(1, 'rgba(255, 255, 255, 0.015)');\n\t                break;\n\t            }\n\t            radFgCtx.fillStyle = gradHighlight;\n\t            radFgCtx.fill();\n\t\n\t            // cache the buffer\n\t            drawRadialForegroundImage.cache[cacheKey] = radFgBuffer;\n\t        }\n\t        ctx.drawImage(drawRadialForegroundImage.cache[cacheKey], 0, 0);\n\t        return this;\n\t    };\n\t    drawRadialForegroundImage.cache = {};\n\t\n\t    var drawLinearForegroundImage = function (ctx, imageWidth, imageHeight, vertical) {\n\t        var linFgBuffer, linFgCtx,\n\t            foregroundGradient,\n\t            frameWidth, fgOffset, fgOffset2,\n\t            cacheKey = imageWidth.toString() + imageHeight + vertical;\n\t\n\t        // check if we have already created and cached this buffer, if not create it\n\t        if (!drawLinearForegroundImage.cache[cacheKey]) {\n\t            // Setup buffer\n\t            linFgBuffer = createBuffer(imageWidth, imageHeight);\n\t            linFgCtx = linFgBuffer.getContext('2d');\n\t\n\t            frameWidth = Math.sqrt(imageWidth * imageWidth + imageHeight * imageHeight) * 0.04;\n\t            frameWidth = Math.min(frameWidth, (vertical ? imageWidth : imageHeight) * 0.1);\n\t            fgOffset = frameWidth * 1.3;\n\t            fgOffset2 = fgOffset * 1.33;\n\t\n\t            linFgCtx.beginPath();\n\t            linFgCtx.moveTo(fgOffset, imageHeight - fgOffset);\n\t            linFgCtx.lineTo(imageWidth - fgOffset, imageHeight - fgOffset);\n\t            linFgCtx.bezierCurveTo(imageWidth - fgOffset, imageHeight - fgOffset, imageWidth - fgOffset2, imageHeight * 0.7, imageWidth - fgOffset2, imageHeight * 0.5);\n\t            linFgCtx.bezierCurveTo(imageWidth - fgOffset2, fgOffset2, imageWidth - fgOffset, fgOffset, imageWidth - frameWidth, fgOffset);\n\t            linFgCtx.lineTo(fgOffset, fgOffset);\n\t            linFgCtx.bezierCurveTo(fgOffset, fgOffset, fgOffset2, imageHeight * 0.285714, fgOffset2, imageHeight * 0.5);\n\t            linFgCtx.bezierCurveTo(fgOffset2, imageHeight * 0.7, fgOffset, imageHeight - fgOffset, frameWidth, imageHeight - fgOffset);\n\t            linFgCtx.closePath();\n\t\n\t            foregroundGradient = linFgCtx.createLinearGradient(0, (imageHeight - frameWidth), 0, frameWidth);\n\t            foregroundGradient.addColorStop(0, 'rgba(255, 255, 255, 0)');\n\t            foregroundGradient.addColorStop(0.06, 'rgba(255, 255, 255, 0)');\n\t            foregroundGradient.addColorStop(0.07, 'rgba(255, 255, 255, 0)');\n\t            foregroundGradient.addColorStop(0.12, 'rgba(255, 255, 255, 0)');\n\t            foregroundGradient.addColorStop(0.17, 'rgba(255, 255, 255, 0.013546)');\n\t            foregroundGradient.addColorStop(0.1701, 'rgba(255, 255, 255, 0)');\n\t            foregroundGradient.addColorStop(0.79, 'rgba(255, 255, 255, 0)');\n\t            foregroundGradient.addColorStop(0.8, 'rgba(255, 255, 255, 0)');\n\t            foregroundGradient.addColorStop(0.84, 'rgba(255, 255, 255, 0.082217)');\n\t            foregroundGradient.addColorStop(0.93, 'rgba(255, 255, 255, 0.288702)');\n\t            foregroundGradient.addColorStop(0.94, 'rgba(255, 255, 255, 0.298039)');\n\t            foregroundGradient.addColorStop(0.96, 'rgba(255, 255, 255, 0.119213)');\n\t            foregroundGradient.addColorStop(0.97, 'rgba(255, 255, 255, 0)');\n\t            foregroundGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n\t            linFgCtx.fillStyle = foregroundGradient;\n\t            linFgCtx.fill();\n\t\n\t            // cache the buffer\n\t            drawLinearForegroundImage.cache[cacheKey] = linFgBuffer;\n\t        }\n\t        ctx.drawImage(drawLinearForegroundImage.cache[cacheKey], 0, 0);\n\t        return this;\n\t    };\n\t    drawLinearForegroundImage.cache = {};\n\t\n\t    var createKnobImage = function (size, knob, style) {\n\t        var knobBuffer, knobCtx,\n\t            maxPostCenterX = size / 2,\n\t            maxPostCenterY = size / 2,\n\t            grad,\n\t            cacheKey = size.toString() + knob.type + style.style;\n\t\n\t        // check if we have already created and cached this buffer, if not create it\n\t        if (!createKnobImage.cache[cacheKey]) {\n\t            knobBuffer = createBuffer(size * 1.18889, size * 1.18889);\n\t            knobCtx = knobBuffer.getContext('2d');\n\t\n\t            switch (knob.type) {\n\t            case 'metalKnob':\n\t                // METALKNOB_FRAME\n\t                knobCtx.beginPath();\n\t                knobCtx.moveTo(0, size * 0.5);\n\t                knobCtx.bezierCurveTo(0, size * 0.222222, size * 0.222222, 0, size * 0.5, 0);\n\t                knobCtx.bezierCurveTo(size * 0.777777, 0, size, size * 0.222222, size, size * 0.5);\n\t                knobCtx.bezierCurveTo(size, size * 0.777777, size * 0.777777, size, size * 0.5, size);\n\t                knobCtx.bezierCurveTo(size * 0.222222, size, 0, size * 0.777777, 0, size * 0.5);\n\t                knobCtx.closePath();\n\t                grad = knobCtx.createLinearGradient(0, 0, 0, size);\n\t                grad.addColorStop(0, 'rgb(92, 95, 101)');\n\t                grad.addColorStop(0.47, 'rgb(46, 49, 53)');\n\t                grad.addColorStop(1, 'rgb(22, 23, 26)');\n\t                knobCtx.fillStyle = grad;\n\t                knobCtx.fill();\n\t\n\t                // METALKNOB_MAIN\n\t                knobCtx.beginPath();\n\t                knobCtx.moveTo(size * 0.055555, size * 0.5);\n\t                knobCtx.bezierCurveTo(size * 0.055555, size * 0.277777, size * 0.277777, size * 0.055555, size * 0.5, size * 0.055555);\n\t                knobCtx.bezierCurveTo(size * 0.722222, size * 0.055555, size * 0.944444, size * 0.277777, size * 0.944444, size * 0.5);\n\t                knobCtx.bezierCurveTo(size * 0.944444, size * 0.722222, size * 0.722222, size * 0.944444, size * 0.5, size * 0.944444);\n\t                knobCtx.bezierCurveTo(size * 0.277777, size * 0.944444, size * 0.055555, size * 0.722222, size * 0.055555, size * 0.5);\n\t                knobCtx.closePath();\n\t                grad = knobCtx.createLinearGradient(0, 0.055555 * size, 0, 0.944443 * size);\n\t                switch (style.style) {\n\t                case 'black':\n\t                    grad.addColorStop(0, 'rgb(43, 42, 47)');\n\t                    grad.addColorStop(1, 'rgb(26, 27, 32)');\n\t                    break;\n\t\n\t                case 'brass':\n\t                    grad.addColorStop(0, 'rgb(150, 110, 54)');\n\t                    grad.addColorStop(1, 'rgb(124, 95, 61)');\n\t                    break;\n\t\n\t                case 'silver':\n\t                /* falls through */\n\t                default:\n\t                    grad.addColorStop(0, 'rgb(204, 204, 204)');\n\t                    grad.addColorStop(1, 'rgb(87, 92, 98)');\n\t                    break;\n\t                }\n\t                knobCtx.fillStyle = grad;\n\t                knobCtx.fill();\n\t\n\t                // METALKNOB_LOWERHL\n\t                knobCtx.beginPath();\n\t                knobCtx.moveTo(size * 0.777777, size * 0.833333);\n\t                knobCtx.bezierCurveTo(size * 0.722222, size * 0.722222, size * 0.611111, size * 0.666666, size * 0.5, size * 0.666666);\n\t                knobCtx.bezierCurveTo(size * 0.388888, size * 0.666666, size * 0.277777, size * 0.722222, size * 0.222222, size * 0.833333);\n\t                knobCtx.bezierCurveTo(size * 0.277777, size * 0.888888, size * 0.388888, size * 0.944444, size * 0.5, size * 0.944444);\n\t                knobCtx.bezierCurveTo(size * 0.611111, size * 0.944444, size * 0.722222, size * 0.888888, size * 0.777777, size * 0.833333);\n\t                knobCtx.closePath();\n\t                grad = knobCtx.createRadialGradient((0.555555) * size, ((0.944444) * size), 0, ((0.555555) * size), ((0.944444) * size), 0.388888 * size);\n\t                grad.addColorStop(0, 'rgba(255, 255, 255, 0.6)');\n\t                grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\n\t                knobCtx.fillStyle = grad;\n\t                knobCtx.fill();\n\t\n\t                // METALKNOB_UPPERHL\n\t                knobCtx.beginPath();\n\t                knobCtx.moveTo(size * 0.944444, size * 0.277777);\n\t                knobCtx.bezierCurveTo(size * 0.833333, size * 0.111111, size * 0.666666, 0, size * 0.5, 0);\n\t                knobCtx.bezierCurveTo(size * 0.333333, 0, size * 0.166666, size * 0.111111, size * 0.055555, size * 0.277777);\n\t                knobCtx.bezierCurveTo(size * 0.166666, size * 0.333333, size * 0.333333, size * 0.388888, size * 0.5, size * 0.388888);\n\t                knobCtx.bezierCurveTo(size * 0.666666, size * 0.388888, size * 0.833333, size * 0.333333, size * 0.944444, size * 0.277777);\n\t                knobCtx.closePath();\n\t                grad = knobCtx.createRadialGradient(0.5 * size, 0, 0, ((0.5) * size), 0, 0.583333 * size);\n\t                grad.addColorStop(0, 'rgba(255, 255, 255, 0.749019)');\n\t                grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\n\t                knobCtx.fillStyle = grad;\n\t                knobCtx.fill();\n\t\n\t                // METALKNOB_INNERFRAME\n\t                knobCtx.beginPath();\n\t                knobCtx.moveTo(size * 0.277777, size * 0.555555);\n\t                knobCtx.bezierCurveTo(size * 0.277777, size * 0.388888, size * 0.388888, size * 0.277777, size * 0.5, size * 0.277777);\n\t                knobCtx.bezierCurveTo(size * 0.611111, size * 0.277777, size * 0.777777, size * 0.388888, size * 0.777777, size * 0.555555);\n\t                knobCtx.bezierCurveTo(size * 0.777777, size * 0.666666, size * 0.611111, size * 0.777777, size * 0.5, size * 0.777777);\n\t                knobCtx.bezierCurveTo(size * 0.388888, size * 0.777777, size * 0.277777, size * 0.666666, size * 0.277777, size * 0.555555);\n\t                knobCtx.closePath();\n\t                grad = knobCtx.createLinearGradient(0, 0.277777 * size, 0, 0.722221 * size);\n\t                grad.addColorStop(0, '#000000');\n\t                grad.addColorStop(1, 'rgb(204, 204, 204)');\n\t                knobCtx.fillStyle = grad;\n\t                knobCtx.fill();\n\t\n\t                // METALKNOB_INNERBACKGROUND\n\t                knobCtx.beginPath();\n\t                knobCtx.moveTo(size * 0.333333, size * 0.555555);\n\t                knobCtx.bezierCurveTo(size * 0.333333, size * 0.444444, size * 0.388888, size * 0.333333, size * 0.5, size * 0.333333);\n\t                knobCtx.bezierCurveTo(size * 0.611111, size * 0.333333, size * 0.722222, size * 0.444444, size * 0.722222, size * 0.555555);\n\t                knobCtx.bezierCurveTo(size * 0.722222, size * 0.611111, size * 0.611111, size * 0.722222, size * 0.5, size * 0.722222);\n\t                knobCtx.bezierCurveTo(size * 0.388888, size * 0.722222, size * 0.333333, size * 0.611111, size * 0.333333, size * 0.555555);\n\t                knobCtx.closePath();\n\t                grad = knobCtx.createLinearGradient(0, 0.333333 * size, 0, 0.666666 * size);\n\t                grad.addColorStop(0, 'rgb(10, 9, 1)');\n\t                grad.addColorStop(1, 'rgb(42, 41, 37)');\n\t                knobCtx.fillStyle = grad;\n\t                knobCtx.fill();\n\t                break;\n\t\n\t            case 'standardKnob':\n\t                grad = knobCtx.createLinearGradient(0, 0, 0, size);\n\t                grad.addColorStop(0, 'rgb(180, 180, 180)');\n\t                grad.addColorStop(0.46, 'rgb(63, 63, 63)');\n\t                grad.addColorStop(1, 'rgb(40, 40, 40)');\n\t                knobCtx.fillStyle = grad;\n\t                knobCtx.beginPath();\n\t                knobCtx.arc(maxPostCenterX, maxPostCenterY, size / 2, 0, TWO_PI, true);\n\t                knobCtx.closePath();\n\t                knobCtx.fill();\n\t                grad = knobCtx.createLinearGradient(0, size - size * 0.77, 0, size - size * 0.77 + size * 0.77);\n\t                switch (style.style) {\n\t                case 'black':\n\t                    grad.addColorStop(0, 'rgb(191, 191, 191)');\n\t                    grad.addColorStop(0.5, 'rgb(45, 44, 49)');\n\t                    grad.addColorStop(1, 'rgb(125, 126, 128)');\n\t                    break;\n\t\n\t                case 'brass':\n\t                    grad.addColorStop(0, 'rgb(223, 208, 174)');\n\t                    grad.addColorStop(0.5, 'rgb(123, 95, 63)');\n\t                    grad.addColorStop(1, 'rgb(207, 190, 157)');\n\t                    break;\n\t\n\t                case 'silver':\n\t                /* falls through */\n\t                default:\n\t                    grad.addColorStop(0, 'rgb(215, 215, 215)');\n\t                    grad.addColorStop(0.5, 'rgb(116, 116, 116)');\n\t                    grad.addColorStop(1, 'rgb(215, 215, 215)');\n\t                    break;\n\t                }\n\t                knobCtx.fillStyle = grad;\n\t                knobCtx.beginPath();\n\t                knobCtx.arc(maxPostCenterX, maxPostCenterY, size * 0.77 / 2, 0, TWO_PI, true);\n\t                knobCtx.closePath();\n\t                knobCtx.fill();\n\t\n\t                grad = knobCtx.createRadialGradient(maxPostCenterX, maxPostCenterY, 0, maxPostCenterX, maxPostCenterY, size * 0.77 / 2);\n\t                grad.addColorStop(0, 'rgba(0, 0, 0, 0)');\n\t                grad.addColorStop(0.75, 'rgba(0, 0, 0, 0)');\n\t                grad.addColorStop(0.76, 'rgba(0, 0, 0, 0.01)');\n\t                grad.addColorStop(1, 'rgba(0, 0, 0, 0.2)');\n\t                knobCtx.fillStyle = grad;\n\t                knobCtx.beginPath();\n\t                knobCtx.arc(maxPostCenterX, maxPostCenterY, size * 0.77 / 2, 0, TWO_PI, true);\n\t                knobCtx.closePath();\n\t                knobCtx.fill();\n\t                break;\n\t            }\n\t\n\t            // cache the buffer\n\t            createKnobImage.cache[cacheKey] = knobBuffer;\n\t        }\n\t        return createKnobImage.cache[cacheKey];\n\t    };\n\t    createKnobImage.cache = {};\n\t\n\t    var createLedImage = function (size, state, ledColor) {\n\t        var ledBuffer, ledCtx,\n\t            ledCenterX = size / 2,\n\t            ledCenterY = size / 2,\n\t            grad,\n\t            cacheKey = size.toString() + state + ledColor.outerColor_ON;\n\t\n\t        // check if we have already created and cached this buffer, if not create it\n\t        if (!createLedImage.cache[cacheKey]) {\n\t            ledBuffer = createBuffer(size, size);\n\t            ledCtx = ledBuffer.getContext('2d');\n\t\n\t            switch (state) {\n\t            case 0: // LED OFF\n\t                // OFF Gradient\n\t                grad = ledCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, size * 0.5 / 2);\n\t                grad.addColorStop(0, ledColor.innerColor1_OFF);\n\t                grad.addColorStop(0.2, ledColor.innerColor2_OFF);\n\t                grad.addColorStop(1, ledColor.outerColor_OFF);\n\t                ledCtx.fillStyle = grad;\n\t\n\t                ledCtx.beginPath();\n\t                ledCtx.arc(ledCenterX, ledCenterY, size * 0.5 / 2, 0, TWO_PI, true);\n\t                ledCtx.closePath();\n\t                ledCtx.fill();\n\t\n\t                // InnerShadow\n\t                grad = ledCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, size * 0.5 / 2);\n\t                grad.addColorStop(0, 'rgba(0, 0, 0, 0)');\n\t                grad.addColorStop(0.8, 'rgba(0, 0, 0, 0)');\n\t                grad.addColorStop(1, 'rgba(0, 0, 0, 0.4)');\n\t                ledCtx.fillStyle = grad;\n\t\n\t                ledCtx.beginPath();\n\t                ledCtx.arc(ledCenterX, ledCenterY, size * 0.5 / 2, 0, TWO_PI, true);\n\t                ledCtx.closePath();\n\t                ledCtx.fill();\n\t\n\t                // LightReflex\n\t                grad = ledCtx.createLinearGradient(0, 0.35 * size, 0, 0.35 * size + 0.15 * size);\n\t                grad.addColorStop(0, 'rgba(255, 255, 255, 0.4)');\n\t                grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\n\t                ledCtx.fillStyle = grad;\n\t\n\t                ledCtx.beginPath();\n\t                ledCtx.arc(ledCenterX, 0.35 * size + 0.2 * size / 2, size * 0.2, 0, TWO_PI, true);\n\t                ledCtx.closePath();\n\t                ledCtx.fill();\n\t                break;\n\t\n\t            case 1: // LED ON\n\t                // ON Gradient\n\t                grad = ledCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, size * 0.5 / 2);\n\t                grad.addColorStop(0, ledColor.innerColor1_ON);\n\t                grad.addColorStop(0.2, ledColor.innerColor2_ON);\n\t                grad.addColorStop(1, ledColor.outerColor_ON);\n\t                ledCtx.fillStyle = grad;\n\t\n\t                ledCtx.beginPath();\n\t                ledCtx.arc(ledCenterX, ledCenterY, size * 0.5 / 2, 0, TWO_PI, true);\n\t                ledCtx.closePath();\n\t                ledCtx.fill();\n\t\n\t                // InnerShadow\n\t                grad = ledCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, size * 0.5 / 2);\n\t                grad.addColorStop(0, 'rgba(0, 0, 0, 0)');\n\t                grad.addColorStop(0.8, 'rgba(0, 0, 0, 0)');\n\t                grad.addColorStop(1, 'rgba(0, 0, 0, 0.4)');\n\t                ledCtx.fillStyle = grad;\n\t\n\t                ledCtx.beginPath();\n\t                ledCtx.arc(ledCenterX, ledCenterY, size * 0.5 / 2, 0, TWO_PI, true);\n\t                ledCtx.closePath();\n\t                ledCtx.fill();\n\t\n\t                // LightReflex\n\t                grad = ledCtx.createLinearGradient(0, 0.35 * size, 0, 0.35 * size + 0.15 * size);\n\t                grad.addColorStop(0, 'rgba(255, 255, 255, 0.4)');\n\t                grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\n\t                ledCtx.fillStyle = grad;\n\t\n\t                ledCtx.beginPath();\n\t                ledCtx.arc(ledCenterX, 0.35 * size + 0.2 * size / 2, size * 0.2, 0, TWO_PI, true);\n\t                ledCtx.closePath();\n\t                ledCtx.fill();\n\t\n\t                // Corona\n\t                grad = ledCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, size / 2);\n\t                grad.addColorStop(0, setAlpha(ledColor.coronaColor, 0).color);\n\t                grad.addColorStop(0.6, setAlpha(ledColor.coronaColor, 0.4).color);\n\t                grad.addColorStop(0.7, setAlpha(ledColor.coronaColor, 0.25).color);\n\t                grad.addColorStop(0.8, setAlpha(ledColor.coronaColor, 0.15).color);\n\t                grad.addColorStop(0.85, setAlpha(ledColor.coronaColor, 0.05).color);\n\t                grad.addColorStop(1, setAlpha(ledColor.coronaColor, 0).color);\n\t                ledCtx.fillStyle = grad;\n\t\n\t                ledCtx.beginPath();\n\t                ledCtx.arc(ledCenterX, ledCenterY, size / 2, 0, TWO_PI, true);\n\t                ledCtx.closePath();\n\t                ledCtx.fill();\n\t                break;\n\t            }\n\t            // cache the buffer\n\t            createLedImage.cache[cacheKey] = ledBuffer;\n\t        }\n\t        return createLedImage.cache[cacheKey];\n\t    };\n\t    createLedImage.cache = {};\n\t\n\t    var createLcdBackgroundImage = function (width, height, lcdColor) {\n\t        var lcdBuffer, lcdCtx,\n\t            xB = 0,\n\t            yB = 0,\n\t            wB = width,\n\t            hB = height,\n\t            rB = Math.min(width, height) * 0.095,\n\t            grad,\n\t            xF = 1,\n\t            yF = 1,\n\t            wF = width - 2,\n\t            hF = height - 2,\n\t            rF = rB - 1,\n\t            cacheKey = width.toString() + height + JSON.stringify(lcdColor);\n\t\n\t        // check if we have already created and cached this buffer, if not create it\n\t        if (!createLcdBackgroundImage.cache[cacheKey]) {\n\t            lcdBuffer = createBuffer(width, height);\n\t            lcdCtx = lcdBuffer.getContext('2d');\n\t            // background\n\t            grad = lcdCtx.createLinearGradient(0, yB, 0, yB + hB);\n\t            grad.addColorStop(0, '#4c4c4c');\n\t            grad.addColorStop(0.08, '#666666');\n\t            grad.addColorStop(0.92, '#666666');\n\t            grad.addColorStop(1, '#e6e6e6');\n\t            lcdCtx.fillStyle = grad;\n\t            roundedRectangle(lcdCtx, xB, yB, wB, hB, rB);\n\t            lcdCtx.fill();\n\t\n\t            // foreground\n\t            grad = lcdCtx.createLinearGradient(0, yF, 0, yF + hF);\n\t            grad.addColorStop(0, lcdColor.gradientStartColor);\n\t            grad.addColorStop(0.03, lcdColor.gradientFraction1Color);\n\t            grad.addColorStop(0.49, lcdColor.gradientFraction2Color);\n\t            grad.addColorStop(0.5, lcdColor.gradientFraction3Color);\n\t            grad.addColorStop(1, lcdColor.gradientStopColor);\n\t            lcdCtx.fillStyle = grad;\n\t            roundedRectangle(lcdCtx, xF, yF, wF, hF, rF);\n\t            lcdCtx.fill();\n\t            // cache the buffer\n\t            createLcdBackgroundImage.cache[cacheKey] = lcdBuffer;\n\t        }\n\t        return createLcdBackgroundImage.cache[cacheKey];\n\t    };\n\t    createLcdBackgroundImage.cache = {};\n\t\n\t    var createMeasuredValueImage = function (size, indicatorColor, radial, vertical) {\n\t        var indicatorBuffer, indicatorCtx,\n\t            cacheKey = size.toString() + indicatorColor + radial + vertical;\n\t\n\t        // check if we have already created and cached this buffer, if so return it and exit\n\t        if (!createMeasuredValueImage.cache[cacheKey]) {\n\t            indicatorBuffer = doc.createElement('canvas');\n\t            indicatorCtx = indicatorBuffer.getContext('2d');\n\t            indicatorBuffer.width = size;\n\t            indicatorBuffer.height = size;\n\t            indicatorCtx.fillStyle = indicatorColor;\n\t            if (radial) {\n\t                indicatorCtx.beginPath();\n\t                indicatorCtx.moveTo(size * 0.5, size);\n\t                indicatorCtx.lineTo(0, 0);\n\t                indicatorCtx.lineTo(size, 0);\n\t                indicatorCtx.closePath();\n\t                indicatorCtx.fill();\n\t            } else {\n\t                if (vertical) {\n\t                    indicatorCtx.beginPath();\n\t                    indicatorCtx.moveTo(size, size * 0.5);\n\t                    indicatorCtx.lineTo(0, 0);\n\t                    indicatorCtx.lineTo(0, size);\n\t                    indicatorCtx.closePath();\n\t                    indicatorCtx.fill();\n\t                } else {\n\t                    indicatorCtx.beginPath();\n\t                    indicatorCtx.moveTo(size * 0.5, 0);\n\t                    indicatorCtx.lineTo(size, size);\n\t                    indicatorCtx.lineTo(0, size);\n\t                    indicatorCtx.closePath();\n\t                    indicatorCtx.fill();\n\t                }\n\t            }\n\t            // cache the buffer\n\t            createMeasuredValueImage.cache[cacheKey] = indicatorBuffer;\n\t        }\n\t        return createMeasuredValueImage.cache[cacheKey];\n\t    };\n\t    createMeasuredValueImage.cache = {};\n\t\n\t    var createTrendIndicator = function (width, onSection, colors) {\n\t        var height = width * 2,\n\t            trendBuffer, trendCtx,\n\t            fill,\n\t            cacheKey = onSection.state + width + JSON.stringify(colors),\n\t\n\t            drawUpArrow = function () {\n\t                // draw up arrow (red)\n\t                var ledColor = colors[0];\n\t\n\t                if (onSection.state === 'up') {\n\t                    fill = trendCtx.createRadialGradient(0.5 * width, 0.2 * height, 0, 0.5 * width, 0.2 * height, 0.5 * width);\n\t                    fill.addColorStop(0, ledColor.innerColor1_ON);\n\t                    fill.addColorStop(0.2, ledColor.innerColor2_ON);\n\t                    fill.addColorStop(1, ledColor.outerColor_ON);\n\t                } else {\n\t                    fill = trendCtx.createLinearGradient(0, 0, 0, 0.5 * height);\n\t                    fill.addColorStop(0, '#323232');\n\t                    fill.addColorStop(1, '#5c5c5c');\n\t                }\n\t                trendCtx.fillStyle = fill;\n\t                trendCtx.beginPath();\n\t                trendCtx.moveTo(0.5 * width, 0);\n\t                trendCtx.lineTo(width, 0.2 * height);\n\t                trendCtx.lineTo(0.752 * width, 0.2 * height);\n\t                trendCtx.lineTo(0.752 * width, 0.37 * height);\n\t                trendCtx.lineTo(0.252 * width, 0.37 * height);\n\t                trendCtx.lineTo(0.252 * width, 0.2 * height);\n\t                trendCtx.lineTo(0, 0.2 * height);\n\t                trendCtx.closePath();\n\t                trendCtx.fill();\n\t                if (onSection.state !== 'up') {\n\t                    // Inner shadow\n\t                    trendCtx.strokeStyle = 'rgba(0, 0, 0, 0.4)';\n\t                    trendCtx.beginPath();\n\t                    trendCtx.moveTo(0, 0.2 * height);\n\t                    trendCtx.lineTo(0.5 * width, 0);\n\t                    trendCtx.lineTo(width, 0.2 * height);\n\t                    trendCtx.moveTo(0.252 * width, 0.2 * height);\n\t                    trendCtx.lineTo(0.252 * width, 0.37 * height);\n\t                    trendCtx.stroke();\n\t                    // Inner highlight\n\t                    trendCtx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n\t                    trendCtx.beginPath();\n\t                    trendCtx.moveTo(0.252 * width, 0.37 * height);\n\t                    trendCtx.lineTo(0.752 * width, 0.37 * height);\n\t                    trendCtx.lineTo(0.752 * width, 0.2 * height);\n\t                    trendCtx.lineTo(width, 0.2 * height);\n\t                    trendCtx.stroke();\n\t                } else {\n\t                    // draw halo\n\t                    fill = trendCtx.createRadialGradient(0.5 * width, 0.2 * height, 0, 0.5 * width, 0.2 * height, 0.7 * width);\n\t                    fill.addColorStop(0, setAlpha(ledColor.coronaColor, 0).color);\n\t                    fill.addColorStop(0.5, setAlpha(ledColor.coronaColor, 0.3).color);\n\t                    fill.addColorStop(0.7, setAlpha(ledColor.coronaColor, 0.2).color);\n\t                    fill.addColorStop(0.8, setAlpha(ledColor.coronaColor, 0.1).color);\n\t                    fill.addColorStop(0.85, setAlpha(ledColor.coronaColor, 0.05).color);\n\t                    fill.addColorStop(1, setAlpha(ledColor.coronaColor, 0).color);\n\t                    trendCtx.fillStyle = fill;\n\t\n\t                    trendCtx.beginPath();\n\t                    trendCtx.arc(0.5 * width, 0.2 * height, 0.7 * width, 0, TWO_PI, true);\n\t                    trendCtx.closePath();\n\t                    trendCtx.fill();\n\t                }\n\t            },\n\t\n\t            drawEquals = function () {\n\t                // draw equal symbol\n\t                var ledColor = colors[1];\n\t\n\t                trendCtx.beginPath();\n\t                if (onSection.state === 'steady') {\n\t                    fill = ledColor.outerColor_ON;\n\t                    trendCtx.fillStyle = fill;\n\t                    trendCtx.rect(0.128 * width, 0.41 * height, 0.744 * width, 0.074 * height);\n\t                    trendCtx.rect(0.128 * width, 0.516 * height, 0.744 * width, 0.074 * height);\n\t                    trendCtx.closePath();\n\t                    trendCtx.fill();\n\t                } else {\n\t                    fill = trendCtx.createLinearGradient(0, 0.41 * height, 0, 0.41 * height + 0.074 * height);\n\t                    fill.addColorStop(0, '#323232');\n\t                    fill.addColorStop(1, '#5c5c5c');\n\t                    trendCtx.fillStyle = fill;\n\t                    trendCtx.rect(0.128 * width, 0.41 * height, 0.744 * width, 0.074 * height);\n\t                    trendCtx.closePath();\n\t                    trendCtx.fill();\n\t                    fill = trendCtx.createLinearGradient(0, 0.516 * height, 0, 0.516 * height + 0.074 * height);\n\t                    fill.addColorStop(0, '#323232');\n\t                    fill.addColorStop(1, '#5c5c5c');\n\t                    trendCtx.fillStyle = fill;\n\t                    trendCtx.rect(0.128 * width, 0.516 * height, 0.744 * width, 0.074 * height);\n\t                    trendCtx.closePath();\n\t                    trendCtx.fill();\n\t                }\n\t                if (onSection.state !== 'steady') {\n\t                    // inner shadow\n\t                    trendCtx.strokeStyle = 'rgba(0, 0, 0, 0.4)';\n\t                    trendCtx.beginPath();\n\t                    trendCtx.moveTo(0.128 * width, 0.41 * height + 0.074 * height);\n\t                    trendCtx.lineTo(0.128 * width, 0.41 * height);\n\t                    trendCtx.lineTo(0.128 * width + 0.744 * width, 0.41 * height);\n\t                    trendCtx.stroke();\n\t                    trendCtx.beginPath();\n\t                    trendCtx.moveTo(0.128 * width, 0.516 * height + 0.074 * height);\n\t                    trendCtx.lineTo(0.128 * width, 0.516 * height);\n\t                    trendCtx.lineTo(0.128 * width + 0.744 * width, 0.516 * height);\n\t                    trendCtx.stroke();\n\t                    // inner highlight\n\t                    trendCtx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n\t                    trendCtx.beginPath();\n\t                    trendCtx.moveTo(0.128 * width + 0.744 * width, 0.41 * height);\n\t                    trendCtx.lineTo(0.128 * width + 0.744 * width, 0.41 * height + 0.074 * height);\n\t                    trendCtx.lineTo(0.128 * width, 0.41 * height + 0.074 * height);\n\t                    trendCtx.stroke();\n\t                    trendCtx.beginPath();\n\t                    trendCtx.moveTo(0.128 * width + 0.744 * width, 0.516 * height);\n\t                    trendCtx.lineTo(0.128 * width + 0.744 * width, 0.516 * height + 0.074 * height);\n\t                    trendCtx.lineTo(0.128 * width, 0.516 * height + 0.074 * height);\n\t                    trendCtx.stroke();\n\t                } else {\n\t                    // draw halo\n\t                    fill = trendCtx.createRadialGradient(0.5 * width, 0.5 * height, 0, 0.5 * width, 0.5 * height, 0.7 * width);\n\t                    fill.addColorStop(0, setAlpha(ledColor.coronaColor, 0).color);\n\t                    fill.addColorStop(0.5, setAlpha(ledColor.coronaColor, 0.3).color);\n\t                    fill.addColorStop(0.7, setAlpha(ledColor.coronaColor, 0.2).color);\n\t                    fill.addColorStop(0.8, setAlpha(ledColor.coronaColor, 0.1).color);\n\t                    fill.addColorStop(0.85, setAlpha(ledColor.coronaColor, 0.05).color);\n\t                    fill.addColorStop(1, setAlpha(ledColor.coronaColor, 0).color);\n\t                    trendCtx.fillStyle = fill;\n\t                    trendCtx.beginPath();\n\t                    trendCtx.arc(0.5 * width, 0.5 * height, 0.7 * width, 0, TWO_PI, true);\n\t                    trendCtx.closePath();\n\t                    trendCtx.fill();\n\t                }\n\t            },\n\t\n\t            drawDownArrow = function () {\n\t                // draw down arrow\n\t                var ledColor = colors[2];\n\t                if (onSection.state === 'down') {\n\t                    fill = trendCtx.createRadialGradient(0.5 * width, 0.8 * height, 0, 0.5 * width, 0.8 * height, 0.5 * width);\n\t                    fill.addColorStop(0, ledColor.innerColor1_ON);\n\t                    fill.addColorStop(0.2, ledColor.innerColor2_ON);\n\t                    fill.addColorStop(1, ledColor.outerColor_ON);\n\t                } else {\n\t                    fill = trendCtx.createLinearGradient(0, 0.63 * height, 0, height);\n\t                    fill.addColorStop(0, '#323232');\n\t                    fill.addColorStop(1, '#5c5c5c');\n\t                }\n\t                trendCtx.beginPath();\n\t                trendCtx.fillStyle = fill;\n\t                trendCtx.moveTo(0.5 * width, height);\n\t                trendCtx.lineTo(width, 0.8 * height);\n\t                trendCtx.lineTo(0.725 * width, 0.8 * height);\n\t                trendCtx.lineTo(0.725 * width, 0.63 * height);\n\t                trendCtx.lineTo(0.252 * width, 0.63 * height);\n\t                trendCtx.lineTo(0.252 * width, 0.8 * height);\n\t                trendCtx.lineTo(0, 0.8 * height);\n\t                trendCtx.closePath();\n\t                trendCtx.fill();\n\t                if (onSection.state !== 'down') {\n\t                    // Inner shadow\n\t                    trendCtx.strokeStyle = 'rgba(0, 0, 0, 0.4)';\n\t                    trendCtx.beginPath();\n\t                    trendCtx.moveTo(0, 0.8 * height);\n\t                    trendCtx.lineTo(0.252 * width, 0.8 * height);\n\t                    trendCtx.moveTo(0.252 * width, 0.63 * height);\n\t                    trendCtx.lineTo(0.752 * width, 0.63 * height);\n\t                    trendCtx.stroke();\n\t                    trendCtx.beginPath();\n\t                    trendCtx.moveTo(0.752 * width, 0.8 * height);\n\t                    trendCtx.lineTo(width, 0.8 * height);\n\t                    trendCtx.stroke();\n\t                    // Inner highlight\n\t                    trendCtx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n\t                    trendCtx.beginPath();\n\t                    trendCtx.moveTo(0, 0.8 * height);\n\t                    trendCtx.lineTo(0.5 * width, height);\n\t                    trendCtx.lineTo(width, 0.8 * height);\n\t                    trendCtx.stroke();\n\t                    trendCtx.beginPath();\n\t                    trendCtx.moveTo(0.752 * width, 0.8 * height);\n\t                    trendCtx.lineTo(0.752 * width, 0.63 * height);\n\t                    trendCtx.stroke();\n\t                } else {\n\t                    // draw halo\n\t                    fill = trendCtx.createRadialGradient(0.5 * width, 0.8 * height, 0, 0.5 * width, 0.8 * height, 0.7 * width);\n\t                    fill.addColorStop(0, setAlpha(ledColor.coronaColor, 0).color);\n\t                    fill.addColorStop(0.5, setAlpha(ledColor.coronaColor, 0.3).color);\n\t                    fill.addColorStop(0.7, setAlpha(ledColor.coronaColor, 0.2).color);\n\t                    fill.addColorStop(0.8, setAlpha(ledColor.coronaColor, 0.1).color);\n\t                    fill.addColorStop(0.85, setAlpha(ledColor.coronaColor, 0.05).color);\n\t                    fill.addColorStop(1, setAlpha(ledColor.coronaColor, 0).color);\n\t                    trendCtx.fillStyle = fill;\n\t                    trendCtx.beginPath();\n\t                    trendCtx.arc(0.5 * width, 0.8 * height, 0.7 * width, 0, TWO_PI, true);\n\t                    trendCtx.closePath();\n\t                    trendCtx.fill();\n\t                }\n\t            };\n\t\n\t        // Check if we have already cached this indicator, if not create it\n\t        if (!createTrendIndicator.cache[cacheKey]) {\n\t            // create oversized buffer for the glow\n\t            trendBuffer = createBuffer(width * 2, width * 4);\n\t            trendCtx = trendBuffer.getContext('2d');\n\t            trendCtx.translate(width * 0.5, width * 0.5);\n\t            // Must draw the active section last so the 'glow' is on top\n\t            switch (onSection.state) {\n\t            case 'up':\n\t                drawDownArrow();\n\t                drawEquals();\n\t                drawUpArrow();\n\t                break;\n\t            case 'steady':\n\t                drawDownArrow();\n\t                drawUpArrow();\n\t                drawEquals();\n\t                break;\n\t            case 'down':\n\t            /* falls through */\n\t            default:\n\t                drawUpArrow();\n\t                drawEquals();\n\t                drawDownArrow();\n\t                break;\n\t            }\n\t            // cache the buffer\n\t            createTrendIndicator.cache[cacheKey] = trendBuffer;\n\t        }\n\t        return createTrendIndicator.cache[cacheKey];\n\t    };\n\t    createTrendIndicator.cache = {};\n\t\n\t    var drawTitleImage = function (ctx, imageWidth, imageHeight, titleString, unitString, backgroundColor, vertical, radial, altPos, gaugeType) {\n\t        gaugeType = (undefined === gaugeType ? gaugeType = steelseries.GaugeType.TYPE1 : gaugeType);\n\t        ctx.save();\n\t        ctx.textAlign = (radial ? 'center' : 'left');\n\t        ctx.textBaseline = 'middle';\n\t        ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n\t        ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\t\n\t        if (radial) {\n\t            ctx.font = 0.046728 * imageWidth + 'px ' + stdFontName;\n\t            ctx.fillText(titleString, imageWidth / 2, imageHeight * 0.3, imageWidth * 0.3);\n\t            ctx.fillText(unitString, imageWidth / 2, imageHeight * 0.38, imageWidth * 0.3);\n\t        } else {\n\t            // linear\n\t            if (vertical) {\n\t                ctx.font = 0.1 * imageWidth + 'px ' + stdFontName;\n\t                ctx.save();\n\t                ctx.translate(0.671428 * imageWidth, 0.1375 * imageHeight);\n\t                ctx.rotate(1.570796);\n\t                ctx.fillText(titleString, 0, 0);\n\t                ctx.translate(-0.671428 * imageWidth, -0.1375 * imageHeight);\n\t                ctx.restore();\n\t                ctx.font = 0.071428 * imageWidth + 'px ' + stdFontName;\n\t                if (altPos) {\n\t                    // LCD visible\n\t                    if (gaugeType.type === 'type2') {\n\t                        ctx.textAlign = 'right';\n\t                        ctx.fillText(unitString, 0.36 * imageWidth, imageHeight * 0.79, imageWidth * 0.25);\n\t                    } else {\n\t                        ctx.fillText(unitString, 0.63 * imageWidth, imageHeight * 0.85, imageWidth * 0.2);\n\t                    }\n\t                } else {\n\t                    // LCD hidden\n\t                    ctx.textAlign = 'center';\n\t                    if (gaugeType.type === 'type2') {\n\t                        ctx.fillText(unitString, imageWidth / 2, imageHeight * 0.92, imageWidth * 0.2);\n\t                    } else {\n\t                        ctx.fillText(unitString, imageWidth / 2, imageHeight * 0.89, imageWidth * 0.2);\n\t                    }\n\t                }\n\t            } else { //linear horizontal\n\t                ctx.font = 0.035 * imageWidth + 'px ' + stdFontName;\n\t                ctx.fillText(titleString, imageWidth * 0.15, imageHeight * 0.25, imageWidth * 0.3);\n\t                ctx.font = 0.025 * imageWidth + 'px ' + stdFontName;\n\t                ctx.fillText(unitString, imageWidth * 0.0625, imageHeight * 0.7, imageWidth * 0.07);\n\t            }\n\t        }\n\t        ctx.restore();\n\t    };\n\t\n\t    //*****************************************   T E X T U R E S   ****************************************************\n\t    var carbonBuffer = drawToBuffer(12, 12, function (ctx) {\n\t            var imageWidth = ctx.canvas.width,\n\t                imageHeight = ctx.canvas.height,\n\t                offsetX = 0,\n\t                offsetY = 0,\n\t                grad;\n\t\n\t            ctx.save();\n\t\n\t            // RULB\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(0, 0, imageWidth * 0.5, imageHeight * 0.5);\n\t            ctx.closePath();\n\t            ctx.restore();\n\t\n\t            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.5 * imageHeight + offsetY * imageHeight);\n\t            grad.addColorStop(0, 'rgb(35, 35, 35)');\n\t            grad.addColorStop(1, 'rgb(23, 23, 23)');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            // RULF\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(imageWidth * 0.083333, 0, imageWidth * 0.333333, imageHeight * 0.416666);\n\t            ctx.closePath();\n\t            ctx.restore();\n\t            offsetX = 0.083333;\n\t            offsetY = 0;\n\t            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.416666 * imageHeight + offsetY * imageHeight);\n\t            grad.addColorStop(0, 'rgb(38, 38, 38)');\n\t            grad.addColorStop(1, 'rgb(30, 30, 30)');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            // RLRB\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(imageWidth * 0.5, imageHeight * 0.5, imageWidth * 0.5, imageHeight * 0.5);\n\t            ctx.closePath();\n\t            ctx.restore();\n\t            offsetX = 0.5;\n\t            offsetY = 0.5;\n\t            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.5 * imageHeight + offsetY * imageHeight);\n\t            grad.addColorStop(0, 'rgb(35, 35, 35)');\n\t            grad.addColorStop(1, 'rgb(23, 23, 23)');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            // RLRF\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(imageWidth * 0.583333, imageHeight * 0.5, imageWidth * 0.333333, imageHeight * 0.416666);\n\t            ctx.closePath();\n\t            ctx.restore();\n\t            offsetX = 0.583333;\n\t            offsetY = 0.5;\n\t            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.416666 * imageHeight + offsetY * imageHeight);\n\t            grad.addColorStop(0, 'rgb(38, 38, 38)');\n\t            grad.addColorStop(1, 'rgb(30, 30, 30)');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            // RURB\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(imageWidth * 0.5, 0, imageWidth * 0.5, imageHeight * 0.5);\n\t            ctx.closePath();\n\t            ctx.restore();\n\t            offsetX = 0.5;\n\t            offsetY = 0;\n\t            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.5 * imageHeight + offsetY * imageHeight);\n\t            grad.addColorStop(0, '#303030');\n\t            grad.addColorStop(1, 'rgb(40, 40, 40)');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            // RURF\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(imageWidth * 0.583333, imageHeight * 0.083333, imageWidth * 0.333333, imageHeight * 0.416666);\n\t            ctx.closePath();\n\t            ctx.restore();\n\t            offsetX = 0.583333;\n\t            offsetY = 0.083333;\n\t            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.416666 * imageHeight + offsetY * imageHeight);\n\t            grad.addColorStop(0, 'rgb(53, 53, 53)');\n\t            grad.addColorStop(1, 'rgb(45, 45, 45)');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            // RLLB\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(0, imageHeight * 0.5, imageWidth * 0.5, imageHeight * 0.5);\n\t            ctx.closePath();\n\t            ctx.restore();\n\t            offsetX = 0;\n\t            offsetY = 0.5;\n\t            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.5 * imageHeight + offsetY * imageHeight);\n\t            grad.addColorStop(0, '#303030');\n\t            grad.addColorStop(1, '#282828');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            // RLLF\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.rect(imageWidth * 0.083333, imageHeight * 0.583333, imageWidth * 0.333333, imageHeight * 0.416666);\n\t            ctx.closePath();\n\t            ctx.restore();\n\t            offsetX = 0.083333;\n\t            offsetY = 0.583333;\n\t            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.416666 * imageHeight + offsetY * imageHeight);\n\t            grad.addColorStop(0, '#353535');\n\t            grad.addColorStop(1, '#2d2d2d');\n\t            ctx.fillStyle = grad;\n\t            ctx.fill();\n\t\n\t            ctx.restore();\n\t        });\n\t\n\t    var punchedSheetBuffer = drawToBuffer(15, 15, function (ctx) {\n\t        var imageWidth = ctx.canvas.width,\n\t            imageHeight = ctx.canvas.height,\n\t            grad;\n\t\n\t        ctx.save();\n\t\n\t        // BACK\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.rect(0, 0, imageWidth, imageHeight);\n\t        ctx.closePath();\n\t        ctx.restore();\n\t        ctx.fillStyle = '#1D2123';\n\t        ctx.fill();\n\t\n\t        // ULB\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(0, imageHeight * 0.266666);\n\t        ctx.bezierCurveTo(0, imageHeight * 0.4, imageWidth * 0.066666, imageHeight * 0.466666, imageWidth * 0.2, imageHeight * 0.466666);\n\t        ctx.bezierCurveTo(imageWidth * 0.333333, imageHeight * 0.466666, imageWidth * 0.4, imageHeight * 0.4, imageWidth * 0.4, imageHeight * 0.266666);\n\t        ctx.bezierCurveTo(imageWidth * 0.4, imageHeight * 0.133333, imageWidth * 0.333333, imageHeight * 0.066666, imageWidth * 0.2, imageHeight * 0.066666);\n\t        ctx.bezierCurveTo(imageWidth * 0.066666, imageHeight * 0.066666, 0, imageHeight * 0.133333, 0, imageHeight * 0.266666);\n\t        ctx.closePath();\n\t        grad = ctx.createLinearGradient(0, 0.066666 * imageHeight, 0, 0.466666 * imageHeight);\n\t        grad.addColorStop(0, '#000000');\n\t        grad.addColorStop(1, '#444444');\n\t        ctx.fillStyle = grad;\n\t        ctx.fill();\n\t\n\t        // ULF\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(0, imageHeight * 0.2);\n\t        ctx.bezierCurveTo(0, imageHeight * 0.333333, imageWidth * 0.066666, imageHeight * 0.4, imageWidth * 0.2, imageHeight * 0.4);\n\t        ctx.bezierCurveTo(imageWidth * 0.333333, imageHeight * 0.4, imageWidth * 0.4, imageHeight * 0.333333, imageWidth * 0.4, imageHeight * 0.2);\n\t        ctx.bezierCurveTo(imageWidth * 0.4, imageHeight * 0.066666, imageWidth * 0.333333, 0, imageWidth * 0.2, 0);\n\t        ctx.bezierCurveTo(imageWidth * 0.066666, 0, 0, imageHeight * 0.066666, 0, imageHeight * 0.2);\n\t        ctx.closePath();\n\t        ctx.fillStyle = '#050506';\n\t        ctx.fill();\n\t\n\t        // LRB\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.466666, imageHeight * 0.733333);\n\t        ctx.bezierCurveTo(imageWidth * 0.466666, imageHeight * 0.866666, imageWidth * 0.533333, imageHeight * 0.933333, imageWidth * 0.666666, imageHeight * 0.933333);\n\t        ctx.bezierCurveTo(imageWidth * 0.8, imageHeight * 0.933333, imageWidth * 0.866666, imageHeight * 0.866666, imageWidth * 0.866666, imageHeight * 0.733333);\n\t        ctx.bezierCurveTo(imageWidth * 0.866666, imageHeight * 0.6, imageWidth * 0.8, imageHeight * 0.533333, imageWidth * 0.666666, imageHeight * 0.533333);\n\t        ctx.bezierCurveTo(imageWidth * 0.533333, imageHeight * 0.533333, imageWidth * 0.466666, imageHeight * 0.6, imageWidth * 0.466666, imageHeight * 0.733333);\n\t        ctx.closePath();\n\t        grad = ctx.createLinearGradient(0, 0.533333 * imageHeight, 0, 0.933333 * imageHeight);\n\t        grad.addColorStop(0, '#000000');\n\t        grad.addColorStop(1, '#444444');\n\t        ctx.fillStyle = grad;\n\t        ctx.fill();\n\t\n\t        // LRF\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.moveTo(imageWidth * 0.466666, imageHeight * 0.666666);\n\t        ctx.bezierCurveTo(imageWidth * 0.466666, imageHeight * 0.8, imageWidth * 0.533333, imageHeight * 0.866666, imageWidth * 0.666666, imageHeight * 0.866666);\n\t        ctx.bezierCurveTo(imageWidth * 0.8, imageHeight * 0.866666, imageWidth * 0.866666, imageHeight * 0.8, imageWidth * 0.866666, imageHeight * 0.666666);\n\t        ctx.bezierCurveTo(imageWidth * 0.866666, imageHeight * 0.533333, imageWidth * 0.8, imageHeight * 0.466666, imageWidth * 0.666666, imageHeight * 0.466666);\n\t        ctx.bezierCurveTo(imageWidth * 0.533333, imageHeight * 0.466666, imageWidth * 0.466666, imageHeight * 0.533333, imageWidth * 0.466666, imageHeight * 0.666666);\n\t        ctx.closePath();\n\t        ctx.fillStyle = '#050506';\n\t        ctx.fill();\n\t\n\t        ctx.restore();\n\t    });\n\t\n\t    var brushedMetalTexture = function (color, radius, amount, monochrome, shine) {\n\t\n\t        this.fill = function (startX, startY, endX, endY) {\n\t            var i, x, y,                        // loop counters\n\t                sinArr,\n\t                width, height,\n\t                outCanvas, outCanvasContext,    // output canvas\n\t                inPixels, outPixels,            // pixel arrays\n\t                //alpha = color & 0xff000000;\n\t                alpha = 255,\n\t                red = (color >> 16) & 0xff,\n\t                green = (color >> 8) & 0xff,\n\t                blue = color & 0xff,\n\t                n = 0,\n\t                variation = 255 * amount,\n\t                totR, totG, totB,\n\t                indx, tr, tg, tb, f;\n\t\n\t            startX = Math.floor(startX);\n\t            startY = Math.floor(startY);\n\t            endX = Math.ceil(endX);\n\t            endY = Math.ceil(endY);\n\t\n\t            width = endX - startX;\n\t            height = endY - startY;\n\t\n\t            // Create output canvas\n\t            outCanvas = createBuffer(width, height);\n\t            outCanvasContext = outCanvas.getContext('2d');\n\t\n\t            // Create pixel arrays\n\t            inPixels = outCanvasContext.createImageData(width, height);\n\t            outPixels = outCanvasContext.createImageData(width, height);\n\t\n\t            // Precreate sin() values\n\t            if (shine !== 0) {\n\t                sinArr = [];\n\t                for (i = 0; i < width; i++) {\n\t                    sinArr[i] = (255 * shine * Math.sin(i / width * PI)) | 0;\n\t                }\n\t            }\n\t\n\t            for (y = 0; y < height; y++) {\n\t                // The pixel array is addressed as 4 elements per pixel [r,g,b,a]\n\t                if (radius !== 0) {\n\t                    totR = totG = totB = 0;\n\t                }\n\t                for (x = 0; x < width; x ++) {\n\t                    indx = (y * width * 4) + (x * 4);\n\t                    tr = red;\n\t                    tg = green;\n\t                    tb = blue;\n\t                    if (shine !== 0) {\n\t                        f = sinArr[x];\n\t                        tr += f;\n\t                        tg += f;\n\t                        tb += f;\n\t                    }\n\t\n\t                    if (monochrome) {\n\t                        n = ((2 * Math.random() - 1) * variation) | 0;\n\t                        inPixels.data[indx]   = clamp(tr + n);\n\t                        inPixels.data[indx + 1] = clamp(tg + n);\n\t                        inPixels.data[indx + 2] = clamp(tb + n);\n\t                        inPixels.data[indx + 3] = alpha;\n\t                    } else {\n\t                        inPixels.data[indx]   = random(tr, variation);\n\t                        inPixels.data[indx + 1] = random(tg, variation);\n\t                        inPixels.data[indx + 2] = random(tb, variation);\n\t                        inPixels.data[indx + 3] = alpha;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (radius > 0) {\n\t                horizontalBlur(inPixels, outPixels, width, height, radius, alpha);\n\t                outCanvasContext.putImageData(outPixels, startX, startY);\n\t            } else {\n\t                outCanvasContext.putImageData(inPixels, startX, startY);\n\t            }\n\t            return outCanvas;\n\t        };\n\t\n\t        function random(x, vari) {\n\t            x += ((2 * Math.random() - 1) * vari) | 0;\n\t            return (x < 0 ? 0 : (x > 255 ? 255 : x));\n\t        }\n\t\n\t        function clamp(C) {\n\t            return (C < 0 ? 0 : (C > 255 ? 255 : C));\n\t        }\n\t\n\t        function horizontalBlur(inPix, outPix, width, height, radius, alpha) {\n\t            var x, y,       // loop counters\n\t                i, mul, indx,\n\t                totR, totG, totB;\n\t\n\t            if (radius >= width) {\n\t                radius = width - 1;\n\t            }\n\t            mul = 1 / (radius * 2 + 1);\n\t            indx = 0;\n\t            for (y = 0; y < height; y++) {\n\t                totR = totG = totB = 0;\n\t                for (x = 0; x < radius ; x++) {\n\t                    i = (indx + x) * 4;\n\t                    totR += inPix.data[i];\n\t                    totG += inPix.data[i + 1];\n\t                    totB += inPix.data[i + 2];\n\t                }\n\t                for (x = 0; x < width; x++) {\n\t                    if (x > radius) {\n\t                        i = (indx - radius - 1) * 4;\n\t                        totR -= inPix.data[i];\n\t                        totG -= inPix.data[i + 1];\n\t                        totB -= inPix.data[i + 2];\n\t                    }\n\t                    if (x + radius < width) {\n\t                        i = (indx + radius) * 4;\n\t                        totR += inPix.data[i];\n\t                        totG += inPix.data[i + 1];\n\t                        totB += inPix.data[i + 2];\n\t                    }\n\t                    i = indx * 4;\n\t                    outPix.data[i] = (totR * mul) | 0;\n\t                    outPix.data[i + 1] = (totG * mul) | 0;\n\t                    outPix.data[i + 2] = (totB * mul) | 0;\n\t                    outPix.data[i + 3] = alpha;\n\t                    indx++;\n\t                }\n\t            }\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    //********************************************   T O O L S   *******************************************************\n\t    var RgbaColor = function (r, g, b, a) {\n\t        var red, green, blue, alpha;\n\t\n\t        if (arguments.length === 1) {\n\t            // hexadecimal input #112233\n\t            b = parseInt(r.substr(5, 2), 16);\n\t            g = parseInt(r.substr(3, 2), 16);\n\t            r = parseInt(r.substr(1, 2), 16);\n\t            a = 1;\n\t        } else if (arguments.length === 3) {\n\t            a = 1;\n\t        }\n\t\n\t        function validateColors() {\n\t            red = range(r, 255);\n\t            green = range(g, 255);\n\t            blue = range(b, 255);\n\t            alpha = range(a, 1);\n\t        }\n\t\n\t        validateColors();\n\t\n\t        this.getRed = function () {\n\t            return red;\n\t        };\n\t\n\t        this.setRed = function (r) {\n\t            red = range(r, 255);\n\t        };\n\t\n\t        this.getGreen = function () {\n\t            return green;\n\t        };\n\t\n\t        this.setGreen = function (g) {\n\t            green = range(g, 255);\n\t        };\n\t\n\t        this.getBlue = function () {\n\t            return blue;\n\t        };\n\t\n\t        this.setBlue = function (b) {\n\t            blue = range(b, 255);\n\t        };\n\t\n\t        this.getAlpha = function () {\n\t            return alpha;\n\t        };\n\t\n\t        this.setAlpha = function (a) {\n\t            alpha = range(a, 1);\n\t        };\n\t\n\t        this.getRgbaColor = function () {\n\t            return 'rgba(' + red + ', ' + green + ', ' + blue + ', ' + alpha + ')';\n\t        };\n\t\n\t        this.getRgbColor = function () {\n\t            return 'rgb(' + red + ', ' + green + ', ' + blue + ')';\n\t        };\n\t\n\t        this.getHexColor = function () {\n\t            return '#' + red.toString(16) + green.toString(16) + blue.toString(16);\n\t        };\n\t    };\n\t\n\t    var ConicalGradient = function (fractions, colors) {\n\t        var limit = fractions.length - 1,\n\t            i;\n\t\n\t        // Pre-multipy fractions array into range -PI to PI\n\t        for (i = 0; i <= limit; i++) {\n\t            fractions[i] = TWO_PI * fractions[i] - PI;\n\t        }\n\t\n\t        this.fillCircle = function (ctx, centerX, centerY, innerX, outerX) {\n\t            var angle,\n\t                radius = Math.ceil(outerX),\n\t                diameter = radius * 2,\n\t                pixels, alpha,\n\t                x, y, dx, dy, dy2, distance,\n\t                indx, pixColor,\n\t                buffer, bufferCtx;\n\t\n\t// Original Version using rotated lines\n\t/*\n\t            ctx.save();\n\t            ctx.lineWidth = 1.5;\n\t            ctx.translate(centerX, centerY);\n\t            ctx.rotate(rotationOffset);\n\t            ctx.translate(-centerX, -centerY);\n\t            for (i = 0, size = fractions.length - 1; i < size; i++) {\n\t                startAngle = TWO_PI * fractions[i];\n\t                stopAngle = TWO_PI * fractions[i + 1];\n\t                range = stopAngle - startAngle;\n\t                startColor = colors[i];\n\t                stopColor = colors[i + 1];\n\t                for (angle = startAngle; angle < stopAngle; angle += angleStep) {\n\t                    ctx.beginPath();\n\t                    ctx.fillStyle = getColorFromFraction(startColor, stopColor, range, (angle - startAngle)).getRgbaColor();\n\t                    ctx.strokeStyle = ctx.fillStyle;\n\t                    if (innerX > 0) {\n\t                        ctx.arc(centerX, centerY, innerX, angle + angleStep, angle, true);\n\t                    } else {\n\t                        ctx.moveTo(centerX, centerY);\n\t                    }\n\t                    ctx.arc(centerX, centerY, outerX, angle, angle + angleStep);\n\t                    ctx.fill();\n\t                    ctx.stroke();\n\t                }\n\t            }\n\t*/\n\t// End - Original Version\n\t\n\t            // Create pixel array\n\t            pixels = ctx.createImageData(diameter, diameter);\n\t            alpha = 255;\n\t\n\t            for (y = 0; y < diameter; y++) {\n\t                dy = radius - y;\n\t                dy2 = dy * dy;\n\t                for (x = 0; x < diameter; x++) {\n\t                    dx = x - radius;\n\t                    distance = Math.sqrt((dx * dx) + dy2);\n\t                    if (distance <= radius && distance >= innerX) { // pixels are transparent by default, so only paint the ones we need\n\t                        angle = Math.atan2(dx, dy);\n\t                        for (i = 0; i < limit; i++) {\n\t                            if (angle >= fractions[i] && angle < fractions[i + 1]) {\n\t                                pixColor = getColorFromFraction(colors[i], colors[i + 1], fractions[i + 1] - fractions[i], angle - fractions[i], true);\n\t                            }\n\t                        }\n\t                        // The pixel array is addressed as 4 elements per pixel [r,g,b,a]\n\t                        indx = ((diameter - y) * diameter * 4) + (x * 4);  // plot is 180 rotated from orginal method, so apply a simple invert (diameter - y)\n\t                        pixels.data[indx]     = pixColor[0];\n\t                        pixels.data[indx + 1] = pixColor[1];\n\t                        pixels.data[indx + 2] = pixColor[2];\n\t                        pixels.data[indx + 3] = alpha;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // Create a new buffer to apply the raw data so we can rotate it\n\t            buffer = createBuffer(diameter, diameter);\n\t            bufferCtx = buffer.getContext('2d');\n\t            bufferCtx.putImageData(pixels, 0, 0);\n\t            // Apply the image buffer\n\t            ctx.drawImage(buffer, centerX - radius, centerY - radius);\n\t        };\n\t\n\t        this.fillRect = function (ctx, centerX, centerY, width, height, thicknessX, thicknessY) {\n\t            var angle,\n\t                width2,\n\t                height2,\n\t                pixels, alpha,\n\t                x, y, dx, dy,\n\t                indx,\n\t                pixColor,\n\t                buffer, bufferCtx;\n\t\n\t            width = Math.ceil(width);\n\t            height = Math.ceil(height);\n\t            width2 = width / 2;\n\t            height2 = height / 2;\n\t            thicknessX = Math.ceil(thicknessX);\n\t            thicknessY = Math.ceil(thicknessY);\n\t\n\t            // Create pixel array\n\t            pixels = ctx.createImageData(width, height);\n\t            alpha = 255;\n\t\n\t            for (y = 0; y < height; y++) {\n\t                dy = height2 - y;\n\t                for (x = 0; x < width; x++) {\n\t                    if (y > thicknessY && y < height - thicknessY) {\n\t                        // we are in the range where we only draw the sides\n\t                        if (x > thicknessX && x < width - thicknessX) {\n\t                            // we are in the empty 'middle', jump to the next edge\n\t                            x = width - thicknessX;\n\t                        }\n\t                    }\n\t                    dx = x - width2;\n\t                    angle = Math.atan2(dx, dy);\n\t                    for (i = 0; i < limit; i++) {\n\t                        if (angle >= fractions[i] && angle < fractions[i + 1]) {\n\t                            pixColor = getColorFromFraction(colors[i], colors[i + 1], fractions[i + 1] - fractions[i], angle - fractions[i], true);\n\t                        }\n\t                    }\n\t                    // The pixel array is addressed as 4 elements per pixel [r,g,b,a]\n\t                    indx = ((height - y) * width * 4) + (x * 4); // plot is 180 rotated from orginal method, so apply a simple invert (height - y)\n\t                    pixels.data[indx]     = pixColor[0];\n\t                    pixels.data[indx + 1] = pixColor[0];\n\t                    pixels.data[indx + 2] = pixColor[0];\n\t                    pixels.data[indx + 3] = alpha;\n\t                }\n\t            }\n\t            // Create a new buffer to apply the raw data so we can clip it when drawing to canvas\n\t            buffer = createBuffer(width, height);\n\t            bufferCtx = buffer.getContext('2d');\n\t            bufferCtx.putImageData(pixels, 0, 0);\n\t\n\t            // draw the buffer back to the canvas\n\t            ctx.drawImage(buffer, centerX - width2, centerY - height2);\n\t        };\n\t\n\t    };\n\t\n\t    var GradientWrapper = function (start, end, fractions, colors) {\n\t\n\t        this.getColorAt = function (fraction) {\n\t            var lowerLimit = 0,\n\t                lowerIndex = 0,\n\t                upperLimit = 1,\n\t                upperIndex = 1,\n\t                i,\n\t                interpolationFraction;\n\t\n\t            fraction = (fraction < 0 ? 0 : (fraction > 1 ? 1 : fraction));\n\t\n\t            for (i = 0; i < fractions.length; i++) {\n\t                if (fractions[i] < fraction && lowerLimit < fractions[i]) {\n\t                    lowerLimit = fractions[i];\n\t                    lowerIndex = i;\n\t                }\n\t                if (fractions[i] === fraction) {\n\t                    return colors[i];\n\t                }\n\t                if (fractions[i] > fraction && upperLimit >= fractions[i]) {\n\t                    upperLimit = fractions[i];\n\t                    upperIndex = i;\n\t                }\n\t            }\n\t            interpolationFraction = (fraction - lowerLimit) / (upperLimit - lowerLimit);\n\t            return getColorFromFraction(colors[lowerIndex], colors[upperIndex], 1, interpolationFraction);\n\t        };\n\t\n\t        this.getStart = function () {\n\t            return start;\n\t        };\n\t\n\t        this.getEnd = function () {\n\t            return end;\n\t        };\n\t    };\n\t\n\t    function setAlpha(hex, alpha) {\n\t        var hexColor = ('#' === hex.charAt(0)) ? hex.substring(1, 7) : hex,\n\t            red = parseInt((hexColor).substring(0, 2), 16),\n\t            green = parseInt((hexColor).substring(2, 4), 16),\n\t            blue = parseInt((hexColor).substring(4, 6), 16);\n\t\n\t        this.color = 'rgba(' + red + ',' + green + ',' + blue + ',' + alpha + ')';\n\t\n\t        return this;\n\t    }\n\t\n\t    function getColorFromFraction(sourceColor, destinationColor, range, fraction, returnRawData) {\n\t        var INT_TO_FLOAT = 1 / 255,\n\t            sourceRed = sourceColor.getRed(),\n\t            sourceGreen = sourceColor.getGreen(),\n\t            sourceBlue = sourceColor.getBlue(),\n\t            sourceAlpha = sourceColor.getAlpha(),\n\t\n\t            deltaRed = destinationColor.getRed() - sourceRed,\n\t            deltaGreen = destinationColor.getGreen() - sourceGreen,\n\t            deltaBlue = destinationColor.getBlue() - sourceBlue,\n\t            deltaAlpha = destinationColor.getAlpha() * INT_TO_FLOAT - sourceAlpha * INT_TO_FLOAT,\n\t\n\t            fractionRed = deltaRed / range * fraction,\n\t            fractionGreen = deltaGreen / range * fraction,\n\t            fractionBlue = deltaBlue / range * fraction,\n\t            fractionAlpha = deltaAlpha / range * fraction;\n\t\n\t        returnRawData = returnRawData || false;\n\t        if (returnRawData) {\n\t            return [(sourceRed + fractionRed).toFixed(0), (sourceGreen + fractionGreen).toFixed(0), (sourceBlue + fractionBlue).toFixed(0), sourceAlpha + fractionAlpha];\n\t        } else {\n\t            return new RgbaColor((sourceRed + fractionRed).toFixed(0), (sourceGreen + fractionGreen).toFixed(0), (sourceBlue + fractionBlue).toFixed(0), sourceAlpha + fractionAlpha);\n\t        }\n\t    }\n\t\n\t    function section(start, stop, color) {\n\t        return {start : start,\n\t                stop : stop,\n\t                color : color};\n\t    }\n\t\n\t    Math.log10 = function (value) {\n\t        return (Math.log(value) / Math.LN10);\n\t    };\n\t\n\t    function calcNiceNumber(range, round) {\n\t        var exponent = Math.floor(Math.log10(range)),   // exponent of range\n\t            fraction = range / Math.pow(10, exponent),  // fractional part of range\n\t            niceFraction;                               // nice, rounded fraction\n\t\n\t        if (round) {\n\t            if (1.5 > fraction) {\n\t                niceFraction = 1;\n\t            } else if (3 > fraction) {\n\t                niceFraction = 2;\n\t            } else if (7 > fraction) {\n\t                niceFraction = 5;\n\t            } else {\n\t                niceFraction = 10;\n\t            }\n\t        } else {\n\t            if (1 >= fraction) {\n\t                niceFraction = 1;\n\t            } else if (2 >= fraction) {\n\t                niceFraction = 2;\n\t            } else if (5 >= fraction) {\n\t                niceFraction = 5;\n\t            } else {\n\t                niceFraction = 10;\n\t            }\n\t        }\n\t        return niceFraction * Math.pow(10, exponent);\n\t    }\n\t\n\t    function roundedRectangle(ctx, x, y, w, h, radius) {\n\t        var r = x + w,\n\t            b = y + h;\n\t        ctx.beginPath();\n\t        ctx.moveTo(x + radius, y);\n\t        ctx.lineTo(r - radius, y);\n\t        ctx.quadraticCurveTo(r, y, r, y + radius);\n\t        ctx.lineTo(r, y + h - radius);\n\t        ctx.quadraticCurveTo(r, b, r - radius, b);\n\t        ctx.lineTo(x + radius, b);\n\t        ctx.quadraticCurveTo(x, b, x, b - radius);\n\t        ctx.lineTo(x, y + radius);\n\t        ctx.quadraticCurveTo(x, y, x + radius, y);\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t    }\n\t\n\t    function createBuffer(width, height) {\n\t        var buffer = doc.createElement('canvas');\n\t        buffer.width = width;\n\t        buffer.height = height;\n\t        return buffer;\n\t    }\n\t\n\t    function drawToBuffer(width, height, drawFunction) {\n\t        var buffer = doc.createElement('canvas');\n\t        buffer.width = width;\n\t        buffer.height = height;\n\t        drawFunction(buffer.getContext('2d'));\n\t        return buffer;\n\t    }\n\t\n\t    function getColorValues(color) {\n\t        var colorData,\n\t            lookupBuffer = drawToBuffer(1, 1, function (ctx) {\n\t                ctx.fillStyle = color;\n\t                ctx.beginPath();\n\t                ctx.rect(0, 0, 1, 1);\n\t                ctx.fill();\n\t            });\n\t        colorData = lookupBuffer.getContext('2d').getImageData(0, 0, 2, 2).data;\n\t\n\t        /*\n\t        for (var i = 0; i < data.length; i += 4) {\n\t            var red = data[i];       // red\n\t            var green = data[i + 1]; // green\n\t            var blue = data[i + 2];  // blue\n\t            //var alpha = data[i + 3]; // alpha\n\t            console.log(red + ', ' + green + ', ' + blue);\n\t        }\n\t        */\n\t\n\t        return [colorData[0], colorData[1], colorData[2], colorData[3]];\n\t    }\n\t\n\t    function customColorDef(color) {\n\t        var VERY_DARK,\n\t            DARK,\n\t            LIGHT,\n\t            LIGHTER,\n\t            VERY_LIGHT,\n\t            values = getColorValues(color),\n\t            rgbaCol = new RgbaColor(values[0], values[1], values[2], values[3]);\n\t\n\t        VERY_DARK = darker(rgbaCol, 0.32);\n\t        DARK = darker(rgbaCol, 0.62);\n\t        LIGHT = lighter(rgbaCol, 0.84);\n\t        LIGHTER = lighter(rgbaCol, 0.94);\n\t        VERY_LIGHT = lighter(rgbaCol, 1);\n\t\n\t        return new ColorDef(VERY_DARK, DARK, rgbaCol, LIGHT, LIGHTER, VERY_LIGHT);\n\t    }\n\t\n\t    function rgbToHsl(red, green, blue) {\n\t        var min, max, hue, saturation, lightness, delta;\n\t\n\t        red /= 255;\n\t        green /= 255;\n\t        blue /= 255;\n\t\n\t        max = Math.max(red, green, blue);\n\t        min = Math.min(red, green, blue);\n\t        lightness = (max + min) / 2;\n\t\n\t        if (max === min) {\n\t            hue = saturation = 0; // achromatic\n\t        } else {\n\t            delta = max - min;\n\t            saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n\t            switch (max) {\n\t            case red:\n\t                hue = (green - blue) / delta + (green < blue ? 6 : 0);\n\t                break;\n\t            case green:\n\t                hue = (blue - red) / delta + 2;\n\t                break;\n\t            case blue:\n\t                hue = (red - green) / delta + 4;\n\t                break;\n\t            }\n\t            hue /= 6;\n\t        }\n\t        return [hue, saturation, lightness];\n\t    }\n\t\n\t/* These functions are not currently used\n\t    function hslToRgb(hue, saturation, lightness) {\n\t        var red, green, blue, p, q;\n\t\n\t        function hue2rgb(p, q, t) {\n\t            if (t < 0) {\n\t                t += 1;\n\t            }\n\t            if (t > 1) {\n\t                t -= 1;\n\t            }\n\t            if (t < 1 / 6) {\n\t                return p + (q - p) * 6 * t;\n\t            }\n\t            if (t < 1 / 2) {\n\t                return q;\n\t            }\n\t            if (t < 2 / 3) {\n\t                return p + (q - p) * (2 / 3 - t) * 6;\n\t            }\n\t            return p;\n\t        }\n\t\n\t        if (saturation === 0) {\n\t            red = green = blue = lightness; // achromatic\n\t        } else {\n\t            q = (lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation);\n\t            p = 2 * lightness - q;\n\t            red = hue2rgb(p, q, hue + 1 / 3);\n\t            green = hue2rgb(p, q, hue);\n\t            blue = hue2rgb(p, q, hue - 1 / 3);\n\t        }\n\t\n\t        return [Math.floor(red * 255), Math.floor(green * 255), Math.floor(blue * 255)];\n\t    }\n\t\n\t    function hsbToHsl(hue, saturation, brightness) {\n\t        var lightness = (brightness - saturation) / 2;\n\t        lightness = range(lightness, 1);\n\t        return [hue, saturation, lightness];\n\t    }\n\t\n\t    function hslToHsb(hue, saturation, lightness) {\n\t        var brightness = (lightness * 2) + saturation;\n\t        return [hue, saturation, brightness];\n\t    }\n\t*/\n\t\n\t    function hsbToRgb(hue, saturation, brightness) {\n\t        var r, g, b,\n\t            i = Math.floor(hue * 6),\n\t            f = hue * 6 - i,\n\t            p = brightness * (1 - saturation),\n\t            q = brightness * (1 - f * saturation),\n\t            t = brightness * (1 - (1 - f) * saturation);\n\t\n\t        switch (i % 6) {\n\t        case 0:\n\t            r = brightness;\n\t            g = t;\n\t            b = p;\n\t            break;\n\t        case 1:\n\t            r = q;\n\t            g = brightness;\n\t            b = p;\n\t            break;\n\t        case 2:\n\t            r = p;\n\t            g = brightness;\n\t            b = t;\n\t            break;\n\t        case 3:\n\t            r = p;\n\t            g = q;\n\t            b = brightness;\n\t            break;\n\t        case 4:\n\t            r = t;\n\t            g = p;\n\t            b = brightness;\n\t            break;\n\t        case 5:\n\t            r = brightness;\n\t            g = p;\n\t            b = q;\n\t            break;\n\t        }\n\t\n\t        return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n\t    }\n\t\n\t    function rgbToHsb(r, g, b) {\n\t        var min, max, hue, saturation, brightness, delta;\n\t\n\t        r = r / 255;\n\t        g = g / 255;\n\t        b = b / 255;\n\t        max = Math.max(r, g, b);\n\t        min = Math.min(r, g, b);\n\t        brightness = max;\n\t        delta = max - min;\n\t        saturation = max === 0 ? 0 : delta / max;\n\t\n\t        if (max === min) {\n\t            hue = 0; // achromatic\n\t        } else {\n\t            switch (max) {\n\t            case r:\n\t                hue = (g - b) / delta + (g < b ? 6 : 0);\n\t                break;\n\t            case g:\n\t                hue = (b - r) / delta + 2;\n\t                break;\n\t            case b:\n\t                hue = (r - g) / delta + 4;\n\t                break;\n\t            }\n\t            hue /= 6;\n\t        }\n\t        return [hue, saturation, brightness];\n\t    }\n\t\n\t    function range(value, limit) {\n\t        return (value < 0 ? 0 : (value > limit ? limit : value));\n\t    }\n\t\n\t    function darker(color, fraction) {\n\t        var red = Math.floor(color.getRed() * (1 - fraction)),\n\t            green = Math.floor(color.getGreen() * (1 - fraction)),\n\t            blue = Math.floor(color.getBlue() * (1 - fraction));\n\t\n\t        red = range(red, 255);\n\t        green = range(green, 255);\n\t        blue = range(blue, 255);\n\t\n\t        return new RgbaColor(red, green, blue, color.getAlpha());\n\t    }\n\t\n\t    function lighter(color, fraction) {\n\t        var red = Math.round(color.getRed() * (1 + fraction)),\n\t            green = Math.round(color.getGreen() * (1 + fraction)),\n\t            blue = Math.round(color.getBlue() * (1 + fraction));\n\t\n\t        red = range(red, 255);\n\t        green = range(green, 255);\n\t        blue = range(blue, 255);\n\t\n\t        return new RgbaColor(red, green, blue, color.getAlpha());\n\t    }\n\t\n\t    function wrap(value, lower, upper) {\n\t        var distance, times;\n\t        if (upper <= lower) {\n\t            throw 'Rotary bounds are of negative or zero size';\n\t        }\n\t\n\t        distance = upper - lower;\n\t        times = Math.floor((value - lower) / distance);\n\t\n\t        return value - (times * distance);\n\t    }\n\t\n\t    function getShortestAngle(from, to) {\n\t        return wrap((to - from), -180, 180);\n\t    }\n\t\n\t    // shim layer\n\t    var requestAnimFrame = (function () {\n\t        return  window.requestAnimationFrame   ||\n\t            window.webkitRequestAnimationFrame ||\n\t            window.mozRequestAnimationFrame    ||\n\t            window.oRequestAnimationFrame      ||\n\t            window.msRequestAnimationFrame     ||\n\t            function (callback) {\n\t                window.setTimeout(callback, 1000 / 16);\n\t            };\n\t    }());\n\t\n\t    function getCanvasContext(elementOrId) {\n\t        var element = (typeof elementOrId === 'string' || elementOrId instanceof String) ?\n\t            doc.getElementById(elementOrId) : elementOrId;\n\t        return element.getContext('2d');\n\t    }\n\t\n\t/*\n\t    function blur(ctx, width, height, radius) {\n\t    // This function is too CPU expensive\n\t    // leave disabled for now :(\n\t\n\t        // Cheap'n'cheerful blur filter, just applies horizontal and vertical blurs\n\t        // Only works for square canvas's at present\n\t\n\t        var j, x, y,      // loop counters\n\t            i,\n\t            end,\n\t            totR, totG, totB, totA,\n\t            // Create a temporary buffer\n\t            tempBuffer = createBuffer(width, height),\n\t            tempCtx = tempBuffer.getContext('2d'),\n\t            // pixel data\n\t            inPix, outPix,\n\t            mul,\n\t            indx;\n\t\n\t        ctx.save();\n\t\n\t        for (j = 0; j < 2; j++) {\n\t            // Get access to the pixel data\n\t            inPix = ctx.getImageData(0, 0, (j === 0 ? width : height), (j === 0 ? height : width));\n\t            outPix = ctx.createImageData((j === 0 ? width : height), (j === 0 ? height : width));\n\t\n\t            if (j === 0) { // Horizontal blur\n\t                if (radius >= width) {\n\t                    radius = width - 1;\n\t                }\n\t            } else { // Vertical blur\n\t                if (radius >= height) {\n\t                    radius = height - 1;\n\t                }\n\t            }\n\t            mul = 1 / (radius * 2 + 1);\n\t            indx = 0;\n\t            for (y = 0, end = (j === 0 ? height : width); y < end; y++) {\n\t                totR = totG = totB = totA = 0;\n\t                for (x = 0; x < radius ; x++) {\n\t                    i = (indx + x) * 4;\n\t                    totR += inPix.data[i];\n\t                    totG += inPix.data[i + 1];\n\t                    totB += inPix.data[i + 2];\n\t                    totA += inPix.data[i + 3];\n\t                }\n\t                for (x = 0; x < (j === 0 ? width : height); x++) {\n\t                    if (x > radius) {\n\t                        i = (indx - radius - 1) * 4;\n\t                        totR -= inPix.data[i];\n\t                        totG -= inPix.data[i + 1];\n\t                        totB -= inPix.data[i + 2];\n\t                        totA -= inPix.data[i + 3];\n\t                    }\n\t                    if (x + radius < width) {\n\t                        i = (indx + radius) * 4;\n\t                        totR += inPix.data[i];\n\t                        totG += inPix.data[i + 1];\n\t                        totB += inPix.data[i + 2];\n\t                        totA += inPix.data[i + 3];\n\t                    }\n\t                    i = indx * 4;\n\t                    outPix.data[i] = (totR * mul) | 0;\n\t                    outPix.data[i + 1] = (totG * mul) | 0;\n\t                    outPix.data[i + 2] = (totB * mul) | 0;\n\t                    outPix.data[i + 3] = (totA * mul) | 0;\n\t                    indx++;\n\t                }\n\t            }\n\t            // Write the output pixel data back to the temp buffer\n\t            tempCtx.clearRect(0, 0, width, height);\n\t            tempCtx.putImageData(outPix, 0, 0);\n\t            if (j === 0) {\n\t                // Clear the input canvas\n\t                ctx.clearRect(0, 0, width, height);\n\t                // Rotate image by 90 degrees\n\t                ctx.translate(width / 2, height / 2);\n\t                ctx.rotate(HALF_PI);\n\t                ctx.translate(-width / 2, -height / 2);\n\t                // Write the buffer back\n\t                ctx.drawImage(tempBuffer, 0, 0);\n\t            }\n\t        }\n\t        ctx.translate(width / 2, height / 2);\n\t        ctx.rotate(-PI);\n\t        ctx.translate(-width / 2, -height / 2);\n\t        // Clear the input canvas\n\t        ctx.clearRect(0, 0, width, height);\n\t        ctx.drawImage(tempBuffer, 0, 0);\n\t        ctx.restore();\n\t\n\t    }\n\t*/\n\t    //****************************************   C O N S T A N T S   ***************************************************\n\t    var BackgroundColorDef;\n\t    (function () {\n\t        BackgroundColorDef = function (gradientStart, gradientFraction, gradientStop, labelColor, symbolColor, name) {\n\t            this.gradientStart = gradientStart;\n\t            this.gradientFraction = gradientFraction;\n\t            this.gradientStop = gradientStop;\n\t            this.labelColor = labelColor;\n\t            this.symbolColor = symbolColor;\n\t            this.name = name;\n\t        };\n\t    }());\n\t\n\t    var LcdColorDef;\n\t    (function () {\n\t        LcdColorDef = function (gradientStartColor, gradientFraction1Color, gradientFraction2Color, gradientFraction3Color, gradientStopColor, textColor) {\n\t            this.gradientStartColor = gradientStartColor;\n\t            this.gradientFraction1Color = gradientFraction1Color;\n\t            this.gradientFraction2Color = gradientFraction2Color;\n\t            this.gradientFraction3Color = gradientFraction3Color;\n\t            this.gradientStopColor = gradientStopColor;\n\t            this.textColor = textColor;\n\t        };\n\t    }());\n\t\n\t    var ColorDef;\n\t    (function () {\n\t        ColorDef = function (veryDark, dark, medium, light, lighter, veryLight) {\n\t            this.veryDark = veryDark;\n\t            this.dark = dark;\n\t            this.medium = medium;\n\t            this.light = light;\n\t            this.lighter = lighter;\n\t            this.veryLight = veryLight;\n\t        };\n\t    }());\n\t\n\t    var LedColorDef;\n\t    (function () {\n\t        LedColorDef = function (innerColor1_ON, innerColor2_ON, outerColor_ON, coronaColor, innerColor1_OFF, innerColor2_OFF, outerColor_OFF) {\n\t            this.innerColor1_ON = innerColor1_ON;\n\t            this.innerColor2_ON = innerColor2_ON;\n\t            this.outerColor_ON = outerColor_ON;\n\t            this.coronaColor = coronaColor;\n\t            this.innerColor1_OFF = innerColor1_OFF;\n\t            this.innerColor2_OFF = innerColor2_OFF;\n\t            this.outerColor_OFF = outerColor_OFF;\n\t        };\n\t    }());\n\t\n\t    var GaugeTypeDef;\n\t    (function () {\n\t        GaugeTypeDef = function (type) {\n\t            this.type = type;\n\t        };\n\t    }());\n\t\n\t    var OrientationDef;\n\t    (function () {\n\t        OrientationDef = function (type) {\n\t            this.type = type;\n\t        };\n\t    }());\n\t\n\t    var KnobTypeDef;\n\t    (function () {\n\t        KnobTypeDef = function (type) {\n\t            this.type = type;\n\t        };\n\t    }());\n\t\n\t    var KnobStyleDef;\n\t    (function () {\n\t        KnobStyleDef = function (style) {\n\t            this.style = style;\n\t        };\n\t    }());\n\t\n\t    var FrameDesignDef;\n\t    (function () {\n\t        FrameDesignDef = function (design) {\n\t            this.design = design;\n\t        };\n\t    }());\n\t\n\t    var PointerTypeDef;\n\t    (function () {\n\t        PointerTypeDef = function (type) {\n\t            this.type = type;\n\t        };\n\t    }());\n\t\n\t    var ForegroundTypeDef;\n\t    (function () {\n\t        ForegroundTypeDef = function (type) {\n\t            this.type = type;\n\t        };\n\t    }());\n\t\n\t    var LabelNumberFormatDef;\n\t    (function () {\n\t        LabelNumberFormatDef = function (format) {\n\t            this.format = format;\n\t        };\n\t    }());\n\t\n\t    var TickLabelOrientationDef;\n\t    (function () {\n\t        TickLabelOrientationDef = function (type) {\n\t            this.type = type;\n\t        };\n\t    }());\n\t\n\t    var TrendStateDef;\n\t    (function () {\n\t        TrendStateDef = function (state) {\n\t            this.state = state;\n\t        };\n\t    }());\n\t\n\t    //*************************   I m p l e m e n t a t i o n s   o f   d e f i n i t i o n s   ************************\n\t    var backgroundColor = {\n\t        DARK_GRAY: new BackgroundColorDef(new RgbaColor(0, 0, 0, 1), new RgbaColor(51, 51, 51, 1), new RgbaColor(153, 153, 153, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(180, 180, 180, 1), 'DARK_GRAY'),\n\t        SATIN_GRAY: new BackgroundColorDef(new RgbaColor(45, 57, 57, 1), new RgbaColor(45, 57, 57, 1), new RgbaColor(45, 57, 57, 1), new RgbaColor(167, 184, 180, 1), new RgbaColor(137, 154, 150, 1), 'SATIN_GRAY'),\n\t        LIGHT_GRAY: new BackgroundColorDef(new RgbaColor(130, 130, 130, 1), new RgbaColor(181, 181, 181, 1), new RgbaColor(253, 253, 253, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'LIGHT_GRAY'),\n\t        WHITE: new BackgroundColorDef(new RgbaColor(255, 255, 255, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'WHITE'),\n\t        BLACK: new BackgroundColorDef(new RgbaColor(0, 0, 0, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(150, 150, 150, 1), 'BLACK'),\n\t        BEIGE: new BackgroundColorDef(new RgbaColor(178, 172, 150, 1), new RgbaColor(204, 205, 184, 1), new RgbaColor(231, 231, 214, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'BEIGE'),\n\t        BROWN: new BackgroundColorDef(new RgbaColor(245, 225, 193, 1), new RgbaColor(245, 225, 193, 1), new RgbaColor(255, 250, 240, 1), new RgbaColor(109, 73, 47, 1), new RgbaColor(89, 53, 27, 1), 'BROWN'),\n\t        RED: new BackgroundColorDef(new RgbaColor(198, 93, 95, 1), new RgbaColor(212, 132, 134, 1), new RgbaColor(242, 218, 218, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(90, 0, 0, 1), 'RED'),\n\t        GREEN: new BackgroundColorDef(new RgbaColor(65, 120, 40, 1), new RgbaColor(129, 171, 95, 1), new RgbaColor(218, 237, 202, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(0, 90, 0, 1), 'GREEN'),\n\t        BLUE: new BackgroundColorDef(new RgbaColor(45, 83, 122, 1), new RgbaColor(115, 144, 170, 1), new RgbaColor(227, 234, 238, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(0, 0, 90, 1), 'BLUE'),\n\t        ANTHRACITE: new BackgroundColorDef(new RgbaColor(50, 50, 54, 1), new RgbaColor(47, 47, 51, 1), new RgbaColor(69, 69, 74, 1), new RgbaColor(250, 250, 250, 1), new RgbaColor(180, 180, 180, 1), 'ANTHRACITE'),\n\t        MUD: new BackgroundColorDef(new RgbaColor(80, 86, 82, 1), new RgbaColor(70, 76, 72, 1), new RgbaColor(57, 62, 58, 1), new RgbaColor(255, 255, 240, 1), new RgbaColor(225, 225, 210, 1), 'MUD'),\n\t        PUNCHED_SHEET: new BackgroundColorDef(new RgbaColor(50, 50, 54, 1), new RgbaColor(47, 47, 51, 1), new RgbaColor(69, 69, 74, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(180, 180, 180, 1), 'PUNCHED_SHEET'),\n\t        CARBON: new BackgroundColorDef(new RgbaColor(50, 50, 54, 1), new RgbaColor(47, 47, 51, 1), new RgbaColor(69, 69, 74, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(180, 180, 180, 1), 'CARBON'),\n\t        STAINLESS: new BackgroundColorDef(new RgbaColor(130, 130, 130, 1), new RgbaColor(181, 181, 181, 1), new RgbaColor(253, 253, 253, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'STAINLESS'),\n\t        BRUSHED_METAL: new BackgroundColorDef(new RgbaColor(50, 50, 54, 1), new RgbaColor(47, 47, 51, 1), new RgbaColor(69, 69, 74, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'BRUSHED_METAL'),\n\t        BRUSHED_STAINLESS: new BackgroundColorDef(new RgbaColor(50, 50, 54, 1), new RgbaColor(47, 47, 51, 1), new RgbaColor(110, 110, 112, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'BRUSHED_STAINLESS'),\n\t        TURNED: new BackgroundColorDef(new RgbaColor(130, 130, 130, 1), new RgbaColor(181, 181, 181, 1), new RgbaColor(253, 253, 253, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'TURNED')\n\t    };\n\t\n\t    var lcdColor = {\n\t        BEIGE: new LcdColorDef('#c8c8b1', 'rgb(241, 237, 207)', 'rgb(234, 230, 194)', 'rgb(225, 220, 183)', 'rgb(237, 232, 191)', '#000000'),\n\t        BLUE: new LcdColorDef('#ffffff', 'rgb(231, 246, 255)', 'rgb(170, 224, 255)', 'rgb(136, 212, 255)', 'rgb(192, 232, 255)', '#124564'),\n\t        ORANGE: new LcdColorDef('#ffffff', 'rgb(255, 245, 225)', 'rgb(255, 217, 147)', 'rgb(255, 201, 104)', 'rgb(255, 227, 173)', '#503700'),\n\t        RED: new LcdColorDef('#ffffff', 'rgb(255, 225, 225)', 'rgb(253, 152, 152)', 'rgb(252, 114, 115)', 'rgb(254, 178, 178)', '#4f0c0e'),\n\t        YELLOW: new LcdColorDef('#ffffff', 'rgb(245, 255, 186)', 'rgb(210, 255, 0)', 'rgb(158, 205, 0)', 'rgb(210, 255, 0)', '#405300'),\n\t        WHITE: new LcdColorDef('#ffffff', '#ffffff', 'rgb(241, 246, 242)', 'rgb(229, 239, 244)', '#ffffff', '#000000'),\n\t        GRAY: new LcdColorDef('#414141', 'rgb(117, 117, 117)', 'rgb(87, 87, 87)', '#414141', 'rgb(81, 81, 81)', '#ffffff'),\n\t        BLACK: new LcdColorDef('#414141', '#666666', '#333333', '#000000', '#333333', '#cccccc'),\n\t        GREEN: new LcdColorDef('rgb(33, 67, 67)', 'rgb(33, 67, 67)', 'rgb(29, 58, 58)', 'rgb(28, 57, 57)', 'rgb(23, 46, 46)', 'rgba(0, 185, 165, 255)'),\n\t        BLUE2: new LcdColorDef('rgb(0, 68, 103)', 'rgb(8, 109, 165)', 'rgb(0, 72, 117)', 'rgb(0, 72, 117)', 'rgb(0, 68, 103)', 'rgb(111, 182, 228)'),\n\t        BLUE_BLACK: new LcdColorDef('rgb(22, 125, 212)', 'rgb(3, 162, 254)', 'rgb(3, 162, 254)', 'rgb(3, 162, 254)', 'rgb(11, 172, 244)', '#000000'),\n\t        BLUE_DARKBLUE: new LcdColorDef('rgb(18, 33, 88)', 'rgb(18, 33, 88)', 'rgb(19, 30, 90)', 'rgb(17, 31, 94)', 'rgb(21, 25, 90)', 'rgb(23, 99, 221)'),\n\t        BLUE_GRAY: new LcdColorDef('rgb(135, 174, 255)', 'rgb(101, 159, 255)', 'rgb(44, 93, 255)', 'rgb(27, 65, 254)', 'rgb(12, 50, 255)', '#b2b4ed'),\n\t        STANDARD: new LcdColorDef('rgb(131, 133, 119)', 'rgb(176, 183, 167)', 'rgb(165, 174, 153)', 'rgb(166, 175, 156)', 'rgb(175, 184, 165)', 'rgb(35, 42, 52)'),\n\t        STANDARD_GREEN: new LcdColorDef('#ffffff', 'rgb(219, 230, 220)', 'rgb(179, 194, 178)', 'rgb(153, 176, 151)', 'rgb(114, 138, 109)', '#080C06'),\n\t        BLUE_BLUE: new LcdColorDef('rgb(100, 168, 253)', 'rgb(100, 168, 253)', 'rgb(95, 160, 250)', 'rgb(80, 144, 252)', 'rgb(74, 134, 255)', '#002cbb'),\n\t        RED_DARKRED: new LcdColorDef('rgb(72, 36, 50)', 'rgb(185, 111, 110)', 'rgb(148, 66, 72)', 'rgb(83, 19, 20)', 'rgb(7, 6, 14)', '#FE8B92'),\n\t        DARKBLUE: new LcdColorDef('rgb(14, 24, 31)', 'rgb(46, 105, 144)', 'rgb(19, 64, 96)', 'rgb(6, 20, 29)', 'rgb(8, 9, 10)', '#3DB3FF'),\n\t        LILA: new LcdColorDef('rgb(175, 164, 255)', 'rgb(188, 168, 253)', 'rgb(176, 159, 255)', 'rgb(174, 147, 252)', 'rgb(168, 136, 233)', '#076148'),\n\t        BLACKRED: new LcdColorDef('rgb(8, 12, 11)', 'rgb(10, 11, 13)', 'rgb(11, 10, 15)', 'rgb(7, 13, 9)', 'rgb(9, 13, 14)', '#B50026'),\n\t        DARKGREEN: new LcdColorDef('rgb(25, 85, 0)', 'rgb(47, 154, 0)', 'rgb(30, 101, 0)', 'rgb(30, 101, 0)', 'rgb(25, 85, 0)', '#233123'),\n\t        AMBER: new LcdColorDef('rgb(182, 71, 0)', 'rgb(236, 155, 25)', 'rgb(212, 93, 5)', 'rgb(212, 93, 5)', 'rgb(182, 71, 0)', '#593A0A'),\n\t        LIGHTBLUE: new LcdColorDef('rgb(125, 146, 184)', 'rgb(197, 212, 231)', 'rgb(138, 155, 194)', 'rgb(138, 155, 194)', 'rgb(125, 146, 184)', '#090051'),\n\t        SECTIONS: new LcdColorDef('#b2b2b2', '#ffffff', '#c4c4c4', '#c4c4c4', '#b2b2b2', '#000000')\n\t    };\n\t\n\t    var color = {\n\t        RED: new ColorDef(new RgbaColor(82, 0, 0, 1), new RgbaColor(158, 0, 19, 1), new RgbaColor(213, 0, 25, 1), new RgbaColor(240, 82, 88, 1), new RgbaColor(255, 171, 173, 1), new RgbaColor(255, 217, 218, 1)),\n\t        GREEN: new ColorDef(new RgbaColor(8, 54, 4, 1), new RgbaColor(0, 107, 14, 1), new RgbaColor(15, 148, 0, 1), new RgbaColor(121, 186, 37, 1), new RgbaColor(190, 231, 141, 1), new RgbaColor(234, 247, 218, 1)),\n\t        BLUE: new ColorDef(new RgbaColor(0, 11, 68, 1), new RgbaColor(0, 73, 135, 1), new RgbaColor(0, 108, 201, 1), new RgbaColor(0, 141, 242, 1), new RgbaColor(122, 200, 255, 1), new RgbaColor(204, 236, 255, 1)),\n\t        ORANGE: new ColorDef(new RgbaColor(118, 83, 30, 1), new RgbaColor(215, 67, 0, 1), new RgbaColor(240, 117, 0, 1), new RgbaColor(255, 166, 0, 1), new RgbaColor(255, 255, 128, 1), new RgbaColor(255, 247, 194, 1)),\n\t        YELLOW: new ColorDef(new RgbaColor(41, 41, 0, 1), new RgbaColor(102, 102, 0, 1), new RgbaColor(177, 165, 0, 1), new RgbaColor(255, 242, 0, 1), new RgbaColor(255, 250, 153, 1), new RgbaColor(255, 252, 204, 1)),\n\t        CYAN: new ColorDef(new RgbaColor(15, 109, 109, 1), new RgbaColor(0, 109, 144, 1), new RgbaColor(0, 144, 191, 1), new RgbaColor(0, 174, 239, 1), new RgbaColor(153, 223, 249, 1), new RgbaColor(204, 239, 252, 1)),\n\t        MAGENTA: new ColorDef(new RgbaColor(98, 0, 114, 1), new RgbaColor(128, 24, 72, 1), new RgbaColor(191, 36, 107, 1), new RgbaColor(255, 48, 143, 1), new RgbaColor(255, 172, 210, 1), new RgbaColor(255, 214, 23, 1)),\n\t        WHITE: new ColorDef(new RgbaColor(210, 210, 210, 1), new RgbaColor(220, 220, 220, 1), new RgbaColor(235, 235, 235, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(255, 255, 255, 1)),\n\t        GRAY: new ColorDef(new RgbaColor(25, 25, 25, 1), new RgbaColor(51, 51, 51, 1), new RgbaColor(76, 76, 76, 1), new RgbaColor(128, 128, 128, 1), new RgbaColor(204, 204, 204, 1), new RgbaColor(243, 243, 243, 1)),\n\t        BLACK: new ColorDef(new RgbaColor(0, 0, 0, 1), new RgbaColor(5, 5, 5, 1), new RgbaColor(10, 10, 10, 1), new RgbaColor(15, 15, 15, 1), new RgbaColor(20, 20, 20, 1), new RgbaColor(25, 25, 25, 1)),\n\t        RAITH: new ColorDef(new RgbaColor(0, 32, 65, 1), new RgbaColor(0, 65, 125, 1), new RgbaColor(0, 106, 172, 1), new RgbaColor(130, 180, 214, 1), new RgbaColor(148, 203, 242, 1), new RgbaColor(191, 229, 255, 1)),\n\t        GREEN_LCD: new ColorDef(new RgbaColor(0, 55, 45, 1), new RgbaColor(15, 109, 93, 1), new RgbaColor(0, 185, 165, 1), new RgbaColor(48, 255, 204, 1), new RgbaColor(153, 255, 227, 1), new RgbaColor(204, 255, 241, 1)),\n\t        JUG_GREEN: new ColorDef(new RgbaColor(0, 56, 0, 1), new RgbaColor(32, 69, 36, 1), new RgbaColor(50, 161, 0, 1), new RgbaColor(129, 206, 0, 1), new RgbaColor(190, 231, 141, 1), new RgbaColor(234, 247, 218, 1))\n\t    };\n\t\n\t    var ledColor = {\n\t        RED_LED: new LedColorDef('#FF9A89', '#FF9A89', '#FF3300', '#FF8D70', '#7E1C00', '#7E1C00', '#641B00'),\n\t        GREEN_LED: new LedColorDef('#9AFF89', '#9AFF89', '#59FF2A', '#A5FF00', '#1C7E00', '#1C7E00', '#1B6400'),\n\t        BLUE_LED: new LedColorDef('#899AFF', '#899AFF', '#0033FF', '#708DFF', '#001C7E', '#001C7E', '#001B64'),\n\t        ORANGE_LED: new LedColorDef('#FEA23F', '#FEA23F', '#FD6C00', '#FD6C00', '#592800', '#592800', '#421F00'),\n\t        YELLOW_LED: new LedColorDef('#FFFF62', '#FFFF62', '#FFFF00', '#FFFF00', '#6B6D00', '#6B6D00', '#515300'),\n\t        CYAN_LED: new LedColorDef('#00FFFF', '#00FFFF', '#1BC3C3', '#00FFFF', '#083B3B', '#083B3B', '#052727'),\n\t        MAGENTA_LED: new LedColorDef('#D300FF', '#D300FF', '#8600CB', '#C300FF', '#38004B', '#38004B', '#280035')\n\t    };\n\t\n\t    var gaugeType = {\n\t        TYPE1: new GaugeTypeDef('type1'),\n\t        TYPE2: new GaugeTypeDef('type2'),\n\t        TYPE3: new GaugeTypeDef('type3'),\n\t        TYPE4: new GaugeTypeDef('type4'),\n\t        TYPE5: new GaugeTypeDef('type5')\n\t    };\n\t\n\t    var orientation = {\n\t        NORTH: new OrientationDef('north'),\n\t        SOUTH: new OrientationDef('south'),\n\t        EAST: new OrientationDef('east'),\n\t        WEST: new OrientationDef('west')\n\t    };\n\t\n\t    var knobType = {\n\t        STANDARD_KNOB: new KnobTypeDef('standardKnob'),\n\t        METAL_KNOB: new KnobTypeDef('metalKnob')\n\t    };\n\t\n\t    var knobStyle = {\n\t        BLACK: new KnobStyleDef('black'),\n\t        BRASS: new KnobStyleDef('brass'),\n\t        SILVER: new KnobStyleDef('silver')\n\t    };\n\t\n\t    var frameDesign = {\n\t        BLACK_METAL: new FrameDesignDef('blackMetal'),\n\t        METAL: new FrameDesignDef('metal'),\n\t        SHINY_METAL: new FrameDesignDef('shinyMetal'),\n\t        BRASS: new FrameDesignDef('brass'),\n\t        STEEL: new FrameDesignDef('steel'),\n\t        CHROME: new FrameDesignDef('chrome'),\n\t        GOLD: new FrameDesignDef('gold'),\n\t        ANTHRACITE: new FrameDesignDef('anthracite'),\n\t        TILTED_GRAY: new FrameDesignDef('tiltedGray'),\n\t        TILTED_BLACK: new FrameDesignDef('tiltedBlack'),\n\t        GLOSSY_METAL: new FrameDesignDef('glossyMetal')\n\t    };\n\t\n\t    var pointerType = {\n\t        TYPE1: new PointerTypeDef('type1'),\n\t        TYPE2: new PointerTypeDef('type2'),\n\t        TYPE3: new PointerTypeDef('type3'),\n\t        TYPE4: new PointerTypeDef('type4'),\n\t        TYPE5: new PointerTypeDef('type5'),\n\t        TYPE6: new PointerTypeDef('type6'),\n\t        TYPE7: new PointerTypeDef('type7'),\n\t        TYPE8: new PointerTypeDef('type8'),\n\t        TYPE9: new PointerTypeDef('type9'),\n\t        TYPE10: new PointerTypeDef('type10'),\n\t        TYPE11: new PointerTypeDef('type11'),\n\t        TYPE12: new PointerTypeDef('type12'),\n\t        TYPE13: new PointerTypeDef('type13'),\n\t        TYPE14: new PointerTypeDef('type14'),\n\t        TYPE15: new PointerTypeDef('type15'),\n\t        TYPE16: new PointerTypeDef('type16')\n\t    };\n\t\n\t    var foregroundType = {\n\t        TYPE1: new ForegroundTypeDef('type1'),\n\t        TYPE2: new ForegroundTypeDef('type2'),\n\t        TYPE3: new ForegroundTypeDef('type3'),\n\t        TYPE4: new ForegroundTypeDef('type4'),\n\t        TYPE5: new ForegroundTypeDef('type5')\n\t    };\n\t\n\t    var labelNumberFormat = {\n\t        STANDARD: new LabelNumberFormatDef('standard'),\n\t        FRACTIONAL: new LabelNumberFormatDef('fractional'),\n\t        SCIENTIFIC: new LabelNumberFormatDef('scientific')\n\t    };\n\t\n\t    var tickLabelOrientation = {\n\t        NORMAL: new TickLabelOrientationDef('normal'),\n\t        HORIZONTAL: new TickLabelOrientationDef('horizontal'),\n\t        TANGENT: new TickLabelOrientationDef('tangent')\n\t    };\n\t\n\t    var trendState = {\n\t        UP: new TrendStateDef('up'),\n\t        STEADY: new TrendStateDef('steady'),\n\t        DOWN: new TrendStateDef('down'),\n\t        OFF: new TrendStateDef('off')\n\t    };\n\t\n\t    //**********************************   E X P O R T   F U N C T I O N S   *******************************************\n\t    return {\n\t        // Components EXTERNAL : INTERNAL\n\t        Radial : radial,\n\t        RadialBargraph : radialBargraph,\n\t        RadialVertical : radialVertical,\n\t        Linear: linear,\n\t        LinearBargraph: linearBargraph,\n\t        DisplaySingle: displaySingle,\n\t        DisplayMulti: displayMulti,\n\t        Level : level,\n\t        Compass : compass,\n\t        WindDirection : windDirection,\n\t        Horizon : horizon,\n\t        Led : led,\n\t        Clock : clock,\n\t        Battery : battery,\n\t        StopWatch : stopwatch,\n\t        Altimeter : altimeter,\n\t        TrafficLight: trafficlight,\n\t        LightBulb: lightbulb,\n\t        Odometer: odometer,\n\t\n\t        // Images\n\t        drawFrame : drawRadialFrameImage,\n\t        drawBackground : drawRadialBackgroundImage,\n\t        drawForeground : drawRadialForegroundImage,\n\t\n\t        // Tools\n\t        rgbaColor :  RgbaColor,\n\t        ConicalGradient : ConicalGradient,\n\t        setAlpha : setAlpha,\n\t        getColorFromFraction : getColorFromFraction,\n\t        gradientWrapper : GradientWrapper,\n\t\n\t        // Constants\n\t        BackgroundColor : backgroundColor,\n\t        LcdColor : lcdColor,\n\t        ColorDef : color,\n\t        LedColor : ledColor,\n\t        GaugeType : gaugeType,\n\t        Orientation: orientation,\n\t        FrameDesign : frameDesign,\n\t        PointerType : pointerType,\n\t        ForegroundType : foregroundType,\n\t        KnobType : knobType,\n\t        KnobStyle: knobStyle,\n\t        LabelNumberFormat: labelNumberFormat,\n\t        TickLabelOrientation: tickLabelOrientation,\n\t        TrendState: trendState,\n\t\n\t        // Other\n\t        Section : section\n\t    };\n\t}());\n\tmodule.exports = steelseries;\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./index\": 44,\n\t\t\"./index.js\": 44\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 115;\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise) {\n\tvar SomePromiseArray = Promise._SomePromiseArray;\n\tfunction any(promises) {\n\t    var ret = new SomePromiseArray(promises);\n\t    var promise = ret.promise();\n\t    ret.setHowMany(1);\n\t    ret.setUnwrap();\n\t    ret.init();\n\t    return promise;\n\t}\n\t\n\tPromise.any = function (promises) {\n\t    return any(promises);\n\t};\n\t\n\tPromise.prototype.any = function () {\n\t    return any(this);\n\t};\n\t\n\t};\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\"use strict\";\n\tvar firstLineError;\n\ttry {throw new Error(); } catch (e) {firstLineError = e;}\n\tvar schedule = __webpack_require__(140);\n\tvar Queue = __webpack_require__(137);\n\tvar util = __webpack_require__(1);\n\t\n\tfunction Async() {\n\t    this._customScheduler = false;\n\t    this._isTickUsed = false;\n\t    this._lateQueue = new Queue(16);\n\t    this._normalQueue = new Queue(16);\n\t    this._haveDrainedQueues = false;\n\t    this._trampolineEnabled = true;\n\t    var self = this;\n\t    this.drainQueues = function () {\n\t        self._drainQueues();\n\t    };\n\t    this._schedule = schedule;\n\t}\n\t\n\tAsync.prototype.setScheduler = function(fn) {\n\t    var prev = this._schedule;\n\t    this._schedule = fn;\n\t    this._customScheduler = true;\n\t    return prev;\n\t};\n\t\n\tAsync.prototype.hasCustomScheduler = function() {\n\t    return this._customScheduler;\n\t};\n\t\n\tAsync.prototype.enableTrampoline = function() {\n\t    this._trampolineEnabled = true;\n\t};\n\t\n\tAsync.prototype.disableTrampolineIfNecessary = function() {\n\t    if (util.hasDevTools) {\n\t        this._trampolineEnabled = false;\n\t    }\n\t};\n\t\n\tAsync.prototype.haveItemsQueued = function () {\n\t    return this._isTickUsed || this._haveDrainedQueues;\n\t};\n\t\n\t\n\tAsync.prototype.fatalError = function(e, isNode) {\n\t    if (isNode) {\n\t        process.stderr.write(\"Fatal \" + (e instanceof Error ? e.stack : e) +\n\t            \"\\n\");\n\t        process.exit(2);\n\t    } else {\n\t        this.throwLater(e);\n\t    }\n\t};\n\t\n\tAsync.prototype.throwLater = function(fn, arg) {\n\t    if (arguments.length === 1) {\n\t        arg = fn;\n\t        fn = function () { throw arg; };\n\t    }\n\t    if (typeof setTimeout !== \"undefined\") {\n\t        setTimeout(function() {\n\t            fn(arg);\n\t        }, 0);\n\t    } else try {\n\t        this._schedule(function() {\n\t            fn(arg);\n\t        });\n\t    } catch (e) {\n\t        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    }\n\t};\n\t\n\tfunction AsyncInvokeLater(fn, receiver, arg) {\n\t    this._lateQueue.push(fn, receiver, arg);\n\t    this._queueTick();\n\t}\n\t\n\tfunction AsyncInvoke(fn, receiver, arg) {\n\t    this._normalQueue.push(fn, receiver, arg);\n\t    this._queueTick();\n\t}\n\t\n\tfunction AsyncSettlePromises(promise) {\n\t    this._normalQueue._pushOne(promise);\n\t    this._queueTick();\n\t}\n\t\n\tif (!util.hasDevTools) {\n\t    Async.prototype.invokeLater = AsyncInvokeLater;\n\t    Async.prototype.invoke = AsyncInvoke;\n\t    Async.prototype.settlePromises = AsyncSettlePromises;\n\t} else {\n\t    Async.prototype.invokeLater = function (fn, receiver, arg) {\n\t        if (this._trampolineEnabled) {\n\t            AsyncInvokeLater.call(this, fn, receiver, arg);\n\t        } else {\n\t            this._schedule(function() {\n\t                setTimeout(function() {\n\t                    fn.call(receiver, arg);\n\t                }, 100);\n\t            });\n\t        }\n\t    };\n\t\n\t    Async.prototype.invoke = function (fn, receiver, arg) {\n\t        if (this._trampolineEnabled) {\n\t            AsyncInvoke.call(this, fn, receiver, arg);\n\t        } else {\n\t            this._schedule(function() {\n\t                fn.call(receiver, arg);\n\t            });\n\t        }\n\t    };\n\t\n\t    Async.prototype.settlePromises = function(promise) {\n\t        if (this._trampolineEnabled) {\n\t            AsyncSettlePromises.call(this, promise);\n\t        } else {\n\t            this._schedule(function() {\n\t                promise._settlePromises();\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tAsync.prototype._drainQueue = function(queue) {\n\t    while (queue.length() > 0) {\n\t        var fn = queue.shift();\n\t        if (typeof fn !== \"function\") {\n\t            fn._settlePromises();\n\t            continue;\n\t        }\n\t        var receiver = queue.shift();\n\t        var arg = queue.shift();\n\t        fn.call(receiver, arg);\n\t    }\n\t};\n\t\n\tAsync.prototype._drainQueues = function () {\n\t    this._drainQueue(this._normalQueue);\n\t    this._reset();\n\t    this._haveDrainedQueues = true;\n\t    this._drainQueue(this._lateQueue);\n\t};\n\t\n\tAsync.prototype._queueTick = function () {\n\t    if (!this._isTickUsed) {\n\t        this._isTickUsed = true;\n\t        this._schedule(this.drainQueues);\n\t    }\n\t};\n\t\n\tAsync.prototype._reset = function () {\n\t    this._isTickUsed = false;\n\t};\n\t\n\tmodule.exports = Async;\n\tmodule.exports.firstLineError = firstLineError;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {\n\tvar calledBind = false;\n\tvar rejectThis = function(_, e) {\n\t    this._reject(e);\n\t};\n\t\n\tvar targetRejected = function(e, context) {\n\t    context.promiseRejectionQueued = true;\n\t    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);\n\t};\n\t\n\tvar bindingResolved = function(thisArg, context) {\n\t    if (((this._bitField & 50397184) === 0)) {\n\t        this._resolveCallback(context.target);\n\t    }\n\t};\n\t\n\tvar bindingRejected = function(e, context) {\n\t    if (!context.promiseRejectionQueued) this._reject(e);\n\t};\n\t\n\tPromise.prototype.bind = function (thisArg) {\n\t    if (!calledBind) {\n\t        calledBind = true;\n\t        Promise.prototype._propagateFrom = debug.propagateFromFunction();\n\t        Promise.prototype._boundValue = debug.boundValueFunction();\n\t    }\n\t    var maybePromise = tryConvertToPromise(thisArg);\n\t    var ret = new Promise(INTERNAL);\n\t    ret._propagateFrom(this, 1);\n\t    var target = this._target();\n\t    ret._setBoundTo(maybePromise);\n\t    if (maybePromise instanceof Promise) {\n\t        var context = {\n\t            promiseRejectionQueued: false,\n\t            promise: ret,\n\t            target: target,\n\t            bindingPromise: maybePromise\n\t        };\n\t        target._then(INTERNAL, targetRejected, undefined, ret, context);\n\t        maybePromise._then(\n\t            bindingResolved, bindingRejected, undefined, ret, context);\n\t        ret._setOnCancel(maybePromise);\n\t    } else {\n\t        ret._resolveCallback(target);\n\t    }\n\t    return ret;\n\t};\n\t\n\tPromise.prototype._setBoundTo = function (obj) {\n\t    if (obj !== undefined) {\n\t        this._bitField = this._bitField | 2097152;\n\t        this._boundTo = obj;\n\t    } else {\n\t        this._bitField = this._bitField & (~2097152);\n\t    }\n\t};\n\t\n\tPromise.prototype._isBound = function () {\n\t    return (this._bitField & 2097152) === 2097152;\n\t};\n\t\n\tPromise.bind = function (thisArg, value) {\n\t    return Promise.resolve(value).bind(thisArg);\n\t};\n\t};\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar old;\n\tif (typeof Promise !== \"undefined\") old = Promise;\n\tfunction noConflict() {\n\t    try { if (Promise === bluebird) Promise = old; }\n\t    catch (e) {}\n\t    return bluebird;\n\t}\n\tvar bluebird = __webpack_require__(133)();\n\tbluebird.noConflict = noConflict;\n\tmodule.exports = bluebird;\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar cr = Object.create;\n\tif (cr) {\n\t    var callerCache = cr(null);\n\t    var getterCache = cr(null);\n\t    callerCache[\" size\"] = getterCache[\" size\"] = 0;\n\t}\n\t\n\tmodule.exports = function(Promise) {\n\tvar util = __webpack_require__(1);\n\tvar canEvaluate = util.canEvaluate;\n\tvar isIdentifier = util.isIdentifier;\n\t\n\tvar getMethodCaller;\n\tvar getGetter;\n\tif (true) {\n\tvar makeMethodCaller = function (methodName) {\n\t    return new Function(\"ensureMethod\", \"                                    \\n\\\n\t        return function(obj) {                                               \\n\\\n\t            'use strict'                                                     \\n\\\n\t            var len = this.length;                                           \\n\\\n\t            ensureMethod(obj, 'methodName');                                 \\n\\\n\t            switch(len) {                                                    \\n\\\n\t                case 1: return obj.methodName(this[0]);                      \\n\\\n\t                case 2: return obj.methodName(this[0], this[1]);             \\n\\\n\t                case 3: return obj.methodName(this[0], this[1], this[2]);    \\n\\\n\t                case 0: return obj.methodName();                             \\n\\\n\t                default:                                                     \\n\\\n\t                    return obj.methodName.apply(obj, this);                  \\n\\\n\t            }                                                                \\n\\\n\t        };                                                                   \\n\\\n\t        \".replace(/methodName/g, methodName))(ensureMethod);\n\t};\n\t\n\tvar makeGetter = function (propertyName) {\n\t    return new Function(\"obj\", \"                                             \\n\\\n\t        'use strict';                                                        \\n\\\n\t        return obj.propertyName;                                             \\n\\\n\t        \".replace(\"propertyName\", propertyName));\n\t};\n\t\n\tvar getCompiled = function(name, compiler, cache) {\n\t    var ret = cache[name];\n\t    if (typeof ret !== \"function\") {\n\t        if (!isIdentifier(name)) {\n\t            return null;\n\t        }\n\t        ret = compiler(name);\n\t        cache[name] = ret;\n\t        cache[\" size\"]++;\n\t        if (cache[\" size\"] > 512) {\n\t            var keys = Object.keys(cache);\n\t            for (var i = 0; i < 256; ++i) delete cache[keys[i]];\n\t            cache[\" size\"] = keys.length - 256;\n\t        }\n\t    }\n\t    return ret;\n\t};\n\t\n\tgetMethodCaller = function(name) {\n\t    return getCompiled(name, makeMethodCaller, callerCache);\n\t};\n\t\n\tgetGetter = function(name) {\n\t    return getCompiled(name, makeGetter, getterCache);\n\t};\n\t}\n\t\n\tfunction ensureMethod(obj, methodName) {\n\t    var fn;\n\t    if (obj != null) fn = obj[methodName];\n\t    if (typeof fn !== \"function\") {\n\t        var message = \"Object \" + util.classString(obj) + \" has no method '\" +\n\t            util.toString(methodName) + \"'\";\n\t        throw new Promise.TypeError(message);\n\t    }\n\t    return fn;\n\t}\n\t\n\tfunction caller(obj) {\n\t    var methodName = this.pop();\n\t    var fn = ensureMethod(obj, methodName);\n\t    return fn.apply(obj, this);\n\t}\n\tPromise.prototype.call = function (methodName) {\n\t    var $_len = arguments.length;var args = new Array(Math.max($_len - 1, 0)); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];};\n\t    if (true) {\n\t        if (canEvaluate) {\n\t            var maybeCaller = getMethodCaller(methodName);\n\t            if (maybeCaller !== null) {\n\t                return this._then(\n\t                    maybeCaller, undefined, undefined, args, undefined);\n\t            }\n\t        }\n\t    }\n\t    args.push(methodName);\n\t    return this._then(caller, undefined, undefined, args, undefined);\n\t};\n\t\n\tfunction namedGetter(obj) {\n\t    return obj[this];\n\t}\n\tfunction indexedGetter(obj) {\n\t    var index = +this;\n\t    if (index < 0) index = Math.max(0, index + obj.length);\n\t    return obj[index];\n\t}\n\tPromise.prototype.get = function (propertyName) {\n\t    var isIndex = (typeof propertyName === \"number\");\n\t    var getter;\n\t    if (!isIndex) {\n\t        if (canEvaluate) {\n\t            var maybeGetter = getGetter(propertyName);\n\t            getter = maybeGetter !== null ? maybeGetter : namedGetter;\n\t        } else {\n\t            getter = namedGetter;\n\t        }\n\t    } else {\n\t        getter = indexedGetter;\n\t    }\n\t    return this._then(getter, undefined, undefined, propertyName, undefined);\n\t};\n\t};\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise, PromiseArray, apiRejection, debug) {\n\tvar util = __webpack_require__(1);\n\tvar tryCatch = util.tryCatch;\n\tvar errorObj = util.errorObj;\n\tvar async = Promise._async;\n\t\n\tPromise.prototype[\"break\"] = Promise.prototype.cancel = function() {\n\t    if (!debug.cancellation()) return this._warn(\"cancellation is disabled\");\n\t\n\t    var promise = this;\n\t    var child = promise;\n\t    while (promise._isCancellable()) {\n\t        if (!promise._cancelBy(child)) {\n\t            if (child._isFollowing()) {\n\t                child._followee().cancel();\n\t            } else {\n\t                child._cancelBranched();\n\t            }\n\t            break;\n\t        }\n\t\n\t        var parent = promise._cancellationParent;\n\t        if (parent == null || !parent._isCancellable()) {\n\t            if (promise._isFollowing()) {\n\t                promise._followee().cancel();\n\t            } else {\n\t                promise._cancelBranched();\n\t            }\n\t            break;\n\t        } else {\n\t            if (promise._isFollowing()) promise._followee().cancel();\n\t            promise._setWillBeCancelled();\n\t            child = promise;\n\t            promise = parent;\n\t        }\n\t    }\n\t};\n\t\n\tPromise.prototype._branchHasCancelled = function() {\n\t    this._branchesRemainingToCancel--;\n\t};\n\t\n\tPromise.prototype._enoughBranchesHaveCancelled = function() {\n\t    return this._branchesRemainingToCancel === undefined ||\n\t           this._branchesRemainingToCancel <= 0;\n\t};\n\t\n\tPromise.prototype._cancelBy = function(canceller) {\n\t    if (canceller === this) {\n\t        this._branchesRemainingToCancel = 0;\n\t        this._invokeOnCancel();\n\t        return true;\n\t    } else {\n\t        this._branchHasCancelled();\n\t        if (this._enoughBranchesHaveCancelled()) {\n\t            this._invokeOnCancel();\n\t            return true;\n\t        }\n\t    }\n\t    return false;\n\t};\n\t\n\tPromise.prototype._cancelBranched = function() {\n\t    if (this._enoughBranchesHaveCancelled()) {\n\t        this._cancel();\n\t    }\n\t};\n\t\n\tPromise.prototype._cancel = function() {\n\t    if (!this._isCancellable()) return;\n\t    this._setCancelled();\n\t    async.invoke(this._cancelPromises, this, undefined);\n\t};\n\t\n\tPromise.prototype._cancelPromises = function() {\n\t    if (this._length() > 0) this._settlePromises();\n\t};\n\t\n\tPromise.prototype._unsetOnCancel = function() {\n\t    this._onCancelField = undefined;\n\t};\n\t\n\tPromise.prototype._isCancellable = function() {\n\t    return this.isPending() && !this._isCancelled();\n\t};\n\t\n\tPromise.prototype.isCancellable = function() {\n\t    return this.isPending() && !this.isCancelled();\n\t};\n\t\n\tPromise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {\n\t    if (util.isArray(onCancelCallback)) {\n\t        for (var i = 0; i < onCancelCallback.length; ++i) {\n\t            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);\n\t        }\n\t    } else if (onCancelCallback !== undefined) {\n\t        if (typeof onCancelCallback === \"function\") {\n\t            if (!internalOnly) {\n\t                var e = tryCatch(onCancelCallback).call(this._boundValue());\n\t                if (e === errorObj) {\n\t                    this._attachExtraTrace(e.e);\n\t                    async.throwLater(e.e);\n\t                }\n\t            }\n\t        } else {\n\t            onCancelCallback._resultCancelled(this);\n\t        }\n\t    }\n\t};\n\t\n\tPromise.prototype._invokeOnCancel = function() {\n\t    var onCancelCallback = this._onCancel();\n\t    this._unsetOnCancel();\n\t    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);\n\t};\n\t\n\tPromise.prototype._invokeInternalOnCancel = function() {\n\t    if (this._isCancellable()) {\n\t        this._doInvokeOnCancel(this._onCancel(), true);\n\t        this._unsetOnCancel();\n\t    }\n\t};\n\t\n\tPromise.prototype._resultCancelled = function() {\n\t    this.cancel();\n\t};\n\t\n\t};\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise) {\n\tvar longStackTraces = false;\n\tvar contextStack = [];\n\t\n\tPromise.prototype._promiseCreated = function() {};\n\tPromise.prototype._pushContext = function() {};\n\tPromise.prototype._popContext = function() {return null;};\n\tPromise._peekContext = Promise.prototype._peekContext = function() {};\n\t\n\tfunction Context() {\n\t    this._trace = new Context.CapturedTrace(peekContext());\n\t}\n\tContext.prototype._pushContext = function () {\n\t    if (this._trace !== undefined) {\n\t        this._trace._promiseCreated = null;\n\t        contextStack.push(this._trace);\n\t    }\n\t};\n\t\n\tContext.prototype._popContext = function () {\n\t    if (this._trace !== undefined) {\n\t        var trace = contextStack.pop();\n\t        var ret = trace._promiseCreated;\n\t        trace._promiseCreated = null;\n\t        return ret;\n\t    }\n\t    return null;\n\t};\n\t\n\tfunction createContext() {\n\t    if (longStackTraces) return new Context();\n\t}\n\t\n\tfunction peekContext() {\n\t    var lastIndex = contextStack.length - 1;\n\t    if (lastIndex >= 0) {\n\t        return contextStack[lastIndex];\n\t    }\n\t    return undefined;\n\t}\n\tContext.CapturedTrace = null;\n\tContext.create = createContext;\n\tContext.deactivateLongStackTraces = function() {};\n\tContext.activateLongStackTraces = function() {\n\t    var Promise_pushContext = Promise.prototype._pushContext;\n\t    var Promise_popContext = Promise.prototype._popContext;\n\t    var Promise_PeekContext = Promise._peekContext;\n\t    var Promise_peekContext = Promise.prototype._peekContext;\n\t    var Promise_promiseCreated = Promise.prototype._promiseCreated;\n\t    Context.deactivateLongStackTraces = function() {\n\t        Promise.prototype._pushContext = Promise_pushContext;\n\t        Promise.prototype._popContext = Promise_popContext;\n\t        Promise._peekContext = Promise_PeekContext;\n\t        Promise.prototype._peekContext = Promise_peekContext;\n\t        Promise.prototype._promiseCreated = Promise_promiseCreated;\n\t        longStackTraces = false;\n\t    };\n\t    longStackTraces = true;\n\t    Promise.prototype._pushContext = Context.prototype._pushContext;\n\t    Promise.prototype._popContext = Context.prototype._popContext;\n\t    Promise._peekContext = Promise.prototype._peekContext = peekContext;\n\t    Promise.prototype._promiseCreated = function() {\n\t        var ctx = this._peekContext();\n\t        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;\n\t    };\n\t};\n\treturn Context;\n\t};\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\"use strict\";\n\tmodule.exports = function(Promise, Context) {\n\tvar getDomain = Promise._getDomain;\n\tvar async = Promise._async;\n\tvar Warning = __webpack_require__(8).Warning;\n\tvar util = __webpack_require__(1);\n\tvar canAttachTrace = util.canAttachTrace;\n\tvar unhandledRejectionHandled;\n\tvar possiblyUnhandledRejection;\n\tvar bluebirdFramePattern =\n\t    /[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](release|debug|instrumented)/;\n\tvar nodeFramePattern = /\\((?:timers\\.js):\\d+:\\d+\\)/;\n\tvar parseLinePattern = /[\\/<\\(](.+?):(\\d+):(\\d+)\\)?\\s*$/;\n\tvar stackFramePattern = null;\n\tvar formatStack = null;\n\tvar indentStackFrames = false;\n\tvar printWarning;\n\tvar debugging = !!(util.env(\"BLUEBIRD_DEBUG\") != 0 &&\n\t                        (false ||\n\t                         util.env(\"BLUEBIRD_DEBUG\") ||\n\t                         util.env(\"NODE_ENV\") === \"development\"));\n\t\n\tvar warnings = !!(util.env(\"BLUEBIRD_WARNINGS\") != 0 &&\n\t    (debugging || util.env(\"BLUEBIRD_WARNINGS\")));\n\t\n\tvar longStackTraces = !!(util.env(\"BLUEBIRD_LONG_STACK_TRACES\") != 0 &&\n\t    (debugging || util.env(\"BLUEBIRD_LONG_STACK_TRACES\")));\n\t\n\tvar wForgottenReturn = util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\") != 0 &&\n\t    (warnings || !!util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\"));\n\t\n\tPromise.prototype.suppressUnhandledRejections = function() {\n\t    var target = this._target();\n\t    target._bitField = ((target._bitField & (~1048576)) |\n\t                      524288);\n\t};\n\t\n\tPromise.prototype._ensurePossibleRejectionHandled = function () {\n\t    if ((this._bitField & 524288) !== 0) return;\n\t    this._setRejectionIsUnhandled();\n\t    async.invokeLater(this._notifyUnhandledRejection, this, undefined);\n\t};\n\t\n\tPromise.prototype._notifyUnhandledRejectionIsHandled = function () {\n\t    fireRejectionEvent(\"rejectionHandled\",\n\t                                  unhandledRejectionHandled, undefined, this);\n\t};\n\t\n\tPromise.prototype._setReturnedNonUndefined = function() {\n\t    this._bitField = this._bitField | 268435456;\n\t};\n\t\n\tPromise.prototype._returnedNonUndefined = function() {\n\t    return (this._bitField & 268435456) !== 0;\n\t};\n\t\n\tPromise.prototype._notifyUnhandledRejection = function () {\n\t    if (this._isRejectionUnhandled()) {\n\t        var reason = this._settledValue();\n\t        this._setUnhandledRejectionIsNotified();\n\t        fireRejectionEvent(\"unhandledRejection\",\n\t                                      possiblyUnhandledRejection, reason, this);\n\t    }\n\t};\n\t\n\tPromise.prototype._setUnhandledRejectionIsNotified = function () {\n\t    this._bitField = this._bitField | 262144;\n\t};\n\t\n\tPromise.prototype._unsetUnhandledRejectionIsNotified = function () {\n\t    this._bitField = this._bitField & (~262144);\n\t};\n\t\n\tPromise.prototype._isUnhandledRejectionNotified = function () {\n\t    return (this._bitField & 262144) > 0;\n\t};\n\t\n\tPromise.prototype._setRejectionIsUnhandled = function () {\n\t    this._bitField = this._bitField | 1048576;\n\t};\n\t\n\tPromise.prototype._unsetRejectionIsUnhandled = function () {\n\t    this._bitField = this._bitField & (~1048576);\n\t    if (this._isUnhandledRejectionNotified()) {\n\t        this._unsetUnhandledRejectionIsNotified();\n\t        this._notifyUnhandledRejectionIsHandled();\n\t    }\n\t};\n\t\n\tPromise.prototype._isRejectionUnhandled = function () {\n\t    return (this._bitField & 1048576) > 0;\n\t};\n\t\n\tPromise.prototype._warn = function(message, shouldUseOwnTrace, promise) {\n\t    return warn(message, shouldUseOwnTrace, promise || this);\n\t};\n\t\n\tPromise.onPossiblyUnhandledRejection = function (fn) {\n\t    var domain = getDomain();\n\t    possiblyUnhandledRejection =\n\t        typeof fn === \"function\" ? (domain === null ?\n\t                                            fn : util.domainBind(domain, fn))\n\t                                 : undefined;\n\t};\n\t\n\tPromise.onUnhandledRejectionHandled = function (fn) {\n\t    var domain = getDomain();\n\t    unhandledRejectionHandled =\n\t        typeof fn === \"function\" ? (domain === null ?\n\t                                            fn : util.domainBind(domain, fn))\n\t                                 : undefined;\n\t};\n\t\n\tvar disableLongStackTraces = function() {};\n\tPromise.longStackTraces = function () {\n\t    if (async.haveItemsQueued() && !config.longStackTraces) {\n\t        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    }\n\t    if (!config.longStackTraces && longStackTracesIsSupported()) {\n\t        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;\n\t        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;\n\t        config.longStackTraces = true;\n\t        disableLongStackTraces = function() {\n\t            if (async.haveItemsQueued() && !config.longStackTraces) {\n\t                throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t            }\n\t            Promise.prototype._captureStackTrace = Promise_captureStackTrace;\n\t            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;\n\t            Context.deactivateLongStackTraces();\n\t            async.enableTrampoline();\n\t            config.longStackTraces = false;\n\t        };\n\t        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;\n\t        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;\n\t        Context.activateLongStackTraces();\n\t        async.disableTrampolineIfNecessary();\n\t    }\n\t};\n\t\n\tPromise.hasLongStackTraces = function () {\n\t    return config.longStackTraces && longStackTracesIsSupported();\n\t};\n\t\n\tvar fireDomEvent = (function() {\n\t    try {\n\t        if (typeof CustomEvent === \"function\") {\n\t            var event = new CustomEvent(\"CustomEvent\");\n\t            util.global.dispatchEvent(event);\n\t            return function(name, event) {\n\t                var domEvent = new CustomEvent(name.toLowerCase(), {\n\t                    detail: event,\n\t                    cancelable: true\n\t                });\n\t                return !util.global.dispatchEvent(domEvent);\n\t            };\n\t        } else if (typeof Event === \"function\") {\n\t            var event = new Event(\"CustomEvent\");\n\t            util.global.dispatchEvent(event);\n\t            return function(name, event) {\n\t                var domEvent = new Event(name.toLowerCase(), {\n\t                    cancelable: true\n\t                });\n\t                domEvent.detail = event;\n\t                return !util.global.dispatchEvent(domEvent);\n\t            };\n\t        } else {\n\t            var event = document.createEvent(\"CustomEvent\");\n\t            event.initCustomEvent(\"testingtheevent\", false, true, {});\n\t            util.global.dispatchEvent(event);\n\t            return function(name, event) {\n\t                var domEvent = document.createEvent(\"CustomEvent\");\n\t                domEvent.initCustomEvent(name.toLowerCase(), false, true,\n\t                    event);\n\t                return !util.global.dispatchEvent(domEvent);\n\t            };\n\t        }\n\t    } catch (e) {}\n\t    return function() {\n\t        return false;\n\t    };\n\t})();\n\t\n\tvar fireGlobalEvent = (function() {\n\t    if (util.isNode) {\n\t        return function() {\n\t            return process.emit.apply(process, arguments);\n\t        };\n\t    } else {\n\t        if (!util.global) {\n\t            return function() {\n\t                return false;\n\t            };\n\t        }\n\t        return function(name) {\n\t            var methodName = \"on\" + name.toLowerCase();\n\t            var method = util.global[methodName];\n\t            if (!method) return false;\n\t            method.apply(util.global, [].slice.call(arguments, 1));\n\t            return true;\n\t        };\n\t    }\n\t})();\n\t\n\tfunction generatePromiseLifecycleEventObject(name, promise) {\n\t    return {promise: promise};\n\t}\n\t\n\tvar eventToObjectGenerator = {\n\t    promiseCreated: generatePromiseLifecycleEventObject,\n\t    promiseFulfilled: generatePromiseLifecycleEventObject,\n\t    promiseRejected: generatePromiseLifecycleEventObject,\n\t    promiseResolved: generatePromiseLifecycleEventObject,\n\t    promiseCancelled: generatePromiseLifecycleEventObject,\n\t    promiseChained: function(name, promise, child) {\n\t        return {promise: promise, child: child};\n\t    },\n\t    warning: function(name, warning) {\n\t        return {warning: warning};\n\t    },\n\t    unhandledRejection: function (name, reason, promise) {\n\t        return {reason: reason, promise: promise};\n\t    },\n\t    rejectionHandled: generatePromiseLifecycleEventObject\n\t};\n\t\n\tvar activeFireEvent = function (name) {\n\t    var globalEventFired = false;\n\t    try {\n\t        globalEventFired = fireGlobalEvent.apply(null, arguments);\n\t    } catch (e) {\n\t        async.throwLater(e);\n\t        globalEventFired = true;\n\t    }\n\t\n\t    var domEventFired = false;\n\t    try {\n\t        domEventFired = fireDomEvent(name,\n\t                    eventToObjectGenerator[name].apply(null, arguments));\n\t    } catch (e) {\n\t        async.throwLater(e);\n\t        domEventFired = true;\n\t    }\n\t\n\t    return domEventFired || globalEventFired;\n\t};\n\t\n\tPromise.config = function(opts) {\n\t    opts = Object(opts);\n\t    if (\"longStackTraces\" in opts) {\n\t        if (opts.longStackTraces) {\n\t            Promise.longStackTraces();\n\t        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {\n\t            disableLongStackTraces();\n\t        }\n\t    }\n\t    if (\"warnings\" in opts) {\n\t        var warningsOption = opts.warnings;\n\t        config.warnings = !!warningsOption;\n\t        wForgottenReturn = config.warnings;\n\t\n\t        if (util.isObject(warningsOption)) {\n\t            if (\"wForgottenReturn\" in warningsOption) {\n\t                wForgottenReturn = !!warningsOption.wForgottenReturn;\n\t            }\n\t        }\n\t    }\n\t    if (\"cancellation\" in opts && opts.cancellation && !config.cancellation) {\n\t        if (async.haveItemsQueued()) {\n\t            throw new Error(\n\t                \"cannot enable cancellation after promises are in use\");\n\t        }\n\t        Promise.prototype._clearCancellationData =\n\t            cancellationClearCancellationData;\n\t        Promise.prototype._propagateFrom = cancellationPropagateFrom;\n\t        Promise.prototype._onCancel = cancellationOnCancel;\n\t        Promise.prototype._setOnCancel = cancellationSetOnCancel;\n\t        Promise.prototype._attachCancellationCallback =\n\t            cancellationAttachCancellationCallback;\n\t        Promise.prototype._execute = cancellationExecute;\n\t        propagateFromFunction = cancellationPropagateFrom;\n\t        config.cancellation = true;\n\t    }\n\t    if (\"monitoring\" in opts) {\n\t        if (opts.monitoring && !config.monitoring) {\n\t            config.monitoring = true;\n\t            Promise.prototype._fireEvent = activeFireEvent;\n\t        } else if (!opts.monitoring && config.monitoring) {\n\t            config.monitoring = false;\n\t            Promise.prototype._fireEvent = defaultFireEvent;\n\t        }\n\t    }\n\t    return Promise;\n\t};\n\t\n\tfunction defaultFireEvent() { return false; }\n\t\n\tPromise.prototype._fireEvent = defaultFireEvent;\n\tPromise.prototype._execute = function(executor, resolve, reject) {\n\t    try {\n\t        executor(resolve, reject);\n\t    } catch (e) {\n\t        return e;\n\t    }\n\t};\n\tPromise.prototype._onCancel = function () {};\n\tPromise.prototype._setOnCancel = function (handler) { ; };\n\tPromise.prototype._attachCancellationCallback = function(onCancel) {\n\t    ;\n\t};\n\tPromise.prototype._captureStackTrace = function () {};\n\tPromise.prototype._attachExtraTrace = function () {};\n\tPromise.prototype._clearCancellationData = function() {};\n\tPromise.prototype._propagateFrom = function (parent, flags) {\n\t    ;\n\t    ;\n\t};\n\t\n\tfunction cancellationExecute(executor, resolve, reject) {\n\t    var promise = this;\n\t    try {\n\t        executor(resolve, reject, function(onCancel) {\n\t            if (typeof onCancel !== \"function\") {\n\t                throw new TypeError(\"onCancel must be a function, got: \" +\n\t                                    util.toString(onCancel));\n\t            }\n\t            promise._attachCancellationCallback(onCancel);\n\t        });\n\t    } catch (e) {\n\t        return e;\n\t    }\n\t}\n\t\n\tfunction cancellationAttachCancellationCallback(onCancel) {\n\t    if (!this._isCancellable()) return this;\n\t\n\t    var previousOnCancel = this._onCancel();\n\t    if (previousOnCancel !== undefined) {\n\t        if (util.isArray(previousOnCancel)) {\n\t            previousOnCancel.push(onCancel);\n\t        } else {\n\t            this._setOnCancel([previousOnCancel, onCancel]);\n\t        }\n\t    } else {\n\t        this._setOnCancel(onCancel);\n\t    }\n\t}\n\t\n\tfunction cancellationOnCancel() {\n\t    return this._onCancelField;\n\t}\n\t\n\tfunction cancellationSetOnCancel(onCancel) {\n\t    this._onCancelField = onCancel;\n\t}\n\t\n\tfunction cancellationClearCancellationData() {\n\t    this._cancellationParent = undefined;\n\t    this._onCancelField = undefined;\n\t}\n\t\n\tfunction cancellationPropagateFrom(parent, flags) {\n\t    if ((flags & 1) !== 0) {\n\t        this._cancellationParent = parent;\n\t        var branchesRemainingToCancel = parent._branchesRemainingToCancel;\n\t        if (branchesRemainingToCancel === undefined) {\n\t            branchesRemainingToCancel = 0;\n\t        }\n\t        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;\n\t    }\n\t    if ((flags & 2) !== 0 && parent._isBound()) {\n\t        this._setBoundTo(parent._boundTo);\n\t    }\n\t}\n\t\n\tfunction bindingPropagateFrom(parent, flags) {\n\t    if ((flags & 2) !== 0 && parent._isBound()) {\n\t        this._setBoundTo(parent._boundTo);\n\t    }\n\t}\n\tvar propagateFromFunction = bindingPropagateFrom;\n\t\n\tfunction boundValueFunction() {\n\t    var ret = this._boundTo;\n\t    if (ret !== undefined) {\n\t        if (ret instanceof Promise) {\n\t            if (ret.isFulfilled()) {\n\t                return ret.value();\n\t            } else {\n\t                return undefined;\n\t            }\n\t        }\n\t    }\n\t    return ret;\n\t}\n\t\n\tfunction longStackTracesCaptureStackTrace() {\n\t    this._trace = new CapturedTrace(this._peekContext());\n\t}\n\t\n\tfunction longStackTracesAttachExtraTrace(error, ignoreSelf) {\n\t    if (canAttachTrace(error)) {\n\t        var trace = this._trace;\n\t        if (trace !== undefined) {\n\t            if (ignoreSelf) trace = trace._parent;\n\t        }\n\t        if (trace !== undefined) {\n\t            trace.attachExtraTrace(error);\n\t        } else if (!error.__stackCleaned__) {\n\t            var parsed = parseStackAndMessage(error);\n\t            util.notEnumerableProp(error, \"stack\",\n\t                parsed.message + \"\\n\" + parsed.stack.join(\"\\n\"));\n\t            util.notEnumerableProp(error, \"__stackCleaned__\", true);\n\t        }\n\t    }\n\t}\n\t\n\tfunction checkForgottenReturns(returnValue, promiseCreated, name, promise,\n\t                               parent) {\n\t    if (returnValue === undefined && promiseCreated !== null &&\n\t        wForgottenReturn) {\n\t        if (parent !== undefined && parent._returnedNonUndefined()) return;\n\t        if ((promise._bitField & 65535) === 0) return;\n\t\n\t        if (name) name = name + \" \";\n\t        var handlerLine = \"\";\n\t        var creatorLine = \"\";\n\t        if (promiseCreated._trace) {\n\t            var traceLines = promiseCreated._trace.stack.split(\"\\n\");\n\t            var stack = cleanStack(traceLines);\n\t            for (var i = stack.length - 1; i >= 0; --i) {\n\t                var line = stack[i];\n\t                if (!nodeFramePattern.test(line)) {\n\t                    var lineMatches = line.match(parseLinePattern);\n\t                    if (lineMatches) {\n\t                        handlerLine  = \"at \" + lineMatches[1] +\n\t                            \":\" + lineMatches[2] + \":\" + lineMatches[3] + \" \";\n\t                    }\n\t                    break;\n\t                }\n\t            }\n\t\n\t            if (stack.length > 0) {\n\t                var firstUserLine = stack[0];\n\t                for (var i = 0; i < traceLines.length; ++i) {\n\t\n\t                    if (traceLines[i] === firstUserLine) {\n\t                        if (i > 0) {\n\t                            creatorLine = \"\\n\" + traceLines[i - 1];\n\t                        }\n\t                        break;\n\t                    }\n\t                }\n\t\n\t            }\n\t        }\n\t        var msg = \"a promise was created in a \" + name +\n\t            \"handler \" + handlerLine + \"but was not returned from it, \" +\n\t            \"see http://goo.gl/rRqMUw\" +\n\t            creatorLine;\n\t        promise._warn(msg, true, promiseCreated);\n\t    }\n\t}\n\t\n\tfunction deprecated(name, replacement) {\n\t    var message = name +\n\t        \" is deprecated and will be removed in a future version.\";\n\t    if (replacement) message += \" Use \" + replacement + \" instead.\";\n\t    return warn(message);\n\t}\n\t\n\tfunction warn(message, shouldUseOwnTrace, promise) {\n\t    if (!config.warnings) return;\n\t    var warning = new Warning(message);\n\t    var ctx;\n\t    if (shouldUseOwnTrace) {\n\t        promise._attachExtraTrace(warning);\n\t    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {\n\t        ctx.attachExtraTrace(warning);\n\t    } else {\n\t        var parsed = parseStackAndMessage(warning);\n\t        warning.stack = parsed.message + \"\\n\" + parsed.stack.join(\"\\n\");\n\t    }\n\t\n\t    if (!activeFireEvent(\"warning\", warning)) {\n\t        formatAndLogError(warning, \"\", true);\n\t    }\n\t}\n\t\n\tfunction reconstructStack(message, stacks) {\n\t    for (var i = 0; i < stacks.length - 1; ++i) {\n\t        stacks[i].push(\"From previous event:\");\n\t        stacks[i] = stacks[i].join(\"\\n\");\n\t    }\n\t    if (i < stacks.length) {\n\t        stacks[i] = stacks[i].join(\"\\n\");\n\t    }\n\t    return message + \"\\n\" + stacks.join(\"\\n\");\n\t}\n\t\n\tfunction removeDuplicateOrEmptyJumps(stacks) {\n\t    for (var i = 0; i < stacks.length; ++i) {\n\t        if (stacks[i].length === 0 ||\n\t            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {\n\t            stacks.splice(i, 1);\n\t            i--;\n\t        }\n\t    }\n\t}\n\t\n\tfunction removeCommonRoots(stacks) {\n\t    var current = stacks[0];\n\t    for (var i = 1; i < stacks.length; ++i) {\n\t        var prev = stacks[i];\n\t        var currentLastIndex = current.length - 1;\n\t        var currentLastLine = current[currentLastIndex];\n\t        var commonRootMeetPoint = -1;\n\t\n\t        for (var j = prev.length - 1; j >= 0; --j) {\n\t            if (prev[j] === currentLastLine) {\n\t                commonRootMeetPoint = j;\n\t                break;\n\t            }\n\t        }\n\t\n\t        for (var j = commonRootMeetPoint; j >= 0; --j) {\n\t            var line = prev[j];\n\t            if (current[currentLastIndex] === line) {\n\t                current.pop();\n\t                currentLastIndex--;\n\t            } else {\n\t                break;\n\t            }\n\t        }\n\t        current = prev;\n\t    }\n\t}\n\t\n\tfunction cleanStack(stack) {\n\t    var ret = [];\n\t    for (var i = 0; i < stack.length; ++i) {\n\t        var line = stack[i];\n\t        var isTraceLine = \"    (No stack trace)\" === line ||\n\t            stackFramePattern.test(line);\n\t        var isInternalFrame = isTraceLine && shouldIgnore(line);\n\t        if (isTraceLine && !isInternalFrame) {\n\t            if (indentStackFrames && line.charAt(0) !== \" \") {\n\t                line = \"    \" + line;\n\t            }\n\t            ret.push(line);\n\t        }\n\t    }\n\t    return ret;\n\t}\n\t\n\tfunction stackFramesAsArray(error) {\n\t    var stack = error.stack.replace(/\\s+$/g, \"\").split(\"\\n\");\n\t    for (var i = 0; i < stack.length; ++i) {\n\t        var line = stack[i];\n\t        if (\"    (No stack trace)\" === line || stackFramePattern.test(line)) {\n\t            break;\n\t        }\n\t    }\n\t    if (i > 0 && error.name != \"SyntaxError\") {\n\t        stack = stack.slice(i);\n\t    }\n\t    return stack;\n\t}\n\t\n\tfunction parseStackAndMessage(error) {\n\t    var stack = error.stack;\n\t    var message = error.toString();\n\t    stack = typeof stack === \"string\" && stack.length > 0\n\t                ? stackFramesAsArray(error) : [\"    (No stack trace)\"];\n\t    return {\n\t        message: message,\n\t        stack: error.name == \"SyntaxError\" ? stack : cleanStack(stack)\n\t    };\n\t}\n\t\n\tfunction formatAndLogError(error, title, isSoft) {\n\t    if (typeof console !== \"undefined\") {\n\t        var message;\n\t        if (util.isObject(error)) {\n\t            var stack = error.stack;\n\t            message = title + formatStack(stack, error);\n\t        } else {\n\t            message = title + String(error);\n\t        }\n\t        if (typeof printWarning === \"function\") {\n\t            printWarning(message, isSoft);\n\t        } else if (typeof console.log === \"function\" ||\n\t            typeof console.log === \"object\") {\n\t            console.log(message);\n\t        }\n\t    }\n\t}\n\t\n\tfunction fireRejectionEvent(name, localHandler, reason, promise) {\n\t    var localEventFired = false;\n\t    try {\n\t        if (typeof localHandler === \"function\") {\n\t            localEventFired = true;\n\t            if (name === \"rejectionHandled\") {\n\t                localHandler(promise);\n\t            } else {\n\t                localHandler(reason, promise);\n\t            }\n\t        }\n\t    } catch (e) {\n\t        async.throwLater(e);\n\t    }\n\t\n\t    if (name === \"unhandledRejection\") {\n\t        if (!activeFireEvent(name, reason, promise) && !localEventFired) {\n\t            formatAndLogError(reason, \"Unhandled rejection \");\n\t        }\n\t    } else {\n\t        activeFireEvent(name, promise);\n\t    }\n\t}\n\t\n\tfunction formatNonError(obj) {\n\t    var str;\n\t    if (typeof obj === \"function\") {\n\t        str = \"[function \" +\n\t            (obj.name || \"anonymous\") +\n\t            \"]\";\n\t    } else {\n\t        str = obj && typeof obj.toString === \"function\"\n\t            ? obj.toString() : util.toString(obj);\n\t        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n\t        if (ruselessToString.test(str)) {\n\t            try {\n\t                var newStr = JSON.stringify(obj);\n\t                str = newStr;\n\t            }\n\t            catch(e) {\n\t\n\t            }\n\t        }\n\t        if (str.length === 0) {\n\t            str = \"(empty array)\";\n\t        }\n\t    }\n\t    return (\"(<\" + snip(str) + \">, no stack trace)\");\n\t}\n\t\n\tfunction snip(str) {\n\t    var maxChars = 41;\n\t    if (str.length < maxChars) {\n\t        return str;\n\t    }\n\t    return str.substr(0, maxChars - 3) + \"...\";\n\t}\n\t\n\tfunction longStackTracesIsSupported() {\n\t    return typeof captureStackTrace === \"function\";\n\t}\n\t\n\tvar shouldIgnore = function() { return false; };\n\tvar parseLineInfoRegex = /[\\/<\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;\n\tfunction parseLineInfo(line) {\n\t    var matches = line.match(parseLineInfoRegex);\n\t    if (matches) {\n\t        return {\n\t            fileName: matches[1],\n\t            line: parseInt(matches[2], 10)\n\t        };\n\t    }\n\t}\n\t\n\tfunction setBounds(firstLineError, lastLineError) {\n\t    if (!longStackTracesIsSupported()) return;\n\t    var firstStackLines = firstLineError.stack.split(\"\\n\");\n\t    var lastStackLines = lastLineError.stack.split(\"\\n\");\n\t    var firstIndex = -1;\n\t    var lastIndex = -1;\n\t    var firstFileName;\n\t    var lastFileName;\n\t    for (var i = 0; i < firstStackLines.length; ++i) {\n\t        var result = parseLineInfo(firstStackLines[i]);\n\t        if (result) {\n\t            firstFileName = result.fileName;\n\t            firstIndex = result.line;\n\t            break;\n\t        }\n\t    }\n\t    for (var i = 0; i < lastStackLines.length; ++i) {\n\t        var result = parseLineInfo(lastStackLines[i]);\n\t        if (result) {\n\t            lastFileName = result.fileName;\n\t            lastIndex = result.line;\n\t            break;\n\t        }\n\t    }\n\t    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||\n\t        firstFileName !== lastFileName || firstIndex >= lastIndex) {\n\t        return;\n\t    }\n\t\n\t    shouldIgnore = function(line) {\n\t        if (bluebirdFramePattern.test(line)) return true;\n\t        var info = parseLineInfo(line);\n\t        if (info) {\n\t            if (info.fileName === firstFileName &&\n\t                (firstIndex <= info.line && info.line <= lastIndex)) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t}\n\t\n\tfunction CapturedTrace(parent) {\n\t    this._parent = parent;\n\t    this._promisesCreated = 0;\n\t    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);\n\t    captureStackTrace(this, CapturedTrace);\n\t    if (length > 32) this.uncycle();\n\t}\n\tutil.inherits(CapturedTrace, Error);\n\tContext.CapturedTrace = CapturedTrace;\n\t\n\tCapturedTrace.prototype.uncycle = function() {\n\t    var length = this._length;\n\t    if (length < 2) return;\n\t    var nodes = [];\n\t    var stackToIndex = {};\n\t\n\t    for (var i = 0, node = this; node !== undefined; ++i) {\n\t        nodes.push(node);\n\t        node = node._parent;\n\t    }\n\t    length = this._length = i;\n\t    for (var i = length - 1; i >= 0; --i) {\n\t        var stack = nodes[i].stack;\n\t        if (stackToIndex[stack] === undefined) {\n\t            stackToIndex[stack] = i;\n\t        }\n\t    }\n\t    for (var i = 0; i < length; ++i) {\n\t        var currentStack = nodes[i].stack;\n\t        var index = stackToIndex[currentStack];\n\t        if (index !== undefined && index !== i) {\n\t            if (index > 0) {\n\t                nodes[index - 1]._parent = undefined;\n\t                nodes[index - 1]._length = 1;\n\t            }\n\t            nodes[i]._parent = undefined;\n\t            nodes[i]._length = 1;\n\t            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;\n\t\n\t            if (index < length - 1) {\n\t                cycleEdgeNode._parent = nodes[index + 1];\n\t                cycleEdgeNode._parent.uncycle();\n\t                cycleEdgeNode._length =\n\t                    cycleEdgeNode._parent._length + 1;\n\t            } else {\n\t                cycleEdgeNode._parent = undefined;\n\t                cycleEdgeNode._length = 1;\n\t            }\n\t            var currentChildLength = cycleEdgeNode._length + 1;\n\t            for (var j = i - 2; j >= 0; --j) {\n\t                nodes[j]._length = currentChildLength;\n\t                currentChildLength++;\n\t            }\n\t            return;\n\t        }\n\t    }\n\t};\n\t\n\tCapturedTrace.prototype.attachExtraTrace = function(error) {\n\t    if (error.__stackCleaned__) return;\n\t    this.uncycle();\n\t    var parsed = parseStackAndMessage(error);\n\t    var message = parsed.message;\n\t    var stacks = [parsed.stack];\n\t\n\t    var trace = this;\n\t    while (trace !== undefined) {\n\t        stacks.push(cleanStack(trace.stack.split(\"\\n\")));\n\t        trace = trace._parent;\n\t    }\n\t    removeCommonRoots(stacks);\n\t    removeDuplicateOrEmptyJumps(stacks);\n\t    util.notEnumerableProp(error, \"stack\", reconstructStack(message, stacks));\n\t    util.notEnumerableProp(error, \"__stackCleaned__\", true);\n\t};\n\t\n\tvar captureStackTrace = (function stackDetection() {\n\t    var v8stackFramePattern = /^\\s*at\\s*/;\n\t    var v8stackFormatter = function(stack, error) {\n\t        if (typeof stack === \"string\") return stack;\n\t\n\t        if (error.name !== undefined &&\n\t            error.message !== undefined) {\n\t            return error.toString();\n\t        }\n\t        return formatNonError(error);\n\t    };\n\t\n\t    if (typeof Error.stackTraceLimit === \"number\" &&\n\t        typeof Error.captureStackTrace === \"function\") {\n\t        Error.stackTraceLimit += 6;\n\t        stackFramePattern = v8stackFramePattern;\n\t        formatStack = v8stackFormatter;\n\t        var captureStackTrace = Error.captureStackTrace;\n\t\n\t        shouldIgnore = function(line) {\n\t            return bluebirdFramePattern.test(line);\n\t        };\n\t        return function(receiver, ignoreUntil) {\n\t            Error.stackTraceLimit += 6;\n\t            captureStackTrace(receiver, ignoreUntil);\n\t            Error.stackTraceLimit -= 6;\n\t        };\n\t    }\n\t    var err = new Error();\n\t\n\t    if (typeof err.stack === \"string\" &&\n\t        err.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\") >= 0) {\n\t        stackFramePattern = /@/;\n\t        formatStack = v8stackFormatter;\n\t        indentStackFrames = true;\n\t        return function captureStackTrace(o) {\n\t            o.stack = new Error().stack;\n\t        };\n\t    }\n\t\n\t    var hasStackAfterThrow;\n\t    try { throw new Error(); }\n\t    catch(e) {\n\t        hasStackAfterThrow = (\"stack\" in e);\n\t    }\n\t    if (!(\"stack\" in err) && hasStackAfterThrow &&\n\t        typeof Error.stackTraceLimit === \"number\") {\n\t        stackFramePattern = v8stackFramePattern;\n\t        formatStack = v8stackFormatter;\n\t        return function captureStackTrace(o) {\n\t            Error.stackTraceLimit += 6;\n\t            try { throw new Error(); }\n\t            catch(e) { o.stack = e.stack; }\n\t            Error.stackTraceLimit -= 6;\n\t        };\n\t    }\n\t\n\t    formatStack = function(stack, error) {\n\t        if (typeof stack === \"string\") return stack;\n\t\n\t        if ((typeof error === \"object\" ||\n\t            typeof error === \"function\") &&\n\t            error.name !== undefined &&\n\t            error.message !== undefined) {\n\t            return error.toString();\n\t        }\n\t        return formatNonError(error);\n\t    };\n\t\n\t    return null;\n\t\n\t})([]);\n\t\n\tif (typeof console !== \"undefined\" && typeof console.warn !== \"undefined\") {\n\t    printWarning = function (message) {\n\t        console.warn(message);\n\t    };\n\t    if (util.isNode && process.stderr.isTTY) {\n\t        printWarning = function(message, isSoft) {\n\t            var color = isSoft ? \"\\u001b[33m\" : \"\\u001b[31m\";\n\t            console.warn(color + message + \"\\u001b[0m\\n\");\n\t        };\n\t    } else if (!util.isNode && typeof (new Error().stack) === \"string\") {\n\t        printWarning = function(message, isSoft) {\n\t            console.warn(\"%c\" + message,\n\t                        isSoft ? \"color: darkorange\" : \"color: red\");\n\t        };\n\t    }\n\t}\n\t\n\tvar config = {\n\t    warnings: warnings,\n\t    longStackTraces: false,\n\t    cancellation: false,\n\t    monitoring: false\n\t};\n\t\n\tif (longStackTraces) Promise.longStackTraces();\n\t\n\treturn {\n\t    longStackTraces: function() {\n\t        return config.longStackTraces;\n\t    },\n\t    warnings: function() {\n\t        return config.warnings;\n\t    },\n\t    cancellation: function() {\n\t        return config.cancellation;\n\t    },\n\t    monitoring: function() {\n\t        return config.monitoring;\n\t    },\n\t    propagateFromFunction: function() {\n\t        return propagateFromFunction;\n\t    },\n\t    boundValueFunction: function() {\n\t        return boundValueFunction;\n\t    },\n\t    checkForgottenReturns: checkForgottenReturns,\n\t    setBounds: setBounds,\n\t    warn: warn,\n\t    deprecated: deprecated,\n\t    CapturedTrace: CapturedTrace,\n\t    fireDomEvent: fireDomEvent,\n\t    fireGlobalEvent: fireGlobalEvent\n\t};\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise) {\n\tfunction returner() {\n\t    return this.value;\n\t}\n\tfunction thrower() {\n\t    throw this.reason;\n\t}\n\t\n\tPromise.prototype[\"return\"] =\n\tPromise.prototype.thenReturn = function (value) {\n\t    if (value instanceof Promise) value.suppressUnhandledRejections();\n\t    return this._then(\n\t        returner, undefined, undefined, {value: value}, undefined);\n\t};\n\t\n\tPromise.prototype[\"throw\"] =\n\tPromise.prototype.thenThrow = function (reason) {\n\t    return this._then(\n\t        thrower, undefined, undefined, {reason: reason}, undefined);\n\t};\n\t\n\tPromise.prototype.catchThrow = function (reason) {\n\t    if (arguments.length <= 1) {\n\t        return this._then(\n\t            undefined, thrower, undefined, {reason: reason}, undefined);\n\t    } else {\n\t        var _reason = arguments[1];\n\t        var handler = function() {throw _reason;};\n\t        return this.caught(reason, handler);\n\t    }\n\t};\n\t\n\tPromise.prototype.catchReturn = function (value) {\n\t    if (arguments.length <= 1) {\n\t        if (value instanceof Promise) value.suppressUnhandledRejections();\n\t        return this._then(\n\t            undefined, returner, undefined, {value: value}, undefined);\n\t    } else {\n\t        var _value = arguments[1];\n\t        if (_value instanceof Promise) _value.suppressUnhandledRejections();\n\t        var handler = function() {return _value;};\n\t        return this.caught(value, handler);\n\t    }\n\t};\n\t};\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar PromiseReduce = Promise.reduce;\n\tvar PromiseAll = Promise.all;\n\t\n\tfunction promiseAllThis() {\n\t    return PromiseAll(this);\n\t}\n\t\n\tfunction PromiseMapSeries(promises, fn) {\n\t    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);\n\t}\n\t\n\tPromise.prototype.each = function (fn) {\n\t    return PromiseReduce(this, fn, INTERNAL, 0)\n\t              ._then(promiseAllThis, undefined, undefined, this, undefined);\n\t};\n\t\n\tPromise.prototype.mapSeries = function (fn) {\n\t    return PromiseReduce(this, fn, INTERNAL, INTERNAL);\n\t};\n\t\n\tPromise.each = function (promises, fn) {\n\t    return PromiseReduce(promises, fn, INTERNAL, 0)\n\t              ._then(promiseAllThis, undefined, undefined, promises, undefined);\n\t};\n\t\n\tPromise.mapSeries = PromiseMapSeries;\n\t};\n\t\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar PromiseMap = Promise.map;\n\t\n\tPromise.prototype.filter = function (fn, options) {\n\t    return PromiseMap(this, fn, options, INTERNAL);\n\t};\n\t\n\tPromise.filter = function (promises, fn, options) {\n\t    return PromiseMap(promises, fn, options, INTERNAL);\n\t};\n\t};\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise, tryConvertToPromise, NEXT_FILTER) {\n\tvar util = __webpack_require__(1);\n\tvar CancellationError = Promise.CancellationError;\n\tvar errorObj = util.errorObj;\n\tvar catchFilter = __webpack_require__(64)(NEXT_FILTER);\n\t\n\tfunction PassThroughHandlerContext(promise, type, handler) {\n\t    this.promise = promise;\n\t    this.type = type;\n\t    this.handler = handler;\n\t    this.called = false;\n\t    this.cancelPromise = null;\n\t}\n\t\n\tPassThroughHandlerContext.prototype.isFinallyHandler = function() {\n\t    return this.type === 0;\n\t};\n\t\n\tfunction FinallyHandlerCancelReaction(finallyHandler) {\n\t    this.finallyHandler = finallyHandler;\n\t}\n\t\n\tFinallyHandlerCancelReaction.prototype._resultCancelled = function() {\n\t    checkCancel(this.finallyHandler);\n\t};\n\t\n\tfunction checkCancel(ctx, reason) {\n\t    if (ctx.cancelPromise != null) {\n\t        if (arguments.length > 1) {\n\t            ctx.cancelPromise._reject(reason);\n\t        } else {\n\t            ctx.cancelPromise._cancel();\n\t        }\n\t        ctx.cancelPromise = null;\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\tfunction succeed() {\n\t    return finallyHandler.call(this, this.promise._target()._settledValue());\n\t}\n\tfunction fail(reason) {\n\t    if (checkCancel(this, reason)) return;\n\t    errorObj.e = reason;\n\t    return errorObj;\n\t}\n\tfunction finallyHandler(reasonOrValue) {\n\t    var promise = this.promise;\n\t    var handler = this.handler;\n\t\n\t    if (!this.called) {\n\t        this.called = true;\n\t        var ret = this.isFinallyHandler()\n\t            ? handler.call(promise._boundValue())\n\t            : handler.call(promise._boundValue(), reasonOrValue);\n\t        if (ret === NEXT_FILTER) {\n\t            return ret;\n\t        } else if (ret !== undefined) {\n\t            promise._setReturnedNonUndefined();\n\t            var maybePromise = tryConvertToPromise(ret, promise);\n\t            if (maybePromise instanceof Promise) {\n\t                if (this.cancelPromise != null) {\n\t                    if (maybePromise._isCancelled()) {\n\t                        var reason =\n\t                            new CancellationError(\"late cancellation observer\");\n\t                        promise._attachExtraTrace(reason);\n\t                        errorObj.e = reason;\n\t                        return errorObj;\n\t                    } else if (maybePromise.isPending()) {\n\t                        maybePromise._attachCancellationCallback(\n\t                            new FinallyHandlerCancelReaction(this));\n\t                    }\n\t                }\n\t                return maybePromise._then(\n\t                    succeed, fail, undefined, this, undefined);\n\t            }\n\t        }\n\t    }\n\t\n\t    if (promise.isRejected()) {\n\t        checkCancel(this);\n\t        errorObj.e = reasonOrValue;\n\t        return errorObj;\n\t    } else {\n\t        checkCancel(this);\n\t        return reasonOrValue;\n\t    }\n\t}\n\t\n\tPromise.prototype._passThrough = function(handler, type, success, fail) {\n\t    if (typeof handler !== \"function\") return this.then();\n\t    return this._then(success,\n\t                      fail,\n\t                      undefined,\n\t                      new PassThroughHandlerContext(this, type, handler),\n\t                      undefined);\n\t};\n\t\n\tPromise.prototype.lastly =\n\tPromise.prototype[\"finally\"] = function (handler) {\n\t    return this._passThrough(handler,\n\t                             0,\n\t                             finallyHandler,\n\t                             finallyHandler);\n\t};\n\t\n\t\n\tPromise.prototype.tap = function (handler) {\n\t    return this._passThrough(handler, 1, finallyHandler);\n\t};\n\t\n\tPromise.prototype.tapCatch = function (handlerOrPredicate) {\n\t    var len = arguments.length;\n\t    if(len === 1) {\n\t        return this._passThrough(handlerOrPredicate,\n\t                                 1,\n\t                                 undefined,\n\t                                 finallyHandler);\n\t    } else {\n\t         var catchInstances = new Array(len - 1),\n\t            j = 0, i;\n\t        for (i = 0; i < len - 1; ++i) {\n\t            var item = arguments[i];\n\t            if (util.isObject(item)) {\n\t                catchInstances[j++] = item;\n\t            } else {\n\t                return Promise.reject(new TypeError(\n\t                    \"tapCatch statement predicate: \"\n\t                    + \"expecting an object but got \" + util.classString(item)\n\t                ));\n\t            }\n\t        }\n\t        catchInstances.length = j;\n\t        var handler = arguments[i];\n\t        return this._passThrough(catchFilter(catchInstances, handler, this),\n\t                                 1,\n\t                                 undefined,\n\t                                 finallyHandler);\n\t    }\n\t\n\t};\n\t\n\treturn PassThroughHandlerContext;\n\t};\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise,\n\t                          apiRejection,\n\t                          INTERNAL,\n\t                          tryConvertToPromise,\n\t                          Proxyable,\n\t                          debug) {\n\tvar errors = __webpack_require__(8);\n\tvar TypeError = errors.TypeError;\n\tvar util = __webpack_require__(1);\n\tvar errorObj = util.errorObj;\n\tvar tryCatch = util.tryCatch;\n\tvar yieldHandlers = [];\n\t\n\tfunction promiseFromYieldHandler(value, yieldHandlers, traceParent) {\n\t    for (var i = 0; i < yieldHandlers.length; ++i) {\n\t        traceParent._pushContext();\n\t        var result = tryCatch(yieldHandlers[i])(value);\n\t        traceParent._popContext();\n\t        if (result === errorObj) {\n\t            traceParent._pushContext();\n\t            var ret = Promise.reject(errorObj.e);\n\t            traceParent._popContext();\n\t            return ret;\n\t        }\n\t        var maybePromise = tryConvertToPromise(result, traceParent);\n\t        if (maybePromise instanceof Promise) return maybePromise;\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {\n\t    if (debug.cancellation()) {\n\t        var internal = new Promise(INTERNAL);\n\t        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);\n\t        this._promise = internal.lastly(function() {\n\t            return _finallyPromise;\n\t        });\n\t        internal._captureStackTrace();\n\t        internal._setOnCancel(this);\n\t    } else {\n\t        var promise = this._promise = new Promise(INTERNAL);\n\t        promise._captureStackTrace();\n\t    }\n\t    this._stack = stack;\n\t    this._generatorFunction = generatorFunction;\n\t    this._receiver = receiver;\n\t    this._generator = undefined;\n\t    this._yieldHandlers = typeof yieldHandler === \"function\"\n\t        ? [yieldHandler].concat(yieldHandlers)\n\t        : yieldHandlers;\n\t    this._yieldedPromise = null;\n\t    this._cancellationPhase = false;\n\t}\n\tutil.inherits(PromiseSpawn, Proxyable);\n\t\n\tPromiseSpawn.prototype._isResolved = function() {\n\t    return this._promise === null;\n\t};\n\t\n\tPromiseSpawn.prototype._cleanup = function() {\n\t    this._promise = this._generator = null;\n\t    if (debug.cancellation() && this._finallyPromise !== null) {\n\t        this._finallyPromise._fulfill();\n\t        this._finallyPromise = null;\n\t    }\n\t};\n\t\n\tPromiseSpawn.prototype._promiseCancelled = function() {\n\t    if (this._isResolved()) return;\n\t    var implementsReturn = typeof this._generator[\"return\"] !== \"undefined\";\n\t\n\t    var result;\n\t    if (!implementsReturn) {\n\t        var reason = new Promise.CancellationError(\n\t            \"generator .return() sentinel\");\n\t        Promise.coroutine.returnSentinel = reason;\n\t        this._promise._attachExtraTrace(reason);\n\t        this._promise._pushContext();\n\t        result = tryCatch(this._generator[\"throw\"]).call(this._generator,\n\t                                                         reason);\n\t        this._promise._popContext();\n\t    } else {\n\t        this._promise._pushContext();\n\t        result = tryCatch(this._generator[\"return\"]).call(this._generator,\n\t                                                          undefined);\n\t        this._promise._popContext();\n\t    }\n\t    this._cancellationPhase = true;\n\t    this._yieldedPromise = null;\n\t    this._continue(result);\n\t};\n\t\n\tPromiseSpawn.prototype._promiseFulfilled = function(value) {\n\t    this._yieldedPromise = null;\n\t    this._promise._pushContext();\n\t    var result = tryCatch(this._generator.next).call(this._generator, value);\n\t    this._promise._popContext();\n\t    this._continue(result);\n\t};\n\t\n\tPromiseSpawn.prototype._promiseRejected = function(reason) {\n\t    this._yieldedPromise = null;\n\t    this._promise._attachExtraTrace(reason);\n\t    this._promise._pushContext();\n\t    var result = tryCatch(this._generator[\"throw\"])\n\t        .call(this._generator, reason);\n\t    this._promise._popContext();\n\t    this._continue(result);\n\t};\n\t\n\tPromiseSpawn.prototype._resultCancelled = function() {\n\t    if (this._yieldedPromise instanceof Promise) {\n\t        var promise = this._yieldedPromise;\n\t        this._yieldedPromise = null;\n\t        promise.cancel();\n\t    }\n\t};\n\t\n\tPromiseSpawn.prototype.promise = function () {\n\t    return this._promise;\n\t};\n\t\n\tPromiseSpawn.prototype._run = function () {\n\t    this._generator = this._generatorFunction.call(this._receiver);\n\t    this._receiver =\n\t        this._generatorFunction = undefined;\n\t    this._promiseFulfilled(undefined);\n\t};\n\t\n\tPromiseSpawn.prototype._continue = function (result) {\n\t    var promise = this._promise;\n\t    if (result === errorObj) {\n\t        this._cleanup();\n\t        if (this._cancellationPhase) {\n\t            return promise.cancel();\n\t        } else {\n\t            return promise._rejectCallback(result.e, false);\n\t        }\n\t    }\n\t\n\t    var value = result.value;\n\t    if (result.done === true) {\n\t        this._cleanup();\n\t        if (this._cancellationPhase) {\n\t            return promise.cancel();\n\t        } else {\n\t            return promise._resolveCallback(value);\n\t        }\n\t    } else {\n\t        var maybePromise = tryConvertToPromise(value, this._promise);\n\t        if (!(maybePromise instanceof Promise)) {\n\t            maybePromise =\n\t                promiseFromYieldHandler(maybePromise,\n\t                                        this._yieldHandlers,\n\t                                        this._promise);\n\t            if (maybePromise === null) {\n\t                this._promiseRejected(\n\t                    new TypeError(\n\t                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\\u000a\".replace(\"%s\", String(value)) +\n\t                        \"From coroutine:\\u000a\" +\n\t                        this._stack.split(\"\\n\").slice(1, -7).join(\"\\n\")\n\t                    )\n\t                );\n\t                return;\n\t            }\n\t        }\n\t        maybePromise = maybePromise._target();\n\t        var bitField = maybePromise._bitField;\n\t        ;\n\t        if (((bitField & 50397184) === 0)) {\n\t            this._yieldedPromise = maybePromise;\n\t            maybePromise._proxy(this, null);\n\t        } else if (((bitField & 33554432) !== 0)) {\n\t            Promise._async.invoke(\n\t                this._promiseFulfilled, this, maybePromise._value()\n\t            );\n\t        } else if (((bitField & 16777216) !== 0)) {\n\t            Promise._async.invoke(\n\t                this._promiseRejected, this, maybePromise._reason()\n\t            );\n\t        } else {\n\t            this._promiseCancelled();\n\t        }\n\t    }\n\t};\n\t\n\tPromise.coroutine = function (generatorFunction, options) {\n\t    if (typeof generatorFunction !== \"function\") {\n\t        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    }\n\t    var yieldHandler = Object(options).yieldHandler;\n\t    var PromiseSpawn$ = PromiseSpawn;\n\t    var stack = new Error().stack;\n\t    return function () {\n\t        var generator = generatorFunction.apply(this, arguments);\n\t        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n\t                                      stack);\n\t        var ret = spawn.promise();\n\t        spawn._generator = generator;\n\t        spawn._promiseFulfilled(undefined);\n\t        return ret;\n\t    };\n\t};\n\t\n\tPromise.coroutine.addYieldHandler = function(fn) {\n\t    if (typeof fn !== \"function\") {\n\t        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n\t    }\n\t    yieldHandlers.push(fn);\n\t};\n\t\n\tPromise.spawn = function (generatorFunction) {\n\t    debug.deprecated(\"Promise.spawn()\", \"Promise.coroutine()\");\n\t    if (typeof generatorFunction !== \"function\") {\n\t        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    }\n\t    var spawn = new PromiseSpawn(generatorFunction, this);\n\t    var ret = spawn.promise();\n\t    spawn._run(Promise.spawn);\n\t    return ret;\n\t};\n\t};\n\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports =\n\tfunction(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async,\n\t         getDomain) {\n\tvar util = __webpack_require__(1);\n\tvar canEvaluate = util.canEvaluate;\n\tvar tryCatch = util.tryCatch;\n\tvar errorObj = util.errorObj;\n\tvar reject;\n\t\n\tif (true) {\n\tif (canEvaluate) {\n\t    var thenCallback = function(i) {\n\t        return new Function(\"value\", \"holder\", \"                             \\n\\\n\t            'use strict';                                                    \\n\\\n\t            holder.pIndex = value;                                           \\n\\\n\t            holder.checkFulfillment(this);                                   \\n\\\n\t            \".replace(/Index/g, i));\n\t    };\n\t\n\t    var promiseSetter = function(i) {\n\t        return new Function(\"promise\", \"holder\", \"                           \\n\\\n\t            'use strict';                                                    \\n\\\n\t            holder.pIndex = promise;                                         \\n\\\n\t            \".replace(/Index/g, i));\n\t    };\n\t\n\t    var generateHolderClass = function(total) {\n\t        var props = new Array(total);\n\t        for (var i = 0; i < props.length; ++i) {\n\t            props[i] = \"this.p\" + (i+1);\n\t        }\n\t        var assignment = props.join(\" = \") + \" = null;\";\n\t        var cancellationCode= \"var promise;\\n\" + props.map(function(prop) {\n\t            return \"                                                         \\n\\\n\t                promise = \" + prop + \";                                      \\n\\\n\t                if (promise instanceof Promise) {                            \\n\\\n\t                    promise.cancel();                                        \\n\\\n\t                }                                                            \\n\\\n\t            \";\n\t        }).join(\"\\n\");\n\t        var passedArguments = props.join(\", \");\n\t        var name = \"Holder$\" + total;\n\t\n\t\n\t        var code = \"return function(tryCatch, errorObj, Promise, async) {    \\n\\\n\t            'use strict';                                                    \\n\\\n\t            function [TheName](fn) {                                         \\n\\\n\t                [TheProperties]                                              \\n\\\n\t                this.fn = fn;                                                \\n\\\n\t                this.asyncNeeded = true;                                     \\n\\\n\t                this.now = 0;                                                \\n\\\n\t            }                                                                \\n\\\n\t                                                                             \\n\\\n\t            [TheName].prototype._callFunction = function(promise) {          \\n\\\n\t                promise._pushContext();                                      \\n\\\n\t                var ret = tryCatch(this.fn)([ThePassedArguments]);           \\n\\\n\t                promise._popContext();                                       \\n\\\n\t                if (ret === errorObj) {                                      \\n\\\n\t                    promise._rejectCallback(ret.e, false);                   \\n\\\n\t                } else {                                                     \\n\\\n\t                    promise._resolveCallback(ret);                           \\n\\\n\t                }                                                            \\n\\\n\t            };                                                               \\n\\\n\t                                                                             \\n\\\n\t            [TheName].prototype.checkFulfillment = function(promise) {       \\n\\\n\t                var now = ++this.now;                                        \\n\\\n\t                if (now === [TheTotal]) {                                    \\n\\\n\t                    if (this.asyncNeeded) {                                  \\n\\\n\t                        async.invoke(this._callFunction, this, promise);     \\n\\\n\t                    } else {                                                 \\n\\\n\t                        this._callFunction(promise);                         \\n\\\n\t                    }                                                        \\n\\\n\t                                                                             \\n\\\n\t                }                                                            \\n\\\n\t            };                                                               \\n\\\n\t                                                                             \\n\\\n\t            [TheName].prototype._resultCancelled = function() {              \\n\\\n\t                [CancellationCode]                                           \\n\\\n\t            };                                                               \\n\\\n\t                                                                             \\n\\\n\t            return [TheName];                                                \\n\\\n\t        }(tryCatch, errorObj, Promise, async);                               \\n\\\n\t        \";\n\t\n\t        code = code.replace(/\\[TheName\\]/g, name)\n\t            .replace(/\\[TheTotal\\]/g, total)\n\t            .replace(/\\[ThePassedArguments\\]/g, passedArguments)\n\t            .replace(/\\[TheProperties\\]/g, assignment)\n\t            .replace(/\\[CancellationCode\\]/g, cancellationCode);\n\t\n\t        return new Function(\"tryCatch\", \"errorObj\", \"Promise\", \"async\", code)\n\t                           (tryCatch, errorObj, Promise, async);\n\t    };\n\t\n\t    var holderClasses = [];\n\t    var thenCallbacks = [];\n\t    var promiseSetters = [];\n\t\n\t    for (var i = 0; i < 8; ++i) {\n\t        holderClasses.push(generateHolderClass(i + 1));\n\t        thenCallbacks.push(thenCallback(i + 1));\n\t        promiseSetters.push(promiseSetter(i + 1));\n\t    }\n\t\n\t    reject = function (reason) {\n\t        this._reject(reason);\n\t    };\n\t}}\n\t\n\tPromise.join = function () {\n\t    var last = arguments.length - 1;\n\t    var fn;\n\t    if (last > 0 && typeof arguments[last] === \"function\") {\n\t        fn = arguments[last];\n\t        if (true) {\n\t            if (last <= 8 && canEvaluate) {\n\t                var ret = new Promise(INTERNAL);\n\t                ret._captureStackTrace();\n\t                var HolderClass = holderClasses[last - 1];\n\t                var holder = new HolderClass(fn);\n\t                var callbacks = thenCallbacks;\n\t\n\t                for (var i = 0; i < last; ++i) {\n\t                    var maybePromise = tryConvertToPromise(arguments[i], ret);\n\t                    if (maybePromise instanceof Promise) {\n\t                        maybePromise = maybePromise._target();\n\t                        var bitField = maybePromise._bitField;\n\t                        ;\n\t                        if (((bitField & 50397184) === 0)) {\n\t                            maybePromise._then(callbacks[i], reject,\n\t                                               undefined, ret, holder);\n\t                            promiseSetters[i](maybePromise, holder);\n\t                            holder.asyncNeeded = false;\n\t                        } else if (((bitField & 33554432) !== 0)) {\n\t                            callbacks[i].call(ret,\n\t                                              maybePromise._value(), holder);\n\t                        } else if (((bitField & 16777216) !== 0)) {\n\t                            ret._reject(maybePromise._reason());\n\t                        } else {\n\t                            ret._cancel();\n\t                        }\n\t                    } else {\n\t                        callbacks[i].call(ret, maybePromise, holder);\n\t                    }\n\t                }\n\t\n\t                if (!ret._isFateSealed()) {\n\t                    if (holder.asyncNeeded) {\n\t                        var domain = getDomain();\n\t                        if (domain !== null) {\n\t                            holder.fn = util.domainBind(domain, holder.fn);\n\t                        }\n\t                    }\n\t                    ret._setAsyncGuaranteed();\n\t                    ret._setOnCancel(holder);\n\t                }\n\t                return ret;\n\t            }\n\t        }\n\t    }\n\t    var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];};\n\t    if (fn) args.pop();\n\t    var ret = new PromiseArray(args).promise();\n\t    return fn !== undefined ? ret.spread(fn) : ret;\n\t};\n\t\n\t};\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise,\n\t                          PromiseArray,\n\t                          apiRejection,\n\t                          tryConvertToPromise,\n\t                          INTERNAL,\n\t                          debug) {\n\tvar getDomain = Promise._getDomain;\n\tvar util = __webpack_require__(1);\n\tvar tryCatch = util.tryCatch;\n\tvar errorObj = util.errorObj;\n\tvar async = Promise._async;\n\t\n\tfunction MappingPromiseArray(promises, fn, limit, _filter) {\n\t    this.constructor$(promises);\n\t    this._promise._captureStackTrace();\n\t    var domain = getDomain();\n\t    this._callback = domain === null ? fn : util.domainBind(domain, fn);\n\t    this._preservedValues = _filter === INTERNAL\n\t        ? new Array(this.length())\n\t        : null;\n\t    this._limit = limit;\n\t    this._inFlight = 0;\n\t    this._queue = [];\n\t    async.invoke(this._asyncInit, this, undefined);\n\t}\n\tutil.inherits(MappingPromiseArray, PromiseArray);\n\t\n\tMappingPromiseArray.prototype._asyncInit = function() {\n\t    this._init$(undefined, -2);\n\t};\n\t\n\tMappingPromiseArray.prototype._init = function () {};\n\t\n\tMappingPromiseArray.prototype._promiseFulfilled = function (value, index) {\n\t    var values = this._values;\n\t    var length = this.length();\n\t    var preservedValues = this._preservedValues;\n\t    var limit = this._limit;\n\t\n\t    if (index < 0) {\n\t        index = (index * -1) - 1;\n\t        values[index] = value;\n\t        if (limit >= 1) {\n\t            this._inFlight--;\n\t            this._drainQueue();\n\t            if (this._isResolved()) return true;\n\t        }\n\t    } else {\n\t        if (limit >= 1 && this._inFlight >= limit) {\n\t            values[index] = value;\n\t            this._queue.push(index);\n\t            return false;\n\t        }\n\t        if (preservedValues !== null) preservedValues[index] = value;\n\t\n\t        var promise = this._promise;\n\t        var callback = this._callback;\n\t        var receiver = promise._boundValue();\n\t        promise._pushContext();\n\t        var ret = tryCatch(callback).call(receiver, value, index, length);\n\t        var promiseCreated = promise._popContext();\n\t        debug.checkForgottenReturns(\n\t            ret,\n\t            promiseCreated,\n\t            preservedValues !== null ? \"Promise.filter\" : \"Promise.map\",\n\t            promise\n\t        );\n\t        if (ret === errorObj) {\n\t            this._reject(ret.e);\n\t            return true;\n\t        }\n\t\n\t        var maybePromise = tryConvertToPromise(ret, this._promise);\n\t        if (maybePromise instanceof Promise) {\n\t            maybePromise = maybePromise._target();\n\t            var bitField = maybePromise._bitField;\n\t            ;\n\t            if (((bitField & 50397184) === 0)) {\n\t                if (limit >= 1) this._inFlight++;\n\t                values[index] = maybePromise;\n\t                maybePromise._proxy(this, (index + 1) * -1);\n\t                return false;\n\t            } else if (((bitField & 33554432) !== 0)) {\n\t                ret = maybePromise._value();\n\t            } else if (((bitField & 16777216) !== 0)) {\n\t                this._reject(maybePromise._reason());\n\t                return true;\n\t            } else {\n\t                this._cancel();\n\t                return true;\n\t            }\n\t        }\n\t        values[index] = ret;\n\t    }\n\t    var totalResolved = ++this._totalResolved;\n\t    if (totalResolved >= length) {\n\t        if (preservedValues !== null) {\n\t            this._filter(values, preservedValues);\n\t        } else {\n\t            this._resolve(values);\n\t        }\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\t\n\tMappingPromiseArray.prototype._drainQueue = function () {\n\t    var queue = this._queue;\n\t    var limit = this._limit;\n\t    var values = this._values;\n\t    while (queue.length > 0 && this._inFlight < limit) {\n\t        if (this._isResolved()) return;\n\t        var index = queue.pop();\n\t        this._promiseFulfilled(values[index], index);\n\t    }\n\t};\n\t\n\tMappingPromiseArray.prototype._filter = function (booleans, values) {\n\t    var len = values.length;\n\t    var ret = new Array(len);\n\t    var j = 0;\n\t    for (var i = 0; i < len; ++i) {\n\t        if (booleans[i]) ret[j++] = values[i];\n\t    }\n\t    ret.length = j;\n\t    this._resolve(ret);\n\t};\n\t\n\tMappingPromiseArray.prototype.preservedValues = function () {\n\t    return this._preservedValues;\n\t};\n\t\n\tfunction map(promises, fn, options, _filter) {\n\t    if (typeof fn !== \"function\") {\n\t        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n\t    }\n\t\n\t    var limit = 0;\n\t    if (options !== undefined) {\n\t        if (typeof options === \"object\" && options !== null) {\n\t            if (typeof options.concurrency !== \"number\") {\n\t                return Promise.reject(\n\t                    new TypeError(\"'concurrency' must be a number but it is \" +\n\t                                    util.classString(options.concurrency)));\n\t            }\n\t            limit = options.concurrency;\n\t        } else {\n\t            return Promise.reject(new TypeError(\n\t                            \"options argument must be an object but it is \" +\n\t                             util.classString(options)));\n\t        }\n\t    }\n\t    limit = typeof limit === \"number\" &&\n\t        isFinite(limit) && limit >= 1 ? limit : 0;\n\t    return new MappingPromiseArray(promises, fn, limit, _filter).promise();\n\t}\n\t\n\tPromise.prototype.map = function (fn, options) {\n\t    return map(this, fn, options, null);\n\t};\n\t\n\tPromise.map = function (promises, fn, options, _filter) {\n\t    return map(promises, fn, options, _filter);\n\t};\n\t\n\t\n\t};\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports =\n\tfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\n\tvar util = __webpack_require__(1);\n\tvar tryCatch = util.tryCatch;\n\t\n\tPromise.method = function (fn) {\n\t    if (typeof fn !== \"function\") {\n\t        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n\t    }\n\t    return function () {\n\t        var ret = new Promise(INTERNAL);\n\t        ret._captureStackTrace();\n\t        ret._pushContext();\n\t        var value = tryCatch(fn).apply(this, arguments);\n\t        var promiseCreated = ret._popContext();\n\t        debug.checkForgottenReturns(\n\t            value, promiseCreated, \"Promise.method\", ret);\n\t        ret._resolveFromSyncValue(value);\n\t        return ret;\n\t    };\n\t};\n\t\n\tPromise.attempt = Promise[\"try\"] = function (fn) {\n\t    if (typeof fn !== \"function\") {\n\t        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n\t    }\n\t    var ret = new Promise(INTERNAL);\n\t    ret._captureStackTrace();\n\t    ret._pushContext();\n\t    var value;\n\t    if (arguments.length > 1) {\n\t        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n\t        var arg = arguments[1];\n\t        var ctx = arguments[2];\n\t        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n\t                                  : tryCatch(fn).call(ctx, arg);\n\t    } else {\n\t        value = tryCatch(fn)();\n\t    }\n\t    var promiseCreated = ret._popContext();\n\t    debug.checkForgottenReturns(\n\t        value, promiseCreated, \"Promise.try\", ret);\n\t    ret._resolveFromSyncValue(value);\n\t    return ret;\n\t};\n\t\n\tPromise.prototype._resolveFromSyncValue = function (value) {\n\t    if (value === util.errorObj) {\n\t        this._rejectCallback(value.e, false);\n\t    } else {\n\t        this._resolveCallback(value, true);\n\t    }\n\t};\n\t};\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise) {\n\tvar util = __webpack_require__(1);\n\tvar async = Promise._async;\n\tvar tryCatch = util.tryCatch;\n\tvar errorObj = util.errorObj;\n\t\n\tfunction spreadAdapter(val, nodeback) {\n\t    var promise = this;\n\t    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);\n\t    var ret =\n\t        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));\n\t    if (ret === errorObj) {\n\t        async.throwLater(ret.e);\n\t    }\n\t}\n\t\n\tfunction successAdapter(val, nodeback) {\n\t    var promise = this;\n\t    var receiver = promise._boundValue();\n\t    var ret = val === undefined\n\t        ? tryCatch(nodeback).call(receiver, null)\n\t        : tryCatch(nodeback).call(receiver, null, val);\n\t    if (ret === errorObj) {\n\t        async.throwLater(ret.e);\n\t    }\n\t}\n\tfunction errorAdapter(reason, nodeback) {\n\t    var promise = this;\n\t    if (!reason) {\n\t        var newReason = new Error(reason + \"\");\n\t        newReason.cause = reason;\n\t        reason = newReason;\n\t    }\n\t    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);\n\t    if (ret === errorObj) {\n\t        async.throwLater(ret.e);\n\t    }\n\t}\n\t\n\tPromise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,\n\t                                                                     options) {\n\t    if (typeof nodeback == \"function\") {\n\t        var adapter = successAdapter;\n\t        if (options !== undefined && Object(options).spread) {\n\t            adapter = spreadAdapter;\n\t        }\n\t        this._then(\n\t            adapter,\n\t            errorAdapter,\n\t            undefined,\n\t            this,\n\t            nodeback\n\t        );\n\t    }\n\t    return this;\n\t};\n\t};\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\"use strict\";\n\tmodule.exports = function() {\n\tvar makeSelfResolutionError = function () {\n\t    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t};\n\tvar reflectHandler = function() {\n\t    return new Promise.PromiseInspection(this._target());\n\t};\n\tvar apiRejection = function(msg) {\n\t    return Promise.reject(new TypeError(msg));\n\t};\n\tfunction Proxyable() {}\n\tvar UNDEFINED_BINDING = {};\n\tvar util = __webpack_require__(1);\n\t\n\tvar getDomain;\n\tif (util.isNode) {\n\t    getDomain = function() {\n\t        var ret = process.domain;\n\t        if (ret === undefined) ret = null;\n\t        return ret;\n\t    };\n\t} else {\n\t    getDomain = function() {\n\t        return null;\n\t    };\n\t}\n\tutil.notEnumerableProp(Promise, \"_getDomain\", getDomain);\n\t\n\tvar es5 = __webpack_require__(15);\n\tvar Async = __webpack_require__(117);\n\tvar async = new Async();\n\tes5.defineProperty(Promise, \"_async\", {value: async});\n\tvar errors = __webpack_require__(8);\n\tvar TypeError = Promise.TypeError = errors.TypeError;\n\tPromise.RangeError = errors.RangeError;\n\tvar CancellationError = Promise.CancellationError = errors.CancellationError;\n\tPromise.TimeoutError = errors.TimeoutError;\n\tPromise.OperationalError = errors.OperationalError;\n\tPromise.RejectionError = errors.OperationalError;\n\tPromise.AggregateError = errors.AggregateError;\n\tvar INTERNAL = function(){};\n\tvar APPLY = {};\n\tvar NEXT_FILTER = {};\n\tvar tryConvertToPromise = __webpack_require__(144)(Promise, INTERNAL);\n\tvar PromiseArray =\n\t    __webpack_require__(134)(Promise, INTERNAL,\n\t                               tryConvertToPromise, apiRejection, Proxyable);\n\tvar Context = __webpack_require__(122)(Promise);\n\t /*jshint unused:false*/\n\tvar createContext = Context.create;\n\tvar debug = __webpack_require__(123)(Promise, Context);\n\tvar CapturedTrace = debug.CapturedTrace;\n\tvar PassThroughHandlerContext =\n\t    __webpack_require__(127)(Promise, tryConvertToPromise, NEXT_FILTER);\n\tvar catchFilter = __webpack_require__(64)(NEXT_FILTER);\n\tvar nodebackForPromise = __webpack_require__(65);\n\tvar errorObj = util.errorObj;\n\tvar tryCatch = util.tryCatch;\n\tfunction check(self, executor) {\n\t    if (self == null || self.constructor !== Promise) {\n\t        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    }\n\t    if (typeof executor !== \"function\") {\n\t        throw new TypeError(\"expecting a function but got \" + util.classString(executor));\n\t    }\n\t\n\t}\n\t\n\tfunction Promise(executor) {\n\t    if (executor !== INTERNAL) {\n\t        check(this, executor);\n\t    }\n\t    this._bitField = 0;\n\t    this._fulfillmentHandler0 = undefined;\n\t    this._rejectionHandler0 = undefined;\n\t    this._promise0 = undefined;\n\t    this._receiver0 = undefined;\n\t    this._resolveFromExecutor(executor);\n\t    this._promiseCreated();\n\t    this._fireEvent(\"promiseCreated\", this);\n\t}\n\t\n\tPromise.prototype.toString = function () {\n\t    return \"[object Promise]\";\n\t};\n\t\n\tPromise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) {\n\t    var len = arguments.length;\n\t    if (len > 1) {\n\t        var catchInstances = new Array(len - 1),\n\t            j = 0, i;\n\t        for (i = 0; i < len - 1; ++i) {\n\t            var item = arguments[i];\n\t            if (util.isObject(item)) {\n\t                catchInstances[j++] = item;\n\t            } else {\n\t                return apiRejection(\"Catch statement predicate: \" +\n\t                    \"expecting an object but got \" + util.classString(item));\n\t            }\n\t        }\n\t        catchInstances.length = j;\n\t        fn = arguments[i];\n\t        return this.then(undefined, catchFilter(catchInstances, fn, this));\n\t    }\n\t    return this.then(undefined, fn);\n\t};\n\t\n\tPromise.prototype.reflect = function () {\n\t    return this._then(reflectHandler,\n\t        reflectHandler, undefined, this, undefined);\n\t};\n\t\n\tPromise.prototype.then = function (didFulfill, didReject) {\n\t    if (debug.warnings() && arguments.length > 0 &&\n\t        typeof didFulfill !== \"function\" &&\n\t        typeof didReject !== \"function\") {\n\t        var msg = \".then() only accepts functions but was passed: \" +\n\t                util.classString(didFulfill);\n\t        if (arguments.length > 1) {\n\t            msg += \", \" + util.classString(didReject);\n\t        }\n\t        this._warn(msg);\n\t    }\n\t    return this._then(didFulfill, didReject, undefined, undefined, undefined);\n\t};\n\t\n\tPromise.prototype.done = function (didFulfill, didReject) {\n\t    var promise =\n\t        this._then(didFulfill, didReject, undefined, undefined, undefined);\n\t    promise._setIsFinal();\n\t};\n\t\n\tPromise.prototype.spread = function (fn) {\n\t    if (typeof fn !== \"function\") {\n\t        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n\t    }\n\t    return this.all()._then(fn, undefined, undefined, APPLY, undefined);\n\t};\n\t\n\tPromise.prototype.toJSON = function () {\n\t    var ret = {\n\t        isFulfilled: false,\n\t        isRejected: false,\n\t        fulfillmentValue: undefined,\n\t        rejectionReason: undefined\n\t    };\n\t    if (this.isFulfilled()) {\n\t        ret.fulfillmentValue = this.value();\n\t        ret.isFulfilled = true;\n\t    } else if (this.isRejected()) {\n\t        ret.rejectionReason = this.reason();\n\t        ret.isRejected = true;\n\t    }\n\t    return ret;\n\t};\n\t\n\tPromise.prototype.all = function () {\n\t    if (arguments.length > 0) {\n\t        this._warn(\".all() was passed arguments but it does not take any\");\n\t    }\n\t    return new PromiseArray(this).promise();\n\t};\n\t\n\tPromise.prototype.error = function (fn) {\n\t    return this.caught(util.originatesFromRejection, fn);\n\t};\n\t\n\tPromise.getNewLibraryCopy = module.exports;\n\t\n\tPromise.is = function (val) {\n\t    return val instanceof Promise;\n\t};\n\t\n\tPromise.fromNode = Promise.fromCallback = function(fn) {\n\t    var ret = new Promise(INTERNAL);\n\t    ret._captureStackTrace();\n\t    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs\n\t                                         : false;\n\t    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));\n\t    if (result === errorObj) {\n\t        ret._rejectCallback(result.e, true);\n\t    }\n\t    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();\n\t    return ret;\n\t};\n\t\n\tPromise.all = function (promises) {\n\t    return new PromiseArray(promises).promise();\n\t};\n\t\n\tPromise.cast = function (obj) {\n\t    var ret = tryConvertToPromise(obj);\n\t    if (!(ret instanceof Promise)) {\n\t        ret = new Promise(INTERNAL);\n\t        ret._captureStackTrace();\n\t        ret._setFulfilled();\n\t        ret._rejectionHandler0 = obj;\n\t    }\n\t    return ret;\n\t};\n\t\n\tPromise.resolve = Promise.fulfilled = Promise.cast;\n\t\n\tPromise.reject = Promise.rejected = function (reason) {\n\t    var ret = new Promise(INTERNAL);\n\t    ret._captureStackTrace();\n\t    ret._rejectCallback(reason, true);\n\t    return ret;\n\t};\n\t\n\tPromise.setScheduler = function(fn) {\n\t    if (typeof fn !== \"function\") {\n\t        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n\t    }\n\t    return async.setScheduler(fn);\n\t};\n\t\n\tPromise.prototype._then = function (\n\t    didFulfill,\n\t    didReject,\n\t    _,    receiver,\n\t    internalData\n\t) {\n\t    var haveInternalData = internalData !== undefined;\n\t    var promise = haveInternalData ? internalData : new Promise(INTERNAL);\n\t    var target = this._target();\n\t    var bitField = target._bitField;\n\t\n\t    if (!haveInternalData) {\n\t        promise._propagateFrom(this, 3);\n\t        promise._captureStackTrace();\n\t        if (receiver === undefined &&\n\t            ((this._bitField & 2097152) !== 0)) {\n\t            if (!((bitField & 50397184) === 0)) {\n\t                receiver = this._boundValue();\n\t            } else {\n\t                receiver = target === this ? undefined : this._boundTo;\n\t            }\n\t        }\n\t        this._fireEvent(\"promiseChained\", this, promise);\n\t    }\n\t\n\t    var domain = getDomain();\n\t    if (!((bitField & 50397184) === 0)) {\n\t        var handler, value, settler = target._settlePromiseCtx;\n\t        if (((bitField & 33554432) !== 0)) {\n\t            value = target._rejectionHandler0;\n\t            handler = didFulfill;\n\t        } else if (((bitField & 16777216) !== 0)) {\n\t            value = target._fulfillmentHandler0;\n\t            handler = didReject;\n\t            target._unsetRejectionIsUnhandled();\n\t        } else {\n\t            settler = target._settlePromiseLateCancellationObserver;\n\t            value = new CancellationError(\"late cancellation observer\");\n\t            target._attachExtraTrace(value);\n\t            handler = didReject;\n\t        }\n\t\n\t        async.invoke(settler, target, {\n\t            handler: domain === null ? handler\n\t                : (typeof handler === \"function\" &&\n\t                    util.domainBind(domain, handler)),\n\t            promise: promise,\n\t            receiver: receiver,\n\t            value: value\n\t        });\n\t    } else {\n\t        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);\n\t    }\n\t\n\t    return promise;\n\t};\n\t\n\tPromise.prototype._length = function () {\n\t    return this._bitField & 65535;\n\t};\n\t\n\tPromise.prototype._isFateSealed = function () {\n\t    return (this._bitField & 117506048) !== 0;\n\t};\n\t\n\tPromise.prototype._isFollowing = function () {\n\t    return (this._bitField & 67108864) === 67108864;\n\t};\n\t\n\tPromise.prototype._setLength = function (len) {\n\t    this._bitField = (this._bitField & -65536) |\n\t        (len & 65535);\n\t};\n\t\n\tPromise.prototype._setFulfilled = function () {\n\t    this._bitField = this._bitField | 33554432;\n\t    this._fireEvent(\"promiseFulfilled\", this);\n\t};\n\t\n\tPromise.prototype._setRejected = function () {\n\t    this._bitField = this._bitField | 16777216;\n\t    this._fireEvent(\"promiseRejected\", this);\n\t};\n\t\n\tPromise.prototype._setFollowing = function () {\n\t    this._bitField = this._bitField | 67108864;\n\t    this._fireEvent(\"promiseResolved\", this);\n\t};\n\t\n\tPromise.prototype._setIsFinal = function () {\n\t    this._bitField = this._bitField | 4194304;\n\t};\n\t\n\tPromise.prototype._isFinal = function () {\n\t    return (this._bitField & 4194304) > 0;\n\t};\n\t\n\tPromise.prototype._unsetCancelled = function() {\n\t    this._bitField = this._bitField & (~65536);\n\t};\n\t\n\tPromise.prototype._setCancelled = function() {\n\t    this._bitField = this._bitField | 65536;\n\t    this._fireEvent(\"promiseCancelled\", this);\n\t};\n\t\n\tPromise.prototype._setWillBeCancelled = function() {\n\t    this._bitField = this._bitField | 8388608;\n\t};\n\t\n\tPromise.prototype._setAsyncGuaranteed = function() {\n\t    if (async.hasCustomScheduler()) return;\n\t    this._bitField = this._bitField | 134217728;\n\t};\n\t\n\tPromise.prototype._receiverAt = function (index) {\n\t    var ret = index === 0 ? this._receiver0 : this[\n\t            index * 4 - 4 + 3];\n\t    if (ret === UNDEFINED_BINDING) {\n\t        return undefined;\n\t    } else if (ret === undefined && this._isBound()) {\n\t        return this._boundValue();\n\t    }\n\t    return ret;\n\t};\n\t\n\tPromise.prototype._promiseAt = function (index) {\n\t    return this[\n\t            index * 4 - 4 + 2];\n\t};\n\t\n\tPromise.prototype._fulfillmentHandlerAt = function (index) {\n\t    return this[\n\t            index * 4 - 4 + 0];\n\t};\n\t\n\tPromise.prototype._rejectionHandlerAt = function (index) {\n\t    return this[\n\t            index * 4 - 4 + 1];\n\t};\n\t\n\tPromise.prototype._boundValue = function() {};\n\t\n\tPromise.prototype._migrateCallback0 = function (follower) {\n\t    var bitField = follower._bitField;\n\t    var fulfill = follower._fulfillmentHandler0;\n\t    var reject = follower._rejectionHandler0;\n\t    var promise = follower._promise0;\n\t    var receiver = follower._receiverAt(0);\n\t    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n\t    this._addCallbacks(fulfill, reject, promise, receiver, null);\n\t};\n\t\n\tPromise.prototype._migrateCallbackAt = function (follower, index) {\n\t    var fulfill = follower._fulfillmentHandlerAt(index);\n\t    var reject = follower._rejectionHandlerAt(index);\n\t    var promise = follower._promiseAt(index);\n\t    var receiver = follower._receiverAt(index);\n\t    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n\t    this._addCallbacks(fulfill, reject, promise, receiver, null);\n\t};\n\t\n\tPromise.prototype._addCallbacks = function (\n\t    fulfill,\n\t    reject,\n\t    promise,\n\t    receiver,\n\t    domain\n\t) {\n\t    var index = this._length();\n\t\n\t    if (index >= 65535 - 4) {\n\t        index = 0;\n\t        this._setLength(0);\n\t    }\n\t\n\t    if (index === 0) {\n\t        this._promise0 = promise;\n\t        this._receiver0 = receiver;\n\t        if (typeof fulfill === \"function\") {\n\t            this._fulfillmentHandler0 =\n\t                domain === null ? fulfill : util.domainBind(domain, fulfill);\n\t        }\n\t        if (typeof reject === \"function\") {\n\t            this._rejectionHandler0 =\n\t                domain === null ? reject : util.domainBind(domain, reject);\n\t        }\n\t    } else {\n\t        var base = index * 4 - 4;\n\t        this[base + 2] = promise;\n\t        this[base + 3] = receiver;\n\t        if (typeof fulfill === \"function\") {\n\t            this[base + 0] =\n\t                domain === null ? fulfill : util.domainBind(domain, fulfill);\n\t        }\n\t        if (typeof reject === \"function\") {\n\t            this[base + 1] =\n\t                domain === null ? reject : util.domainBind(domain, reject);\n\t        }\n\t    }\n\t    this._setLength(index + 1);\n\t    return index;\n\t};\n\t\n\tPromise.prototype._proxy = function (proxyable, arg) {\n\t    this._addCallbacks(undefined, undefined, arg, proxyable, null);\n\t};\n\t\n\tPromise.prototype._resolveCallback = function(value, shouldBind) {\n\t    if (((this._bitField & 117506048) !== 0)) return;\n\t    if (value === this)\n\t        return this._rejectCallback(makeSelfResolutionError(), false);\n\t    var maybePromise = tryConvertToPromise(value, this);\n\t    if (!(maybePromise instanceof Promise)) return this._fulfill(value);\n\t\n\t    if (shouldBind) this._propagateFrom(maybePromise, 2);\n\t\n\t    var promise = maybePromise._target();\n\t\n\t    if (promise === this) {\n\t        this._reject(makeSelfResolutionError());\n\t        return;\n\t    }\n\t\n\t    var bitField = promise._bitField;\n\t    if (((bitField & 50397184) === 0)) {\n\t        var len = this._length();\n\t        if (len > 0) promise._migrateCallback0(this);\n\t        for (var i = 1; i < len; ++i) {\n\t            promise._migrateCallbackAt(this, i);\n\t        }\n\t        this._setFollowing();\n\t        this._setLength(0);\n\t        this._setFollowee(promise);\n\t    } else if (((bitField & 33554432) !== 0)) {\n\t        this._fulfill(promise._value());\n\t    } else if (((bitField & 16777216) !== 0)) {\n\t        this._reject(promise._reason());\n\t    } else {\n\t        var reason = new CancellationError(\"late cancellation observer\");\n\t        promise._attachExtraTrace(reason);\n\t        this._reject(reason);\n\t    }\n\t};\n\t\n\tPromise.prototype._rejectCallback =\n\tfunction(reason, synchronous, ignoreNonErrorWarnings) {\n\t    var trace = util.ensureErrorObject(reason);\n\t    var hasStack = trace === reason;\n\t    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {\n\t        var message = \"a promise was rejected with a non-error: \" +\n\t            util.classString(reason);\n\t        this._warn(message, true);\n\t    }\n\t    this._attachExtraTrace(trace, synchronous ? hasStack : false);\n\t    this._reject(reason);\n\t};\n\t\n\tPromise.prototype._resolveFromExecutor = function (executor) {\n\t    if (executor === INTERNAL) return;\n\t    var promise = this;\n\t    this._captureStackTrace();\n\t    this._pushContext();\n\t    var synchronous = true;\n\t    var r = this._execute(executor, function(value) {\n\t        promise._resolveCallback(value);\n\t    }, function (reason) {\n\t        promise._rejectCallback(reason, synchronous);\n\t    });\n\t    synchronous = false;\n\t    this._popContext();\n\t\n\t    if (r !== undefined) {\n\t        promise._rejectCallback(r, true);\n\t    }\n\t};\n\t\n\tPromise.prototype._settlePromiseFromHandler = function (\n\t    handler, receiver, value, promise\n\t) {\n\t    var bitField = promise._bitField;\n\t    if (((bitField & 65536) !== 0)) return;\n\t    promise._pushContext();\n\t    var x;\n\t    if (receiver === APPLY) {\n\t        if (!value || typeof value.length !== \"number\") {\n\t            x = errorObj;\n\t            x.e = new TypeError(\"cannot .spread() a non-array: \" +\n\t                                    util.classString(value));\n\t        } else {\n\t            x = tryCatch(handler).apply(this._boundValue(), value);\n\t        }\n\t    } else {\n\t        x = tryCatch(handler).call(receiver, value);\n\t    }\n\t    var promiseCreated = promise._popContext();\n\t    bitField = promise._bitField;\n\t    if (((bitField & 65536) !== 0)) return;\n\t\n\t    if (x === NEXT_FILTER) {\n\t        promise._reject(value);\n\t    } else if (x === errorObj) {\n\t        promise._rejectCallback(x.e, false);\n\t    } else {\n\t        debug.checkForgottenReturns(x, promiseCreated, \"\",  promise, this);\n\t        promise._resolveCallback(x);\n\t    }\n\t};\n\t\n\tPromise.prototype._target = function() {\n\t    var ret = this;\n\t    while (ret._isFollowing()) ret = ret._followee();\n\t    return ret;\n\t};\n\t\n\tPromise.prototype._followee = function() {\n\t    return this._rejectionHandler0;\n\t};\n\t\n\tPromise.prototype._setFollowee = function(promise) {\n\t    this._rejectionHandler0 = promise;\n\t};\n\t\n\tPromise.prototype._settlePromise = function(promise, handler, receiver, value) {\n\t    var isPromise = promise instanceof Promise;\n\t    var bitField = this._bitField;\n\t    var asyncGuaranteed = ((bitField & 134217728) !== 0);\n\t    if (((bitField & 65536) !== 0)) {\n\t        if (isPromise) promise._invokeInternalOnCancel();\n\t\n\t        if (receiver instanceof PassThroughHandlerContext &&\n\t            receiver.isFinallyHandler()) {\n\t            receiver.cancelPromise = promise;\n\t            if (tryCatch(handler).call(receiver, value) === errorObj) {\n\t                promise._reject(errorObj.e);\n\t            }\n\t        } else if (handler === reflectHandler) {\n\t            promise._fulfill(reflectHandler.call(receiver));\n\t        } else if (receiver instanceof Proxyable) {\n\t            receiver._promiseCancelled(promise);\n\t        } else if (isPromise || promise instanceof PromiseArray) {\n\t            promise._cancel();\n\t        } else {\n\t            receiver.cancel();\n\t        }\n\t    } else if (typeof handler === \"function\") {\n\t        if (!isPromise) {\n\t            handler.call(receiver, value, promise);\n\t        } else {\n\t            if (asyncGuaranteed) promise._setAsyncGuaranteed();\n\t            this._settlePromiseFromHandler(handler, receiver, value, promise);\n\t        }\n\t    } else if (receiver instanceof Proxyable) {\n\t        if (!receiver._isResolved()) {\n\t            if (((bitField & 33554432) !== 0)) {\n\t                receiver._promiseFulfilled(value, promise);\n\t            } else {\n\t                receiver._promiseRejected(value, promise);\n\t            }\n\t        }\n\t    } else if (isPromise) {\n\t        if (asyncGuaranteed) promise._setAsyncGuaranteed();\n\t        if (((bitField & 33554432) !== 0)) {\n\t            promise._fulfill(value);\n\t        } else {\n\t            promise._reject(value);\n\t        }\n\t    }\n\t};\n\t\n\tPromise.prototype._settlePromiseLateCancellationObserver = function(ctx) {\n\t    var handler = ctx.handler;\n\t    var promise = ctx.promise;\n\t    var receiver = ctx.receiver;\n\t    var value = ctx.value;\n\t    if (typeof handler === \"function\") {\n\t        if (!(promise instanceof Promise)) {\n\t            handler.call(receiver, value, promise);\n\t        } else {\n\t            this._settlePromiseFromHandler(handler, receiver, value, promise);\n\t        }\n\t    } else if (promise instanceof Promise) {\n\t        promise._reject(value);\n\t    }\n\t};\n\t\n\tPromise.prototype._settlePromiseCtx = function(ctx) {\n\t    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);\n\t};\n\t\n\tPromise.prototype._settlePromise0 = function(handler, value, bitField) {\n\t    var promise = this._promise0;\n\t    var receiver = this._receiverAt(0);\n\t    this._promise0 = undefined;\n\t    this._receiver0 = undefined;\n\t    this._settlePromise(promise, handler, receiver, value);\n\t};\n\t\n\tPromise.prototype._clearCallbackDataAtIndex = function(index) {\n\t    var base = index * 4 - 4;\n\t    this[base + 2] =\n\t    this[base + 3] =\n\t    this[base + 0] =\n\t    this[base + 1] = undefined;\n\t};\n\t\n\tPromise.prototype._fulfill = function (value) {\n\t    var bitField = this._bitField;\n\t    if (((bitField & 117506048) >>> 16)) return;\n\t    if (value === this) {\n\t        var err = makeSelfResolutionError();\n\t        this._attachExtraTrace(err);\n\t        return this._reject(err);\n\t    }\n\t    this._setFulfilled();\n\t    this._rejectionHandler0 = value;\n\t\n\t    if ((bitField & 65535) > 0) {\n\t        if (((bitField & 134217728) !== 0)) {\n\t            this._settlePromises();\n\t        } else {\n\t            async.settlePromises(this);\n\t        }\n\t    }\n\t};\n\t\n\tPromise.prototype._reject = function (reason) {\n\t    var bitField = this._bitField;\n\t    if (((bitField & 117506048) >>> 16)) return;\n\t    this._setRejected();\n\t    this._fulfillmentHandler0 = reason;\n\t\n\t    if (this._isFinal()) {\n\t        return async.fatalError(reason, util.isNode);\n\t    }\n\t\n\t    if ((bitField & 65535) > 0) {\n\t        async.settlePromises(this);\n\t    } else {\n\t        this._ensurePossibleRejectionHandled();\n\t    }\n\t};\n\t\n\tPromise.prototype._fulfillPromises = function (len, value) {\n\t    for (var i = 1; i < len; i++) {\n\t        var handler = this._fulfillmentHandlerAt(i);\n\t        var promise = this._promiseAt(i);\n\t        var receiver = this._receiverAt(i);\n\t        this._clearCallbackDataAtIndex(i);\n\t        this._settlePromise(promise, handler, receiver, value);\n\t    }\n\t};\n\t\n\tPromise.prototype._rejectPromises = function (len, reason) {\n\t    for (var i = 1; i < len; i++) {\n\t        var handler = this._rejectionHandlerAt(i);\n\t        var promise = this._promiseAt(i);\n\t        var receiver = this._receiverAt(i);\n\t        this._clearCallbackDataAtIndex(i);\n\t        this._settlePromise(promise, handler, receiver, reason);\n\t    }\n\t};\n\t\n\tPromise.prototype._settlePromises = function () {\n\t    var bitField = this._bitField;\n\t    var len = (bitField & 65535);\n\t\n\t    if (len > 0) {\n\t        if (((bitField & 16842752) !== 0)) {\n\t            var reason = this._fulfillmentHandler0;\n\t            this._settlePromise0(this._rejectionHandler0, reason, bitField);\n\t            this._rejectPromises(len, reason);\n\t        } else {\n\t            var value = this._rejectionHandler0;\n\t            this._settlePromise0(this._fulfillmentHandler0, value, bitField);\n\t            this._fulfillPromises(len, value);\n\t        }\n\t        this._setLength(0);\n\t    }\n\t    this._clearCancellationData();\n\t};\n\t\n\tPromise.prototype._settledValue = function() {\n\t    var bitField = this._bitField;\n\t    if (((bitField & 33554432) !== 0)) {\n\t        return this._rejectionHandler0;\n\t    } else if (((bitField & 16777216) !== 0)) {\n\t        return this._fulfillmentHandler0;\n\t    }\n\t};\n\t\n\tfunction deferResolve(v) {this.promise._resolveCallback(v);}\n\tfunction deferReject(v) {this.promise._rejectCallback(v, false);}\n\t\n\tPromise.defer = Promise.pending = function() {\n\t    debug.deprecated(\"Promise.defer\", \"new Promise\");\n\t    var promise = new Promise(INTERNAL);\n\t    return {\n\t        promise: promise,\n\t        resolve: deferResolve,\n\t        reject: deferReject\n\t    };\n\t};\n\t\n\tutil.notEnumerableProp(Promise,\n\t                       \"_makeSelfResolutionError\",\n\t                       makeSelfResolutionError);\n\t\n\t__webpack_require__(131)(Promise, INTERNAL, tryConvertToPromise, apiRejection,\n\t    debug);\n\t__webpack_require__(118)(Promise, INTERNAL, tryConvertToPromise, debug);\n\t__webpack_require__(121)(Promise, PromiseArray, apiRejection, debug);\n\t__webpack_require__(124)(Promise);\n\t__webpack_require__(143)(Promise);\n\t__webpack_require__(129)(\n\t    Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);\n\tPromise.Promise = Promise;\n\tPromise.version = \"3.5.0\";\n\t__webpack_require__(130)(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n\t__webpack_require__(120)(Promise);\n\t__webpack_require__(146)(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);\n\t__webpack_require__(145)(Promise, INTERNAL, debug);\n\t__webpack_require__(128)(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);\n\t__webpack_require__(132)(Promise);\n\t__webpack_require__(135)(Promise, INTERNAL);\n\t__webpack_require__(136)(Promise, PromiseArray, tryConvertToPromise, apiRejection);\n\t__webpack_require__(138)(Promise, INTERNAL, tryConvertToPromise, apiRejection);\n\t__webpack_require__(139)(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n\t__webpack_require__(141)(Promise, PromiseArray, debug);\n\t__webpack_require__(142)(Promise, PromiseArray, apiRejection);\n\t__webpack_require__(126)(Promise, INTERNAL);\n\t__webpack_require__(125)(Promise, INTERNAL);\n\t__webpack_require__(116)(Promise);\n\t                                                         \n\t    util.toFastProperties(Promise);                                          \n\t    util.toFastProperties(Promise.prototype);                                \n\t    function fillTypes(value) {                                              \n\t        var p = new Promise(INTERNAL);                                       \n\t        p._fulfillmentHandler0 = value;                                      \n\t        p._rejectionHandler0 = value;                                        \n\t        p._promise0 = value;                                                 \n\t        p._receiver0 = value;                                                \n\t    }                                                                        \n\t    // Complete slack tracking, opt out of field-type tracking and           \n\t    // stabilize map                                                         \n\t    fillTypes({a: 1});                                                       \n\t    fillTypes({b: 2});                                                       \n\t    fillTypes({c: 3});                                                       \n\t    fillTypes(1);                                                            \n\t    fillTypes(function(){});                                                 \n\t    fillTypes(undefined);                                                    \n\t    fillTypes(false);                                                        \n\t    fillTypes(new Promise(INTERNAL));                                        \n\t    debug.setBounds(Async.firstLineError, util.lastLineError);               \n\t    return Promise;                                                          \n\t\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL, tryConvertToPromise,\n\t    apiRejection, Proxyable) {\n\tvar util = __webpack_require__(1);\n\tvar isArray = util.isArray;\n\t\n\tfunction toResolutionValue(val) {\n\t    switch(val) {\n\t    case -2: return [];\n\t    case -3: return {};\n\t    case -6: return new Map();\n\t    }\n\t}\n\t\n\tfunction PromiseArray(values) {\n\t    var promise = this._promise = new Promise(INTERNAL);\n\t    if (values instanceof Promise) {\n\t        promise._propagateFrom(values, 3);\n\t    }\n\t    promise._setOnCancel(this);\n\t    this._values = values;\n\t    this._length = 0;\n\t    this._totalResolved = 0;\n\t    this._init(undefined, -2);\n\t}\n\tutil.inherits(PromiseArray, Proxyable);\n\t\n\tPromiseArray.prototype.length = function () {\n\t    return this._length;\n\t};\n\t\n\tPromiseArray.prototype.promise = function () {\n\t    return this._promise;\n\t};\n\t\n\tPromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {\n\t    var values = tryConvertToPromise(this._values, this._promise);\n\t    if (values instanceof Promise) {\n\t        values = values._target();\n\t        var bitField = values._bitField;\n\t        ;\n\t        this._values = values;\n\t\n\t        if (((bitField & 50397184) === 0)) {\n\t            this._promise._setAsyncGuaranteed();\n\t            return values._then(\n\t                init,\n\t                this._reject,\n\t                undefined,\n\t                this,\n\t                resolveValueIfEmpty\n\t           );\n\t        } else if (((bitField & 33554432) !== 0)) {\n\t            values = values._value();\n\t        } else if (((bitField & 16777216) !== 0)) {\n\t            return this._reject(values._reason());\n\t        } else {\n\t            return this._cancel();\n\t        }\n\t    }\n\t    values = util.asArray(values);\n\t    if (values === null) {\n\t        var err = apiRejection(\n\t            \"expecting an array or an iterable object but got \" + util.classString(values)).reason();\n\t        this._promise._rejectCallback(err, false);\n\t        return;\n\t    }\n\t\n\t    if (values.length === 0) {\n\t        if (resolveValueIfEmpty === -5) {\n\t            this._resolveEmptyArray();\n\t        }\n\t        else {\n\t            this._resolve(toResolutionValue(resolveValueIfEmpty));\n\t        }\n\t        return;\n\t    }\n\t    this._iterate(values);\n\t};\n\t\n\tPromiseArray.prototype._iterate = function(values) {\n\t    var len = this.getActualLength(values.length);\n\t    this._length = len;\n\t    this._values = this.shouldCopyValues() ? new Array(len) : this._values;\n\t    var result = this._promise;\n\t    var isResolved = false;\n\t    var bitField = null;\n\t    for (var i = 0; i < len; ++i) {\n\t        var maybePromise = tryConvertToPromise(values[i], result);\n\t\n\t        if (maybePromise instanceof Promise) {\n\t            maybePromise = maybePromise._target();\n\t            bitField = maybePromise._bitField;\n\t        } else {\n\t            bitField = null;\n\t        }\n\t\n\t        if (isResolved) {\n\t            if (bitField !== null) {\n\t                maybePromise.suppressUnhandledRejections();\n\t            }\n\t        } else if (bitField !== null) {\n\t            if (((bitField & 50397184) === 0)) {\n\t                maybePromise._proxy(this, i);\n\t                this._values[i] = maybePromise;\n\t            } else if (((bitField & 33554432) !== 0)) {\n\t                isResolved = this._promiseFulfilled(maybePromise._value(), i);\n\t            } else if (((bitField & 16777216) !== 0)) {\n\t                isResolved = this._promiseRejected(maybePromise._reason(), i);\n\t            } else {\n\t                isResolved = this._promiseCancelled(i);\n\t            }\n\t        } else {\n\t            isResolved = this._promiseFulfilled(maybePromise, i);\n\t        }\n\t    }\n\t    if (!isResolved) result._setAsyncGuaranteed();\n\t};\n\t\n\tPromiseArray.prototype._isResolved = function () {\n\t    return this._values === null;\n\t};\n\t\n\tPromiseArray.prototype._resolve = function (value) {\n\t    this._values = null;\n\t    this._promise._fulfill(value);\n\t};\n\t\n\tPromiseArray.prototype._cancel = function() {\n\t    if (this._isResolved() || !this._promise._isCancellable()) return;\n\t    this._values = null;\n\t    this._promise._cancel();\n\t};\n\t\n\tPromiseArray.prototype._reject = function (reason) {\n\t    this._values = null;\n\t    this._promise._rejectCallback(reason, false);\n\t};\n\t\n\tPromiseArray.prototype._promiseFulfilled = function (value, index) {\n\t    this._values[index] = value;\n\t    var totalResolved = ++this._totalResolved;\n\t    if (totalResolved >= this._length) {\n\t        this._resolve(this._values);\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\t\n\tPromiseArray.prototype._promiseCancelled = function() {\n\t    this._cancel();\n\t    return true;\n\t};\n\t\n\tPromiseArray.prototype._promiseRejected = function (reason) {\n\t    this._totalResolved++;\n\t    this._reject(reason);\n\t    return true;\n\t};\n\t\n\tPromiseArray.prototype._resultCancelled = function() {\n\t    if (this._isResolved()) return;\n\t    var values = this._values;\n\t    this._cancel();\n\t    if (values instanceof Promise) {\n\t        values.cancel();\n\t    } else {\n\t        for (var i = 0; i < values.length; ++i) {\n\t            if (values[i] instanceof Promise) {\n\t                values[i].cancel();\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tPromiseArray.prototype.shouldCopyValues = function () {\n\t    return true;\n\t};\n\t\n\tPromiseArray.prototype.getActualLength = function (len) {\n\t    return len;\n\t};\n\t\n\treturn PromiseArray;\n\t};\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar THIS = {};\n\tvar util = __webpack_require__(1);\n\tvar nodebackForPromise = __webpack_require__(65);\n\tvar withAppended = util.withAppended;\n\tvar maybeWrapAsError = util.maybeWrapAsError;\n\tvar canEvaluate = util.canEvaluate;\n\tvar TypeError = __webpack_require__(8).TypeError;\n\tvar defaultSuffix = \"Async\";\n\tvar defaultPromisified = {__isPromisified__: true};\n\tvar noCopyProps = [\n\t    \"arity\",    \"length\",\n\t    \"name\",\n\t    \"arguments\",\n\t    \"caller\",\n\t    \"callee\",\n\t    \"prototype\",\n\t    \"__isPromisified__\"\n\t];\n\tvar noCopyPropsPattern = new RegExp(\"^(?:\" + noCopyProps.join(\"|\") + \")$\");\n\t\n\tvar defaultFilter = function(name) {\n\t    return util.isIdentifier(name) &&\n\t        name.charAt(0) !== \"_\" &&\n\t        name !== \"constructor\";\n\t};\n\t\n\tfunction propsFilter(key) {\n\t    return !noCopyPropsPattern.test(key);\n\t}\n\t\n\tfunction isPromisified(fn) {\n\t    try {\n\t        return fn.__isPromisified__ === true;\n\t    }\n\t    catch (e) {\n\t        return false;\n\t    }\n\t}\n\t\n\tfunction hasPromisified(obj, key, suffix) {\n\t    var val = util.getDataPropertyOrDefault(obj, key + suffix,\n\t                                            defaultPromisified);\n\t    return val ? isPromisified(val) : false;\n\t}\n\tfunction checkValid(ret, suffix, suffixRegexp) {\n\t    for (var i = 0; i < ret.length; i += 2) {\n\t        var key = ret[i];\n\t        if (suffixRegexp.test(key)) {\n\t            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, \"\");\n\t            for (var j = 0; j < ret.length; j += 2) {\n\t                if (ret[j] === keyWithoutAsyncSuffix) {\n\t                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\"\n\t                        .replace(\"%s\", suffix));\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\tfunction promisifiableMethods(obj, suffix, suffixRegexp, filter) {\n\t    var keys = util.inheritedDataKeys(obj);\n\t    var ret = [];\n\t    for (var i = 0; i < keys.length; ++i) {\n\t        var key = keys[i];\n\t        var value = obj[key];\n\t        var passesDefaultFilter = filter === defaultFilter\n\t            ? true : defaultFilter(key, value, obj);\n\t        if (typeof value === \"function\" &&\n\t            !isPromisified(value) &&\n\t            !hasPromisified(obj, key, suffix) &&\n\t            filter(key, value, obj, passesDefaultFilter)) {\n\t            ret.push(key, value);\n\t        }\n\t    }\n\t    checkValid(ret, suffix, suffixRegexp);\n\t    return ret;\n\t}\n\t\n\tvar escapeIdentRegex = function(str) {\n\t    return str.replace(/([$])/, \"\\\\$\");\n\t};\n\t\n\tvar makeNodePromisifiedEval;\n\tif (true) {\n\tvar switchCaseArgumentOrder = function(likelyArgumentCount) {\n\t    var ret = [likelyArgumentCount];\n\t    var min = Math.max(0, likelyArgumentCount - 1 - 3);\n\t    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n\t        ret.push(i);\n\t    }\n\t    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {\n\t        ret.push(i);\n\t    }\n\t    return ret;\n\t};\n\t\n\tvar argumentSequence = function(argumentCount) {\n\t    return util.filledRange(argumentCount, \"_arg\", \"\");\n\t};\n\t\n\tvar parameterDeclaration = function(parameterCount) {\n\t    return util.filledRange(\n\t        Math.max(parameterCount, 3), \"_arg\", \"\");\n\t};\n\t\n\tvar parameterCount = function(fn) {\n\t    if (typeof fn.length === \"number\") {\n\t        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n\t    }\n\t    return 0;\n\t};\n\t\n\tmakeNodePromisifiedEval =\n\tfunction(callback, receiver, originalName, fn, _, multiArgs) {\n\t    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n\t    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n\t    var shouldProxyThis = typeof callback === \"string\" || receiver === THIS;\n\t\n\t    function generateCallForArgumentCount(count) {\n\t        var args = argumentSequence(count).join(\", \");\n\t        var comma = count > 0 ? \", \" : \"\";\n\t        var ret;\n\t        if (shouldProxyThis) {\n\t            ret = \"ret = callback.call(this, {{args}}, nodeback); break;\\n\";\n\t        } else {\n\t            ret = receiver === undefined\n\t                ? \"ret = callback({{args}}, nodeback); break;\\n\"\n\t                : \"ret = callback.call(receiver, {{args}}, nodeback); break;\\n\";\n\t        }\n\t        return ret.replace(\"{{args}}\", args).replace(\", \", comma);\n\t    }\n\t\n\t    function generateArgumentSwitchCase() {\n\t        var ret = \"\";\n\t        for (var i = 0; i < argumentOrder.length; ++i) {\n\t            ret += \"case \" + argumentOrder[i] +\":\" +\n\t                generateCallForArgumentCount(argumentOrder[i]);\n\t        }\n\t\n\t        ret += \"                                                             \\n\\\n\t        default:                                                             \\n\\\n\t            var args = new Array(len + 1);                                   \\n\\\n\t            var i = 0;                                                       \\n\\\n\t            for (var i = 0; i < len; ++i) {                                  \\n\\\n\t               args[i] = arguments[i];                                       \\n\\\n\t            }                                                                \\n\\\n\t            args[i] = nodeback;                                              \\n\\\n\t            [CodeForCall]                                                    \\n\\\n\t            break;                                                           \\n\\\n\t        \".replace(\"[CodeForCall]\", (shouldProxyThis\n\t                                ? \"ret = callback.apply(this, args);\\n\"\n\t                                : \"ret = callback.apply(receiver, args);\\n\"));\n\t        return ret;\n\t    }\n\t\n\t    var getFunctionCode = typeof callback === \"string\"\n\t                                ? (\"this != null ? this['\"+callback+\"'] : fn\")\n\t                                : \"fn\";\n\t    var body = \"'use strict';                                                \\n\\\n\t        var ret = function (Parameters) {                                    \\n\\\n\t            'use strict';                                                    \\n\\\n\t            var len = arguments.length;                                      \\n\\\n\t            var promise = new Promise(INTERNAL);                             \\n\\\n\t            promise._captureStackTrace();                                    \\n\\\n\t            var nodeback = nodebackForPromise(promise, \" + multiArgs + \");   \\n\\\n\t            var ret;                                                         \\n\\\n\t            var callback = tryCatch([GetFunctionCode]);                      \\n\\\n\t            switch(len) {                                                    \\n\\\n\t                [CodeForSwitchCase]                                          \\n\\\n\t            }                                                                \\n\\\n\t            if (ret === errorObj) {                                          \\n\\\n\t                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\\n\\\n\t            }                                                                \\n\\\n\t            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \\n\\\n\t            return promise;                                                  \\n\\\n\t        };                                                                   \\n\\\n\t        notEnumerableProp(ret, '__isPromisified__', true);                   \\n\\\n\t        return ret;                                                          \\n\\\n\t    \".replace(\"[CodeForSwitchCase]\", generateArgumentSwitchCase())\n\t        .replace(\"[GetFunctionCode]\", getFunctionCode);\n\t    body = body.replace(\"Parameters\", parameterDeclaration(newParameterCount));\n\t    return new Function(\"Promise\",\n\t                        \"fn\",\n\t                        \"receiver\",\n\t                        \"withAppended\",\n\t                        \"maybeWrapAsError\",\n\t                        \"nodebackForPromise\",\n\t                        \"tryCatch\",\n\t                        \"errorObj\",\n\t                        \"notEnumerableProp\",\n\t                        \"INTERNAL\",\n\t                        body)(\n\t                    Promise,\n\t                    fn,\n\t                    receiver,\n\t                    withAppended,\n\t                    maybeWrapAsError,\n\t                    nodebackForPromise,\n\t                    util.tryCatch,\n\t                    util.errorObj,\n\t                    util.notEnumerableProp,\n\t                    INTERNAL);\n\t};\n\t}\n\t\n\tfunction makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {\n\t    var defaultThis = (function() {return this;})();\n\t    var method = callback;\n\t    if (typeof method === \"string\") {\n\t        callback = fn;\n\t    }\n\t    function promisified() {\n\t        var _receiver = receiver;\n\t        if (receiver === THIS) _receiver = this;\n\t        var promise = new Promise(INTERNAL);\n\t        promise._captureStackTrace();\n\t        var cb = typeof method === \"string\" && this !== defaultThis\n\t            ? this[method] : callback;\n\t        var fn = nodebackForPromise(promise, multiArgs);\n\t        try {\n\t            cb.apply(_receiver, withAppended(arguments, fn));\n\t        } catch(e) {\n\t            promise._rejectCallback(maybeWrapAsError(e), true, true);\n\t        }\n\t        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();\n\t        return promise;\n\t    }\n\t    util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n\t    return promisified;\n\t}\n\t\n\tvar makeNodePromisified = canEvaluate\n\t    ? makeNodePromisifiedEval\n\t    : makeNodePromisifiedClosure;\n\t\n\tfunction promisifyAll(obj, suffix, filter, promisifier, multiArgs) {\n\t    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + \"$\");\n\t    var methods =\n\t        promisifiableMethods(obj, suffix, suffixRegexp, filter);\n\t\n\t    for (var i = 0, len = methods.length; i < len; i+= 2) {\n\t        var key = methods[i];\n\t        var fn = methods[i+1];\n\t        var promisifiedKey = key + suffix;\n\t        if (promisifier === makeNodePromisified) {\n\t            obj[promisifiedKey] =\n\t                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);\n\t        } else {\n\t            var promisified = promisifier(fn, function() {\n\t                return makeNodePromisified(key, THIS, key,\n\t                                           fn, suffix, multiArgs);\n\t            });\n\t            util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n\t            obj[promisifiedKey] = promisified;\n\t        }\n\t    }\n\t    util.toFastProperties(obj);\n\t    return obj;\n\t}\n\t\n\tfunction promisify(callback, receiver, multiArgs) {\n\t    return makeNodePromisified(callback, receiver, undefined,\n\t                                callback, null, multiArgs);\n\t}\n\t\n\tPromise.promisify = function (fn, options) {\n\t    if (typeof fn !== \"function\") {\n\t        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n\t    }\n\t    if (isPromisified(fn)) {\n\t        return fn;\n\t    }\n\t    options = Object(options);\n\t    var receiver = options.context === undefined ? THIS : options.context;\n\t    var multiArgs = !!options.multiArgs;\n\t    var ret = promisify(fn, receiver, multiArgs);\n\t    util.copyDescriptors(fn, ret, propsFilter);\n\t    return ret;\n\t};\n\t\n\tPromise.promisifyAll = function (target, options) {\n\t    if (typeof target !== \"function\" && typeof target !== \"object\") {\n\t        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    }\n\t    options = Object(options);\n\t    var multiArgs = !!options.multiArgs;\n\t    var suffix = options.suffix;\n\t    if (typeof suffix !== \"string\") suffix = defaultSuffix;\n\t    var filter = options.filter;\n\t    if (typeof filter !== \"function\") filter = defaultFilter;\n\t    var promisifier = options.promisifier;\n\t    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;\n\t\n\t    if (!util.isIdentifier(suffix)) {\n\t        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    }\n\t\n\t    var keys = util.inheritedDataKeys(target);\n\t    for (var i = 0; i < keys.length; ++i) {\n\t        var value = target[keys[i]];\n\t        if (keys[i] !== \"constructor\" &&\n\t            util.isClass(value)) {\n\t            promisifyAll(value.prototype, suffix, filter, promisifier,\n\t                multiArgs);\n\t            promisifyAll(value, suffix, filter, promisifier, multiArgs);\n\t        }\n\t    }\n\t\n\t    return promisifyAll(target, suffix, filter, promisifier, multiArgs);\n\t};\n\t};\n\t\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(\n\t    Promise, PromiseArray, tryConvertToPromise, apiRejection) {\n\tvar util = __webpack_require__(1);\n\tvar isObject = util.isObject;\n\tvar es5 = __webpack_require__(15);\n\tvar Es6Map;\n\tif (typeof Map === \"function\") Es6Map = Map;\n\t\n\tvar mapToEntries = (function() {\n\t    var index = 0;\n\t    var size = 0;\n\t\n\t    function extractEntry(value, key) {\n\t        this[index] = value;\n\t        this[index + size] = key;\n\t        index++;\n\t    }\n\t\n\t    return function mapToEntries(map) {\n\t        size = map.size;\n\t        index = 0;\n\t        var ret = new Array(map.size * 2);\n\t        map.forEach(extractEntry, ret);\n\t        return ret;\n\t    };\n\t})();\n\t\n\tvar entriesToMap = function(entries) {\n\t    var ret = new Es6Map();\n\t    var length = entries.length / 2 | 0;\n\t    for (var i = 0; i < length; ++i) {\n\t        var key = entries[length + i];\n\t        var value = entries[i];\n\t        ret.set(key, value);\n\t    }\n\t    return ret;\n\t};\n\t\n\tfunction PropertiesPromiseArray(obj) {\n\t    var isMap = false;\n\t    var entries;\n\t    if (Es6Map !== undefined && obj instanceof Es6Map) {\n\t        entries = mapToEntries(obj);\n\t        isMap = true;\n\t    } else {\n\t        var keys = es5.keys(obj);\n\t        var len = keys.length;\n\t        entries = new Array(len * 2);\n\t        for (var i = 0; i < len; ++i) {\n\t            var key = keys[i];\n\t            entries[i] = obj[key];\n\t            entries[i + len] = key;\n\t        }\n\t    }\n\t    this.constructor$(entries);\n\t    this._isMap = isMap;\n\t    this._init$(undefined, isMap ? -6 : -3);\n\t}\n\tutil.inherits(PropertiesPromiseArray, PromiseArray);\n\t\n\tPropertiesPromiseArray.prototype._init = function () {};\n\t\n\tPropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {\n\t    this._values[index] = value;\n\t    var totalResolved = ++this._totalResolved;\n\t    if (totalResolved >= this._length) {\n\t        var val;\n\t        if (this._isMap) {\n\t            val = entriesToMap(this._values);\n\t        } else {\n\t            val = {};\n\t            var keyOffset = this.length();\n\t            for (var i = 0, len = this.length(); i < len; ++i) {\n\t                val[this._values[i + keyOffset]] = this._values[i];\n\t            }\n\t        }\n\t        this._resolve(val);\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\t\n\tPropertiesPromiseArray.prototype.shouldCopyValues = function () {\n\t    return false;\n\t};\n\t\n\tPropertiesPromiseArray.prototype.getActualLength = function (len) {\n\t    return len >> 1;\n\t};\n\t\n\tfunction props(promises) {\n\t    var ret;\n\t    var castValue = tryConvertToPromise(promises);\n\t\n\t    if (!isObject(castValue)) {\n\t        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    } else if (castValue instanceof Promise) {\n\t        ret = castValue._then(\n\t            Promise.props, undefined, undefined, undefined, undefined);\n\t    } else {\n\t        ret = new PropertiesPromiseArray(castValue).promise();\n\t    }\n\t\n\t    if (castValue instanceof Promise) {\n\t        ret._propagateFrom(castValue, 2);\n\t    }\n\t    return ret;\n\t}\n\t\n\tPromise.prototype.props = function () {\n\t    return props(this);\n\t};\n\t\n\tPromise.props = function (promises) {\n\t    return props(promises);\n\t};\n\t};\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n\t    for (var j = 0; j < len; ++j) {\n\t        dst[j + dstIndex] = src[j + srcIndex];\n\t        src[j + srcIndex] = void 0;\n\t    }\n\t}\n\t\n\tfunction Queue(capacity) {\n\t    this._capacity = capacity;\n\t    this._length = 0;\n\t    this._front = 0;\n\t}\n\t\n\tQueue.prototype._willBeOverCapacity = function (size) {\n\t    return this._capacity < size;\n\t};\n\t\n\tQueue.prototype._pushOne = function (arg) {\n\t    var length = this.length();\n\t    this._checkCapacity(length + 1);\n\t    var i = (this._front + length) & (this._capacity - 1);\n\t    this[i] = arg;\n\t    this._length = length + 1;\n\t};\n\t\n\tQueue.prototype.push = function (fn, receiver, arg) {\n\t    var length = this.length() + 3;\n\t    if (this._willBeOverCapacity(length)) {\n\t        this._pushOne(fn);\n\t        this._pushOne(receiver);\n\t        this._pushOne(arg);\n\t        return;\n\t    }\n\t    var j = this._front + length - 3;\n\t    this._checkCapacity(length);\n\t    var wrapMask = this._capacity - 1;\n\t    this[(j + 0) & wrapMask] = fn;\n\t    this[(j + 1) & wrapMask] = receiver;\n\t    this[(j + 2) & wrapMask] = arg;\n\t    this._length = length;\n\t};\n\t\n\tQueue.prototype.shift = function () {\n\t    var front = this._front,\n\t        ret = this[front];\n\t\n\t    this[front] = undefined;\n\t    this._front = (front + 1) & (this._capacity - 1);\n\t    this._length--;\n\t    return ret;\n\t};\n\t\n\tQueue.prototype.length = function () {\n\t    return this._length;\n\t};\n\t\n\tQueue.prototype._checkCapacity = function (size) {\n\t    if (this._capacity < size) {\n\t        this._resizeTo(this._capacity << 1);\n\t    }\n\t};\n\t\n\tQueue.prototype._resizeTo = function (capacity) {\n\t    var oldCapacity = this._capacity;\n\t    this._capacity = capacity;\n\t    var front = this._front;\n\t    var length = this._length;\n\t    var moveItemsCount = (front + length) & (oldCapacity - 1);\n\t    arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n\t};\n\t\n\tmodule.exports = Queue;\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(\n\t    Promise, INTERNAL, tryConvertToPromise, apiRejection) {\n\tvar util = __webpack_require__(1);\n\t\n\tvar raceLater = function (promise) {\n\t    return promise.then(function(array) {\n\t        return race(array, promise);\n\t    });\n\t};\n\t\n\tfunction race(promises, parent) {\n\t    var maybePromise = tryConvertToPromise(promises);\n\t\n\t    if (maybePromise instanceof Promise) {\n\t        return raceLater(maybePromise);\n\t    } else {\n\t        promises = util.asArray(promises);\n\t        if (promises === null)\n\t            return apiRejection(\"expecting an array or an iterable object but got \" + util.classString(promises));\n\t    }\n\t\n\t    var ret = new Promise(INTERNAL);\n\t    if (parent !== undefined) {\n\t        ret._propagateFrom(parent, 3);\n\t    }\n\t    var fulfill = ret._fulfill;\n\t    var reject = ret._reject;\n\t    for (var i = 0, len = promises.length; i < len; ++i) {\n\t        var val = promises[i];\n\t\n\t        if (val === undefined && !(i in promises)) {\n\t            continue;\n\t        }\n\t\n\t        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n\t    }\n\t    return ret;\n\t}\n\t\n\tPromise.race = function (promises) {\n\t    return race(promises, undefined);\n\t};\n\t\n\tPromise.prototype.race = function () {\n\t    return race(this, undefined);\n\t};\n\t\n\t};\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise,\n\t                          PromiseArray,\n\t                          apiRejection,\n\t                          tryConvertToPromise,\n\t                          INTERNAL,\n\t                          debug) {\n\tvar getDomain = Promise._getDomain;\n\tvar util = __webpack_require__(1);\n\tvar tryCatch = util.tryCatch;\n\t\n\tfunction ReductionPromiseArray(promises, fn, initialValue, _each) {\n\t    this.constructor$(promises);\n\t    var domain = getDomain();\n\t    this._fn = domain === null ? fn : util.domainBind(domain, fn);\n\t    if (initialValue !== undefined) {\n\t        initialValue = Promise.resolve(initialValue);\n\t        initialValue._attachCancellationCallback(this);\n\t    }\n\t    this._initialValue = initialValue;\n\t    this._currentCancellable = null;\n\t    if(_each === INTERNAL) {\n\t        this._eachValues = Array(this._length);\n\t    } else if (_each === 0) {\n\t        this._eachValues = null;\n\t    } else {\n\t        this._eachValues = undefined;\n\t    }\n\t    this._promise._captureStackTrace();\n\t    this._init$(undefined, -5);\n\t}\n\tutil.inherits(ReductionPromiseArray, PromiseArray);\n\t\n\tReductionPromiseArray.prototype._gotAccum = function(accum) {\n\t    if (this._eachValues !== undefined && \n\t        this._eachValues !== null && \n\t        accum !== INTERNAL) {\n\t        this._eachValues.push(accum);\n\t    }\n\t};\n\t\n\tReductionPromiseArray.prototype._eachComplete = function(value) {\n\t    if (this._eachValues !== null) {\n\t        this._eachValues.push(value);\n\t    }\n\t    return this._eachValues;\n\t};\n\t\n\tReductionPromiseArray.prototype._init = function() {};\n\t\n\tReductionPromiseArray.prototype._resolveEmptyArray = function() {\n\t    this._resolve(this._eachValues !== undefined ? this._eachValues\n\t                                                 : this._initialValue);\n\t};\n\t\n\tReductionPromiseArray.prototype.shouldCopyValues = function () {\n\t    return false;\n\t};\n\t\n\tReductionPromiseArray.prototype._resolve = function(value) {\n\t    this._promise._resolveCallback(value);\n\t    this._values = null;\n\t};\n\t\n\tReductionPromiseArray.prototype._resultCancelled = function(sender) {\n\t    if (sender === this._initialValue) return this._cancel();\n\t    if (this._isResolved()) return;\n\t    this._resultCancelled$();\n\t    if (this._currentCancellable instanceof Promise) {\n\t        this._currentCancellable.cancel();\n\t    }\n\t    if (this._initialValue instanceof Promise) {\n\t        this._initialValue.cancel();\n\t    }\n\t};\n\t\n\tReductionPromiseArray.prototype._iterate = function (values) {\n\t    this._values = values;\n\t    var value;\n\t    var i;\n\t    var length = values.length;\n\t    if (this._initialValue !== undefined) {\n\t        value = this._initialValue;\n\t        i = 0;\n\t    } else {\n\t        value = Promise.resolve(values[0]);\n\t        i = 1;\n\t    }\n\t\n\t    this._currentCancellable = value;\n\t\n\t    if (!value.isRejected()) {\n\t        for (; i < length; ++i) {\n\t            var ctx = {\n\t                accum: null,\n\t                value: values[i],\n\t                index: i,\n\t                length: length,\n\t                array: this\n\t            };\n\t            value = value._then(gotAccum, undefined, undefined, ctx, undefined);\n\t        }\n\t    }\n\t\n\t    if (this._eachValues !== undefined) {\n\t        value = value\n\t            ._then(this._eachComplete, undefined, undefined, this, undefined);\n\t    }\n\t    value._then(completed, completed, undefined, value, this);\n\t};\n\t\n\tPromise.prototype.reduce = function (fn, initialValue) {\n\t    return reduce(this, fn, initialValue, null);\n\t};\n\t\n\tPromise.reduce = function (promises, fn, initialValue, _each) {\n\t    return reduce(promises, fn, initialValue, _each);\n\t};\n\t\n\tfunction completed(valueOrReason, array) {\n\t    if (this.isFulfilled()) {\n\t        array._resolve(valueOrReason);\n\t    } else {\n\t        array._reject(valueOrReason);\n\t    }\n\t}\n\t\n\tfunction reduce(promises, fn, initialValue, _each) {\n\t    if (typeof fn !== \"function\") {\n\t        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n\t    }\n\t    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);\n\t    return array.promise();\n\t}\n\t\n\tfunction gotAccum(accum) {\n\t    this.accum = accum;\n\t    this.array._gotAccum(accum);\n\t    var value = tryConvertToPromise(this.value, this.array._promise);\n\t    if (value instanceof Promise) {\n\t        this.array._currentCancellable = value;\n\t        return value._then(gotValue, undefined, undefined, this, undefined);\n\t    } else {\n\t        return gotValue.call(this, value);\n\t    }\n\t}\n\t\n\tfunction gotValue(value) {\n\t    var array = this.array;\n\t    var promise = array._promise;\n\t    var fn = tryCatch(array._fn);\n\t    promise._pushContext();\n\t    var ret;\n\t    if (array._eachValues !== undefined) {\n\t        ret = fn.call(promise._boundValue(), value, this.index, this.length);\n\t    } else {\n\t        ret = fn.call(promise._boundValue(),\n\t                              this.accum, value, this.index, this.length);\n\t    }\n\t    if (ret instanceof Promise) {\n\t        array._currentCancellable = ret;\n\t    }\n\t    var promiseCreated = promise._popContext();\n\t    debug.checkForgottenReturns(\n\t        ret,\n\t        promiseCreated,\n\t        array._eachValues !== undefined ? \"Promise.each\" : \"Promise.reduce\",\n\t        promise\n\t    );\n\t    return ret;\n\t}\n\t};\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process, setImmediate) {\"use strict\";\n\tvar util = __webpack_require__(1);\n\tvar schedule;\n\tvar noAsyncScheduler = function() {\n\t    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t};\n\tvar NativePromise = util.getNativePromise();\n\tif (util.isNode && typeof MutationObserver === \"undefined\") {\n\t    var GlobalSetImmediate = global.setImmediate;\n\t    var ProcessNextTick = process.nextTick;\n\t    schedule = util.isRecentNode\n\t                ? function(fn) { GlobalSetImmediate.call(global, fn); }\n\t                : function(fn) { ProcessNextTick.call(process, fn); };\n\t} else if (typeof NativePromise === \"function\" &&\n\t           typeof NativePromise.resolve === \"function\") {\n\t    var nativePromise = NativePromise.resolve();\n\t    schedule = function(fn) {\n\t        nativePromise.then(fn);\n\t    };\n\t} else if ((typeof MutationObserver !== \"undefined\") &&\n\t          !(typeof window !== \"undefined\" &&\n\t            window.navigator &&\n\t            (window.navigator.standalone || window.cordova))) {\n\t    schedule = (function() {\n\t        var div = document.createElement(\"div\");\n\t        var opts = {attributes: true};\n\t        var toggleScheduled = false;\n\t        var div2 = document.createElement(\"div\");\n\t        var o2 = new MutationObserver(function() {\n\t            div.classList.toggle(\"foo\");\n\t            toggleScheduled = false;\n\t        });\n\t        o2.observe(div2, opts);\n\t\n\t        var scheduleToggle = function() {\n\t            if (toggleScheduled) return;\n\t            toggleScheduled = true;\n\t            div2.classList.toggle(\"foo\");\n\t        };\n\t\n\t        return function schedule(fn) {\n\t            var o = new MutationObserver(function() {\n\t                o.disconnect();\n\t                fn();\n\t            });\n\t            o.observe(div, opts);\n\t            scheduleToggle();\n\t        };\n\t    })();\n\t} else if (typeof setImmediate !== \"undefined\") {\n\t    schedule = function (fn) {\n\t        setImmediate(fn);\n\t    };\n\t} else if (typeof setTimeout !== \"undefined\") {\n\t    schedule = function (fn) {\n\t        setTimeout(fn, 0);\n\t    };\n\t} else {\n\t    schedule = noAsyncScheduler;\n\t}\n\tmodule.exports = schedule;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(12), __webpack_require__(299).setImmediate))\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports =\n\t    function(Promise, PromiseArray, debug) {\n\tvar PromiseInspection = Promise.PromiseInspection;\n\tvar util = __webpack_require__(1);\n\t\n\tfunction SettledPromiseArray(values) {\n\t    this.constructor$(values);\n\t}\n\tutil.inherits(SettledPromiseArray, PromiseArray);\n\t\n\tSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n\t    this._values[index] = inspection;\n\t    var totalResolved = ++this._totalResolved;\n\t    if (totalResolved >= this._length) {\n\t        this._resolve(this._values);\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\t\n\tSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n\t    var ret = new PromiseInspection();\n\t    ret._bitField = 33554432;\n\t    ret._settledValueField = value;\n\t    return this._promiseResolved(index, ret);\n\t};\n\tSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n\t    var ret = new PromiseInspection();\n\t    ret._bitField = 16777216;\n\t    ret._settledValueField = reason;\n\t    return this._promiseResolved(index, ret);\n\t};\n\t\n\tPromise.settle = function (promises) {\n\t    debug.deprecated(\".settle()\", \".reflect()\");\n\t    return new SettledPromiseArray(promises).promise();\n\t};\n\t\n\tPromise.prototype.settle = function () {\n\t    return Promise.settle(this);\n\t};\n\t};\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports =\n\tfunction(Promise, PromiseArray, apiRejection) {\n\tvar util = __webpack_require__(1);\n\tvar RangeError = __webpack_require__(8).RangeError;\n\tvar AggregateError = __webpack_require__(8).AggregateError;\n\tvar isArray = util.isArray;\n\tvar CANCELLATION = {};\n\t\n\t\n\tfunction SomePromiseArray(values) {\n\t    this.constructor$(values);\n\t    this._howMany = 0;\n\t    this._unwrap = false;\n\t    this._initialized = false;\n\t}\n\tutil.inherits(SomePromiseArray, PromiseArray);\n\t\n\tSomePromiseArray.prototype._init = function () {\n\t    if (!this._initialized) {\n\t        return;\n\t    }\n\t    if (this._howMany === 0) {\n\t        this._resolve([]);\n\t        return;\n\t    }\n\t    this._init$(undefined, -5);\n\t    var isArrayResolved = isArray(this._values);\n\t    if (!this._isResolved() &&\n\t        isArrayResolved &&\n\t        this._howMany > this._canPossiblyFulfill()) {\n\t        this._reject(this._getRangeError(this.length()));\n\t    }\n\t};\n\t\n\tSomePromiseArray.prototype.init = function () {\n\t    this._initialized = true;\n\t    this._init();\n\t};\n\t\n\tSomePromiseArray.prototype.setUnwrap = function () {\n\t    this._unwrap = true;\n\t};\n\t\n\tSomePromiseArray.prototype.howMany = function () {\n\t    return this._howMany;\n\t};\n\t\n\tSomePromiseArray.prototype.setHowMany = function (count) {\n\t    this._howMany = count;\n\t};\n\t\n\tSomePromiseArray.prototype._promiseFulfilled = function (value) {\n\t    this._addFulfilled(value);\n\t    if (this._fulfilled() === this.howMany()) {\n\t        this._values.length = this.howMany();\n\t        if (this.howMany() === 1 && this._unwrap) {\n\t            this._resolve(this._values[0]);\n\t        } else {\n\t            this._resolve(this._values);\n\t        }\n\t        return true;\n\t    }\n\t    return false;\n\t\n\t};\n\tSomePromiseArray.prototype._promiseRejected = function (reason) {\n\t    this._addRejected(reason);\n\t    return this._checkOutcome();\n\t};\n\t\n\tSomePromiseArray.prototype._promiseCancelled = function () {\n\t    if (this._values instanceof Promise || this._values == null) {\n\t        return this._cancel();\n\t    }\n\t    this._addRejected(CANCELLATION);\n\t    return this._checkOutcome();\n\t};\n\t\n\tSomePromiseArray.prototype._checkOutcome = function() {\n\t    if (this.howMany() > this._canPossiblyFulfill()) {\n\t        var e = new AggregateError();\n\t        for (var i = this.length(); i < this._values.length; ++i) {\n\t            if (this._values[i] !== CANCELLATION) {\n\t                e.push(this._values[i]);\n\t            }\n\t        }\n\t        if (e.length > 0) {\n\t            this._reject(e);\n\t        } else {\n\t            this._cancel();\n\t        }\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\t\n\tSomePromiseArray.prototype._fulfilled = function () {\n\t    return this._totalResolved;\n\t};\n\t\n\tSomePromiseArray.prototype._rejected = function () {\n\t    return this._values.length - this.length();\n\t};\n\t\n\tSomePromiseArray.prototype._addRejected = function (reason) {\n\t    this._values.push(reason);\n\t};\n\t\n\tSomePromiseArray.prototype._addFulfilled = function (value) {\n\t    this._values[this._totalResolved++] = value;\n\t};\n\t\n\tSomePromiseArray.prototype._canPossiblyFulfill = function () {\n\t    return this.length() - this._rejected();\n\t};\n\t\n\tSomePromiseArray.prototype._getRangeError = function (count) {\n\t    var message = \"Input array must contain at least \" +\n\t            this._howMany + \" items but contains only \" + count + \" items\";\n\t    return new RangeError(message);\n\t};\n\t\n\tSomePromiseArray.prototype._resolveEmptyArray = function () {\n\t    this._reject(this._getRangeError(0));\n\t};\n\t\n\tfunction some(promises, howMany) {\n\t    if ((howMany | 0) !== howMany || howMany < 0) {\n\t        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    }\n\t    var ret = new SomePromiseArray(promises);\n\t    var promise = ret.promise();\n\t    ret.setHowMany(howMany);\n\t    ret.init();\n\t    return promise;\n\t}\n\t\n\tPromise.some = function (promises, howMany) {\n\t    return some(promises, howMany);\n\t};\n\t\n\tPromise.prototype.some = function (howMany) {\n\t    return some(this, howMany);\n\t};\n\t\n\tPromise._SomePromiseArray = SomePromiseArray;\n\t};\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise) {\n\tfunction PromiseInspection(promise) {\n\t    if (promise !== undefined) {\n\t        promise = promise._target();\n\t        this._bitField = promise._bitField;\n\t        this._settledValueField = promise._isFateSealed()\n\t            ? promise._settledValue() : undefined;\n\t    }\n\t    else {\n\t        this._bitField = 0;\n\t        this._settledValueField = undefined;\n\t    }\n\t}\n\t\n\tPromiseInspection.prototype._settledValue = function() {\n\t    return this._settledValueField;\n\t};\n\t\n\tvar value = PromiseInspection.prototype.value = function () {\n\t    if (!this.isFulfilled()) {\n\t        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    }\n\t    return this._settledValue();\n\t};\n\t\n\tvar reason = PromiseInspection.prototype.error =\n\tPromiseInspection.prototype.reason = function () {\n\t    if (!this.isRejected()) {\n\t        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n\t    }\n\t    return this._settledValue();\n\t};\n\t\n\tvar isFulfilled = PromiseInspection.prototype.isFulfilled = function() {\n\t    return (this._bitField & 33554432) !== 0;\n\t};\n\t\n\tvar isRejected = PromiseInspection.prototype.isRejected = function () {\n\t    return (this._bitField & 16777216) !== 0;\n\t};\n\t\n\tvar isPending = PromiseInspection.prototype.isPending = function () {\n\t    return (this._bitField & 50397184) === 0;\n\t};\n\t\n\tvar isResolved = PromiseInspection.prototype.isResolved = function () {\n\t    return (this._bitField & 50331648) !== 0;\n\t};\n\t\n\tPromiseInspection.prototype.isCancelled = function() {\n\t    return (this._bitField & 8454144) !== 0;\n\t};\n\t\n\tPromise.prototype.__isCancelled = function() {\n\t    return (this._bitField & 65536) === 65536;\n\t};\n\t\n\tPromise.prototype._isCancelled = function() {\n\t    return this._target().__isCancelled();\n\t};\n\t\n\tPromise.prototype.isCancelled = function() {\n\t    return (this._target()._bitField & 8454144) !== 0;\n\t};\n\t\n\tPromise.prototype.isPending = function() {\n\t    return isPending.call(this._target());\n\t};\n\t\n\tPromise.prototype.isRejected = function() {\n\t    return isRejected.call(this._target());\n\t};\n\t\n\tPromise.prototype.isFulfilled = function() {\n\t    return isFulfilled.call(this._target());\n\t};\n\t\n\tPromise.prototype.isResolved = function() {\n\t    return isResolved.call(this._target());\n\t};\n\t\n\tPromise.prototype.value = function() {\n\t    return value.call(this._target());\n\t};\n\t\n\tPromise.prototype.reason = function() {\n\t    var target = this._target();\n\t    target._unsetRejectionIsUnhandled();\n\t    return reason.call(target);\n\t};\n\t\n\tPromise.prototype._value = function() {\n\t    return this._settledValue();\n\t};\n\t\n\tPromise.prototype._reason = function() {\n\t    this._unsetRejectionIsUnhandled();\n\t    return this._settledValue();\n\t};\n\t\n\tPromise.PromiseInspection = PromiseInspection;\n\t};\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar util = __webpack_require__(1);\n\tvar errorObj = util.errorObj;\n\tvar isObject = util.isObject;\n\t\n\tfunction tryConvertToPromise(obj, context) {\n\t    if (isObject(obj)) {\n\t        if (obj instanceof Promise) return obj;\n\t        var then = getThen(obj);\n\t        if (then === errorObj) {\n\t            if (context) context._pushContext();\n\t            var ret = Promise.reject(then.e);\n\t            if (context) context._popContext();\n\t            return ret;\n\t        } else if (typeof then === \"function\") {\n\t            if (isAnyBluebirdPromise(obj)) {\n\t                var ret = new Promise(INTERNAL);\n\t                obj._then(\n\t                    ret._fulfill,\n\t                    ret._reject,\n\t                    undefined,\n\t                    ret,\n\t                    null\n\t                );\n\t                return ret;\n\t            }\n\t            return doThenable(obj, then, context);\n\t        }\n\t    }\n\t    return obj;\n\t}\n\t\n\tfunction doGetThen(obj) {\n\t    return obj.then;\n\t}\n\t\n\tfunction getThen(obj) {\n\t    try {\n\t        return doGetThen(obj);\n\t    } catch (e) {\n\t        errorObj.e = e;\n\t        return errorObj;\n\t    }\n\t}\n\t\n\tvar hasProp = {}.hasOwnProperty;\n\tfunction isAnyBluebirdPromise(obj) {\n\t    try {\n\t        return hasProp.call(obj, \"_promise0\");\n\t    } catch (e) {\n\t        return false;\n\t    }\n\t}\n\t\n\tfunction doThenable(x, then, context) {\n\t    var promise = new Promise(INTERNAL);\n\t    var ret = promise;\n\t    if (context) context._pushContext();\n\t    promise._captureStackTrace();\n\t    if (context) context._popContext();\n\t    var synchronous = true;\n\t    var result = util.tryCatch(then).call(x, resolve, reject);\n\t    synchronous = false;\n\t\n\t    if (promise && result === errorObj) {\n\t        promise._rejectCallback(result.e, true, true);\n\t        promise = null;\n\t    }\n\t\n\t    function resolve(value) {\n\t        if (!promise) return;\n\t        promise._resolveCallback(value);\n\t        promise = null;\n\t    }\n\t\n\t    function reject(reason) {\n\t        if (!promise) return;\n\t        promise._rejectCallback(reason, synchronous, true);\n\t        promise = null;\n\t    }\n\t    return ret;\n\t}\n\t\n\treturn tryConvertToPromise;\n\t};\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL, debug) {\n\tvar util = __webpack_require__(1);\n\tvar TimeoutError = Promise.TimeoutError;\n\t\n\tfunction HandleWrapper(handle)  {\n\t    this.handle = handle;\n\t}\n\t\n\tHandleWrapper.prototype._resultCancelled = function() {\n\t    clearTimeout(this.handle);\n\t};\n\t\n\tvar afterValue = function(value) { return delay(+this).thenReturn(value); };\n\tvar delay = Promise.delay = function (ms, value) {\n\t    var ret;\n\t    var handle;\n\t    if (value !== undefined) {\n\t        ret = Promise.resolve(value)\n\t                ._then(afterValue, null, null, ms, undefined);\n\t        if (debug.cancellation() && value instanceof Promise) {\n\t            ret._setOnCancel(value);\n\t        }\n\t    } else {\n\t        ret = new Promise(INTERNAL);\n\t        handle = setTimeout(function() { ret._fulfill(); }, +ms);\n\t        if (debug.cancellation()) {\n\t            ret._setOnCancel(new HandleWrapper(handle));\n\t        }\n\t        ret._captureStackTrace();\n\t    }\n\t    ret._setAsyncGuaranteed();\n\t    return ret;\n\t};\n\t\n\tPromise.prototype.delay = function (ms) {\n\t    return delay(ms, this);\n\t};\n\t\n\tvar afterTimeout = function (promise, message, parent) {\n\t    var err;\n\t    if (typeof message !== \"string\") {\n\t        if (message instanceof Error) {\n\t            err = message;\n\t        } else {\n\t            err = new TimeoutError(\"operation timed out\");\n\t        }\n\t    } else {\n\t        err = new TimeoutError(message);\n\t    }\n\t    util.markAsOriginatingFromRejection(err);\n\t    promise._attachExtraTrace(err);\n\t    promise._reject(err);\n\t\n\t    if (parent != null) {\n\t        parent.cancel();\n\t    }\n\t};\n\t\n\tfunction successClear(value) {\n\t    clearTimeout(this.handle);\n\t    return value;\n\t}\n\t\n\tfunction failureClear(reason) {\n\t    clearTimeout(this.handle);\n\t    throw reason;\n\t}\n\t\n\tPromise.prototype.timeout = function (ms, message) {\n\t    ms = +ms;\n\t    var ret, parent;\n\t\n\t    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {\n\t        if (ret.isPending()) {\n\t            afterTimeout(ret, message, parent);\n\t        }\n\t    }, ms));\n\t\n\t    if (debug.cancellation()) {\n\t        parent = this.then();\n\t        ret = parent._then(successClear, failureClear,\n\t                            undefined, handleWrapper, undefined);\n\t        ret._setOnCancel(handleWrapper);\n\t    } else {\n\t        ret = this._then(successClear, failureClear,\n\t                            undefined, handleWrapper, undefined);\n\t    }\n\t\n\t    return ret;\n\t};\n\t\n\t};\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tmodule.exports = function (Promise, apiRejection, tryConvertToPromise,\n\t    createContext, INTERNAL, debug) {\n\t    var util = __webpack_require__(1);\n\t    var TypeError = __webpack_require__(8).TypeError;\n\t    var inherits = __webpack_require__(1).inherits;\n\t    var errorObj = util.errorObj;\n\t    var tryCatch = util.tryCatch;\n\t    var NULL = {};\n\t\n\t    function thrower(e) {\n\t        setTimeout(function(){throw e;}, 0);\n\t    }\n\t\n\t    function castPreservingDisposable(thenable) {\n\t        var maybePromise = tryConvertToPromise(thenable);\n\t        if (maybePromise !== thenable &&\n\t            typeof thenable._isDisposable === \"function\" &&\n\t            typeof thenable._getDisposer === \"function\" &&\n\t            thenable._isDisposable()) {\n\t            maybePromise._setDisposable(thenable._getDisposer());\n\t        }\n\t        return maybePromise;\n\t    }\n\t    function dispose(resources, inspection) {\n\t        var i = 0;\n\t        var len = resources.length;\n\t        var ret = new Promise(INTERNAL);\n\t        function iterator() {\n\t            if (i >= len) return ret._fulfill();\n\t            var maybePromise = castPreservingDisposable(resources[i++]);\n\t            if (maybePromise instanceof Promise &&\n\t                maybePromise._isDisposable()) {\n\t                try {\n\t                    maybePromise = tryConvertToPromise(\n\t                        maybePromise._getDisposer().tryDispose(inspection),\n\t                        resources.promise);\n\t                } catch (e) {\n\t                    return thrower(e);\n\t                }\n\t                if (maybePromise instanceof Promise) {\n\t                    return maybePromise._then(iterator, thrower,\n\t                                              null, null, null);\n\t                }\n\t            }\n\t            iterator();\n\t        }\n\t        iterator();\n\t        return ret;\n\t    }\n\t\n\t    function Disposer(data, promise, context) {\n\t        this._data = data;\n\t        this._promise = promise;\n\t        this._context = context;\n\t    }\n\t\n\t    Disposer.prototype.data = function () {\n\t        return this._data;\n\t    };\n\t\n\t    Disposer.prototype.promise = function () {\n\t        return this._promise;\n\t    };\n\t\n\t    Disposer.prototype.resource = function () {\n\t        if (this.promise().isFulfilled()) {\n\t            return this.promise().value();\n\t        }\n\t        return NULL;\n\t    };\n\t\n\t    Disposer.prototype.tryDispose = function(inspection) {\n\t        var resource = this.resource();\n\t        var context = this._context;\n\t        if (context !== undefined) context._pushContext();\n\t        var ret = resource !== NULL\n\t            ? this.doDispose(resource, inspection) : null;\n\t        if (context !== undefined) context._popContext();\n\t        this._promise._unsetDisposable();\n\t        this._data = null;\n\t        return ret;\n\t    };\n\t\n\t    Disposer.isDisposer = function (d) {\n\t        return (d != null &&\n\t                typeof d.resource === \"function\" &&\n\t                typeof d.tryDispose === \"function\");\n\t    };\n\t\n\t    function FunctionDisposer(fn, promise, context) {\n\t        this.constructor$(fn, promise, context);\n\t    }\n\t    inherits(FunctionDisposer, Disposer);\n\t\n\t    FunctionDisposer.prototype.doDispose = function (resource, inspection) {\n\t        var fn = this.data();\n\t        return fn.call(resource, resource, inspection);\n\t    };\n\t\n\t    function maybeUnwrapDisposer(value) {\n\t        if (Disposer.isDisposer(value)) {\n\t            this.resources[this.index]._setDisposable(value);\n\t            return value.promise();\n\t        }\n\t        return value;\n\t    }\n\t\n\t    function ResourceList(length) {\n\t        this.length = length;\n\t        this.promise = null;\n\t        this[length-1] = null;\n\t    }\n\t\n\t    ResourceList.prototype._resultCancelled = function() {\n\t        var len = this.length;\n\t        for (var i = 0; i < len; ++i) {\n\t            var item = this[i];\n\t            if (item instanceof Promise) {\n\t                item.cancel();\n\t            }\n\t        }\n\t    };\n\t\n\t    Promise.using = function () {\n\t        var len = arguments.length;\n\t        if (len < 2) return apiRejection(\n\t                        \"you must pass at least 2 arguments to Promise.using\");\n\t        var fn = arguments[len - 1];\n\t        if (typeof fn !== \"function\") {\n\t            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n\t        }\n\t        var input;\n\t        var spreadArgs = true;\n\t        if (len === 2 && Array.isArray(arguments[0])) {\n\t            input = arguments[0];\n\t            len = input.length;\n\t            spreadArgs = false;\n\t        } else {\n\t            input = arguments;\n\t            len--;\n\t        }\n\t        var resources = new ResourceList(len);\n\t        for (var i = 0; i < len; ++i) {\n\t            var resource = input[i];\n\t            if (Disposer.isDisposer(resource)) {\n\t                var disposer = resource;\n\t                resource = resource.promise();\n\t                resource._setDisposable(disposer);\n\t            } else {\n\t                var maybePromise = tryConvertToPromise(resource);\n\t                if (maybePromise instanceof Promise) {\n\t                    resource =\n\t                        maybePromise._then(maybeUnwrapDisposer, null, null, {\n\t                            resources: resources,\n\t                            index: i\n\t                    }, undefined);\n\t                }\n\t            }\n\t            resources[i] = resource;\n\t        }\n\t\n\t        var reflectedResources = new Array(resources.length);\n\t        for (var i = 0; i < reflectedResources.length; ++i) {\n\t            reflectedResources[i] = Promise.resolve(resources[i]).reflect();\n\t        }\n\t\n\t        var resultPromise = Promise.all(reflectedResources)\n\t            .then(function(inspections) {\n\t                for (var i = 0; i < inspections.length; ++i) {\n\t                    var inspection = inspections[i];\n\t                    if (inspection.isRejected()) {\n\t                        errorObj.e = inspection.error();\n\t                        return errorObj;\n\t                    } else if (!inspection.isFulfilled()) {\n\t                        resultPromise.cancel();\n\t                        return;\n\t                    }\n\t                    inspections[i] = inspection.value();\n\t                }\n\t                promise._pushContext();\n\t\n\t                fn = tryCatch(fn);\n\t                var ret = spreadArgs\n\t                    ? fn.apply(undefined, inspections) : fn(inspections);\n\t                var promiseCreated = promise._popContext();\n\t                debug.checkForgottenReturns(\n\t                    ret, promiseCreated, \"Promise.using\", promise);\n\t                return ret;\n\t            });\n\t\n\t        var promise = resultPromise.lastly(function() {\n\t            var inspection = new Promise.PromiseInspection(resultPromise);\n\t            return dispose(resources, inspection);\n\t        });\n\t        resources.promise = promise;\n\t        promise._setOnCancel(resources);\n\t        return promise;\n\t    };\n\t\n\t    Promise.prototype._setDisposable = function (disposer) {\n\t        this._bitField = this._bitField | 131072;\n\t        this._disposer = disposer;\n\t    };\n\t\n\t    Promise.prototype._isDisposable = function () {\n\t        return (this._bitField & 131072) > 0;\n\t    };\n\t\n\t    Promise.prototype._getDisposer = function () {\n\t        return this._disposer;\n\t    };\n\t\n\t    Promise.prototype._unsetDisposable = function () {\n\t        this._bitField = this._bitField & (~131072);\n\t        this._disposer = undefined;\n\t    };\n\t\n\t    Promise.prototype.disposer = function (fn) {\n\t        if (typeof fn === \"function\") {\n\t            return new FunctionDisposer(fn, this, createContext());\n\t        }\n\t        throw new TypeError();\n\t    };\n\t\n\t};\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  var args = [].slice.call(arguments, 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(149);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n\t  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n\t  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n\t  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n\t  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n\t  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n\t  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n\t  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n\t  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n\t  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n\t  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // NB: In an Electron preload script, document will be defined but not fully\n\t  // initialized. Since we know we're in Chrome, we'll just detect this case\n\t  // explicitly\n\t  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n\t    return true;\n\t  }\n\t\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t    // double check webkit in userAgent just in case we are in a worker\n\t    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  try {\n\t    return JSON.stringify(v);\n\t  } catch (err) {\n\t    return '[UnexpectedJSONParseError]: ' + err.message;\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs(args) {\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args.splice(1, 0, c, 'color: inherit')\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t\n\t  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\t  if (!r && typeof process !== 'undefined' && 'env' in process) {\n\t    r = process.env.DEBUG;\n\t  }\n\t\n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage() {\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(286);\n\t\n\t/**\n\t * Active `debug` instances.\n\t */\n\texports.instances = [];\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Select a color.\n\t * @param {String} namespace\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor(namespace) {\n\t  var hash = 0, i;\n\t\n\t  for (i in namespace) {\n\t    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t    hash |= 0; // Convert to 32bit integer\n\t  }\n\t\n\t  return exports.colors[Math.abs(hash) % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction createDebug(namespace) {\n\t\n\t  var prevTime;\n\t\n\t  function debug() {\n\t    // disabled?\n\t    if (!debug.enabled) return;\n\t\n\t    var self = debug;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // turn the `arguments` into a proper Array\n\t    var args = new Array(arguments.length);\n\t    for (var i = 0; i < args.length; i++) {\n\t      args[i] = arguments[i];\n\t    }\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %O\n\t      args.unshift('%O');\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    // apply env-specific formatting (colors, etc.)\n\t    exports.formatArgs.call(self, args);\n\t\n\t    var logFn = debug.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t\n\t  debug.namespace = namespace;\n\t  debug.enabled = exports.enabled(namespace);\n\t  debug.useColors = exports.useColors();\n\t  debug.color = selectColor(namespace);\n\t  debug.destroy = destroy;\n\t\n\t  // env-specific initialization logic for debug instances\n\t  if ('function' === typeof exports.init) {\n\t    exports.init(debug);\n\t  }\n\t\n\t  exports.instances.push(debug);\n\t\n\t  return debug;\n\t}\n\t\n\tfunction destroy () {\n\t  var index = exports.instances.indexOf(this);\n\t  if (index !== -1) {\n\t    exports.instances.splice(index, 1);\n\t    return true;\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  exports.names = [];\n\t  exports.skips = [];\n\t\n\t  var i;\n\t  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t\n\t  for (i = 0; i < exports.instances.length; i++) {\n\t    var instance = exports.instances[i];\n\t    instance.enabled = exports.enabled(instance.namespace);\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  if (name[name.length - 1] === '*') {\n\t    return true;\n\t  }\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar has = Object.prototype.hasOwnProperty\n\t  , prefix = '~';\n\t\n\t/**\n\t * Constructor to create a storage for our `EE` objects.\n\t * An `Events` instance is a plain object whose properties are event names.\n\t *\n\t * @constructor\n\t * @api private\n\t */\n\tfunction Events() {}\n\t\n\t//\n\t// We try to not inherit from `Object.prototype`. In some engines creating an\n\t// instance in this way is faster than calling `Object.create(null)` directly.\n\t// If `Object.create(null)` is not supported we prefix the event names with a\n\t// character to make sure that the built-in object properties are not\n\t// overridden or used as an attack vector.\n\t//\n\tif (Object.create) {\n\t  Events.prototype = Object.create(null);\n\t\n\t  //\n\t  // This hack is needed because the `__proto__` property is still inherited in\n\t  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n\t  //\n\t  if (!new Events().__proto__) prefix = false;\n\t}\n\t\n\t/**\n\t * Representation of a single event listener.\n\t *\n\t * @param {Function} fn The listener function.\n\t * @param {Mixed} context The context to invoke the listener with.\n\t * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n\t * @constructor\n\t * @api private\n\t */\n\tfunction EE(fn, context, once) {\n\t  this.fn = fn;\n\t  this.context = context;\n\t  this.once = once || false;\n\t}\n\t\n\t/**\n\t * Minimal `EventEmitter` interface that is molded against the Node.js\n\t * `EventEmitter` interface.\n\t *\n\t * @constructor\n\t * @api public\n\t */\n\tfunction EventEmitter() {\n\t  this._events = new Events();\n\t  this._eventsCount = 0;\n\t}\n\t\n\t/**\n\t * Return an array listing the events for which the emitter has registered\n\t * listeners.\n\t *\n\t * @returns {Array}\n\t * @api public\n\t */\n\tEventEmitter.prototype.eventNames = function eventNames() {\n\t  var names = []\n\t    , events\n\t    , name;\n\t\n\t  if (this._eventsCount === 0) return names;\n\t\n\t  for (name in (events = this._events)) {\n\t    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n\t  }\n\t\n\t  if (Object.getOwnPropertySymbols) {\n\t    return names.concat(Object.getOwnPropertySymbols(events));\n\t  }\n\t\n\t  return names;\n\t};\n\t\n\t/**\n\t * Return the listeners registered for a given event.\n\t *\n\t * @param {String|Symbol} event The event name.\n\t * @param {Boolean} exists Only check if there are listeners.\n\t * @returns {Array|Boolean}\n\t * @api public\n\t */\n\tEventEmitter.prototype.listeners = function listeners(event, exists) {\n\t  var evt = prefix ? prefix + event : event\n\t    , available = this._events[evt];\n\t\n\t  if (exists) return !!available;\n\t  if (!available) return [];\n\t  if (available.fn) return [available.fn];\n\t\n\t  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n\t    ee[i] = available[i].fn;\n\t  }\n\t\n\t  return ee;\n\t};\n\t\n\t/**\n\t * Calls each of the listeners registered for a given event.\n\t *\n\t * @param {String|Symbol} event The event name.\n\t * @returns {Boolean} `true` if the event had listeners, else `false`.\n\t * @api public\n\t */\n\tEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n\t  var evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events[evt]) return false;\n\t\n\t  var listeners = this._events[evt]\n\t    , len = arguments.length\n\t    , args\n\t    , i;\n\t\n\t  if (listeners.fn) {\n\t    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\t\n\t    switch (len) {\n\t      case 1: return listeners.fn.call(listeners.context), true;\n\t      case 2: return listeners.fn.call(listeners.context, a1), true;\n\t      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n\t      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n\t      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n\t      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n\t    }\n\t\n\t    for (i = 1, args = new Array(len -1); i < len; i++) {\n\t      args[i - 1] = arguments[i];\n\t    }\n\t\n\t    listeners.fn.apply(listeners.context, args);\n\t  } else {\n\t    var length = listeners.length\n\t      , j;\n\t\n\t    for (i = 0; i < length; i++) {\n\t      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\t\n\t      switch (len) {\n\t        case 1: listeners[i].fn.call(listeners[i].context); break;\n\t        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n\t        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n\t        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n\t        default:\n\t          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n\t            args[j - 1] = arguments[j];\n\t          }\n\t\n\t          listeners[i].fn.apply(listeners[i].context, args);\n\t      }\n\t    }\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\t/**\n\t * Add a listener for a given event.\n\t *\n\t * @param {String|Symbol} event The event name.\n\t * @param {Function} fn The listener function.\n\t * @param {Mixed} [context=this] The context to invoke the listener with.\n\t * @returns {EventEmitter} `this`.\n\t * @api public\n\t */\n\tEventEmitter.prototype.on = function on(event, fn, context) {\n\t  var listener = new EE(fn, context || this)\n\t    , evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n\t  else if (!this._events[evt].fn) this._events[evt].push(listener);\n\t  else this._events[evt] = [this._events[evt], listener];\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Add a one-time listener for a given event.\n\t *\n\t * @param {String|Symbol} event The event name.\n\t * @param {Function} fn The listener function.\n\t * @param {Mixed} [context=this] The context to invoke the listener with.\n\t * @returns {EventEmitter} `this`.\n\t * @api public\n\t */\n\tEventEmitter.prototype.once = function once(event, fn, context) {\n\t  var listener = new EE(fn, context || this, true)\n\t    , evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n\t  else if (!this._events[evt].fn) this._events[evt].push(listener);\n\t  else this._events[evt] = [this._events[evt], listener];\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the listeners of a given event.\n\t *\n\t * @param {String|Symbol} event The event name.\n\t * @param {Function} fn Only remove the listeners that match this function.\n\t * @param {Mixed} context Only remove the listeners that have this context.\n\t * @param {Boolean} once Only remove one-time listeners.\n\t * @returns {EventEmitter} `this`.\n\t * @api public\n\t */\n\tEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n\t  var evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events[evt]) return this;\n\t  if (!fn) {\n\t    if (--this._eventsCount === 0) this._events = new Events();\n\t    else delete this._events[evt];\n\t    return this;\n\t  }\n\t\n\t  var listeners = this._events[evt];\n\t\n\t  if (listeners.fn) {\n\t    if (\n\t         listeners.fn === fn\n\t      && (!once || listeners.once)\n\t      && (!context || listeners.context === context)\n\t    ) {\n\t      if (--this._eventsCount === 0) this._events = new Events();\n\t      else delete this._events[evt];\n\t    }\n\t  } else {\n\t    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n\t      if (\n\t           listeners[i].fn !== fn\n\t        || (once && !listeners[i].once)\n\t        || (context && listeners[i].context !== context)\n\t      ) {\n\t        events.push(listeners[i]);\n\t      }\n\t    }\n\t\n\t    //\n\t    // Reset the array, or remove it completely if we have no more listeners.\n\t    //\n\t    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n\t    else if (--this._eventsCount === 0) this._events = new Events();\n\t    else delete this._events[evt];\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove all listeners, or those of the specified event.\n\t *\n\t * @param {String|Symbol} [event] The event name.\n\t * @returns {EventEmitter} `this`.\n\t * @api public\n\t */\n\tEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n\t  var evt;\n\t\n\t  if (event) {\n\t    evt = prefix ? prefix + event : event;\n\t    if (this._events[evt]) {\n\t      if (--this._eventsCount === 0) this._events = new Events();\n\t      else delete this._events[evt];\n\t    }\n\t  } else {\n\t    this._events = new Events();\n\t    this._eventsCount = 0;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t//\n\t// Alias methods names because people roll like that.\n\t//\n\tEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\tEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t\n\t//\n\t// This function doesn't apply anymore.\n\t//\n\tEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n\t  return this;\n\t};\n\t\n\t//\n\t// Expose the prefix.\n\t//\n\tEventEmitter.prefixed = prefix;\n\t\n\t//\n\t// Allow `EventEmitter` to be imported as module namespace.\n\t//\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\t//\n\t// Expose the module.\n\t//\n\tif (true) {\n\t  module.exports = EventEmitter;\n\t}\n\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(13),\n\t    root = __webpack_require__(7);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar DataView = getNative(root, 'DataView');\n\t\n\tmodule.exports = DataView;\n\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar hashClear = __webpack_require__(204),\n\t    hashDelete = __webpack_require__(205),\n\t    hashGet = __webpack_require__(206),\n\t    hashHas = __webpack_require__(207),\n\t    hashSet = __webpack_require__(208);\n\t\n\t/**\n\t * Creates a hash object.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.\n\t */\n\tfunction Hash(entries) {\n\t  var index = -1,\n\t      length = entries == null ? 0 : entries.length;\n\t\n\t  this.clear();\n\t  while (++index < length) {\n\t    var entry = entries[index];\n\t    this.set(entry[0], entry[1]);\n\t  }\n\t}\n\t\n\t// Add methods to `Hash`.\n\tHash.prototype.clear = hashClear;\n\tHash.prototype['delete'] = hashDelete;\n\tHash.prototype.get = hashGet;\n\tHash.prototype.has = hashHas;\n\tHash.prototype.set = hashSet;\n\t\n\tmodule.exports = Hash;\n\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(13),\n\t    root = __webpack_require__(7);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar Promise = getNative(root, 'Promise');\n\t\n\tmodule.exports = Promise;\n\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(13),\n\t    root = __webpack_require__(7);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar Set = getNative(root, 'Set');\n\t\n\tmodule.exports = Set;\n\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar MapCache = __webpack_require__(46),\n\t    setCacheAdd = __webpack_require__(230),\n\t    setCacheHas = __webpack_require__(231);\n\t\n\t/**\n\t *\n\t * Creates an array cache object to store unique values.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [values] The values to cache.\n\t */\n\tfunction SetCache(values) {\n\t  var index = -1,\n\t      length = values == null ? 0 : values.length;\n\t\n\t  this.__data__ = new MapCache;\n\t  while (++index < length) {\n\t    this.add(values[index]);\n\t  }\n\t}\n\t\n\t// Add methods to `SetCache`.\n\tSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\tSetCache.prototype.has = setCacheHas;\n\t\n\tmodule.exports = SetCache;\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(13),\n\t    root = __webpack_require__(7);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar WeakMap = getNative(root, 'WeakMap');\n\t\n\tmodule.exports = WeakMap;\n\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Adds the key-value `pair` to `map`.\n\t *\n\t * @private\n\t * @param {Object} map The map to modify.\n\t * @param {Array} pair The key-value pair to add.\n\t * @returns {Object} Returns `map`.\n\t */\n\tfunction addMapEntry(map, pair) {\n\t  // Don't return `map.set` because it's not chainable in IE 11.\n\t  map.set(pair[0], pair[1]);\n\t  return map;\n\t}\n\t\n\tmodule.exports = addMapEntry;\n\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Adds `value` to `set`.\n\t *\n\t * @private\n\t * @param {Object} set The set to modify.\n\t * @param {*} value The value to add.\n\t * @returns {Object} Returns `set`.\n\t */\n\tfunction addSetEntry(set, value) {\n\t  // Don't return `set.add` because it's not chainable in IE 11.\n\t  set.add(value);\n\t  return set;\n\t}\n\t\n\tmodule.exports = addSetEntry;\n\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * A specialized version of `_.some` for arrays without support for iteratee\n\t * shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t *  else `false`.\n\t */\n\tfunction arraySome(array, predicate) {\n\t  var index = -1,\n\t      length = array == null ? 0 : array.length;\n\t\n\t  while (++index < length) {\n\t    if (predicate(array[index], index, array)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\tmodule.exports = arraySome;\n\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(6),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * The base implementation of `_.assignIn` without support for multiple sources\n\t * or `customizer` functions.\n\t *\n\t * @private\n\t * @param {Object} object The destination object.\n\t * @param {Object} source The source object.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseAssignIn(object, source) {\n\t  return object && copyObject(source, keysIn(source), object);\n\t}\n\t\n\tmodule.exports = baseAssignIn;\n\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar get = __webpack_require__(59);\n\t\n\t/**\n\t * The base implementation of `_.at` without support for individual paths.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {string[]} paths The property paths to pick.\n\t * @returns {Array} Returns the picked elements.\n\t */\n\tfunction baseAt(object, paths) {\n\t  var index = -1,\n\t      length = paths.length,\n\t      result = Array(length),\n\t      skip = object == null;\n\t\n\t  while (++index < length) {\n\t    result[index] = skip ? undefined : get(object, paths[index]);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseAt;\n\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Stack = __webpack_require__(30),\n\t    arrayEach = __webpack_require__(67),\n\t    assignValue = __webpack_require__(32),\n\t    baseAssign = __webpack_require__(72),\n\t    baseAssignIn = __webpack_require__(160),\n\t    cloneBuffer = __webpack_require__(83),\n\t    copyArray = __webpack_require__(85),\n\t    copySymbols = __webpack_require__(193),\n\t    copySymbolsIn = __webpack_require__(194),\n\t    getAllKeys = __webpack_require__(92),\n\t    getAllKeysIn = __webpack_require__(53),\n\t    getTag = __webpack_require__(55),\n\t    initCloneArray = __webpack_require__(209),\n\t    initCloneByTag = __webpack_require__(210),\n\t    initCloneObject = __webpack_require__(95),\n\t    isArray = __webpack_require__(2),\n\t    isBuffer = __webpack_require__(28),\n\t    isObject = __webpack_require__(3),\n\t    keys = __webpack_require__(4);\n\t\n\t/** Used to compose bitmasks for cloning. */\n\tvar CLONE_DEEP_FLAG = 1,\n\t    CLONE_FLAT_FLAG = 2,\n\t    CLONE_SYMBOLS_FLAG = 4;\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    arrayTag = '[object Array]',\n\t    boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    errorTag = '[object Error]',\n\t    funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]',\n\t    mapTag = '[object Map]',\n\t    numberTag = '[object Number]',\n\t    objectTag = '[object Object]',\n\t    regexpTag = '[object RegExp]',\n\t    setTag = '[object Set]',\n\t    stringTag = '[object String]',\n\t    symbolTag = '[object Symbol]',\n\t    weakMapTag = '[object WeakMap]';\n\t\n\tvar arrayBufferTag = '[object ArrayBuffer]',\n\t    dataViewTag = '[object DataView]',\n\t    float32Tag = '[object Float32Array]',\n\t    float64Tag = '[object Float64Array]',\n\t    int8Tag = '[object Int8Array]',\n\t    int16Tag = '[object Int16Array]',\n\t    int32Tag = '[object Int32Array]',\n\t    uint8Tag = '[object Uint8Array]',\n\t    uint8ClampedTag = '[object Uint8ClampedArray]',\n\t    uint16Tag = '[object Uint16Array]',\n\t    uint32Tag = '[object Uint32Array]';\n\t\n\t/** Used to identify `toStringTag` values supported by `_.clone`. */\n\tvar cloneableTags = {};\n\tcloneableTags[argsTag] = cloneableTags[arrayTag] =\n\tcloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\tcloneableTags[boolTag] = cloneableTags[dateTag] =\n\tcloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\tcloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\tcloneableTags[int32Tag] = cloneableTags[mapTag] =\n\tcloneableTags[numberTag] = cloneableTags[objectTag] =\n\tcloneableTags[regexpTag] = cloneableTags[setTag] =\n\tcloneableTags[stringTag] = cloneableTags[symbolTag] =\n\tcloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\tcloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\tcloneableTags[errorTag] = cloneableTags[funcTag] =\n\tcloneableTags[weakMapTag] = false;\n\t\n\t/**\n\t * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t * traversed objects.\n\t *\n\t * @private\n\t * @param {*} value The value to clone.\n\t * @param {boolean} bitmask The bitmask flags.\n\t *  1 - Deep clone\n\t *  2 - Flatten inherited properties\n\t *  4 - Clone symbols\n\t * @param {Function} [customizer] The function to customize cloning.\n\t * @param {string} [key] The key of `value`.\n\t * @param {Object} [object] The parent object of `value`.\n\t * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t * @returns {*} Returns the cloned value.\n\t */\n\tfunction baseClone(value, bitmask, customizer, key, object, stack) {\n\t  var result,\n\t      isDeep = bitmask & CLONE_DEEP_FLAG,\n\t      isFlat = bitmask & CLONE_FLAT_FLAG,\n\t      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\t\n\t  if (customizer) {\n\t    result = object ? customizer(value, key, object, stack) : customizer(value);\n\t  }\n\t  if (result !== undefined) {\n\t    return result;\n\t  }\n\t  if (!isObject(value)) {\n\t    return value;\n\t  }\n\t  var isArr = isArray(value);\n\t  if (isArr) {\n\t    result = initCloneArray(value);\n\t    if (!isDeep) {\n\t      return copyArray(value, result);\n\t    }\n\t  } else {\n\t    var tag = getTag(value),\n\t        isFunc = tag == funcTag || tag == genTag;\n\t\n\t    if (isBuffer(value)) {\n\t      return cloneBuffer(value, isDeep);\n\t    }\n\t    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n\t      if (!isDeep) {\n\t        return isFlat\n\t          ? copySymbolsIn(value, baseAssignIn(result, value))\n\t          : copySymbols(value, baseAssign(result, value));\n\t      }\n\t    } else {\n\t      if (!cloneableTags[tag]) {\n\t        return object ? value : {};\n\t      }\n\t      result = initCloneByTag(value, tag, baseClone, isDeep);\n\t    }\n\t  }\n\t  // Check for circular references and return its corresponding clone.\n\t  stack || (stack = new Stack);\n\t  var stacked = stack.get(value);\n\t  if (stacked) {\n\t    return stacked;\n\t  }\n\t  stack.set(value, result);\n\t\n\t  var keysFunc = isFull\n\t    ? (isFlat ? getAllKeysIn : getAllKeys)\n\t    : (isFlat ? keysIn : keys);\n\t\n\t  var props = isArr ? undefined : keysFunc(value);\n\t  arrayEach(props || value, function(subValue, key) {\n\t    if (props) {\n\t      key = subValue;\n\t      subValue = value[key];\n\t    }\n\t    // Recursively populate clone (susceptible to call stack limits).\n\t    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseClone;\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayPush = __webpack_require__(47),\n\t    isFlattenable = __webpack_require__(211);\n\t\n\t/**\n\t * The base implementation of `_.flatten` with support for restricting flattening.\n\t *\n\t * @private\n\t * @param {Array} array The array to flatten.\n\t * @param {number} depth The maximum recursion depth.\n\t * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t * @param {Array} [result=[]] The initial result value.\n\t * @returns {Array} Returns the new flattened array.\n\t */\n\tfunction baseFlatten(array, depth, predicate, isStrict, result) {\n\t  var index = -1,\n\t      length = array.length;\n\t\n\t  predicate || (predicate = isFlattenable);\n\t  result || (result = []);\n\t\n\t  while (++index < length) {\n\t    var value = array[index];\n\t    if (depth > 0 && predicate(value)) {\n\t      if (depth > 1) {\n\t        // Recursively flatten arrays (susceptible to call stack limits).\n\t        baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t      } else {\n\t        arrayPush(result, value);\n\t      }\n\t    } else if (!isStrict) {\n\t      result[result.length] = value;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseFlatten;\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports) {\n\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * The base implementation of `_.has` without support for deep paths.\n\t *\n\t * @private\n\t * @param {Object} [object] The object to query.\n\t * @param {Array|string} key The key to check.\n\t * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t */\n\tfunction baseHas(object, key) {\n\t  return object != null && hasOwnProperty.call(object, key);\n\t}\n\t\n\tmodule.exports = baseHas;\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.hasIn` without support for deep paths.\n\t *\n\t * @private\n\t * @param {Object} [object] The object to query.\n\t * @param {Array|string} key The key to check.\n\t * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t */\n\tfunction baseHasIn(object, key) {\n\t  return object != null && key in Object(object);\n\t}\n\t\n\tmodule.exports = baseHasIn;\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseForOwn = __webpack_require__(17);\n\t\n\t/**\n\t * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t * `object` with values transformed by `iteratee` and set by `setter`.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} setter The function to set `accumulator` values.\n\t * @param {Function} iteratee The iteratee to transform values.\n\t * @param {Object} accumulator The initial inverted object.\n\t * @returns {Function} Returns `accumulator`.\n\t */\n\tfunction baseInverter(object, setter, iteratee, accumulator) {\n\t  baseForOwn(object, function(value, key, object) {\n\t    setter(accumulator, iteratee(value), key, object);\n\t  });\n\t  return accumulator;\n\t}\n\t\n\tmodule.exports = baseInverter;\n\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar apply = __webpack_require__(31),\n\t    castPath = __webpack_require__(10),\n\t    last = __webpack_require__(107),\n\t    parent = __webpack_require__(100),\n\t    toKey = __webpack_require__(11);\n\t\n\t/**\n\t * The base implementation of `_.invoke` without support for individual\n\t * method arguments.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Array|string} path The path of the method to invoke.\n\t * @param {Array} args The arguments to invoke the method with.\n\t * @returns {*} Returns the result of the invoked method.\n\t */\n\tfunction baseInvoke(object, path, args) {\n\t  path = castPath(path, object);\n\t  object = parent(object, path);\n\t  var func = object == null ? object : object[toKey(last(path))];\n\t  return func == null ? undefined : apply(func, object, args);\n\t}\n\t\n\tmodule.exports = baseInvoke;\n\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGetTag = __webpack_require__(18),\n\t    isObjectLike = __webpack_require__(14);\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]';\n\t\n\t/**\n\t * The base implementation of `_.isArguments`.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t */\n\tfunction baseIsArguments(value) {\n\t  return isObjectLike(value) && baseGetTag(value) == argsTag;\n\t}\n\t\n\tmodule.exports = baseIsArguments;\n\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Stack = __webpack_require__(30),\n\t    equalArrays = __webpack_require__(90),\n\t    equalByTag = __webpack_require__(199),\n\t    equalObjects = __webpack_require__(200),\n\t    getTag = __webpack_require__(55),\n\t    isArray = __webpack_require__(2),\n\t    isBuffer = __webpack_require__(28),\n\t    isTypedArray = __webpack_require__(42);\n\t\n\t/** Used to compose bitmasks for value comparisons. */\n\tvar COMPARE_PARTIAL_FLAG = 1;\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    arrayTag = '[object Array]',\n\t    objectTag = '[object Object]';\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t * deep comparisons and tracks traversed objects enabling objects with circular\n\t * references to be compared.\n\t *\n\t * @private\n\t * @param {Object} object The object to compare.\n\t * @param {Object} other The other object to compare.\n\t * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t * @param {Function} customizer The function to customize comparisons.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t */\n\tfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n\t  var objIsArr = isArray(object),\n\t      othIsArr = isArray(other),\n\t      objTag = objIsArr ? arrayTag : getTag(object),\n\t      othTag = othIsArr ? arrayTag : getTag(other);\n\t\n\t  objTag = objTag == argsTag ? objectTag : objTag;\n\t  othTag = othTag == argsTag ? objectTag : othTag;\n\t\n\t  var objIsObj = objTag == objectTag,\n\t      othIsObj = othTag == objectTag,\n\t      isSameTag = objTag == othTag;\n\t\n\t  if (isSameTag && isBuffer(object)) {\n\t    if (!isBuffer(other)) {\n\t      return false;\n\t    }\n\t    objIsArr = true;\n\t    objIsObj = false;\n\t  }\n\t  if (isSameTag && !objIsObj) {\n\t    stack || (stack = new Stack);\n\t    return (objIsArr || isTypedArray(object))\n\t      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n\t      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n\t  }\n\t  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n\t    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t    if (objIsWrapped || othIsWrapped) {\n\t      var objUnwrapped = objIsWrapped ? object.value() : object,\n\t          othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t      stack || (stack = new Stack);\n\t      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n\t    }\n\t  }\n\t  if (!isSameTag) {\n\t    return false;\n\t  }\n\t  stack || (stack = new Stack);\n\t  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n\t}\n\t\n\tmodule.exports = baseIsEqualDeep;\n\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Stack = __webpack_require__(30),\n\t    baseIsEqual = __webpack_require__(78);\n\t\n\t/** Used to compose bitmasks for value comparisons. */\n\tvar COMPARE_PARTIAL_FLAG = 1,\n\t    COMPARE_UNORDERED_FLAG = 2;\n\t\n\t/**\n\t * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Object} object The object to inspect.\n\t * @param {Object} source The object of property values to match.\n\t * @param {Array} matchData The property names, values, and compare flags to match.\n\t * @param {Function} [customizer] The function to customize comparisons.\n\t * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t */\n\tfunction baseIsMatch(object, source, matchData, customizer) {\n\t  var index = matchData.length,\n\t      length = index,\n\t      noCustomizer = !customizer;\n\t\n\t  if (object == null) {\n\t    return !length;\n\t  }\n\t  object = Object(object);\n\t  while (index--) {\n\t    var data = matchData[index];\n\t    if ((noCustomizer && data[2])\n\t          ? data[1] !== object[data[0]]\n\t          : !(data[0] in object)\n\t        ) {\n\t      return false;\n\t    }\n\t  }\n\t  while (++index < length) {\n\t    data = matchData[index];\n\t    var key = data[0],\n\t        objValue = object[key],\n\t        srcValue = data[1];\n\t\n\t    if (noCustomizer && data[2]) {\n\t      if (objValue === undefined && !(key in object)) {\n\t        return false;\n\t      }\n\t    } else {\n\t      var stack = new Stack;\n\t      if (customizer) {\n\t        var result = customizer(objValue, srcValue, key, object, source, stack);\n\t      }\n\t      if (!(result === undefined\n\t            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n\t            : result\n\t          )) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tmodule.exports = baseIsMatch;\n\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isFunction = __webpack_require__(22),\n\t    isMasked = __webpack_require__(214),\n\t    isObject = __webpack_require__(3),\n\t    toSource = __webpack_require__(103);\n\t\n\t/**\n\t * Used to match `RegExp`\n\t * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n\t */\n\tvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\t\n\t/** Used to detect host constructors (Safari). */\n\tvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t/** Used for built-in method references. */\n\tvar funcProto = Function.prototype,\n\t    objectProto = Object.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar funcToString = funcProto.toString;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Used to detect if a method is native. */\n\tvar reIsNative = RegExp('^' +\n\t  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t);\n\t\n\t/**\n\t * The base implementation of `_.isNative` without bad shim checks.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a native function,\n\t *  else `false`.\n\t */\n\tfunction baseIsNative(value) {\n\t  if (!isObject(value) || isMasked(value)) {\n\t    return false;\n\t  }\n\t  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n\t  return pattern.test(toSource(value));\n\t}\n\t\n\tmodule.exports = baseIsNative;\n\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGetTag = __webpack_require__(18),\n\t    isLength = __webpack_require__(61),\n\t    isObjectLike = __webpack_require__(14);\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    arrayTag = '[object Array]',\n\t    boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    errorTag = '[object Error]',\n\t    funcTag = '[object Function]',\n\t    mapTag = '[object Map]',\n\t    numberTag = '[object Number]',\n\t    objectTag = '[object Object]',\n\t    regexpTag = '[object RegExp]',\n\t    setTag = '[object Set]',\n\t    stringTag = '[object String]',\n\t    weakMapTag = '[object WeakMap]';\n\t\n\tvar arrayBufferTag = '[object ArrayBuffer]',\n\t    dataViewTag = '[object DataView]',\n\t    float32Tag = '[object Float32Array]',\n\t    float64Tag = '[object Float64Array]',\n\t    int8Tag = '[object Int8Array]',\n\t    int16Tag = '[object Int16Array]',\n\t    int32Tag = '[object Int32Array]',\n\t    uint8Tag = '[object Uint8Array]',\n\t    uint8ClampedTag = '[object Uint8ClampedArray]',\n\t    uint16Tag = '[object Uint16Array]',\n\t    uint32Tag = '[object Uint32Array]';\n\t\n\t/** Used to identify `toStringTag` values of typed arrays. */\n\tvar typedArrayTags = {};\n\ttypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\ttypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\ttypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\ttypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\ttypedArrayTags[uint32Tag] = true;\n\ttypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\ttypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\ttypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\ttypedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\ttypedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\ttypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\ttypedArrayTags[setTag] = typedArrayTags[stringTag] =\n\ttypedArrayTags[weakMapTag] = false;\n\t\n\t/**\n\t * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t */\n\tfunction baseIsTypedArray(value) {\n\t  return isObjectLike(value) &&\n\t    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n\t}\n\t\n\tmodule.exports = baseIsTypedArray;\n\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isPrototype = __webpack_require__(39),\n\t    nativeKeys = __webpack_require__(226);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction baseKeys(object) {\n\t  if (!isPrototype(object)) {\n\t    return nativeKeys(object);\n\t  }\n\t  var result = [];\n\t  for (var key in Object(object)) {\n\t    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseKeys;\n\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(3),\n\t    isPrototype = __webpack_require__(39),\n\t    nativeKeysIn = __webpack_require__(227);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction baseKeysIn(object) {\n\t  if (!isObject(object)) {\n\t    return nativeKeysIn(object);\n\t  }\n\t  var isProto = isPrototype(object),\n\t      result = [];\n\t\n\t  for (var key in object) {\n\t    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseKeysIn;\n\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseIsMatch = __webpack_require__(170),\n\t    getMatchData = __webpack_require__(201),\n\t    matchesStrictComparable = __webpack_require__(97);\n\t\n\t/**\n\t * The base implementation of `_.matches` which doesn't clone `source`.\n\t *\n\t * @private\n\t * @param {Object} source The object of property values to match.\n\t * @returns {Function} Returns the new spec function.\n\t */\n\tfunction baseMatches(source) {\n\t  var matchData = getMatchData(source);\n\t  if (matchData.length == 1 && matchData[0][2]) {\n\t    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t  }\n\t  return function(object) {\n\t    return object === source || baseIsMatch(object, source, matchData);\n\t  };\n\t}\n\t\n\tmodule.exports = baseMatches;\n\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseIsEqual = __webpack_require__(78),\n\t    get = __webpack_require__(59),\n\t    hasIn = __webpack_require__(60),\n\t    isKey = __webpack_require__(56),\n\t    isStrictComparable = __webpack_require__(96),\n\t    matchesStrictComparable = __webpack_require__(97),\n\t    toKey = __webpack_require__(11);\n\t\n\t/** Used to compose bitmasks for value comparisons. */\n\tvar COMPARE_PARTIAL_FLAG = 1,\n\t    COMPARE_UNORDERED_FLAG = 2;\n\t\n\t/**\n\t * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t *\n\t * @private\n\t * @param {string} path The path of the property to get.\n\t * @param {*} srcValue The value to match.\n\t * @returns {Function} Returns the new spec function.\n\t */\n\tfunction baseMatchesProperty(path, srcValue) {\n\t  if (isKey(path) && isStrictComparable(srcValue)) {\n\t    return matchesStrictComparable(toKey(path), srcValue);\n\t  }\n\t  return function(object) {\n\t    var objValue = get(object, path);\n\t    return (objValue === undefined && objValue === srcValue)\n\t      ? hasIn(object, path)\n\t      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n\t  };\n\t}\n\t\n\tmodule.exports = baseMatchesProperty;\n\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar assignMergeValue = __webpack_require__(71),\n\t    cloneBuffer = __webpack_require__(83),\n\t    cloneTypedArray = __webpack_require__(84),\n\t    copyArray = __webpack_require__(85),\n\t    initCloneObject = __webpack_require__(95),\n\t    isArguments = __webpack_require__(41),\n\t    isArray = __webpack_require__(2),\n\t    isArrayLikeObject = __webpack_require__(263),\n\t    isBuffer = __webpack_require__(28),\n\t    isFunction = __webpack_require__(22),\n\t    isObject = __webpack_require__(3),\n\t    isPlainObject = __webpack_require__(106),\n\t    isTypedArray = __webpack_require__(42),\n\t    toPlainObject = __webpack_require__(278);\n\t\n\t/**\n\t * A specialized version of `baseMerge` for arrays and objects which performs\n\t * deep merges and tracks traversed objects enabling objects with circular\n\t * references to be merged.\n\t *\n\t * @private\n\t * @param {Object} object The destination object.\n\t * @param {Object} source The source object.\n\t * @param {string} key The key of the value to merge.\n\t * @param {number} srcIndex The index of `source`.\n\t * @param {Function} mergeFunc The function to merge values.\n\t * @param {Function} [customizer] The function to customize assigned values.\n\t * @param {Object} [stack] Tracks traversed source values and their merged\n\t *  counterparts.\n\t */\n\tfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t  var objValue = object[key],\n\t      srcValue = source[key],\n\t      stacked = stack.get(srcValue);\n\t\n\t  if (stacked) {\n\t    assignMergeValue(object, key, stacked);\n\t    return;\n\t  }\n\t  var newValue = customizer\n\t    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t    : undefined;\n\t\n\t  var isCommon = newValue === undefined;\n\t\n\t  if (isCommon) {\n\t    var isArr = isArray(srcValue),\n\t        isBuff = !isArr && isBuffer(srcValue),\n\t        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\t\n\t    newValue = srcValue;\n\t    if (isArr || isBuff || isTyped) {\n\t      if (isArray(objValue)) {\n\t        newValue = objValue;\n\t      }\n\t      else if (isArrayLikeObject(objValue)) {\n\t        newValue = copyArray(objValue);\n\t      }\n\t      else if (isBuff) {\n\t        isCommon = false;\n\t        newValue = cloneBuffer(srcValue, true);\n\t      }\n\t      else if (isTyped) {\n\t        isCommon = false;\n\t        newValue = cloneTypedArray(srcValue, true);\n\t      }\n\t      else {\n\t        newValue = [];\n\t      }\n\t    }\n\t    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t      newValue = objValue;\n\t      if (isArguments(objValue)) {\n\t        newValue = toPlainObject(objValue);\n\t      }\n\t      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t        newValue = initCloneObject(srcValue);\n\t      }\n\t    }\n\t    else {\n\t      isCommon = false;\n\t    }\n\t  }\n\t  if (isCommon) {\n\t    // Recursively merge objects and arrays (susceptible to call stack limits).\n\t    stack.set(srcValue, newValue);\n\t    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t    stack['delete'](srcValue);\n\t  }\n\t  assignMergeValue(object, key, newValue);\n\t}\n\t\n\tmodule.exports = baseMergeDeep;\n\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar basePickBy = __webpack_require__(79),\n\t    hasIn = __webpack_require__(60);\n\t\n\t/**\n\t * The base implementation of `_.pick` without support for individual\n\t * property identifiers.\n\t *\n\t * @private\n\t * @param {Object} object The source object.\n\t * @param {string[]} paths The property paths to pick.\n\t * @returns {Object} Returns the new object.\n\t */\n\tfunction basePick(object, paths) {\n\t  return basePickBy(object, paths, function(value, path) {\n\t    return hasIn(object, path);\n\t  });\n\t}\n\t\n\tmodule.exports = basePick;\n\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.property` without support for deep paths.\n\t *\n\t * @private\n\t * @param {string} key The key of the property to get.\n\t * @returns {Function} Returns the new accessor function.\n\t */\n\tfunction baseProperty(key) {\n\t  return function(object) {\n\t    return object == null ? undefined : object[key];\n\t  };\n\t}\n\t\n\tmodule.exports = baseProperty;\n\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGet = __webpack_require__(25);\n\t\n\t/**\n\t * A specialized version of `baseProperty` which supports deep paths.\n\t *\n\t * @private\n\t * @param {Array|string} path The path of the property to get.\n\t * @returns {Function} Returns the new accessor function.\n\t */\n\tfunction basePropertyDeep(path) {\n\t  return function(object) {\n\t    return baseGet(object, path);\n\t  };\n\t}\n\t\n\tmodule.exports = basePropertyDeep;\n\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar constant = __webpack_require__(105),\n\t    defineProperty = __webpack_require__(89),\n\t    identity = __webpack_require__(26);\n\t\n\t/**\n\t * The base implementation of `setToString` without support for hot loop shorting.\n\t *\n\t * @private\n\t * @param {Function} func The function to modify.\n\t * @param {Function} string The `toString` result.\n\t * @returns {Function} Returns `func`.\n\t */\n\tvar baseSetToString = !defineProperty ? identity : function(func, string) {\n\t  return defineProperty(func, 'toString', {\n\t    'configurable': true,\n\t    'enumerable': false,\n\t    'value': constant(string),\n\t    'writable': true\n\t  });\n\t};\n\t\n\tmodule.exports = baseSetToString;\n\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.slice` without an iteratee call guard.\n\t *\n\t * @private\n\t * @param {Array} array The array to slice.\n\t * @param {number} [start=0] The start position.\n\t * @param {number} [end=array.length] The end position.\n\t * @returns {Array} Returns the slice of `array`.\n\t */\n\tfunction baseSlice(array, start, end) {\n\t  var index = -1,\n\t      length = array.length;\n\t\n\t  if (start < 0) {\n\t    start = -start > length ? 0 : (length + start);\n\t  }\n\t  end = end > length ? length : end;\n\t  if (end < 0) {\n\t    end += length;\n\t  }\n\t  length = start > end ? 0 : ((end - start) >>> 0);\n\t  start >>>= 0;\n\t\n\t  var result = Array(length);\n\t  while (++index < length) {\n\t    result[index] = array[index + start];\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseSlice;\n\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.times` without support for iteratee shorthands\n\t * or max array length checks.\n\t *\n\t * @private\n\t * @param {number} n The number of times to invoke `iteratee`.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns the array of results.\n\t */\n\tfunction baseTimes(n, iteratee) {\n\t  var index = -1,\n\t      result = Array(n);\n\t\n\t  while (++index < n) {\n\t    result[index] = iteratee(index);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseTimes;\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayMap = __webpack_require__(23);\n\t\n\t/**\n\t * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t * of key-value pairs for `object` corresponding to the property names of `props`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Array} props The property names to get values for.\n\t * @returns {Object} Returns the key-value pairs.\n\t */\n\tfunction baseToPairs(object, props) {\n\t  return arrayMap(props, function(key) {\n\t    return [key, object[key]];\n\t  });\n\t}\n\t\n\tmodule.exports = baseToPairs;\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(16),\n\t    arrayMap = __webpack_require__(23),\n\t    isArray = __webpack_require__(2),\n\t    isSymbol = __webpack_require__(62);\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar INFINITY = 1 / 0;\n\t\n\t/** Used to convert symbols to primitives and strings. */\n\tvar symbolProto = Symbol ? Symbol.prototype : undefined,\n\t    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t/**\n\t * The base implementation of `_.toString` which doesn't convert nullish\n\t * values to empty strings.\n\t *\n\t * @private\n\t * @param {*} value The value to process.\n\t * @returns {string} Returns the string.\n\t */\n\tfunction baseToString(value) {\n\t  // Exit early for strings to avoid a performance hit in some environments.\n\t  if (typeof value == 'string') {\n\t    return value;\n\t  }\n\t  if (isArray(value)) {\n\t    // Recursively convert values (susceptible to call stack limits).\n\t    return arrayMap(value, baseToString) + '';\n\t  }\n\t  if (isSymbol(value)) {\n\t    return symbolToString ? symbolToString.call(value) : '';\n\t  }\n\t  var result = (value + '');\n\t  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t}\n\t\n\tmodule.exports = baseToString;\n\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.unary` without support for storing metadata.\n\t *\n\t * @private\n\t * @param {Function} func The function to cap arguments for.\n\t * @returns {Function} Returns the new capped function.\n\t */\n\tfunction baseUnary(func) {\n\t  return function(value) {\n\t    return func(value);\n\t  };\n\t}\n\t\n\tmodule.exports = baseUnary;\n\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Checks if a `cache` value for `key` exists.\n\t *\n\t * @private\n\t * @param {Object} cache The cache to query.\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t */\n\tfunction cacheHas(cache, key) {\n\t  return cache.has(key);\n\t}\n\t\n\tmodule.exports = cacheHas;\n\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar cloneArrayBuffer = __webpack_require__(51);\n\t\n\t/**\n\t * Creates a clone of `dataView`.\n\t *\n\t * @private\n\t * @param {Object} dataView The data view to clone.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Object} Returns the cloned data view.\n\t */\n\tfunction cloneDataView(dataView, isDeep) {\n\t  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t}\n\t\n\tmodule.exports = cloneDataView;\n\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar addMapEntry = __webpack_require__(157),\n\t    arrayReduce = __webpack_require__(70),\n\t    mapToArray = __webpack_require__(57);\n\t\n\t/** Used to compose bitmasks for cloning. */\n\tvar CLONE_DEEP_FLAG = 1;\n\t\n\t/**\n\t * Creates a clone of `map`.\n\t *\n\t * @private\n\t * @param {Object} map The map to clone.\n\t * @param {Function} cloneFunc The function to clone values.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Object} Returns the cloned map.\n\t */\n\tfunction cloneMap(map, isDeep, cloneFunc) {\n\t  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n\t  return arrayReduce(array, addMapEntry, new map.constructor);\n\t}\n\t\n\tmodule.exports = cloneMap;\n\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports) {\n\n\t/** Used to match `RegExp` flags from their coerced string values. */\n\tvar reFlags = /\\w*$/;\n\t\n\t/**\n\t * Creates a clone of `regexp`.\n\t *\n\t * @private\n\t * @param {Object} regexp The regexp to clone.\n\t * @returns {Object} Returns the cloned regexp.\n\t */\n\tfunction cloneRegExp(regexp) {\n\t  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t  result.lastIndex = regexp.lastIndex;\n\t  return result;\n\t}\n\t\n\tmodule.exports = cloneRegExp;\n\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar addSetEntry = __webpack_require__(158),\n\t    arrayReduce = __webpack_require__(70),\n\t    setToArray = __webpack_require__(101);\n\t\n\t/** Used to compose bitmasks for cloning. */\n\tvar CLONE_DEEP_FLAG = 1;\n\t\n\t/**\n\t * Creates a clone of `set`.\n\t *\n\t * @private\n\t * @param {Object} set The set to clone.\n\t * @param {Function} cloneFunc The function to clone values.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Object} Returns the cloned set.\n\t */\n\tfunction cloneSet(set, isDeep, cloneFunc) {\n\t  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n\t  return arrayReduce(array, addSetEntry, new set.constructor);\n\t}\n\t\n\tmodule.exports = cloneSet;\n\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(16);\n\t\n\t/** Used to convert symbols to primitives and strings. */\n\tvar symbolProto = Symbol ? Symbol.prototype : undefined,\n\t    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\t\n\t/**\n\t * Creates a clone of the `symbol` object.\n\t *\n\t * @private\n\t * @param {Object} symbol The symbol object to clone.\n\t * @returns {Object} Returns the cloned symbol object.\n\t */\n\tfunction cloneSymbol(symbol) {\n\t  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t}\n\t\n\tmodule.exports = cloneSymbol;\n\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(6),\n\t    getSymbols = __webpack_require__(54);\n\t\n\t/**\n\t * Copies own symbols of `source` to `object`.\n\t *\n\t * @private\n\t * @param {Object} source The object to copy symbols from.\n\t * @param {Object} [object={}] The object to copy symbols to.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction copySymbols(source, object) {\n\t  return copyObject(source, getSymbols(source), object);\n\t}\n\t\n\tmodule.exports = copySymbols;\n\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(6),\n\t    getSymbolsIn = __webpack_require__(93);\n\t\n\t/**\n\t * Copies own and inherited symbols of `source` to `object`.\n\t *\n\t * @private\n\t * @param {Object} source The object to copy symbols from.\n\t * @param {Object} [object={}] The object to copy symbols to.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction copySymbolsIn(source, object) {\n\t  return copyObject(source, getSymbolsIn(source), object);\n\t}\n\t\n\tmodule.exports = copySymbolsIn;\n\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar root = __webpack_require__(7);\n\t\n\t/** Used to detect overreaching core-js shims. */\n\tvar coreJsData = root['__core-js_shared__'];\n\t\n\tmodule.exports = coreJsData;\n\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar eq = __webpack_require__(21);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n\t * of source objects to the destination object for all destination properties\n\t * that resolve to `undefined`.\n\t *\n\t * @private\n\t * @param {*} objValue The destination value.\n\t * @param {*} srcValue The source value.\n\t * @param {string} key The key of the property to assign.\n\t * @param {Object} object The parent object of `objValue`.\n\t * @returns {*} Returns the value to assign.\n\t */\n\tfunction customDefaultsAssignIn(objValue, srcValue, key, object) {\n\t  if (objValue === undefined ||\n\t      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t    return srcValue;\n\t  }\n\t  return objValue;\n\t}\n\t\n\tmodule.exports = customDefaultsAssignIn;\n\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseMerge = __webpack_require__(50),\n\t    isObject = __webpack_require__(3);\n\t\n\t/**\n\t * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n\t * objects into destination objects that are passed thru.\n\t *\n\t * @private\n\t * @param {*} objValue The destination value.\n\t * @param {*} srcValue The source value.\n\t * @param {string} key The key of the property to merge.\n\t * @param {Object} object The parent object of `objValue`.\n\t * @param {Object} source The parent object of `srcValue`.\n\t * @param {Object} [stack] Tracks traversed source values and their merged\n\t *  counterparts.\n\t * @returns {*} Returns the value to assign.\n\t */\n\tfunction customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n\t  if (isObject(objValue) && isObject(srcValue)) {\n\t    // Recursively merge objects and arrays (susceptible to call stack limits).\n\t    stack.set(srcValue, objValue);\n\t    baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n\t    stack['delete'](srcValue);\n\t  }\n\t  return objValue;\n\t}\n\t\n\tmodule.exports = customDefaultsMerge;\n\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isPlainObject = __webpack_require__(106);\n\t\n\t/**\n\t * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n\t * objects.\n\t *\n\t * @private\n\t * @param {*} value The value to inspect.\n\t * @param {string} key The key of the property to inspect.\n\t * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n\t */\n\tfunction customOmitClone(value) {\n\t  return isPlainObject(value) ? undefined : value;\n\t}\n\t\n\tmodule.exports = customOmitClone;\n\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(16),\n\t    Uint8Array = __webpack_require__(66),\n\t    eq = __webpack_require__(21),\n\t    equalArrays = __webpack_require__(90),\n\t    mapToArray = __webpack_require__(57),\n\t    setToArray = __webpack_require__(101);\n\t\n\t/** Used to compose bitmasks for value comparisons. */\n\tvar COMPARE_PARTIAL_FLAG = 1,\n\t    COMPARE_UNORDERED_FLAG = 2;\n\t\n\t/** `Object#toString` result references. */\n\tvar boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    errorTag = '[object Error]',\n\t    mapTag = '[object Map]',\n\t    numberTag = '[object Number]',\n\t    regexpTag = '[object RegExp]',\n\t    setTag = '[object Set]',\n\t    stringTag = '[object String]',\n\t    symbolTag = '[object Symbol]';\n\t\n\tvar arrayBufferTag = '[object ArrayBuffer]',\n\t    dataViewTag = '[object DataView]';\n\t\n\t/** Used to convert symbols to primitives and strings. */\n\tvar symbolProto = Symbol ? Symbol.prototype : undefined,\n\t    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\t\n\t/**\n\t * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t * the same `toStringTag`.\n\t *\n\t * **Note:** This function only supports comparing values with tags of\n\t * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t *\n\t * @private\n\t * @param {Object} object The object to compare.\n\t * @param {Object} other The other object to compare.\n\t * @param {string} tag The `toStringTag` of the objects to compare.\n\t * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t * @param {Function} customizer The function to customize comparisons.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t */\n\tfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n\t  switch (tag) {\n\t    case dataViewTag:\n\t      if ((object.byteLength != other.byteLength) ||\n\t          (object.byteOffset != other.byteOffset)) {\n\t        return false;\n\t      }\n\t      object = object.buffer;\n\t      other = other.buffer;\n\t\n\t    case arrayBufferTag:\n\t      if ((object.byteLength != other.byteLength) ||\n\t          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t        return false;\n\t      }\n\t      return true;\n\t\n\t    case boolTag:\n\t    case dateTag:\n\t    case numberTag:\n\t      // Coerce booleans to `1` or `0` and dates to milliseconds.\n\t      // Invalid dates are coerced to `NaN`.\n\t      return eq(+object, +other);\n\t\n\t    case errorTag:\n\t      return object.name == other.name && object.message == other.message;\n\t\n\t    case regexpTag:\n\t    case stringTag:\n\t      // Coerce regexes to strings and treat strings, primitives and objects,\n\t      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n\t      // for more details.\n\t      return object == (other + '');\n\t\n\t    case mapTag:\n\t      var convert = mapToArray;\n\t\n\t    case setTag:\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n\t      convert || (convert = setToArray);\n\t\n\t      if (object.size != other.size && !isPartial) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      bitmask |= COMPARE_UNORDERED_FLAG;\n\t\n\t      // Recursively compare objects (susceptible to call stack limits).\n\t      stack.set(object, other);\n\t      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n\t      stack['delete'](object);\n\t      return result;\n\t\n\t    case symbolTag:\n\t      if (symbolValueOf) {\n\t        return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t      }\n\t  }\n\t  return false;\n\t}\n\t\n\tmodule.exports = equalByTag;\n\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getAllKeys = __webpack_require__(92);\n\t\n\t/** Used to compose bitmasks for value comparisons. */\n\tvar COMPARE_PARTIAL_FLAG = 1;\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * A specialized version of `baseIsEqualDeep` for objects with support for\n\t * partial deep comparisons.\n\t *\n\t * @private\n\t * @param {Object} object The object to compare.\n\t * @param {Object} other The other object to compare.\n\t * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t * @param {Function} customizer The function to customize comparisons.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t */\n\tfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n\t  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t      objProps = getAllKeys(object),\n\t      objLength = objProps.length,\n\t      othProps = getAllKeys(other),\n\t      othLength = othProps.length;\n\t\n\t  if (objLength != othLength && !isPartial) {\n\t    return false;\n\t  }\n\t  var index = objLength;\n\t  while (index--) {\n\t    var key = objProps[index];\n\t    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n\t      return false;\n\t    }\n\t  }\n\t  // Assume cyclic values are equal.\n\t  var stacked = stack.get(object);\n\t  if (stacked && stack.get(other)) {\n\t    return stacked == other;\n\t  }\n\t  var result = true;\n\t  stack.set(object, other);\n\t  stack.set(other, object);\n\t\n\t  var skipCtor = isPartial;\n\t  while (++index < objLength) {\n\t    key = objProps[index];\n\t    var objValue = object[key],\n\t        othValue = other[key];\n\t\n\t    if (customizer) {\n\t      var compared = isPartial\n\t        ? customizer(othValue, objValue, key, other, object, stack)\n\t        : customizer(objValue, othValue, key, object, other, stack);\n\t    }\n\t    // Recursively compare objects (susceptible to call stack limits).\n\t    if (!(compared === undefined\n\t          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n\t          : compared\n\t        )) {\n\t      result = false;\n\t      break;\n\t    }\n\t    skipCtor || (skipCtor = key == 'constructor');\n\t  }\n\t  if (result && !skipCtor) {\n\t    var objCtor = object.constructor,\n\t        othCtor = other.constructor;\n\t\n\t    // Non `Object` object instances with different constructors are not equal.\n\t    if (objCtor != othCtor &&\n\t        ('constructor' in object && 'constructor' in other) &&\n\t        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t      result = false;\n\t    }\n\t  }\n\t  stack['delete'](object);\n\t  stack['delete'](other);\n\t  return result;\n\t}\n\t\n\tmodule.exports = equalObjects;\n\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isStrictComparable = __webpack_require__(96),\n\t    keys = __webpack_require__(4);\n\t\n\t/**\n\t * Gets the property names, values, and compare flags of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the match data of `object`.\n\t */\n\tfunction getMatchData(object) {\n\t  var result = keys(object),\n\t      length = result.length;\n\t\n\t  while (length--) {\n\t    var key = result[length],\n\t        value = object[key];\n\t\n\t    result[length] = [key, value, isStrictComparable(value)];\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = getMatchData;\n\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(16);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar nativeObjectToString = objectProto.toString;\n\t\n\t/** Built-in value references. */\n\tvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t/**\n\t * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the raw `toStringTag`.\n\t */\n\tfunction getRawTag(value) {\n\t  var isOwn = hasOwnProperty.call(value, symToStringTag),\n\t      tag = value[symToStringTag];\n\t\n\t  try {\n\t    value[symToStringTag] = undefined;\n\t    var unmasked = true;\n\t  } catch (e) {}\n\t\n\t  var result = nativeObjectToString.call(value);\n\t  if (unmasked) {\n\t    if (isOwn) {\n\t      value[symToStringTag] = tag;\n\t    } else {\n\t      delete value[symToStringTag];\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = getRawTag;\n\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Gets the value at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} [object] The object to query.\n\t * @param {string} key The key of the property to get.\n\t * @returns {*} Returns the property value.\n\t */\n\tfunction getValue(object, key) {\n\t  return object == null ? undefined : object[key];\n\t}\n\t\n\tmodule.exports = getValue;\n\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar nativeCreate = __webpack_require__(40);\n\t\n\t/**\n\t * Removes all key-value entries from the hash.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf Hash\n\t */\n\tfunction hashClear() {\n\t  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t  this.size = 0;\n\t}\n\t\n\tmodule.exports = hashClear;\n\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Removes `key` and its value from the hash.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf Hash\n\t * @param {Object} hash The hash to modify.\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t */\n\tfunction hashDelete(key) {\n\t  var result = this.has(key) && delete this.__data__[key];\n\t  this.size -= result ? 1 : 0;\n\t  return result;\n\t}\n\t\n\tmodule.exports = hashDelete;\n\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar nativeCreate = __webpack_require__(40);\n\t\n\t/** Used to stand-in for `undefined` hash values. */\n\tvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Gets the hash value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf Hash\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.\n\t */\n\tfunction hashGet(key) {\n\t  var data = this.__data__;\n\t  if (nativeCreate) {\n\t    var result = data[key];\n\t    return result === HASH_UNDEFINED ? undefined : result;\n\t  }\n\t  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t}\n\t\n\tmodule.exports = hashGet;\n\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar nativeCreate = __webpack_require__(40);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Checks if a hash value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf Hash\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t */\n\tfunction hashHas(key) {\n\t  var data = this.__data__;\n\t  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n\t}\n\t\n\tmodule.exports = hashHas;\n\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar nativeCreate = __webpack_require__(40);\n\t\n\t/** Used to stand-in for `undefined` hash values. */\n\tvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t/**\n\t * Sets the hash `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf Hash\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the hash instance.\n\t */\n\tfunction hashSet(key, value) {\n\t  var data = this.__data__;\n\t  this.size += this.has(key) ? 0 : 1;\n\t  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t  return this;\n\t}\n\t\n\tmodule.exports = hashSet;\n\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports) {\n\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Initializes an array clone.\n\t *\n\t * @private\n\t * @param {Array} array The array to clone.\n\t * @returns {Array} Returns the initialized clone.\n\t */\n\tfunction initCloneArray(array) {\n\t  var length = array.length,\n\t      result = array.constructor(length);\n\t\n\t  // Add properties assigned by `RegExp#exec`.\n\t  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t    result.index = array.index;\n\t    result.input = array.input;\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = initCloneArray;\n\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar cloneArrayBuffer = __webpack_require__(51),\n\t    cloneDataView = __webpack_require__(188),\n\t    cloneMap = __webpack_require__(189),\n\t    cloneRegExp = __webpack_require__(190),\n\t    cloneSet = __webpack_require__(191),\n\t    cloneSymbol = __webpack_require__(192),\n\t    cloneTypedArray = __webpack_require__(84);\n\t\n\t/** `Object#toString` result references. */\n\tvar boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    mapTag = '[object Map]',\n\t    numberTag = '[object Number]',\n\t    regexpTag = '[object RegExp]',\n\t    setTag = '[object Set]',\n\t    stringTag = '[object String]',\n\t    symbolTag = '[object Symbol]';\n\t\n\tvar arrayBufferTag = '[object ArrayBuffer]',\n\t    dataViewTag = '[object DataView]',\n\t    float32Tag = '[object Float32Array]',\n\t    float64Tag = '[object Float64Array]',\n\t    int8Tag = '[object Int8Array]',\n\t    int16Tag = '[object Int16Array]',\n\t    int32Tag = '[object Int32Array]',\n\t    uint8Tag = '[object Uint8Array]',\n\t    uint8ClampedTag = '[object Uint8ClampedArray]',\n\t    uint16Tag = '[object Uint16Array]',\n\t    uint32Tag = '[object Uint32Array]';\n\t\n\t/**\n\t * Initializes an object clone based on its `toStringTag`.\n\t *\n\t * **Note:** This function only supports cloning values with tags of\n\t * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t *\n\t * @private\n\t * @param {Object} object The object to clone.\n\t * @param {string} tag The `toStringTag` of the object to clone.\n\t * @param {Function} cloneFunc The function to clone values.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Object} Returns the initialized clone.\n\t */\n\tfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t  var Ctor = object.constructor;\n\t  switch (tag) {\n\t    case arrayBufferTag:\n\t      return cloneArrayBuffer(object);\n\t\n\t    case boolTag:\n\t    case dateTag:\n\t      return new Ctor(+object);\n\t\n\t    case dataViewTag:\n\t      return cloneDataView(object, isDeep);\n\t\n\t    case float32Tag: case float64Tag:\n\t    case int8Tag: case int16Tag: case int32Tag:\n\t    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t      return cloneTypedArray(object, isDeep);\n\t\n\t    case mapTag:\n\t      return cloneMap(object, isDeep, cloneFunc);\n\t\n\t    case numberTag:\n\t    case stringTag:\n\t      return new Ctor(object);\n\t\n\t    case regexpTag:\n\t      return cloneRegExp(object);\n\t\n\t    case setTag:\n\t      return cloneSet(object, isDeep, cloneFunc);\n\t\n\t    case symbolTag:\n\t      return cloneSymbol(object);\n\t  }\n\t}\n\t\n\tmodule.exports = initCloneByTag;\n\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(16),\n\t    isArguments = __webpack_require__(41),\n\t    isArray = __webpack_require__(2);\n\t\n\t/** Built-in value references. */\n\tvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\t\n\t/**\n\t * Checks if `value` is a flattenable `arguments` object or array.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t */\n\tfunction isFlattenable(value) {\n\t  return isArray(value) || isArguments(value) ||\n\t    !!(spreadableSymbol && value && value[spreadableSymbol]);\n\t}\n\t\n\tmodule.exports = isFlattenable;\n\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar eq = __webpack_require__(21),\n\t    isArrayLike = __webpack_require__(27),\n\t    isIndex = __webpack_require__(38),\n\t    isObject = __webpack_require__(3);\n\t\n\t/**\n\t * Checks if the given arguments are from an iteratee call.\n\t *\n\t * @private\n\t * @param {*} value The potential iteratee value argument.\n\t * @param {*} index The potential iteratee index or key argument.\n\t * @param {*} object The potential iteratee object argument.\n\t * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t *  else `false`.\n\t */\n\tfunction isIterateeCall(value, index, object) {\n\t  if (!isObject(object)) {\n\t    return false;\n\t  }\n\t  var type = typeof index;\n\t  if (type == 'number'\n\t        ? (isArrayLike(object) && isIndex(index, object.length))\n\t        : (type == 'string' && index in object)\n\t      ) {\n\t    return eq(object[index], value);\n\t  }\n\t  return false;\n\t}\n\t\n\tmodule.exports = isIterateeCall;\n\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Checks if `value` is suitable for use as unique object key.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t */\n\tfunction isKeyable(value) {\n\t  var type = typeof value;\n\t  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t    ? (value !== '__proto__')\n\t    : (value === null);\n\t}\n\t\n\tmodule.exports = isKeyable;\n\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar coreJsData = __webpack_require__(195);\n\t\n\t/** Used to detect methods masquerading as native. */\n\tvar maskSrcKey = (function() {\n\t  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t  return uid ? ('Symbol(src)_1.' + uid) : '';\n\t}());\n\t\n\t/**\n\t * Checks if `func` has its source masked.\n\t *\n\t * @private\n\t * @param {Function} func The function to check.\n\t * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t */\n\tfunction isMasked(func) {\n\t  return !!maskSrcKey && (maskSrcKey in func);\n\t}\n\t\n\tmodule.exports = isMasked;\n\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Removes all key-value entries from the list cache.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf ListCache\n\t */\n\tfunction listCacheClear() {\n\t  this.__data__ = [];\n\t  this.size = 0;\n\t}\n\t\n\tmodule.exports = listCacheClear;\n\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar assocIndexOf = __webpack_require__(33);\n\t\n\t/** Used for built-in method references. */\n\tvar arrayProto = Array.prototype;\n\t\n\t/** Built-in value references. */\n\tvar splice = arrayProto.splice;\n\t\n\t/**\n\t * Removes `key` and its value from the list cache.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf ListCache\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t */\n\tfunction listCacheDelete(key) {\n\t  var data = this.__data__,\n\t      index = assocIndexOf(data, key);\n\t\n\t  if (index < 0) {\n\t    return false;\n\t  }\n\t  var lastIndex = data.length - 1;\n\t  if (index == lastIndex) {\n\t    data.pop();\n\t  } else {\n\t    splice.call(data, index, 1);\n\t  }\n\t  --this.size;\n\t  return true;\n\t}\n\t\n\tmodule.exports = listCacheDelete;\n\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar assocIndexOf = __webpack_require__(33);\n\t\n\t/**\n\t * Gets the list cache value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf ListCache\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.\n\t */\n\tfunction listCacheGet(key) {\n\t  var data = this.__data__,\n\t      index = assocIndexOf(data, key);\n\t\n\t  return index < 0 ? undefined : data[index][1];\n\t}\n\t\n\tmodule.exports = listCacheGet;\n\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar assocIndexOf = __webpack_require__(33);\n\t\n\t/**\n\t * Checks if a list cache value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf ListCache\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t */\n\tfunction listCacheHas(key) {\n\t  return assocIndexOf(this.__data__, key) > -1;\n\t}\n\t\n\tmodule.exports = listCacheHas;\n\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar assocIndexOf = __webpack_require__(33);\n\t\n\t/**\n\t * Sets the list cache `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf ListCache\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the list cache instance.\n\t */\n\tfunction listCacheSet(key, value) {\n\t  var data = this.__data__,\n\t      index = assocIndexOf(data, key);\n\t\n\t  if (index < 0) {\n\t    ++this.size;\n\t    data.push([key, value]);\n\t  } else {\n\t    data[index][1] = value;\n\t  }\n\t  return this;\n\t}\n\t\n\tmodule.exports = listCacheSet;\n\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Hash = __webpack_require__(152),\n\t    ListCache = __webpack_require__(29),\n\t    Map = __webpack_require__(45);\n\t\n\t/**\n\t * Removes all key-value entries from the map.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf MapCache\n\t */\n\tfunction mapCacheClear() {\n\t  this.size = 0;\n\t  this.__data__ = {\n\t    'hash': new Hash,\n\t    'map': new (Map || ListCache),\n\t    'string': new Hash\n\t  };\n\t}\n\t\n\tmodule.exports = mapCacheClear;\n\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getMapData = __webpack_require__(36);\n\t\n\t/**\n\t * Removes `key` and its value from the map.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf MapCache\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t */\n\tfunction mapCacheDelete(key) {\n\t  var result = getMapData(this, key)['delete'](key);\n\t  this.size -= result ? 1 : 0;\n\t  return result;\n\t}\n\t\n\tmodule.exports = mapCacheDelete;\n\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getMapData = __webpack_require__(36);\n\t\n\t/**\n\t * Gets the map value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf MapCache\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.\n\t */\n\tfunction mapCacheGet(key) {\n\t  return getMapData(this, key).get(key);\n\t}\n\t\n\tmodule.exports = mapCacheGet;\n\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getMapData = __webpack_require__(36);\n\t\n\t/**\n\t * Checks if a map value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf MapCache\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t */\n\tfunction mapCacheHas(key) {\n\t  return getMapData(this, key).has(key);\n\t}\n\t\n\tmodule.exports = mapCacheHas;\n\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar getMapData = __webpack_require__(36);\n\t\n\t/**\n\t * Sets the map `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf MapCache\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the map cache instance.\n\t */\n\tfunction mapCacheSet(key, value) {\n\t  var data = getMapData(this, key),\n\t      size = data.size;\n\t\n\t  data.set(key, value);\n\t  this.size += data.size == size ? 0 : 1;\n\t  return this;\n\t}\n\t\n\tmodule.exports = mapCacheSet;\n\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar memoize = __webpack_require__(266);\n\t\n\t/** Used as the maximum memoize cache size. */\n\tvar MAX_MEMOIZE_SIZE = 500;\n\t\n\t/**\n\t * A specialized version of `_.memoize` which clears the memoized function's\n\t * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n\t *\n\t * @private\n\t * @param {Function} func The function to have its output memoized.\n\t * @returns {Function} Returns the new memoized function.\n\t */\n\tfunction memoizeCapped(func) {\n\t  var result = memoize(func, function(key) {\n\t    if (cache.size === MAX_MEMOIZE_SIZE) {\n\t      cache.clear();\n\t    }\n\t    return key;\n\t  });\n\t\n\t  var cache = result.cache;\n\t  return result;\n\t}\n\t\n\tmodule.exports = memoizeCapped;\n\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar overArg = __webpack_require__(98);\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeKeys = overArg(Object.keys, Object);\n\t\n\tmodule.exports = nativeKeys;\n\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * This function is like\n\t * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t * except that it includes inherited enumerable properties.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction nativeKeysIn(object) {\n\t  var result = [];\n\t  if (object != null) {\n\t    for (var key in Object(object)) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = nativeKeysIn;\n\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(91);\n\t\n\t/** Detect free variable `exports`. */\n\tvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t/** Detect free variable `module`. */\n\tvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t/** Detect the popular CommonJS extension `module.exports`. */\n\tvar moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t/** Detect free variable `process` from Node.js. */\n\tvar freeProcess = moduleExports && freeGlobal.process;\n\t\n\t/** Used to access faster Node.js helpers. */\n\tvar nodeUtil = (function() {\n\t  try {\n\t    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n\t  } catch (e) {}\n\t}());\n\t\n\tmodule.exports = nodeUtil;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(43)(module)))\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports) {\n\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar nativeObjectToString = objectProto.toString;\n\t\n\t/**\n\t * Converts `value` to a string using `Object.prototype.toString`.\n\t *\n\t * @private\n\t * @param {*} value The value to convert.\n\t * @returns {string} Returns the converted string.\n\t */\n\tfunction objectToString(value) {\n\t  return nativeObjectToString.call(value);\n\t}\n\t\n\tmodule.exports = objectToString;\n\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports) {\n\n\t/** Used to stand-in for `undefined` hash values. */\n\tvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t/**\n\t * Adds `value` to the array cache.\n\t *\n\t * @private\n\t * @name add\n\t * @memberOf SetCache\n\t * @alias push\n\t * @param {*} value The value to cache.\n\t * @returns {Object} Returns the cache instance.\n\t */\n\tfunction setCacheAdd(value) {\n\t  this.__data__.set(value, HASH_UNDEFINED);\n\t  return this;\n\t}\n\t\n\tmodule.exports = setCacheAdd;\n\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Checks if `value` is in the array cache.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf SetCache\n\t * @param {*} value The value to search for.\n\t * @returns {number} Returns `true` if `value` is found, else `false`.\n\t */\n\tfunction setCacheHas(value) {\n\t  return this.__data__.has(value);\n\t}\n\t\n\tmodule.exports = setCacheHas;\n\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Converts `set` to its value-value pairs.\n\t *\n\t * @private\n\t * @param {Object} set The set to convert.\n\t * @returns {Array} Returns the value-value pairs.\n\t */\n\tfunction setToPairs(set) {\n\t  var index = -1,\n\t      result = Array(set.size);\n\t\n\t  set.forEach(function(value) {\n\t    result[++index] = [value, value];\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = setToPairs;\n\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports) {\n\n\t/** Used to detect hot functions by number of calls within a span of milliseconds. */\n\tvar HOT_COUNT = 800,\n\t    HOT_SPAN = 16;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeNow = Date.now;\n\t\n\t/**\n\t * Creates a function that'll short out and invoke `identity` instead\n\t * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n\t * milliseconds.\n\t *\n\t * @private\n\t * @param {Function} func The function to restrict.\n\t * @returns {Function} Returns the new shortable function.\n\t */\n\tfunction shortOut(func) {\n\t  var count = 0,\n\t      lastCalled = 0;\n\t\n\t  return function() {\n\t    var stamp = nativeNow(),\n\t        remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t    lastCalled = stamp;\n\t    if (remaining > 0) {\n\t      if (++count >= HOT_COUNT) {\n\t        return arguments[0];\n\t      }\n\t    } else {\n\t      count = 0;\n\t    }\n\t    return func.apply(undefined, arguments);\n\t  };\n\t}\n\t\n\tmodule.exports = shortOut;\n\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar ListCache = __webpack_require__(29);\n\t\n\t/**\n\t * Removes all key-value entries from the stack.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf Stack\n\t */\n\tfunction stackClear() {\n\t  this.__data__ = new ListCache;\n\t  this.size = 0;\n\t}\n\t\n\tmodule.exports = stackClear;\n\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Removes `key` and its value from the stack.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf Stack\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t */\n\tfunction stackDelete(key) {\n\t  var data = this.__data__,\n\t      result = data['delete'](key);\n\t\n\t  this.size = data.size;\n\t  return result;\n\t}\n\t\n\tmodule.exports = stackDelete;\n\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Gets the stack value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf Stack\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.\n\t */\n\tfunction stackGet(key) {\n\t  return this.__data__.get(key);\n\t}\n\t\n\tmodule.exports = stackGet;\n\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Checks if a stack value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf Stack\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t */\n\tfunction stackHas(key) {\n\t  return this.__data__.has(key);\n\t}\n\t\n\tmodule.exports = stackHas;\n\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar ListCache = __webpack_require__(29),\n\t    Map = __webpack_require__(45),\n\t    MapCache = __webpack_require__(46);\n\t\n\t/** Used as the size to enable large array optimizations. */\n\tvar LARGE_ARRAY_SIZE = 200;\n\t\n\t/**\n\t * Sets the stack `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf Stack\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the stack cache instance.\n\t */\n\tfunction stackSet(key, value) {\n\t  var data = this.__data__;\n\t  if (data instanceof ListCache) {\n\t    var pairs = data.__data__;\n\t    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t      pairs.push([key, value]);\n\t      this.size = ++data.size;\n\t      return this;\n\t    }\n\t    data = this.__data__ = new MapCache(pairs);\n\t  }\n\t  data.set(key, value);\n\t  this.size = data.size;\n\t  return this;\n\t}\n\t\n\tmodule.exports = stackSet;\n\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar memoizeCapped = __webpack_require__(225);\n\t\n\t/** Used to match property names within property paths. */\n\tvar reLeadingDot = /^\\./,\n\t    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\t\n\t/** Used to match backslashes in property paths. */\n\tvar reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t/**\n\t * Converts `string` to a property path array.\n\t *\n\t * @private\n\t * @param {string} string The string to convert.\n\t * @returns {Array} Returns the property path array.\n\t */\n\tvar stringToPath = memoizeCapped(function(string) {\n\t  var result = [];\n\t  if (reLeadingDot.test(string)) {\n\t    result.push('');\n\t  }\n\t  string.replace(rePropName, function(match, number, quote, string) {\n\t    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t  });\n\t  return result;\n\t});\n\t\n\tmodule.exports = stringToPath;\n\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar assignValue = __webpack_require__(32),\n\t    copyObject = __webpack_require__(6),\n\t    createAssigner = __webpack_require__(20),\n\t    isArrayLike = __webpack_require__(27),\n\t    isPrototype = __webpack_require__(39),\n\t    keys = __webpack_require__(4);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Assigns own enumerable string keyed properties of source objects to the\n\t * destination object. Source objects are applied from left to right.\n\t * Subsequent sources overwrite property assignments of previous sources.\n\t *\n\t * **Note:** This method mutates `object` and is loosely based on\n\t * [`Object.assign`](https://mdn.io/Object/assign).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.10.0\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} [sources] The source objects.\n\t * @returns {Object} Returns `object`.\n\t * @see _.assignIn\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t * }\n\t *\n\t * function Bar() {\n\t *   this.c = 3;\n\t * }\n\t *\n\t * Foo.prototype.b = 2;\n\t * Bar.prototype.d = 4;\n\t *\n\t * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t * // => { 'a': 1, 'c': 3 }\n\t */\n\tvar assign = createAssigner(function(object, source) {\n\t  if (isPrototype(source) || isArrayLike(source)) {\n\t    copyObject(source, keys(source), object);\n\t    return;\n\t  }\n\t  for (var key in source) {\n\t    if (hasOwnProperty.call(source, key)) {\n\t      assignValue(object, key, source[key]);\n\t    }\n\t  }\n\t});\n\t\n\tmodule.exports = assign;\n\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(6),\n\t    createAssigner = __webpack_require__(20),\n\t    keys = __webpack_require__(4);\n\t\n\t/**\n\t * This method is like `_.assign` except that it accepts `customizer`\n\t * which is invoked to produce the assigned values. If `customizer` returns\n\t * `undefined`, assignment is handled by the method instead. The `customizer`\n\t * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} sources The source objects.\n\t * @param {Function} [customizer] The function to customize assigned values.\n\t * @returns {Object} Returns `object`.\n\t * @see _.assignInWith\n\t * @example\n\t *\n\t * function customizer(objValue, srcValue) {\n\t *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t * }\n\t *\n\t * var defaults = _.partialRight(_.assignWith, customizer);\n\t *\n\t * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t * // => { 'a': 1, 'b': 2 }\n\t */\n\tvar assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t  copyObject(source, keys(source), object, customizer);\n\t});\n\t\n\tmodule.exports = assignWith;\n\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseAt = __webpack_require__(161),\n\t    flatRest = __webpack_require__(52);\n\t\n\t/**\n\t * Creates an array of values corresponding to `paths` of `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 1.0.0\n\t * @category Object\n\t * @param {Object} object The object to iterate over.\n\t * @param {...(string|string[])} [paths] The property paths to pick.\n\t * @returns {Array} Returns the picked values.\n\t * @example\n\t *\n\t * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t *\n\t * _.at(object, ['a[0].b.c', 'a[1]']);\n\t * // => [3, 4]\n\t */\n\tvar at = flatRest(baseAt);\n\t\n\tmodule.exports = at;\n\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseAssign = __webpack_require__(72),\n\t    baseCreate = __webpack_require__(48);\n\t\n\t/**\n\t * Creates an object that inherits from the `prototype` object. If a\n\t * `properties` object is given, its own enumerable string keyed properties\n\t * are assigned to the created object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.3.0\n\t * @category Object\n\t * @param {Object} prototype The object to inherit from.\n\t * @param {Object} [properties] The properties to assign to the object.\n\t * @returns {Object} Returns the new object.\n\t * @example\n\t *\n\t * function Shape() {\n\t *   this.x = 0;\n\t *   this.y = 0;\n\t * }\n\t *\n\t * function Circle() {\n\t *   Shape.call(this);\n\t * }\n\t *\n\t * Circle.prototype = _.create(Shape.prototype, {\n\t *   'constructor': Circle\n\t * });\n\t *\n\t * var circle = new Circle;\n\t * circle instanceof Circle;\n\t * // => true\n\t *\n\t * circle instanceof Shape;\n\t * // => true\n\t */\n\tfunction create(prototype, properties) {\n\t  var result = baseCreate(prototype);\n\t  return properties == null ? result : baseAssign(result, properties);\n\t}\n\t\n\tmodule.exports = create;\n\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar apply = __webpack_require__(31),\n\t    assignInWith = __webpack_require__(58),\n\t    baseRest = __webpack_require__(34),\n\t    customDefaultsAssignIn = __webpack_require__(196);\n\t\n\t/**\n\t * Assigns own and inherited enumerable string keyed properties of source\n\t * objects to the destination object for all destination properties that\n\t * resolve to `undefined`. Source objects are applied from left to right.\n\t * Once a property is set, additional values of the same property are ignored.\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} [sources] The source objects.\n\t * @returns {Object} Returns `object`.\n\t * @see _.defaultsDeep\n\t * @example\n\t *\n\t * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t * // => { 'a': 1, 'b': 2 }\n\t */\n\tvar defaults = baseRest(function(args) {\n\t  args.push(undefined, customDefaultsAssignIn);\n\t  return apply(assignInWith, undefined, args);\n\t});\n\t\n\tmodule.exports = defaults;\n\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar apply = __webpack_require__(31),\n\t    baseRest = __webpack_require__(34),\n\t    customDefaultsMerge = __webpack_require__(197),\n\t    mergeWith = __webpack_require__(108);\n\t\n\t/**\n\t * This method is like `_.defaults` except that it recursively assigns\n\t * default properties.\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.10.0\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} [sources] The source objects.\n\t * @returns {Object} Returns `object`.\n\t * @see _.defaults\n\t * @example\n\t *\n\t * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n\t * // => { 'a': { 'b': 2, 'c': 3 } }\n\t */\n\tvar defaultsDeep = baseRest(function(args) {\n\t  args.push(undefined, customDefaultsMerge);\n\t  return apply(mergeWith, undefined, args);\n\t});\n\t\n\tmodule.exports = defaultsDeep;\n\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(111);\n\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(112);\n\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(104);\n\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(58);\n\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseFindKey = __webpack_require__(73),\n\t    baseForOwn = __webpack_require__(17),\n\t    baseIteratee = __webpack_require__(9);\n\t\n\t/**\n\t * This method is like `_.find` except that it returns the key of the first\n\t * element `predicate` returns truthy for instead of the element itself.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 1.1.0\n\t * @category Object\n\t * @param {Object} object The object to inspect.\n\t * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t * @returns {string|undefined} Returns the key of the matched element,\n\t *  else `undefined`.\n\t * @example\n\t *\n\t * var users = {\n\t *   'barney':  { 'age': 36, 'active': true },\n\t *   'fred':    { 'age': 40, 'active': false },\n\t *   'pebbles': { 'age': 1,  'active': true }\n\t * };\n\t *\n\t * _.findKey(users, function(o) { return o.age < 40; });\n\t * // => 'barney' (iteration order is not guaranteed)\n\t *\n\t * // The `_.matches` iteratee shorthand.\n\t * _.findKey(users, { 'age': 1, 'active': true });\n\t * // => 'pebbles'\n\t *\n\t * // The `_.matchesProperty` iteratee shorthand.\n\t * _.findKey(users, ['active', false]);\n\t * // => 'fred'\n\t *\n\t * // The `_.property` iteratee shorthand.\n\t * _.findKey(users, 'active');\n\t * // => 'barney'\n\t */\n\tfunction findKey(object, predicate) {\n\t  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);\n\t}\n\t\n\tmodule.exports = findKey;\n\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseFindKey = __webpack_require__(73),\n\t    baseForOwnRight = __webpack_require__(74),\n\t    baseIteratee = __webpack_require__(9);\n\t\n\t/**\n\t * This method is like `_.findKey` except that it iterates over elements of\n\t * a collection in the opposite order.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.0.0\n\t * @category Object\n\t * @param {Object} object The object to inspect.\n\t * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t * @returns {string|undefined} Returns the key of the matched element,\n\t *  else `undefined`.\n\t * @example\n\t *\n\t * var users = {\n\t *   'barney':  { 'age': 36, 'active': true },\n\t *   'fred':    { 'age': 40, 'active': false },\n\t *   'pebbles': { 'age': 1,  'active': true }\n\t * };\n\t *\n\t * _.findLastKey(users, function(o) { return o.age < 40; });\n\t * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t *\n\t * // The `_.matches` iteratee shorthand.\n\t * _.findLastKey(users, { 'age': 36, 'active': true });\n\t * // => 'barney'\n\t *\n\t * // The `_.matchesProperty` iteratee shorthand.\n\t * _.findLastKey(users, ['active', false]);\n\t * // => 'fred'\n\t *\n\t * // The `_.property` iteratee shorthand.\n\t * _.findLastKey(users, 'active');\n\t * // => 'pebbles'\n\t */\n\tfunction findLastKey(object, predicate) {\n\t  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwnRight);\n\t}\n\t\n\tmodule.exports = findLastKey;\n\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseFlatten = __webpack_require__(163);\n\t\n\t/**\n\t * Flattens `array` a single level deep.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Array\n\t * @param {Array} array The array to flatten.\n\t * @returns {Array} Returns the new flattened array.\n\t * @example\n\t *\n\t * _.flatten([1, [2, [3, [4]], 5]]);\n\t * // => [1, 2, [3, [4]], 5]\n\t */\n\tfunction flatten(array) {\n\t  var length = array == null ? 0 : array.length;\n\t  return length ? baseFlatten(array, 1) : [];\n\t}\n\t\n\tmodule.exports = flatten;\n\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseFor = __webpack_require__(49),\n\t    castFunction = __webpack_require__(19),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * Iterates over own and inherited enumerable string keyed properties of an\n\t * object and invokes `iteratee` for each property. The iteratee is invoked\n\t * with three arguments: (value, key, object). Iteratee functions may exit\n\t * iteration early by explicitly returning `false`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.3.0\n\t * @category Object\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t * @returns {Object} Returns `object`.\n\t * @see _.forInRight\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.forIn(new Foo, function(value, key) {\n\t *   console.log(key);\n\t * });\n\t * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t */\n\tfunction forIn(object, iteratee) {\n\t  return object == null\n\t    ? object\n\t    : baseFor(object, castFunction(iteratee), keysIn);\n\t}\n\t\n\tmodule.exports = forIn;\n\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseForRight = __webpack_require__(75),\n\t    castFunction = __webpack_require__(19),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * This method is like `_.forIn` except that it iterates over properties of\n\t * `object` in the opposite order.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.0.0\n\t * @category Object\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t * @returns {Object} Returns `object`.\n\t * @see _.forIn\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.forInRight(new Foo, function(value, key) {\n\t *   console.log(key);\n\t * });\n\t * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t */\n\tfunction forInRight(object, iteratee) {\n\t  return object == null\n\t    ? object\n\t    : baseForRight(object, castFunction(iteratee), keysIn);\n\t}\n\t\n\tmodule.exports = forInRight;\n\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseForOwn = __webpack_require__(17),\n\t    castFunction = __webpack_require__(19);\n\t\n\t/**\n\t * Iterates over own enumerable string keyed properties of an object and\n\t * invokes `iteratee` for each property. The iteratee is invoked with three\n\t * arguments: (value, key, object). Iteratee functions may exit iteration\n\t * early by explicitly returning `false`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.3.0\n\t * @category Object\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t * @returns {Object} Returns `object`.\n\t * @see _.forOwnRight\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.forOwn(new Foo, function(value, key) {\n\t *   console.log(key);\n\t * });\n\t * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t */\n\tfunction forOwn(object, iteratee) {\n\t  return object && baseForOwn(object, castFunction(iteratee));\n\t}\n\t\n\tmodule.exports = forOwn;\n\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseForOwnRight = __webpack_require__(74),\n\t    castFunction = __webpack_require__(19);\n\t\n\t/**\n\t * This method is like `_.forOwn` except that it iterates over properties of\n\t * `object` in the opposite order.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.0.0\n\t * @category Object\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t * @returns {Object} Returns `object`.\n\t * @see _.forOwn\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.forOwnRight(new Foo, function(value, key) {\n\t *   console.log(key);\n\t * });\n\t * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t */\n\tfunction forOwnRight(object, iteratee) {\n\t  return object && baseForOwnRight(object, castFunction(iteratee));\n\t}\n\t\n\tmodule.exports = forOwnRight;\n\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseFunctions = __webpack_require__(76),\n\t    keys = __webpack_require__(4);\n\t\n\t/**\n\t * Creates an array of function property names from own enumerable properties\n\t * of `object`.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to inspect.\n\t * @returns {Array} Returns the function names.\n\t * @see _.functionsIn\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = _.constant('a');\n\t *   this.b = _.constant('b');\n\t * }\n\t *\n\t * Foo.prototype.c = _.constant('c');\n\t *\n\t * _.functions(new Foo);\n\t * // => ['a', 'b']\n\t */\n\tfunction functions(object) {\n\t  return object == null ? [] : baseFunctions(object, keys(object));\n\t}\n\t\n\tmodule.exports = functions;\n\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseFunctions = __webpack_require__(76),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * Creates an array of function property names from own and inherited\n\t * enumerable properties of `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Object\n\t * @param {Object} object The object to inspect.\n\t * @returns {Array} Returns the function names.\n\t * @see _.functions\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = _.constant('a');\n\t *   this.b = _.constant('b');\n\t * }\n\t *\n\t * Foo.prototype.c = _.constant('c');\n\t *\n\t * _.functionsIn(new Foo);\n\t * // => ['a', 'b', 'c']\n\t */\n\tfunction functionsIn(object) {\n\t  return object == null ? [] : baseFunctions(object, keysIn(object));\n\t}\n\t\n\tmodule.exports = functionsIn;\n\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseHas = __webpack_require__(164),\n\t    hasPath = __webpack_require__(94);\n\t\n\t/**\n\t * Checks if `path` is a direct property of `object`.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @param {Array|string} path The path to check.\n\t * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t * @example\n\t *\n\t * var object = { 'a': { 'b': 2 } };\n\t * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t *\n\t * _.has(object, 'a');\n\t * // => true\n\t *\n\t * _.has(object, 'a.b');\n\t * // => true\n\t *\n\t * _.has(object, ['a', 'b']);\n\t * // => true\n\t *\n\t * _.has(other, 'a');\n\t * // => false\n\t */\n\tfunction has(object, path) {\n\t  return object != null && hasPath(object, path, baseHas);\n\t}\n\t\n\tmodule.exports = has;\n\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar constant = __webpack_require__(105),\n\t    createInverter = __webpack_require__(87),\n\t    identity = __webpack_require__(26);\n\t\n\t/**\n\t * Creates an object composed of the inverted keys and values of `object`.\n\t * If `object` contains duplicate values, subsequent values overwrite\n\t * property assignments of previous values.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.7.0\n\t * @category Object\n\t * @param {Object} object The object to invert.\n\t * @returns {Object} Returns the new inverted object.\n\t * @example\n\t *\n\t * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t *\n\t * _.invert(object);\n\t * // => { '1': 'c', '2': 'b' }\n\t */\n\tvar invert = createInverter(function(result, value, key) {\n\t  result[value] = key;\n\t}, constant(identity));\n\t\n\tmodule.exports = invert;\n\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseIteratee = __webpack_require__(9),\n\t    createInverter = __webpack_require__(87);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * This method is like `_.invert` except that the inverted object is generated\n\t * from the results of running each element of `object` thru `iteratee`. The\n\t * corresponding inverted value of each inverted key is an array of keys\n\t * responsible for generating the inverted value. The iteratee is invoked\n\t * with one argument: (value).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.1.0\n\t * @category Object\n\t * @param {Object} object The object to invert.\n\t * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t * @returns {Object} Returns the new inverted object.\n\t * @example\n\t *\n\t * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t *\n\t * _.invertBy(object);\n\t * // => { '1': ['a', 'c'], '2': ['b'] }\n\t *\n\t * _.invertBy(object, function(value) {\n\t *   return 'group' + value;\n\t * });\n\t * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t */\n\tvar invertBy = createInverter(function(result, value, key) {\n\t  if (hasOwnProperty.call(result, value)) {\n\t    result[value].push(key);\n\t  } else {\n\t    result[value] = [key];\n\t  }\n\t}, baseIteratee);\n\t\n\tmodule.exports = invertBy;\n\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseInvoke = __webpack_require__(167),\n\t    baseRest = __webpack_require__(34);\n\t\n\t/**\n\t * Invokes the method at `path` of `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @param {Array|string} path The path of the method to invoke.\n\t * @param {...*} [args] The arguments to invoke the method with.\n\t * @returns {*} Returns the result of the invoked method.\n\t * @example\n\t *\n\t * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t *\n\t * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t * // => [2, 3]\n\t */\n\tvar invoke = baseRest(baseInvoke);\n\t\n\tmodule.exports = invoke;\n\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isArrayLike = __webpack_require__(27),\n\t    isObjectLike = __webpack_require__(14);\n\t\n\t/**\n\t * This method is like `_.isArrayLike` except that it also checks if `value`\n\t * is an object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isArrayLikeObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLikeObject(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLikeObject('abc');\n\t * // => false\n\t *\n\t * _.isArrayLikeObject(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLikeObject(value) {\n\t  return isObjectLike(value) && isArrayLike(value);\n\t}\n\t\n\tmodule.exports = isArrayLikeObject;\n\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseAssignValue = __webpack_require__(24),\n\t    baseForOwn = __webpack_require__(17),\n\t    baseIteratee = __webpack_require__(9);\n\t\n\t/**\n\t * The opposite of `_.mapValues`; this method creates an object with the\n\t * same values as `object` and keys generated by running each own enumerable\n\t * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t * with three arguments: (value, key, object).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.8.0\n\t * @category Object\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t * @returns {Object} Returns the new mapped object.\n\t * @see _.mapValues\n\t * @example\n\t *\n\t * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t *   return key + value;\n\t * });\n\t * // => { 'a1': 1, 'b2': 2 }\n\t */\n\tfunction mapKeys(object, iteratee) {\n\t  var result = {};\n\t  iteratee = baseIteratee(iteratee, 3);\n\t\n\t  baseForOwn(object, function(value, key, object) {\n\t    baseAssignValue(result, iteratee(value, key, object), value);\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = mapKeys;\n\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseAssignValue = __webpack_require__(24),\n\t    baseForOwn = __webpack_require__(17),\n\t    baseIteratee = __webpack_require__(9);\n\t\n\t/**\n\t * Creates an object with the same keys as `object` and values generated\n\t * by running each own enumerable string keyed property of `object` thru\n\t * `iteratee`. The iteratee is invoked with three arguments:\n\t * (value, key, object).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @category Object\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t * @returns {Object} Returns the new mapped object.\n\t * @see _.mapKeys\n\t * @example\n\t *\n\t * var users = {\n\t *   'fred':    { 'user': 'fred',    'age': 40 },\n\t *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t * };\n\t *\n\t * _.mapValues(users, function(o) { return o.age; });\n\t * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t *\n\t * // The `_.property` iteratee shorthand.\n\t * _.mapValues(users, 'age');\n\t * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t */\n\tfunction mapValues(object, iteratee) {\n\t  var result = {};\n\t  iteratee = baseIteratee(iteratee, 3);\n\t\n\t  baseForOwn(object, function(value, key, object) {\n\t    baseAssignValue(result, key, iteratee(value, key, object));\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = mapValues;\n\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar MapCache = __webpack_require__(46);\n\t\n\t/** Error message constants. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t/**\n\t * Creates a function that memoizes the result of `func`. If `resolver` is\n\t * provided, it determines the cache key for storing the result based on the\n\t * arguments provided to the memoized function. By default, the first argument\n\t * provided to the memoized function is used as the map cache key. The `func`\n\t * is invoked with the `this` binding of the memoized function.\n\t *\n\t * **Note:** The cache is exposed as the `cache` property on the memoized\n\t * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t * constructor with one whose instances implement the\n\t * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n\t * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Function\n\t * @param {Function} func The function to have its output memoized.\n\t * @param {Function} [resolver] The function to resolve the cache key.\n\t * @returns {Function} Returns the new memoized function.\n\t * @example\n\t *\n\t * var object = { 'a': 1, 'b': 2 };\n\t * var other = { 'c': 3, 'd': 4 };\n\t *\n\t * var values = _.memoize(_.values);\n\t * values(object);\n\t * // => [1, 2]\n\t *\n\t * values(other);\n\t * // => [3, 4]\n\t *\n\t * object.a = 2;\n\t * values(object);\n\t * // => [1, 2]\n\t *\n\t * // Modify the result cache.\n\t * values.cache.set(object, ['a', 'b']);\n\t * values(object);\n\t * // => ['a', 'b']\n\t *\n\t * // Replace `_.memoize.Cache`.\n\t * _.memoize.Cache = WeakMap;\n\t */\n\tfunction memoize(func, resolver) {\n\t  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  var memoized = function() {\n\t    var args = arguments,\n\t        key = resolver ? resolver.apply(this, args) : args[0],\n\t        cache = memoized.cache;\n\t\n\t    if (cache.has(key)) {\n\t      return cache.get(key);\n\t    }\n\t    var result = func.apply(this, args);\n\t    memoized.cache = cache.set(key, result) || cache;\n\t    return result;\n\t  };\n\t  memoized.cache = new (memoize.Cache || MapCache);\n\t  return memoized;\n\t}\n\t\n\t// Expose `MapCache`.\n\tmemoize.Cache = MapCache;\n\t\n\tmodule.exports = memoize;\n\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseMerge = __webpack_require__(50),\n\t    createAssigner = __webpack_require__(20);\n\t\n\t/**\n\t * This method is like `_.assign` except that it recursively merges own and\n\t * inherited enumerable string keyed properties of source objects into the\n\t * destination object. Source properties that resolve to `undefined` are\n\t * skipped if a destination value exists. Array and plain object properties\n\t * are merged recursively. Other objects and value types are overridden by\n\t * assignment. Source objects are applied from left to right. Subsequent\n\t * sources overwrite property assignments of previous sources.\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.5.0\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} [sources] The source objects.\n\t * @returns {Object} Returns `object`.\n\t * @example\n\t *\n\t * var object = {\n\t *   'a': [{ 'b': 2 }, { 'd': 4 }]\n\t * };\n\t *\n\t * var other = {\n\t *   'a': [{ 'c': 3 }, { 'e': 5 }]\n\t * };\n\t *\n\t * _.merge(object, other);\n\t * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\t */\n\tvar merge = createAssigner(function(object, source, srcIndex) {\n\t  baseMerge(object, source, srcIndex);\n\t});\n\t\n\tmodule.exports = merge;\n\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports) {\n\n\t/** Error message constants. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t/**\n\t * Creates a function that negates the result of the predicate `func`. The\n\t * `func` predicate is invoked with the `this` binding and arguments of the\n\t * created function.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.0.0\n\t * @category Function\n\t * @param {Function} predicate The predicate to negate.\n\t * @returns {Function} Returns the new negated function.\n\t * @example\n\t *\n\t * function isEven(n) {\n\t *   return n % 2 == 0;\n\t * }\n\t *\n\t * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t * // => [1, 3, 5]\n\t */\n\tfunction negate(predicate) {\n\t  if (typeof predicate != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  return function() {\n\t    var args = arguments;\n\t    switch (args.length) {\n\t      case 0: return !predicate.call(this);\n\t      case 1: return !predicate.call(this, args[0]);\n\t      case 2: return !predicate.call(this, args[0], args[1]);\n\t      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n\t    }\n\t    return !predicate.apply(this, args);\n\t  };\n\t}\n\t\n\tmodule.exports = negate;\n\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t  'assign': __webpack_require__(240),\n\t  'assignIn': __webpack_require__(104),\n\t  'assignInWith': __webpack_require__(58),\n\t  'assignWith': __webpack_require__(241),\n\t  'at': __webpack_require__(242),\n\t  'create': __webpack_require__(243),\n\t  'defaults': __webpack_require__(244),\n\t  'defaultsDeep': __webpack_require__(245),\n\t  'entries': __webpack_require__(246),\n\t  'entriesIn': __webpack_require__(247),\n\t  'extend': __webpack_require__(248),\n\t  'extendWith': __webpack_require__(249),\n\t  'findKey': __webpack_require__(250),\n\t  'findLastKey': __webpack_require__(251),\n\t  'forIn': __webpack_require__(253),\n\t  'forInRight': __webpack_require__(254),\n\t  'forOwn': __webpack_require__(255),\n\t  'forOwnRight': __webpack_require__(256),\n\t  'functions': __webpack_require__(257),\n\t  'functionsIn': __webpack_require__(258),\n\t  'get': __webpack_require__(59),\n\t  'has': __webpack_require__(259),\n\t  'hasIn': __webpack_require__(60),\n\t  'invert': __webpack_require__(260),\n\t  'invertBy': __webpack_require__(261),\n\t  'invoke': __webpack_require__(262),\n\t  'keys': __webpack_require__(4),\n\t  'keysIn': __webpack_require__(5),\n\t  'mapKeys': __webpack_require__(264),\n\t  'mapValues': __webpack_require__(265),\n\t  'merge': __webpack_require__(267),\n\t  'mergeWith': __webpack_require__(108),\n\t  'omit': __webpack_require__(270),\n\t  'omitBy': __webpack_require__(271),\n\t  'pick': __webpack_require__(272),\n\t  'pickBy': __webpack_require__(109),\n\t  'result': __webpack_require__(274),\n\t  'set': __webpack_require__(275),\n\t  'setWith': __webpack_require__(276),\n\t  'toPairs': __webpack_require__(111),\n\t  'toPairsIn': __webpack_require__(112),\n\t  'transform': __webpack_require__(280),\n\t  'unset': __webpack_require__(281),\n\t  'update': __webpack_require__(282),\n\t  'updateWith': __webpack_require__(283),\n\t  'values': __webpack_require__(284),\n\t  'valuesIn': __webpack_require__(285)\n\t};\n\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayMap = __webpack_require__(23),\n\t    baseClone = __webpack_require__(162),\n\t    baseUnset = __webpack_require__(80),\n\t    castPath = __webpack_require__(10),\n\t    copyObject = __webpack_require__(6),\n\t    customOmitClone = __webpack_require__(198),\n\t    flatRest = __webpack_require__(52),\n\t    getAllKeysIn = __webpack_require__(53);\n\t\n\t/** Used to compose bitmasks for cloning. */\n\tvar CLONE_DEEP_FLAG = 1,\n\t    CLONE_FLAT_FLAG = 2,\n\t    CLONE_SYMBOLS_FLAG = 4;\n\t\n\t/**\n\t * The opposite of `_.pick`; this method creates an object composed of the\n\t * own and inherited enumerable property paths of `object` that are not omitted.\n\t *\n\t * **Note:** This method is considerably slower than `_.pick`.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The source object.\n\t * @param {...(string|string[])} [paths] The property paths to omit.\n\t * @returns {Object} Returns the new object.\n\t * @example\n\t *\n\t * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t *\n\t * _.omit(object, ['a', 'c']);\n\t * // => { 'b': '2' }\n\t */\n\tvar omit = flatRest(function(object, paths) {\n\t  var result = {};\n\t  if (object == null) {\n\t    return result;\n\t  }\n\t  var isDeep = false;\n\t  paths = arrayMap(paths, function(path) {\n\t    path = castPath(path, object);\n\t    isDeep || (isDeep = path.length > 1);\n\t    return path;\n\t  });\n\t  copyObject(object, getAllKeysIn(object), result);\n\t  if (isDeep) {\n\t    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n\t  }\n\t  var length = paths.length;\n\t  while (length--) {\n\t    baseUnset(result, paths[length]);\n\t  }\n\t  return result;\n\t});\n\t\n\tmodule.exports = omit;\n\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseIteratee = __webpack_require__(9),\n\t    negate = __webpack_require__(268),\n\t    pickBy = __webpack_require__(109);\n\t\n\t/**\n\t * The opposite of `_.pickBy`; this method creates an object composed of\n\t * the own and inherited enumerable string keyed properties of `object` that\n\t * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t * arguments: (value, key).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Object\n\t * @param {Object} object The source object.\n\t * @param {Function} [predicate=_.identity] The function invoked per property.\n\t * @returns {Object} Returns the new object.\n\t * @example\n\t *\n\t * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t *\n\t * _.omitBy(object, _.isNumber);\n\t * // => { 'b': '2' }\n\t */\n\tfunction omitBy(object, predicate) {\n\t  return pickBy(object, negate(baseIteratee(predicate)));\n\t}\n\t\n\tmodule.exports = omitBy;\n\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar basePick = __webpack_require__(178),\n\t    flatRest = __webpack_require__(52);\n\t\n\t/**\n\t * Creates an object composed of the picked `object` properties.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The source object.\n\t * @param {...(string|string[])} [paths] The property paths to pick.\n\t * @returns {Object} Returns the new object.\n\t * @example\n\t *\n\t * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t *\n\t * _.pick(object, ['a', 'c']);\n\t * // => { 'a': 1, 'c': 3 }\n\t */\n\tvar pick = flatRest(function(object, paths) {\n\t  return object == null ? {} : basePick(object, paths);\n\t});\n\t\n\tmodule.exports = pick;\n\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseProperty = __webpack_require__(179),\n\t    basePropertyDeep = __webpack_require__(180),\n\t    isKey = __webpack_require__(56),\n\t    toKey = __webpack_require__(11);\n\t\n\t/**\n\t * Creates a function that returns the value at `path` of a given object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @category Util\n\t * @param {Array|string} path The path of the property to get.\n\t * @returns {Function} Returns the new accessor function.\n\t * @example\n\t *\n\t * var objects = [\n\t *   { 'a': { 'b': 2 } },\n\t *   { 'a': { 'b': 1 } }\n\t * ];\n\t *\n\t * _.map(objects, _.property('a.b'));\n\t * // => [2, 1]\n\t *\n\t * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t * // => [1, 2]\n\t */\n\tfunction property(path) {\n\t  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t}\n\t\n\tmodule.exports = property;\n\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar castPath = __webpack_require__(10),\n\t    isFunction = __webpack_require__(22),\n\t    toKey = __webpack_require__(11);\n\t\n\t/**\n\t * This method is like `_.get` except that if the resolved value is a\n\t * function it's invoked with the `this` binding of its parent object and\n\t * its result is returned.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @param {Array|string} path The path of the property to resolve.\n\t * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t * @returns {*} Returns the resolved value.\n\t * @example\n\t *\n\t * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t *\n\t * _.result(object, 'a[0].b.c1');\n\t * // => 3\n\t *\n\t * _.result(object, 'a[0].b.c2');\n\t * // => 4\n\t *\n\t * _.result(object, 'a[0].b.c3', 'default');\n\t * // => 'default'\n\t *\n\t * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t * // => 'default'\n\t */\n\tfunction result(object, path, defaultValue) {\n\t  path = castPath(path, object);\n\t\n\t  var index = -1,\n\t      length = path.length;\n\t\n\t  // Ensure the loop is entered when path is empty.\n\t  if (!length) {\n\t    length = 1;\n\t    object = undefined;\n\t  }\n\t  while (++index < length) {\n\t    var value = object == null ? undefined : object[toKey(path[index])];\n\t    if (value === undefined) {\n\t      index = length;\n\t      value = defaultValue;\n\t    }\n\t    object = isFunction(value) ? value.call(object) : value;\n\t  }\n\t  return object;\n\t}\n\t\n\tmodule.exports = result;\n\n\n/***/ }),\n/* 275 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseSet = __webpack_require__(35);\n\t\n\t/**\n\t * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t * it's created. Arrays are created for missing index properties while objects\n\t * are created for all other missing properties. Use `_.setWith` to customize\n\t * `path` creation.\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.7.0\n\t * @category Object\n\t * @param {Object} object The object to modify.\n\t * @param {Array|string} path The path of the property to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns `object`.\n\t * @example\n\t *\n\t * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t *\n\t * _.set(object, 'a[0].b.c', 4);\n\t * console.log(object.a[0].b.c);\n\t * // => 4\n\t *\n\t * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t * console.log(object.x[0].y.z);\n\t * // => 5\n\t */\n\tfunction set(object, path, value) {\n\t  return object == null ? object : baseSet(object, path, value);\n\t}\n\t\n\tmodule.exports = set;\n\n\n/***/ }),\n/* 276 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseSet = __webpack_require__(35);\n\t\n\t/**\n\t * This method is like `_.set` except that it accepts `customizer` which is\n\t * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t * path creation is handled by the method instead. The `customizer` is invoked\n\t * with three arguments: (nsValue, key, nsObject).\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Object\n\t * @param {Object} object The object to modify.\n\t * @param {Array|string} path The path of the property to set.\n\t * @param {*} value The value to set.\n\t * @param {Function} [customizer] The function to customize assigned values.\n\t * @returns {Object} Returns `object`.\n\t * @example\n\t *\n\t * var object = {};\n\t *\n\t * _.setWith(object, '[0][1]', 'a', Object);\n\t * // => { '0': { '1': 'a' } }\n\t */\n\tfunction setWith(object, path, value, customizer) {\n\t  customizer = typeof customizer == 'function' ? customizer : undefined;\n\t  return object == null ? object : baseSet(object, path, value, customizer);\n\t}\n\t\n\tmodule.exports = setWith;\n\n\n/***/ }),\n/* 277 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * This method returns `false`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.13.0\n\t * @category Util\n\t * @returns {boolean} Returns `false`.\n\t * @example\n\t *\n\t * _.times(2, _.stubFalse);\n\t * // => [false, false]\n\t */\n\tfunction stubFalse() {\n\t  return false;\n\t}\n\t\n\tmodule.exports = stubFalse;\n\n\n/***/ }),\n/* 278 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(6),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * Converts `value` to a plain object flattening inherited enumerable string\n\t * keyed properties of `value` to own properties of the plain object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.0.0\n\t * @category Lang\n\t * @param {*} value The value to convert.\n\t * @returns {Object} Returns the converted plain object.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.assign({ 'a': 1 }, new Foo);\n\t * // => { 'a': 1, 'b': 2 }\n\t *\n\t * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t */\n\tfunction toPlainObject(value) {\n\t  return copyObject(value, keysIn(value));\n\t}\n\t\n\tmodule.exports = toPlainObject;\n\n\n/***/ }),\n/* 279 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseToString = __webpack_require__(185);\n\t\n\t/**\n\t * Converts `value` to a string. An empty string is returned for `null`\n\t * and `undefined` values. The sign of `-0` is preserved.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to convert.\n\t * @returns {string} Returns the converted string.\n\t * @example\n\t *\n\t * _.toString(null);\n\t * // => ''\n\t *\n\t * _.toString(-0);\n\t * // => '-0'\n\t *\n\t * _.toString([1, 2, 3]);\n\t * // => '1,2,3'\n\t */\n\tfunction toString(value) {\n\t  return value == null ? '' : baseToString(value);\n\t}\n\t\n\tmodule.exports = toString;\n\n\n/***/ }),\n/* 280 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar arrayEach = __webpack_require__(67),\n\t    baseCreate = __webpack_require__(48),\n\t    baseForOwn = __webpack_require__(17),\n\t    baseIteratee = __webpack_require__(9),\n\t    getPrototype = __webpack_require__(37),\n\t    isArray = __webpack_require__(2),\n\t    isBuffer = __webpack_require__(28),\n\t    isFunction = __webpack_require__(22),\n\t    isObject = __webpack_require__(3),\n\t    isTypedArray = __webpack_require__(42);\n\t\n\t/**\n\t * An alternative to `_.reduce`; this method transforms `object` to a new\n\t * `accumulator` object which is the result of running each of its own\n\t * enumerable string keyed properties thru `iteratee`, with each invocation\n\t * potentially mutating the `accumulator` object. If `accumulator` is not\n\t * provided, a new object with the same `[[Prototype]]` will be used. The\n\t * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 1.3.0\n\t * @category Object\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t * @param {*} [accumulator] The custom accumulator value.\n\t * @returns {*} Returns the accumulated value.\n\t * @example\n\t *\n\t * _.transform([2, 3, 4], function(result, n) {\n\t *   result.push(n *= n);\n\t *   return n % 2 == 0;\n\t * }, []);\n\t * // => [4, 9]\n\t *\n\t * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t *   (result[value] || (result[value] = [])).push(key);\n\t * }, {});\n\t * // => { '1': ['a', 'c'], '2': ['b'] }\n\t */\n\tfunction transform(object, iteratee, accumulator) {\n\t  var isArr = isArray(object),\n\t      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\t\n\t  iteratee = baseIteratee(iteratee, 4);\n\t  if (accumulator == null) {\n\t    var Ctor = object && object.constructor;\n\t    if (isArrLike) {\n\t      accumulator = isArr ? new Ctor : [];\n\t    }\n\t    else if (isObject(object)) {\n\t      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t    }\n\t    else {\n\t      accumulator = {};\n\t    }\n\t  }\n\t  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t    return iteratee(accumulator, value, index, object);\n\t  });\n\t  return accumulator;\n\t}\n\t\n\tmodule.exports = transform;\n\n\n/***/ }),\n/* 281 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseUnset = __webpack_require__(80);\n\t\n\t/**\n\t * Removes the property at `path` of `object`.\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Object\n\t * @param {Object} object The object to modify.\n\t * @param {Array|string} path The path of the property to unset.\n\t * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t * @example\n\t *\n\t * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t * _.unset(object, 'a[0].b.c');\n\t * // => true\n\t *\n\t * console.log(object);\n\t * // => { 'a': [{ 'b': {} }] };\n\t *\n\t * _.unset(object, ['a', '0', 'b', 'c']);\n\t * // => true\n\t *\n\t * console.log(object);\n\t * // => { 'a': [{ 'b': {} }] };\n\t */\n\tfunction unset(object, path) {\n\t  return object == null ? true : baseUnset(object, path);\n\t}\n\t\n\tmodule.exports = unset;\n\n\n/***/ }),\n/* 282 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseUpdate = __webpack_require__(81),\n\t    castFunction = __webpack_require__(19);\n\t\n\t/**\n\t * This method is like `_.set` except that accepts `updater` to produce the\n\t * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t * is invoked with one argument: (value).\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.6.0\n\t * @category Object\n\t * @param {Object} object The object to modify.\n\t * @param {Array|string} path The path of the property to set.\n\t * @param {Function} updater The function to produce the updated value.\n\t * @returns {Object} Returns `object`.\n\t * @example\n\t *\n\t * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t *\n\t * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t * console.log(object.a[0].b.c);\n\t * // => 9\n\t *\n\t * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t * console.log(object.x[0].y.z);\n\t * // => 0\n\t */\n\tfunction update(object, path, updater) {\n\t  return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t}\n\t\n\tmodule.exports = update;\n\n\n/***/ }),\n/* 283 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseUpdate = __webpack_require__(81),\n\t    castFunction = __webpack_require__(19);\n\t\n\t/**\n\t * This method is like `_.update` except that it accepts `customizer` which is\n\t * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t * path creation is handled by the method instead. The `customizer` is invoked\n\t * with three arguments: (nsValue, key, nsObject).\n\t *\n\t * **Note:** This method mutates `object`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.6.0\n\t * @category Object\n\t * @param {Object} object The object to modify.\n\t * @param {Array|string} path The path of the property to set.\n\t * @param {Function} updater The function to produce the updated value.\n\t * @param {Function} [customizer] The function to customize assigned values.\n\t * @returns {Object} Returns `object`.\n\t * @example\n\t *\n\t * var object = {};\n\t *\n\t * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t * // => { '0': { '1': 'a' } }\n\t */\n\tfunction updateWith(object, path, updater, customizer) {\n\t  customizer = typeof customizer == 'function' ? customizer : undefined;\n\t  return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t}\n\t\n\tmodule.exports = updateWith;\n\n\n/***/ }),\n/* 284 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseValues = __webpack_require__(82),\n\t    keys = __webpack_require__(4);\n\t\n\t/**\n\t * Creates an array of the own enumerable string keyed property values of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property values.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.values(new Foo);\n\t * // => [1, 2] (iteration order is not guaranteed)\n\t *\n\t * _.values('hi');\n\t * // => ['h', 'i']\n\t */\n\tfunction values(object) {\n\t  return object == null ? [] : baseValues(object, keys(object));\n\t}\n\t\n\tmodule.exports = values;\n\n\n/***/ }),\n/* 285 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseValues = __webpack_require__(82),\n\t    keysIn = __webpack_require__(5);\n\t\n\t/**\n\t * Creates an array of the own and inherited enumerable string keyed property\n\t * values of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.0.0\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property values.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.valuesIn(new Foo);\n\t * // => [1, 2, 3] (iteration order is not guaranteed)\n\t */\n\tfunction valuesIn(object) {\n\t  return object == null ? [] : baseValues(object, keysIn(object));\n\t}\n\t\n\tmodule.exports = valuesIn;\n\n\n/***/ }),\n/* 286 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} [options]\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options) {\n\t  options = options || {};\n\t  var type = typeof val;\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse(val);\n\t  } else if (type === 'number' && isNaN(val) === false) {\n\t    return options.long ? fmtLong(val) : fmtShort(val);\n\t  }\n\t  throw new Error(\n\t    'val is not a non-empty string or a valid number. val=' +\n\t      JSON.stringify(val)\n\t  );\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = String(str);\n\t  if (str.length > 100) {\n\t    return;\n\t  }\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n\t    str\n\t  );\n\t  if (!match) {\n\t    return;\n\t  }\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t    default:\n\t      return undefined;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtShort(ms) {\n\t  if (ms >= d) {\n\t    return Math.round(ms / d) + 'd';\n\t  }\n\t  if (ms >= h) {\n\t    return Math.round(ms / h) + 'h';\n\t  }\n\t  if (ms >= m) {\n\t    return Math.round(ms / m) + 'm';\n\t  }\n\t  if (ms >= s) {\n\t    return Math.round(ms / s) + 's';\n\t  }\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtLong(ms) {\n\t  return plural(ms, d, 'day') ||\n\t    plural(ms, h, 'hour') ||\n\t    plural(ms, m, 'minute') ||\n\t    plural(ms, s, 'second') ||\n\t    ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) {\n\t    return;\n\t  }\n\t  if (ms < n * 1.5) {\n\t    return Math.floor(ms / n) + ' ' + name;\n\t  }\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ }),\n/* 287 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */\n\t;(function(root) {\n\t\n\t\t/** Detect free variables */\n\t\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t\t!exports.nodeType && exports;\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\t!module.nodeType && module;\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (\n\t\t\tfreeGlobal.global === freeGlobal ||\n\t\t\tfreeGlobal.window === freeGlobal ||\n\t\t\tfreeGlobal.self === freeGlobal\n\t\t) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/**\n\t\t * The `punycode` object.\n\t\t * @name punycode\n\t\t * @type Object\n\t\t */\n\t\tvar punycode,\n\t\n\t\t/** Highest positive signed 32-bit float value */\n\t\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\t\n\t\t/** Bootstring parameters */\n\t\tbase = 36,\n\t\ttMin = 1,\n\t\ttMax = 26,\n\t\tskew = 38,\n\t\tdamp = 700,\n\t\tinitialBias = 72,\n\t\tinitialN = 128, // 0x80\n\t\tdelimiter = '-', // '\\x2D'\n\t\n\t\t/** Regular expressions */\n\t\tregexPunycode = /^xn--/,\n\t\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\t\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\t\n\t\t/** Error messages */\n\t\terrors = {\n\t\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t\t'invalid-input': 'Invalid input'\n\t\t},\n\t\n\t\t/** Convenience shortcuts */\n\t\tbaseMinusTMin = base - tMin,\n\t\tfloor = Math.floor,\n\t\tstringFromCharCode = String.fromCharCode,\n\t\n\t\t/** Temporary variable */\n\t\tkey;\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/**\n\t\t * A generic error utility function.\n\t\t * @private\n\t\t * @param {String} type The error type.\n\t\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t\t */\n\t\tfunction error(type) {\n\t\t\tthrow RangeError(errors[type]);\n\t\t}\n\t\n\t\t/**\n\t\t * A generic `Array#map` utility function.\n\t\t * @private\n\t\t * @param {Array} array The array to iterate over.\n\t\t * @param {Function} callback The function that gets called for every array\n\t\t * item.\n\t\t * @returns {Array} A new array of values returned by the callback function.\n\t\t */\n\t\tfunction map(array, fn) {\n\t\t\tvar length = array.length;\n\t\t\tvar result = [];\n\t\t\twhile (length--) {\n\t\t\t\tresult[length] = fn(array[length]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\t/**\n\t\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t\t * addresses.\n\t\t * @private\n\t\t * @param {String} domain The domain name or email address.\n\t\t * @param {Function} callback The function that gets called for every\n\t\t * character.\n\t\t * @returns {Array} A new string of characters returned by the callback\n\t\t * function.\n\t\t */\n\t\tfunction mapDomain(string, fn) {\n\t\t\tvar parts = string.split('@');\n\t\t\tvar result = '';\n\t\t\tif (parts.length > 1) {\n\t\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\t\tresult = parts[0] + '@';\n\t\t\t\tstring = parts[1];\n\t\t\t}\n\t\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\t\tvar labels = string.split('.');\n\t\t\tvar encoded = map(labels, fn).join('.');\n\t\t\treturn result + encoded;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates an array containing the numeric code points of each Unicode\n\t\t * character in the string. While JavaScript uses UCS-2 internally,\n\t\t * this function will convert a pair of surrogate halves (each of which\n\t\t * UCS-2 exposes as separate characters) into a single code point,\n\t\t * matching UTF-16.\n\t\t * @see `punycode.ucs2.encode`\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode.ucs2\n\t\t * @name decode\n\t\t * @param {String} string The Unicode input string (UCS-2).\n\t\t * @returns {Array} The new array of code points.\n\t\t */\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [],\n\t\t\t    counter = 0,\n\t\t\t    length = string.length,\n\t\t\t    value,\n\t\t\t    extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates a string based on an array of numeric code points.\n\t\t * @see `punycode.ucs2.decode`\n\t\t * @memberOf punycode.ucs2\n\t\t * @name encode\n\t\t * @param {Array} codePoints The array of numeric code points.\n\t\t * @returns {String} The new Unicode string (UCS-2).\n\t\t */\n\t\tfunction ucs2encode(array) {\n\t\t\treturn map(array, function(value) {\n\t\t\t\tvar output = '';\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t\treturn output;\n\t\t\t}).join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a basic code point into a digit/integer.\n\t\t * @see `digitToBasic()`\n\t\t * @private\n\t\t * @param {Number} codePoint The basic numeric code point value.\n\t\t * @returns {Number} The numeric value of a basic code point (for use in\n\t\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t\t * the code point does not represent a value.\n\t\t */\n\t\tfunction basicToDigit(codePoint) {\n\t\t\tif (codePoint - 48 < 10) {\n\t\t\t\treturn codePoint - 22;\n\t\t\t}\n\t\t\tif (codePoint - 65 < 26) {\n\t\t\t\treturn codePoint - 65;\n\t\t\t}\n\t\t\tif (codePoint - 97 < 26) {\n\t\t\t\treturn codePoint - 97;\n\t\t\t}\n\t\t\treturn base;\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a digit/integer into a basic code point.\n\t\t * @see `basicToDigit()`\n\t\t * @private\n\t\t * @param {Number} digit The numeric value of a basic code point.\n\t\t * @returns {Number} The basic code point whose value (when used for\n\t\t * representing integers) is `digit`, which needs to be in the range\n\t\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t\t * used; else, the lowercase form is used. The behavior is undefined\n\t\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t\t */\n\t\tfunction digitToBasic(digit, flag) {\n\t\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t\t// 26..35 map to ASCII 0..9\n\t\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t\t}\n\t\n\t\t/**\n\t\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t\t * @private\n\t\t */\n\t\tfunction adapt(delta, numPoints, firstTime) {\n\t\t\tvar k = 0;\n\t\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\t\tdelta += floor(delta / numPoints);\n\t\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t\t}\n\t\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t\t * symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t\t * @returns {String} The resulting string of Unicode symbols.\n\t\t */\n\t\tfunction decode(input) {\n\t\t\t// Don't use UCS-2\n\t\t\tvar output = [],\n\t\t\t    inputLength = input.length,\n\t\t\t    out,\n\t\t\t    i = 0,\n\t\t\t    n = initialN,\n\t\t\t    bias = initialBias,\n\t\t\t    basic,\n\t\t\t    j,\n\t\t\t    index,\n\t\t\t    oldi,\n\t\t\t    w,\n\t\t\t    k,\n\t\t\t    digit,\n\t\t\t    t,\n\t\t\t    /** Cached calculation results */\n\t\t\t    baseMinusT;\n\t\n\t\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t\t// the first basic code points to the output.\n\t\n\t\t\tbasic = input.lastIndexOf(delimiter);\n\t\t\tif (basic < 0) {\n\t\t\t\tbasic = 0;\n\t\t\t}\n\t\n\t\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t\t// if it's not a basic code point\n\t\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\t\terror('not-basic');\n\t\t\t\t}\n\t\t\t\toutput.push(input.charCodeAt(j));\n\t\t\t}\n\t\n\t\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t\t// points were copied; start at the beginning otherwise.\n\t\n\t\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\t\n\t\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t\t// value at the end to obtain `delta`.\n\t\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\t\n\t\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\t\terror('invalid-input');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\t\n\t\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += digit * w;\n\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\n\t\t\t\t\tif (digit < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tw *= baseMinusT;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tout = output.length + 1;\n\t\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\t\n\t\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tn += floor(i / out);\n\t\t\t\ti %= out;\n\t\n\t\t\t\t// Insert `n` at position `i` of the output\n\t\t\t\toutput.splice(i++, 0, n);\n\t\n\t\t\t}\n\t\n\t\t\treturn ucs2encode(output);\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t\t * Punycode string of ASCII-only symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The string of Unicode symbols.\n\t\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t\t */\n\t\tfunction encode(input) {\n\t\t\tvar n,\n\t\t\t    delta,\n\t\t\t    handledCPCount,\n\t\t\t    basicLength,\n\t\t\t    bias,\n\t\t\t    j,\n\t\t\t    m,\n\t\t\t    q,\n\t\t\t    k,\n\t\t\t    t,\n\t\t\t    currentValue,\n\t\t\t    output = [],\n\t\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t\t    inputLength,\n\t\t\t    /** Cached calculation results */\n\t\t\t    handledCPCountPlusOne,\n\t\t\t    baseMinusT,\n\t\t\t    qMinusT;\n\t\n\t\t\t// Convert the input in UCS-2 to Unicode\n\t\t\tinput = ucs2decode(input);\n\t\n\t\t\t// Cache the length\n\t\t\tinputLength = input.length;\n\t\n\t\t\t// Initialize the state\n\t\t\tn = initialN;\n\t\t\tdelta = 0;\n\t\t\tbias = initialBias;\n\t\n\t\t\t// Handle the basic code points\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue < 0x80) {\n\t\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\thandledCPCount = basicLength = output.length;\n\t\n\t\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t\t// `basicLength` is the number of basic code points.\n\t\n\t\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\t\tif (basicLength) {\n\t\t\t\toutput.push(delimiter);\n\t\t\t}\n\t\n\t\t\t// Main encoding loop:\n\t\t\twhile (handledCPCount < inputLength) {\n\t\n\t\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t\t// larger one:\n\t\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\t\tm = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t\t// but guard against overflow\n\t\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\t\tn = m;\n\t\n\t\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\n\t\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\t\tdelta = 0;\n\t\t\t\t\t\t++handledCPCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t++delta;\n\t\t\t\t++n;\n\t\n\t\t\t}\n\t\t\treturn output.join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string representing a domain name or an email address\n\t\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t\t * it doesn't matter if you call it on a string that has already been\n\t\t * converted to Unicode.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycoded domain name or email address to\n\t\t * convert to Unicode.\n\t\t * @returns {String} The Unicode representation of the given Punycode\n\t\t * string.\n\t\t */\n\t\tfunction toUnicode(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexPunycode.test(string)\n\t\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Unicode string representing a domain name or an email address to\n\t\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t\t * ASCII.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The domain name or email address to convert, as a\n\t\t * Unicode string.\n\t\t * @returns {String} The Punycode representation of the given domain name or\n\t\t * email address.\n\t\t */\n\t\tfunction toASCII(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/** Define the public API */\n\t\tpunycode = {\n\t\t\t/**\n\t\t\t * A string representing the current Punycode.js version number.\n\t\t\t * @memberOf punycode\n\t\t\t * @type String\n\t\t\t */\n\t\t\t'version': '1.3.2',\n\t\t\t/**\n\t\t\t * An object of methods to convert from JavaScript's internal character\n\t\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t\t * @memberOf punycode\n\t\t\t * @type Object\n\t\t\t */\n\t\t\t'ucs2': {\n\t\t\t\t'decode': ucs2decode,\n\t\t\t\t'encode': ucs2encode\n\t\t\t},\n\t\t\t'decode': decode,\n\t\t\t'encode': encode,\n\t\t\t'toASCII': toASCII,\n\t\t\t'toUnicode': toUnicode\n\t\t};\n\t\n\t\t/** Expose `punycode` */\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn punycode;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (freeExports && freeModule) {\n\t\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = punycode;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (key in punycode) {\n\t\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.punycode = punycode;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(43)(module), (function() { return this; }())))\n\n/***/ }),\n/* 288 */\n/***/ (function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\t\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\t\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\t\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\t\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\t\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\t\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\t\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\t\n\t  return obj;\n\t};\n\n\n/***/ }),\n/* 289 */\n/***/ (function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\t\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\t\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\t\n\t    default:\n\t      return '';\n\t  }\n\t};\n\t\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\t\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\t\n\t  }\n\t\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ }),\n/* 290 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.decode = exports.parse = __webpack_require__(288);\n\texports.encode = exports.stringify = __webpack_require__(289);\n\n\n/***/ }),\n/* 291 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t      // Callback can either be a function or a string\n\t      if (typeof callback !== \"function\") {\n\t        callback = new Function(\"\" + callback);\n\t      }\n\t      // Copy function arguments\n\t      var args = new Array(arguments.length - 1);\n\t      for (var i = 0; i < args.length; i++) {\n\t          args[i] = arguments[i + 1];\n\t      }\n\t      // Store and register the task\n\t      var task = { callback: callback, args: args };\n\t      tasksByHandle[nextHandle] = task;\n\t      registerImmediate(nextHandle);\n\t      return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t        case 0:\n\t            callback();\n\t            break;\n\t        case 1:\n\t            callback(args[0]);\n\t            break;\n\t        case 2:\n\t            callback(args[0], args[1]);\n\t            break;\n\t        case 3:\n\t            callback(args[0], args[1], args[2]);\n\t            break;\n\t        default:\n\t            callback.apply(undefined, args);\n\t            break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function(handle) {\n\t            process.nextTick(function () { runIfPresent(handle); });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function() {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function(event) {\n\t            if (event.source === global &&\n\t                typeof event.data === \"string\" &&\n\t                event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function(event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(12)))\n\n/***/ }),\n/* 292 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Promise wrapper for superagent\n\t */\n\t\n\tfunction wrap(superagent, Promise) {\n\t  /**\n\t   * Request object similar to superagent.Request, but with end() returning\n\t   * a promise.\n\t   */\n\t  function PromiseRequest() {\n\t    superagent.Request.apply(this, arguments);\n\t  }\n\t\n\t  // Inherit form superagent.Request\n\t  PromiseRequest.prototype = Object.create(superagent.Request.prototype);\n\t\n\t  /** Send request and get a promise that `end` was emitted */\n\t  PromiseRequest.prototype.end = function(cb) {\n\t    var _end = superagent.Request.prototype.end;\n\t    var self = this;\n\t\n\t    return new Promise(function(accept, reject) {\n\t      _end.call(self, function(err, response) {\n\t        if (cb) {\n\t          cb(err, response);\n\t        }\n\t\n\t        if (err) {\n\t          err.response = response;\n\t          reject(err);\n\t        } else {\n\t          accept(response);\n\t        }\n\t      });\n\t    });\n\t  };\n\t\n\t  /** Provide a more promise-y interface */\n\t  PromiseRequest.prototype.then = function(resolve, reject) {\n\t    var _end = superagent.Request.prototype.end;\n\t    var self = this;\n\t\n\t    return new Promise(function(accept, reject) {\n\t      _end.call(self, function(err, response) {\n\t        if (err) {\n\t          err.response = response;\n\t          reject(err);\n\t        } else {\n\t          accept(response);\n\t        }\n\t      });\n\t    }).then(resolve, reject);\n\t  };\n\t\n\t  /**\n\t   * Request builder with same interface as superagent.\n\t   * It is convenient to import this as `request` in place of superagent.\n\t   */\n\t  var request = function(method, url) {\n\t    return new PromiseRequest(method, url);\n\t  };\n\t\n\t  /** Helper for making an options request */\n\t  request.options = function(url) {\n\t    return request('OPTIONS', url);\n\t  }\n\t\n\t  /** Helper for making a head request */\n\t  request.head = function(url, data) {\n\t    var req = request('HEAD', url);\n\t    if (data) {\n\t      req.send(data);\n\t    }\n\t    return req;\n\t  };\n\t\n\t  /** Helper for making a get request */\n\t  request.get = function(url, data) {\n\t    var req = request('GET', url);\n\t    if (data) {\n\t      req.query(data);\n\t    }\n\t    return req;\n\t  };\n\t\n\t  /** Helper for making a post request */\n\t  request.post = function(url, data) {\n\t    var req = request('POST', url);\n\t    if (data) {\n\t      req.send(data);\n\t    }\n\t    return req;\n\t  };\n\t\n\t  /** Helper for making a put request */\n\t  request.put = function(url, data) {\n\t    var req = request('PUT', url);\n\t    if (data) {\n\t      req.send(data);\n\t    }\n\t    return req;\n\t  };\n\t\n\t  /** Helper for making a patch request */\n\t  request.patch = function(url, data) {\n\t    var req = request('PATCH', url);\n\t    if (data) {\n\t      req.send(data);\n\t    }\n\t    return req;\n\t  };\n\t\n\t  /** Helper for making a delete request */\n\t  request.del = function(url) {\n\t    return request('DELETE', url);\n\t  };\n\t\n\t  // Export the request builder\n\t  return request;\n\t}\n\t\n\tmodule.exports = wrap;\n\n\n/***/ }),\n/* 293 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Root reference for iframes.\n\t */\n\t\n\tvar root;\n\tif (typeof window !== 'undefined') { // Browser window\n\t  root = window;\n\t} else if (typeof self !== 'undefined') { // Web Worker\n\t  root = self;\n\t} else { // Other environments\n\t  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n\t  root = this;\n\t}\n\t\n\tvar Emitter = __webpack_require__(147);\n\tvar RequestBase = __webpack_require__(295);\n\tvar isObject = __webpack_require__(63);\n\tvar isFunction = __webpack_require__(294);\n\tvar ResponseBase = __webpack_require__(296);\n\tvar shouldRetry = __webpack_require__(297);\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction noop(){};\n\t\n\t/**\n\t * Expose `request`.\n\t */\n\t\n\tvar request = exports = module.exports = function(method, url) {\n\t  // callback\n\t  if ('function' == typeof url) {\n\t    return new exports.Request('GET', method).end(url);\n\t  }\n\t\n\t  // url first\n\t  if (1 == arguments.length) {\n\t    return new exports.Request('GET', method);\n\t  }\n\t\n\t  return new exports.Request(method, url);\n\t}\n\t\n\texports.Request = Request;\n\t\n\t/**\n\t * Determine XHR.\n\t */\n\t\n\trequest.getXHR = function () {\n\t  if (root.XMLHttpRequest\n\t      && (!root.location || 'file:' != root.location.protocol\n\t          || !root.ActiveXObject)) {\n\t    return new XMLHttpRequest;\n\t  } else {\n\t    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\t  }\n\t  throw Error(\"Browser-only verison of superagent could not find XHR\");\n\t};\n\t\n\t/**\n\t * Removes leading and trailing whitespace, added to support IE.\n\t *\n\t * @param {String} s\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tvar trim = ''.trim\n\t  ? function(s) { return s.trim(); }\n\t  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\t\n\t/**\n\t * Serialize the given `obj`.\n\t *\n\t * @param {Object} obj\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction serialize(obj) {\n\t  if (!isObject(obj)) return obj;\n\t  var pairs = [];\n\t  for (var key in obj) {\n\t    pushEncodedKeyValuePair(pairs, key, obj[key]);\n\t  }\n\t  return pairs.join('&');\n\t}\n\t\n\t/**\n\t * Helps 'serialize' with serializing arrays.\n\t * Mutates the pairs array.\n\t *\n\t * @param {Array} pairs\n\t * @param {String} key\n\t * @param {Mixed} val\n\t */\n\t\n\tfunction pushEncodedKeyValuePair(pairs, key, val) {\n\t  if (val != null) {\n\t    if (Array.isArray(val)) {\n\t      val.forEach(function(v) {\n\t        pushEncodedKeyValuePair(pairs, key, v);\n\t      });\n\t    } else if (isObject(val)) {\n\t      for(var subkey in val) {\n\t        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n\t      }\n\t    } else {\n\t      pairs.push(encodeURIComponent(key)\n\t        + '=' + encodeURIComponent(val));\n\t    }\n\t  } else if (val === null) {\n\t    pairs.push(encodeURIComponent(key));\n\t  }\n\t}\n\t\n\t/**\n\t * Expose serialization method.\n\t */\n\t\n\t request.serializeObject = serialize;\n\t\n\t /**\n\t  * Parse the given x-www-form-urlencoded `str`.\n\t  *\n\t  * @param {String} str\n\t  * @return {Object}\n\t  * @api private\n\t  */\n\t\n\tfunction parseString(str) {\n\t  var obj = {};\n\t  var pairs = str.split('&');\n\t  var pair;\n\t  var pos;\n\t\n\t  for (var i = 0, len = pairs.length; i < len; ++i) {\n\t    pair = pairs[i];\n\t    pos = pair.indexOf('=');\n\t    if (pos == -1) {\n\t      obj[decodeURIComponent(pair)] = '';\n\t    } else {\n\t      obj[decodeURIComponent(pair.slice(0, pos))] =\n\t        decodeURIComponent(pair.slice(pos + 1));\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Expose parser.\n\t */\n\t\n\trequest.parseString = parseString;\n\t\n\t/**\n\t * Default MIME type map.\n\t *\n\t *     superagent.types.xml = 'application/xml';\n\t *\n\t */\n\t\n\trequest.types = {\n\t  html: 'text/html',\n\t  json: 'application/json',\n\t  xml: 'application/xml',\n\t  urlencoded: 'application/x-www-form-urlencoded',\n\t  'form': 'application/x-www-form-urlencoded',\n\t  'form-data': 'application/x-www-form-urlencoded'\n\t};\n\t\n\t/**\n\t * Default serialization map.\n\t *\n\t *     superagent.serialize['application/xml'] = function(obj){\n\t *       return 'generated xml here';\n\t *     };\n\t *\n\t */\n\t\n\t request.serialize = {\n\t   'application/x-www-form-urlencoded': serialize,\n\t   'application/json': JSON.stringify\n\t };\n\t\n\t /**\n\t  * Default parsers.\n\t  *\n\t  *     superagent.parse['application/xml'] = function(str){\n\t  *       return { object parsed from str };\n\t  *     };\n\t  *\n\t  */\n\t\n\trequest.parse = {\n\t  'application/x-www-form-urlencoded': parseString,\n\t  'application/json': JSON.parse\n\t};\n\t\n\t/**\n\t * Parse the given header `str` into\n\t * an object containing the mapped fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseHeader(str) {\n\t  var lines = str.split(/\\r?\\n/);\n\t  var fields = {};\n\t  var index;\n\t  var line;\n\t  var field;\n\t  var val;\n\t\n\t  lines.pop(); // trailing CRLF\n\t\n\t  for (var i = 0, len = lines.length; i < len; ++i) {\n\t    line = lines[i];\n\t    index = line.indexOf(':');\n\t    field = line.slice(0, index).toLowerCase();\n\t    val = trim(line.slice(index + 1));\n\t    fields[field] = val;\n\t  }\n\t\n\t  return fields;\n\t}\n\t\n\t/**\n\t * Check if `mime` is json or has +json structured syntax suffix.\n\t *\n\t * @param {String} mime\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isJSON(mime) {\n\t  return /[\\/+]json\\b/.test(mime);\n\t}\n\t\n\t/**\n\t * Initialize a new `Response` with the given `xhr`.\n\t *\n\t *  - set flags (.ok, .error, etc)\n\t *  - parse header\n\t *\n\t * Examples:\n\t *\n\t *  Aliasing `superagent` as `request` is nice:\n\t *\n\t *      request = superagent;\n\t *\n\t *  We can use the promise-like API, or pass callbacks:\n\t *\n\t *      request.get('/').end(function(res){});\n\t *      request.get('/', function(res){});\n\t *\n\t *  Sending data can be chained:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t *  Or passed to `.send()`:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' }, function(res){});\n\t *\n\t *  Or passed to `.post()`:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t * Or further reduced to a single call for simple cases:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' }, function(res){});\n\t *\n\t * @param {XMLHTTPRequest} xhr\n\t * @param {Object} options\n\t * @api private\n\t */\n\t\n\tfunction Response(req) {\n\t  this.req = req;\n\t  this.xhr = this.req.xhr;\n\t  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\t  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n\t     ? this.xhr.responseText\n\t     : null;\n\t  this.statusText = this.req.xhr.statusText;\n\t  var status = this.xhr.status;\n\t  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t  if (status === 1223) {\n\t      status = 204;\n\t  }\n\t  this._setStatusProperties(status);\n\t  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\t  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\t  // getResponseHeader still works. so we get content-type even if getting\n\t  // other headers fails.\n\t  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\t  this._setHeaderProperties(this.header);\n\t\n\t  if (null === this.text && req._responseType) {\n\t    this.body = this.xhr.response;\n\t  } else {\n\t    this.body = this.req.method != 'HEAD'\n\t      ? this._parseBody(this.text ? this.text : this.xhr.response)\n\t      : null;\n\t  }\n\t}\n\t\n\tResponseBase(Response.prototype);\n\t\n\t/**\n\t * Parse the given body `str`.\n\t *\n\t * Used for auto-parsing of bodies. Parsers\n\t * are defined on the `superagent.parse` object.\n\t *\n\t * @param {String} str\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tResponse.prototype._parseBody = function(str){\n\t  var parse = request.parse[this.type];\n\t  if(this.req._parser) {\n\t    return this.req._parser(this, str);\n\t  }\n\t  if (!parse && isJSON(this.type)) {\n\t    parse = request.parse['application/json'];\n\t  }\n\t  return parse && str && (str.length || str instanceof Object)\n\t    ? parse(str)\n\t    : null;\n\t};\n\t\n\t/**\n\t * Return an `Error` representative of this response.\n\t *\n\t * @return {Error}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.toError = function(){\n\t  var req = this.req;\n\t  var method = req.method;\n\t  var url = req.url;\n\t\n\t  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n\t  var err = new Error(msg);\n\t  err.status = this.status;\n\t  err.method = method;\n\t  err.url = url;\n\t\n\t  return err;\n\t};\n\t\n\t/**\n\t * Expose `Response`.\n\t */\n\t\n\trequest.Response = Response;\n\t\n\t/**\n\t * Initialize a new `Request` with the given `method` and `url`.\n\t *\n\t * @param {String} method\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tfunction Request(method, url) {\n\t  var self = this;\n\t  this._query = this._query || [];\n\t  this.method = method;\n\t  this.url = url;\n\t  this.header = {}; // preserves header name case\n\t  this._header = {}; // coerces header names to lowercase\n\t  this.on('end', function(){\n\t    var err = null;\n\t    var res = null;\n\t\n\t    try {\n\t      res = new Response(self);\n\t    } catch(e) {\n\t      err = new Error('Parser is unable to parse the response');\n\t      err.parse = true;\n\t      err.original = e;\n\t      // issue #675: return the raw response if the response parsing fails\n\t      if (self.xhr) {\n\t        // ie9 doesn't have 'response' property\n\t        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n\t        // issue #876: return the http status code if the response parsing fails\n\t        err.status = self.xhr.status ? self.xhr.status : null;\n\t        err.statusCode = err.status; // backwards-compat only\n\t      } else {\n\t        err.rawResponse = null;\n\t        err.status = null;\n\t      }\n\t\n\t      return self.callback(err);\n\t    }\n\t\n\t    self.emit('response', res);\n\t\n\t    var new_err;\n\t    try {\n\t      if (!self._isResponseOK(res)) {\n\t        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n\t        new_err.original = err;\n\t        new_err.response = res;\n\t        new_err.status = res.status;\n\t      }\n\t    } catch(e) {\n\t      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n\t    }\n\t\n\t    // #1000 don't catch errors from the callback to avoid double calling it\n\t    if (new_err) {\n\t      self.callback(new_err, res);\n\t    } else {\n\t      self.callback(null, res);\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Mixin `Emitter` and `RequestBase`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\tRequestBase(Request.prototype);\n\t\n\t/**\n\t * Set Content-Type to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.xml = 'application/xml';\n\t *\n\t *      request.post('/')\n\t *        .type('xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t *      request.post('/')\n\t *        .type('application/xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t * @param {String} type\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.type = function(type){\n\t  this.set('Content-Type', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Accept to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.json = 'application/json';\n\t *\n\t *      request.get('/agent')\n\t *        .accept('json')\n\t *        .end(callback);\n\t *\n\t *      request.get('/agent')\n\t *        .accept('application/json')\n\t *        .end(callback);\n\t *\n\t * @param {String} accept\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.accept = function(type){\n\t  this.set('Accept', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Authorization field value with `user` and `pass`.\n\t *\n\t * @param {String} user\n\t * @param {String} [pass] optional in case of using 'bearer' as type\n\t * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.auth = function(user, pass, options){\n\t  if (typeof pass === 'object' && pass !== null) { // pass is optional and can substitute for options\n\t    options = pass;\n\t  }\n\t  if (!options) {\n\t    options = {\n\t      type: 'function' === typeof btoa ? 'basic' : 'auto',\n\t    }\n\t  }\n\t\n\t  switch (options.type) {\n\t    case 'basic':\n\t      this.set('Authorization', 'Basic ' + btoa(user + ':' + pass));\n\t    break;\n\t\n\t    case 'auto':\n\t      this.username = user;\n\t      this.password = pass;\n\t    break;\n\t      \n\t    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n\t      this.set('Authorization', 'Bearer ' + user);\n\t    break;  \n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Add query-string `val`.\n\t *\n\t * Examples:\n\t *\n\t *   request.get('/shoes')\n\t *     .query('size=10')\n\t *     .query({ color: 'blue' })\n\t *\n\t * @param {Object|String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.query = function(val){\n\t  if ('string' != typeof val) val = serialize(val);\n\t  if (val) this._query.push(val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Queue the given `file` as an attachment to the specified `field`,\n\t * with optional `options` (or filename).\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} field\n\t * @param {Blob|File} file\n\t * @param {String|Object} options\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.attach = function(field, file, options){\n\t  if (file) {\n\t    if (this._data) {\n\t      throw Error(\"superagent can't mix .send() and .attach()\");\n\t    }\n\t\n\t    this._getFormData().append(field, file, options || file.name);\n\t  }\n\t  return this;\n\t};\n\t\n\tRequest.prototype._getFormData = function(){\n\t  if (!this._formData) {\n\t    this._formData = new root.FormData();\n\t  }\n\t  return this._formData;\n\t};\n\t\n\t/**\n\t * Invoke the callback with `err` and `res`\n\t * and handle arity check.\n\t *\n\t * @param {Error} err\n\t * @param {Response} res\n\t * @api private\n\t */\n\t\n\tRequest.prototype.callback = function(err, res){\n\t  // console.log(this._retries, this._maxRetries)\n\t  if (this._maxRetries && this._retries++ < this._maxRetries && shouldRetry(err, res)) {\n\t    return this._retry();\n\t  }\n\t\n\t  var fn = this._callback;\n\t  this.clearTimeout();\n\t\n\t  if (err) {\n\t    if (this._maxRetries) err.retries = this._retries - 1;\n\t    this.emit('error', err);\n\t  }\n\t\n\t  fn(err, res);\n\t};\n\t\n\t/**\n\t * Invoke callback with x-domain error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.crossDomainError = function(){\n\t  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n\t  err.crossDomain = true;\n\t\n\t  err.status = this.status;\n\t  err.method = this.method;\n\t  err.url = this.url;\n\t\n\t  this.callback(err);\n\t};\n\t\n\t// This only warns, because the request is still likely to work\n\tRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n\t  console.warn(\"This is not supported in browser version of superagent\");\n\t  return this;\n\t};\n\t\n\t// This throws, because it can't send/receive data as expected\n\tRequest.prototype.pipe = Request.prototype.write = function(){\n\t  throw Error(\"Streaming is not supported in browser version of superagent\");\n\t};\n\t\n\t/**\n\t * Compose querystring to append to req.url\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype._appendQueryString = function(){\n\t  var query = this._query.join('&');\n\t  if (query) {\n\t    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n\t  }\n\t\n\t  if (this._sort) {\n\t    var index = this.url.indexOf('?');\n\t    if (index >= 0) {\n\t      var queryArr = this.url.substring(index + 1).split('&');\n\t      if (isFunction(this._sort)) {\n\t        queryArr.sort(this._sort);\n\t      } else {\n\t        queryArr.sort();\n\t      }\n\t      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Check if `obj` is a host object,\n\t * we don't want to serialize these :)\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\tRequest.prototype._isHost = function _isHost(obj) {\n\t  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n\t  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n\t}\n\t\n\t/**\n\t * Initiate request, invoking callback `fn(res)`\n\t * with an instanceof `Response`.\n\t *\n\t * @param {Function} fn\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.end = function(fn){\n\t  if (this._endCalled) {\n\t    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n\t  }\n\t  this._endCalled = true;\n\t\n\t  // store callback\n\t  this._callback = fn || noop;\n\t\n\t  // querystring\n\t  this._appendQueryString();\n\t\n\t  return this._end();\n\t};\n\t\n\tRequest.prototype._end = function() {\n\t  var self = this;\n\t  var xhr = this.xhr = request.getXHR();\n\t  var data = this._formData || this._data;\n\t\n\t  this._setTimeouts();\n\t\n\t  // state change\n\t  xhr.onreadystatechange = function(){\n\t    var readyState = xhr.readyState;\n\t    if (readyState >= 2 && self._responseTimeoutTimer) {\n\t      clearTimeout(self._responseTimeoutTimer);\n\t    }\n\t    if (4 != readyState) {\n\t      return;\n\t    }\n\t\n\t    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n\t    // result in the error \"Could not complete the operation due to error c00c023f\"\n\t    var status;\n\t    try { status = xhr.status } catch(e) { status = 0; }\n\t\n\t    if (!status) {\n\t      if (self.timedout || self._aborted) return;\n\t      return self.crossDomainError();\n\t    }\n\t    self.emit('end');\n\t  };\n\t\n\t  // progress\n\t  var handleProgress = function(direction, e) {\n\t    if (e.total > 0) {\n\t      e.percent = e.loaded / e.total * 100;\n\t    }\n\t    e.direction = direction;\n\t    self.emit('progress', e);\n\t  }\n\t  if (this.hasListeners('progress')) {\n\t    try {\n\t      xhr.onprogress = handleProgress.bind(null, 'download');\n\t      if (xhr.upload) {\n\t        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n\t      }\n\t    } catch(e) {\n\t      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n\t      // Reported here:\n\t      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n\t    }\n\t  }\n\t\n\t  // initiate request\n\t  try {\n\t    if (this.username && this.password) {\n\t      xhr.open(this.method, this.url, true, this.username, this.password);\n\t    } else {\n\t      xhr.open(this.method, this.url, true);\n\t    }\n\t  } catch (err) {\n\t    // see #1149\n\t    return this.callback(err);\n\t  }\n\t\n\t  // CORS\n\t  if (this._withCredentials) xhr.withCredentials = true;\n\t\n\t  // body\n\t  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n\t    // serialize stuff\n\t    var contentType = this._header['content-type'];\n\t    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\t    if (!serialize && isJSON(contentType)) {\n\t      serialize = request.serialize['application/json'];\n\t    }\n\t    if (serialize) data = serialize(data);\n\t  }\n\t\n\t  // set header fields\n\t  for (var field in this.header) {\n\t    if (null == this.header[field]) continue;\n\t\n\t    if (this.header.hasOwnProperty(field))\n\t      xhr.setRequestHeader(field, this.header[field]);\n\t  }\n\t\n\t  if (this._responseType) {\n\t    xhr.responseType = this._responseType;\n\t  }\n\t\n\t  // send stuff\n\t  this.emit('request', this);\n\t\n\t  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n\t  // We need null here if data is undefined\n\t  xhr.send(typeof data !== 'undefined' ? data : null);\n\t  return this;\n\t};\n\t\n\t/**\n\t * GET `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.get = function(url, data, fn){\n\t  var req = request('GET', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.query(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * HEAD `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.head = function(url, data, fn){\n\t  var req = request('HEAD', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * OPTIONS query to `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.options = function(url, data, fn){\n\t  var req = request('OPTIONS', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * DELETE `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} [data]\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction del(url, data, fn){\n\t  var req = request('DELETE', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\trequest['del'] = del;\n\trequest['delete'] = del;\n\t\n\t/**\n\t * PATCH `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} [data]\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.patch = function(url, data, fn){\n\t  var req = request('PATCH', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * POST `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} [data]\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.post = function(url, data, fn){\n\t  var req = request('POST', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PUT `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.put = function(url, data, fn){\n\t  var req = request('PUT', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\n\n/***/ }),\n/* 294 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Check if `fn` is a function.\n\t *\n\t * @param {Function} fn\n\t * @return {Boolean}\n\t * @api private\n\t */\n\tvar isObject = __webpack_require__(63);\n\t\n\tfunction isFunction(fn) {\n\t  var tag = isObject(fn) ? Object.prototype.toString.call(fn) : '';\n\t  return tag === '[object Function]';\n\t}\n\t\n\tmodule.exports = isFunction;\n\n\n/***/ }),\n/* 295 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module of mixed-in functions shared between node and client code\n\t */\n\tvar isObject = __webpack_require__(63);\n\t\n\t/**\n\t * Expose `RequestBase`.\n\t */\n\t\n\tmodule.exports = RequestBase;\n\t\n\t/**\n\t * Initialize a new `RequestBase`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction RequestBase(obj) {\n\t  if (obj) return mixin(obj);\n\t}\n\t\n\t/**\n\t * Mixin the prototype properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in RequestBase.prototype) {\n\t    obj[key] = RequestBase.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Clear previous timeout.\n\t *\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.clearTimeout = function _clearTimeout(){\n\t  clearTimeout(this._timer);\n\t  clearTimeout(this._responseTimeoutTimer);\n\t  delete this._timer;\n\t  delete this._responseTimeoutTimer;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override default response body parser\n\t *\n\t * This function will be called to convert incoming data into request.body\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.parse = function parse(fn){\n\t  this._parser = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set format of binary response body.\n\t * In browser valid formats are 'blob' and 'arraybuffer',\n\t * which return Blob and ArrayBuffer, respectively.\n\t *\n\t * In Node all values result in Buffer.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .responseType('blob')\n\t *        .end(callback);\n\t *\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.responseType = function(val){\n\t  this._responseType = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override default request body serializer\n\t *\n\t * This function will be called to convert data set via .send or .attach into payload to send\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.serialize = function serialize(fn){\n\t  this._serializer = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set timeouts.\n\t *\n\t * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n\t * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n\t *\n\t * Value of 0 or false means no timeout.\n\t *\n\t * @param {Number|Object} ms or {response, read, deadline}\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.timeout = function timeout(options){\n\t  if (!options || 'object' !== typeof options) {\n\t    this._timeout = options;\n\t    this._responseTimeout = 0;\n\t    return this;\n\t  }\n\t\n\t  for(var option in options) {\n\t    switch(option) {\n\t      case 'deadline':\n\t        this._timeout = options.deadline;\n\t        break;\n\t      case 'response':\n\t        this._responseTimeout = options.response;\n\t        break;\n\t      default:\n\t        console.warn(\"Unknown timeout option\", option);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set number of retry attempts on error.\n\t *\n\t * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n\t *\n\t * @param {Number} count\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.retry = function retry(count){\n\t  // Default to 1 if no count passed or true\n\t  if (arguments.length === 0 || count === true) count = 1;\n\t  if (count <= 0) count = 0;\n\t  this._maxRetries = count;\n\t  this._retries = 0;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Retry request\n\t *\n\t * @return {Request} for chaining\n\t * @api private\n\t */\n\t\n\tRequestBase.prototype._retry = function() {\n\t  this.clearTimeout();\n\t\n\t  // node\n\t  if (this.req) {\n\t    this.req = null;\n\t    this.req = this.request();\n\t  }\n\t\n\t  this._aborted = false;\n\t  this.timedout = false;\n\t\n\t  return this._end();\n\t};\n\t\n\t/**\n\t * Promise support\n\t *\n\t * @param {Function} resolve\n\t * @param {Function} [reject]\n\t * @return {Request}\n\t */\n\t\n\tRequestBase.prototype.then = function then(resolve, reject) {\n\t  if (!this._fullfilledPromise) {\n\t    var self = this;\n\t    if (this._endCalled) {\n\t      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n\t    }\n\t    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n\t      self.end(function(err, res){\n\t        if (err) innerReject(err); else innerResolve(res);\n\t      });\n\t    });\n\t  }\n\t  return this._fullfilledPromise.then(resolve, reject);\n\t}\n\t\n\tRequestBase.prototype.catch = function(cb) {\n\t  return this.then(undefined, cb);\n\t};\n\t\n\t/**\n\t * Allow for extension\n\t */\n\t\n\tRequestBase.prototype.use = function use(fn) {\n\t  fn(this);\n\t  return this;\n\t}\n\t\n\tRequestBase.prototype.ok = function(cb) {\n\t  if ('function' !== typeof cb) throw Error(\"Callback required\");\n\t  this._okCallback = cb;\n\t  return this;\n\t};\n\t\n\tRequestBase.prototype._isResponseOK = function(res) {\n\t  if (!res) {\n\t    return false;\n\t  }\n\t\n\t  if (this._okCallback) {\n\t    return this._okCallback(res);\n\t  }\n\t\n\t  return res.status >= 200 && res.status < 300;\n\t};\n\t\n\t\n\t/**\n\t * Get request header `field`.\n\t * Case-insensitive.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.get = function(field){\n\t  return this._header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Get case-insensitive header `field` value.\n\t * This is a deprecated internal API. Use `.get(field)` instead.\n\t *\n\t * (getHeader is no longer used internally by the superagent code base)\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api private\n\t * @deprecated\n\t */\n\t\n\tRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\t\n\t/**\n\t * Set header `field` to `val`, or multiple fields with one object.\n\t * Case-insensitive.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .set('Accept', 'application/json')\n\t *        .set('X-API-Key', 'foobar')\n\t *        .end(callback);\n\t *\n\t *      req.get('/')\n\t *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\t *        .end(callback);\n\t *\n\t * @param {String|Object} field\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.set = function(field, val){\n\t  if (isObject(field)) {\n\t    for (var key in field) {\n\t      this.set(key, field[key]);\n\t    }\n\t    return this;\n\t  }\n\t  this._header[field.toLowerCase()] = val;\n\t  this.header[field] = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove header `field`.\n\t * Case-insensitive.\n\t *\n\t * Example:\n\t *\n\t *      req.get('/')\n\t *        .unset('User-Agent')\n\t *        .end(callback);\n\t *\n\t * @param {String} field\n\t */\n\tRequestBase.prototype.unset = function(field){\n\t  delete this._header[field.toLowerCase()];\n\t  delete this.header[field];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Write the field `name` and `val`, or multiple fields with one object\n\t * for \"multipart/form-data\" request bodies.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .field('foo', 'bar')\n\t *   .end(callback);\n\t *\n\t * request.post('/upload')\n\t *   .field({ foo: 'bar', baz: 'qux' })\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String|Object} name\n\t * @param {String|Blob|File|Buffer|fs.ReadStream} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\tRequestBase.prototype.field = function(name, val) {\n\t\n\t  // name should be either a string or an object.\n\t  if (null === name ||  undefined === name) {\n\t    throw new Error('.field(name, val) name can not be empty');\n\t  }\n\t\n\t  if (this._data) {\n\t    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n\t  }\n\t\n\t  if (isObject(name)) {\n\t    for (var key in name) {\n\t      this.field(key, name[key]);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  if (Array.isArray(val)) {\n\t    for (var i in val) {\n\t      this.field(name, val[i]);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  // val should be defined now\n\t  if (null === val || undefined === val) {\n\t    throw new Error('.field(name, val) val can not be empty');\n\t  }\n\t  if ('boolean' === typeof val) {\n\t    val = '' + val;\n\t  }\n\t  this._getFormData().append(name, val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Abort the request, and clear potential timeout.\n\t *\n\t * @return {Request}\n\t * @api public\n\t */\n\tRequestBase.prototype.abort = function(){\n\t  if (this._aborted) {\n\t    return this;\n\t  }\n\t  this._aborted = true;\n\t  this.xhr && this.xhr.abort(); // browser\n\t  this.req && this.req.abort(); // node\n\t  this.clearTimeout();\n\t  this.emit('abort');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Enable transmission of cookies with x-domain requests.\n\t *\n\t * Note that for this to work the origin must not be\n\t * using \"Access-Control-Allow-Origin\" with a wildcard,\n\t * and also must set \"Access-Control-Allow-Credentials\"\n\t * to \"true\".\n\t *\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.withCredentials = function(on){\n\t  // This is browser-only functionality. Node side is no-op.\n\t  if(on==undefined) on = true;\n\t  this._withCredentials = on;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set the max redirects to `n`. Does noting in browser XHR implementation.\n\t *\n\t * @param {Number} n\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.redirects = function(n){\n\t  this._maxRedirects = n;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Convert to a plain javascript object (not JSON string) of scalar properties.\n\t * Note as this method is designed to return a useful non-this value,\n\t * it cannot be chained.\n\t *\n\t * @return {Object} describing method, url, and data of this request\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.toJSON = function(){\n\t  return {\n\t    method: this.method,\n\t    url: this.url,\n\t    data: this._data,\n\t    headers: this._header\n\t  };\n\t};\n\t\n\t\n\t/**\n\t * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n\t * an object is given.\n\t *\n\t * Examples:\n\t *\n\t *       // manual json\n\t *       request.post('/user')\n\t *         .type('json')\n\t *         .send('{\"name\":\"tj\"}')\n\t *         .end(callback)\n\t *\n\t *       // auto json\n\t *       request.post('/user')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // manual x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send('name=tj')\n\t *         .end(callback)\n\t *\n\t *       // auto x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // defaults to x-www-form-urlencoded\n\t *      request.post('/user')\n\t *        .send('name=tobi')\n\t *        .send('species=ferret')\n\t *        .end(callback)\n\t *\n\t * @param {String|Object} data\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.send = function(data){\n\t  var isObj = isObject(data);\n\t  var type = this._header['content-type'];\n\t\n\t  if (this._formData) {\n\t    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n\t  }\n\t\n\t  if (isObj && !this._data) {\n\t    if (Array.isArray(data)) {\n\t      this._data = [];\n\t    } else if (!this._isHost(data)) {\n\t      this._data = {};\n\t    }\n\t  } else if (data && this._data && this._isHost(this._data)) {\n\t    throw Error(\"Can't merge these send calls\");\n\t  }\n\t\n\t  // merge\n\t  if (isObj && isObject(this._data)) {\n\t    for (var key in data) {\n\t      this._data[key] = data[key];\n\t    }\n\t  } else if ('string' == typeof data) {\n\t    // default to x-www-form-urlencoded\n\t    if (!type) this.type('form');\n\t    type = this._header['content-type'];\n\t    if ('application/x-www-form-urlencoded' == type) {\n\t      this._data = this._data\n\t        ? this._data + '&' + data\n\t        : data;\n\t    } else {\n\t      this._data = (this._data || '') + data;\n\t    }\n\t  } else {\n\t    this._data = data;\n\t  }\n\t\n\t  if (!isObj || this._isHost(data)) {\n\t    return this;\n\t  }\n\t\n\t  // default to json\n\t  if (!type) this.type('json');\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * Sort `querystring` by the sort function\n\t *\n\t *\n\t * Examples:\n\t *\n\t *       // default order\n\t *       request.get('/user')\n\t *         .query('name=Nick')\n\t *         .query('search=Manny')\n\t *         .sortQuery()\n\t *         .end(callback)\n\t *\n\t *       // customized sort function\n\t *       request.get('/user')\n\t *         .query('name=Nick')\n\t *         .query('search=Manny')\n\t *         .sortQuery(function(a, b){\n\t *           return a.length - b.length;\n\t *         })\n\t *         .end(callback)\n\t *\n\t *\n\t * @param {Function} sort\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequestBase.prototype.sortQuery = function(sort) {\n\t  // _sort default to true but otherwise can be a function or boolean\n\t  this._sort = typeof sort === 'undefined' ? true : sort;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Invoke callback with timeout error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n\t  if (this._aborted) {\n\t    return;\n\t  }\n\t  var err = new Error(reason + timeout + 'ms exceeded');\n\t  err.timeout = timeout;\n\t  err.code = 'ECONNABORTED';\n\t  err.errno = errno;\n\t  this.timedout = true;\n\t  this.abort();\n\t  this.callback(err);\n\t};\n\t\n\tRequestBase.prototype._setTimeouts = function() {\n\t  var self = this;\n\t\n\t  // deadline\n\t  if (this._timeout && !this._timer) {\n\t    this._timer = setTimeout(function(){\n\t      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n\t    }, this._timeout);\n\t  }\n\t  // response timeout\n\t  if (this._responseTimeout && !this._responseTimeoutTimer) {\n\t    this._responseTimeoutTimer = setTimeout(function(){\n\t      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n\t    }, this._responseTimeout);\n\t  }\n\t}\n\n\n/***/ }),\n/* 296 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar utils = __webpack_require__(298);\n\t\n\t/**\n\t * Expose `ResponseBase`.\n\t */\n\t\n\tmodule.exports = ResponseBase;\n\t\n\t/**\n\t * Initialize a new `ResponseBase`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction ResponseBase(obj) {\n\t  if (obj) return mixin(obj);\n\t}\n\t\n\t/**\n\t * Mixin the prototype properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in ResponseBase.prototype) {\n\t    obj[key] = ResponseBase.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Get case-insensitive `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tResponseBase.prototype.get = function(field){\n\t    return this.header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set header related properties:\n\t *\n\t *   - `.type` the content type without params\n\t *\n\t * A response of \"Content-Type: text/plain; charset=utf-8\"\n\t * will provide you with a `.type` of \"text/plain\".\n\t *\n\t * @param {Object} header\n\t * @api private\n\t */\n\t\n\tResponseBase.prototype._setHeaderProperties = function(header){\n\t    // TODO: moar!\n\t    // TODO: make this a util\n\t\n\t    // content-type\n\t    var ct = header['content-type'] || '';\n\t    this.type = utils.type(ct);\n\t\n\t    // params\n\t    var params = utils.params(ct);\n\t    for (var key in params) this[key] = params[key];\n\t\n\t    this.links = {};\n\t\n\t    // links\n\t    try {\n\t        if (header.link) {\n\t            this.links = utils.parseLinks(header.link);\n\t        }\n\t    } catch (err) {\n\t        // ignore\n\t    }\n\t};\n\t\n\t/**\n\t * Set flags such as `.ok` based on `status`.\n\t *\n\t * For example a 2xx response will give you a `.ok` of __true__\n\t * whereas 5xx will be __false__ and `.error` will be __true__. The\n\t * `.clientError` and `.serverError` are also available to be more\n\t * specific, and `.statusType` is the class of error ranging from 1..5\n\t * sometimes useful for mapping respond colors etc.\n\t *\n\t * \"sugar\" properties are also defined for common cases. Currently providing:\n\t *\n\t *   - .noContent\n\t *   - .badRequest\n\t *   - .unauthorized\n\t *   - .notAcceptable\n\t *   - .notFound\n\t *\n\t * @param {Number} status\n\t * @api private\n\t */\n\t\n\tResponseBase.prototype._setStatusProperties = function(status){\n\t    var type = status / 100 | 0;\n\t\n\t    // status / class\n\t    this.status = this.statusCode = status;\n\t    this.statusType = type;\n\t\n\t    // basics\n\t    this.info = 1 == type;\n\t    this.ok = 2 == type;\n\t    this.redirect = 3 == type;\n\t    this.clientError = 4 == type;\n\t    this.serverError = 5 == type;\n\t    this.error = (4 == type || 5 == type)\n\t        ? this.toError()\n\t        : false;\n\t\n\t    // sugar\n\t    this.accepted = 202 == status;\n\t    this.noContent = 204 == status;\n\t    this.badRequest = 400 == status;\n\t    this.unauthorized = 401 == status;\n\t    this.notAcceptable = 406 == status;\n\t    this.forbidden = 403 == status;\n\t    this.notFound = 404 == status;\n\t};\n\n\n/***/ }),\n/* 297 */\n/***/ (function(module, exports) {\n\n\tvar ERROR_CODES = [\n\t  'ECONNRESET',\n\t  'ETIMEDOUT',\n\t  'EADDRINFO',\n\t  'ESOCKETTIMEDOUT'\n\t];\n\t\n\t/**\n\t * Determine if a request should be retried.\n\t * (Borrowed from segmentio/superagent-retry)\n\t *\n\t * @param {Error} err\n\t * @param {Response} [res]\n\t * @returns {Boolean}\n\t */\n\tmodule.exports = function shouldRetry(err, res) {\n\t  if (err && err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n\t  if (res && res.status && res.status >= 500) return true;\n\t  // Superagent timeout\n\t  if (err && 'timeout' in err && err.code == 'ECONNABORTED') return true;\n\t  if (err && 'crossDomain' in err) return true;\n\t  return false;\n\t};\n\n\n/***/ }),\n/* 298 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Return the mime type for the given `str`.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\texports.type = function(str){\n\t  return str.split(/ *; */).shift();\n\t};\n\t\n\t/**\n\t * Return header field parameters.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\texports.params = function(str){\n\t  return str.split(/ *; */).reduce(function(obj, str){\n\t    var parts = str.split(/ *= */);\n\t    var key = parts.shift();\n\t    var val = parts.shift();\n\t\n\t    if (key && val) obj[key] = val;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Parse Link header fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\texports.parseLinks = function(str){\n\t  return str.split(/ *, */).reduce(function(obj, str){\n\t    var parts = str.split(/ *; */);\n\t    var url = parts[0].slice(1, -1);\n\t    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n\t    obj[rel] = url;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Strip content related fields from `header`.\n\t *\n\t * @param {Object} header\n\t * @return {Object} header\n\t * @api private\n\t */\n\t\n\texports.cleanHeader = function(header, shouldStripCookie){\n\t  delete header['content-type'];\n\t  delete header['content-length'];\n\t  delete header['transfer-encoding'];\n\t  delete header['host'];\n\t  if (shouldStripCookie) {\n\t    delete header['cookie'];\n\t  }\n\t  return header;\n\t};\n\n/***/ }),\n/* 299 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(291);\n\texports.setImmediate = setImmediate;\n\texports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n/* 300 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar punycode = __webpack_require__(287);\n\tvar util = __webpack_require__(301);\n\t\n\texports.parse = urlParse;\n\texports.resolve = urlResolve;\n\texports.resolveObject = urlResolveObject;\n\texports.format = urlFormat;\n\t\n\texports.Url = Url;\n\t\n\tfunction Url() {\n\t  this.protocol = null;\n\t  this.slashes = null;\n\t  this.auth = null;\n\t  this.host = null;\n\t  this.port = null;\n\t  this.hostname = null;\n\t  this.hash = null;\n\t  this.search = null;\n\t  this.query = null;\n\t  this.pathname = null;\n\t  this.path = null;\n\t  this.href = null;\n\t}\n\t\n\t// Reference: RFC 3986, RFC 1808, RFC 2396\n\t\n\t// define these here so at least they only have to be\n\t// compiled once on the first module load.\n\tvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n\t    portPattern = /:[0-9]*$/,\n\t\n\t    // Special case for a simple path URL\n\t    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\t\n\t    // RFC 2396: characters reserved for delimiting URLs.\n\t    // We actually just auto-escape these.\n\t    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\t\n\t    // RFC 2396: characters not allowed for various reasons.\n\t    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\t\n\t    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n\t    autoEscape = ['\\''].concat(unwise),\n\t    // Characters that are never ever allowed in a hostname.\n\t    // Note that any invalid chars are also handled, but these\n\t    // are the ones that are *expected* to be seen, so we fast-path\n\t    // them.\n\t    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n\t    hostEndingChars = ['/', '?', '#'],\n\t    hostnameMaxLen = 255,\n\t    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n\t    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n\t    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\t    unsafeProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that never have a hostname.\n\t    hostlessProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that always contain a // bit.\n\t    slashedProtocol = {\n\t      'http': true,\n\t      'https': true,\n\t      'ftp': true,\n\t      'gopher': true,\n\t      'file': true,\n\t      'http:': true,\n\t      'https:': true,\n\t      'ftp:': true,\n\t      'gopher:': true,\n\t      'file:': true\n\t    },\n\t    querystring = __webpack_require__(290);\n\t\n\tfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n\t  if (url && util.isObject(url) && url instanceof Url) return url;\n\t\n\t  var u = new Url;\n\t  u.parse(url, parseQueryString, slashesDenoteHost);\n\t  return u;\n\t}\n\t\n\tUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n\t  if (!util.isString(url)) {\n\t    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n\t  }\n\t\n\t  // Copy chrome, IE, opera backslash-handling behavior.\n\t  // Back slashes before the query string get converted to forward slashes\n\t  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n\t  var queryIndex = url.indexOf('?'),\n\t      splitter =\n\t          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n\t      uSplit = url.split(splitter),\n\t      slashRegex = /\\\\/g;\n\t  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n\t  url = uSplit.join(splitter);\n\t\n\t  var rest = url;\n\t\n\t  // trim before proceeding.\n\t  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\t  rest = rest.trim();\n\t\n\t  if (!slashesDenoteHost && url.split('#').length === 1) {\n\t    // Try fast path regexp\n\t    var simplePath = simplePathPattern.exec(rest);\n\t    if (simplePath) {\n\t      this.path = rest;\n\t      this.href = rest;\n\t      this.pathname = simplePath[1];\n\t      if (simplePath[2]) {\n\t        this.search = simplePath[2];\n\t        if (parseQueryString) {\n\t          this.query = querystring.parse(this.search.substr(1));\n\t        } else {\n\t          this.query = this.search.substr(1);\n\t        }\n\t      } else if (parseQueryString) {\n\t        this.search = '';\n\t        this.query = {};\n\t      }\n\t      return this;\n\t    }\n\t  }\n\t\n\t  var proto = protocolPattern.exec(rest);\n\t  if (proto) {\n\t    proto = proto[0];\n\t    var lowerProto = proto.toLowerCase();\n\t    this.protocol = lowerProto;\n\t    rest = rest.substr(proto.length);\n\t  }\n\t\n\t  // figure out if it's got a host\n\t  // user@server is *always* interpreted as a hostname, and url\n\t  // resolution will treat //foo/bar as host=foo,path=bar because that's\n\t  // how the browser resolves relative URLs.\n\t  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n\t    var slashes = rest.substr(0, 2) === '//';\n\t    if (slashes && !(proto && hostlessProtocol[proto])) {\n\t      rest = rest.substr(2);\n\t      this.slashes = true;\n\t    }\n\t  }\n\t\n\t  if (!hostlessProtocol[proto] &&\n\t      (slashes || (proto && !slashedProtocol[proto]))) {\n\t\n\t    // there's a hostname.\n\t    // the first instance of /, ?, ;, or # ends the host.\n\t    //\n\t    // If there is an @ in the hostname, then non-host chars *are* allowed\n\t    // to the left of the last @ sign, unless some host-ending character\n\t    // comes *before* the @-sign.\n\t    // URLs are obnoxious.\n\t    //\n\t    // ex:\n\t    // http://a@b@c/ => user:a@b host:c\n\t    // http://a@b?@c => user:a host:c path:/?@c\n\t\n\t    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n\t    // Review our test case against browsers more comprehensively.\n\t\n\t    // find the first instance of any hostEndingChars\n\t    var hostEnd = -1;\n\t    for (var i = 0; i < hostEndingChars.length; i++) {\n\t      var hec = rest.indexOf(hostEndingChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t\n\t    // at this point, either we have an explicit point where the\n\t    // auth portion cannot go past, or the last @ char is the decider.\n\t    var auth, atSign;\n\t    if (hostEnd === -1) {\n\t      // atSign can be anywhere.\n\t      atSign = rest.lastIndexOf('@');\n\t    } else {\n\t      // atSign must be in auth portion.\n\t      // http://a@b/c@d => host:b auth:a path:/c@d\n\t      atSign = rest.lastIndexOf('@', hostEnd);\n\t    }\n\t\n\t    // Now we have a portion which is definitely the auth.\n\t    // Pull that off.\n\t    if (atSign !== -1) {\n\t      auth = rest.slice(0, atSign);\n\t      rest = rest.slice(atSign + 1);\n\t      this.auth = decodeURIComponent(auth);\n\t    }\n\t\n\t    // the host is the remaining to the left of the first non-host char\n\t    hostEnd = -1;\n\t    for (var i = 0; i < nonHostChars.length; i++) {\n\t      var hec = rest.indexOf(nonHostChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t    // if we still have not hit it, then the entire thing is a host.\n\t    if (hostEnd === -1)\n\t      hostEnd = rest.length;\n\t\n\t    this.host = rest.slice(0, hostEnd);\n\t    rest = rest.slice(hostEnd);\n\t\n\t    // pull out port.\n\t    this.parseHost();\n\t\n\t    // we've indicated that there is a hostname,\n\t    // so even if it's empty, it has to be present.\n\t    this.hostname = this.hostname || '';\n\t\n\t    // if hostname begins with [ and ends with ]\n\t    // assume that it's an IPv6 address.\n\t    var ipv6Hostname = this.hostname[0] === '[' &&\n\t        this.hostname[this.hostname.length - 1] === ']';\n\t\n\t    // validate a little.\n\t    if (!ipv6Hostname) {\n\t      var hostparts = this.hostname.split(/\\./);\n\t      for (var i = 0, l = hostparts.length; i < l; i++) {\n\t        var part = hostparts[i];\n\t        if (!part) continue;\n\t        if (!part.match(hostnamePartPattern)) {\n\t          var newpart = '';\n\t          for (var j = 0, k = part.length; j < k; j++) {\n\t            if (part.charCodeAt(j) > 127) {\n\t              // we replace non-ASCII char with a temporary placeholder\n\t              // we need this to make sure size of hostname is not\n\t              // broken by replacing non-ASCII by nothing\n\t              newpart += 'x';\n\t            } else {\n\t              newpart += part[j];\n\t            }\n\t          }\n\t          // we test again with ASCII char only\n\t          if (!newpart.match(hostnamePartPattern)) {\n\t            var validParts = hostparts.slice(0, i);\n\t            var notHost = hostparts.slice(i + 1);\n\t            var bit = part.match(hostnamePartStart);\n\t            if (bit) {\n\t              validParts.push(bit[1]);\n\t              notHost.unshift(bit[2]);\n\t            }\n\t            if (notHost.length) {\n\t              rest = '/' + notHost.join('.') + rest;\n\t            }\n\t            this.hostname = validParts.join('.');\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this.hostname.length > hostnameMaxLen) {\n\t      this.hostname = '';\n\t    } else {\n\t      // hostnames are always lower case.\n\t      this.hostname = this.hostname.toLowerCase();\n\t    }\n\t\n\t    if (!ipv6Hostname) {\n\t      // IDNA Support: Returns a punycoded representation of \"domain\".\n\t      // It only converts parts of the domain name that\n\t      // have non-ASCII characters, i.e. it doesn't matter if\n\t      // you call it with a domain that already is ASCII-only.\n\t      this.hostname = punycode.toASCII(this.hostname);\n\t    }\n\t\n\t    var p = this.port ? ':' + this.port : '';\n\t    var h = this.hostname || '';\n\t    this.host = h + p;\n\t    this.href += this.host;\n\t\n\t    // strip [ and ] from the hostname\n\t    // the host field still retains them, though\n\t    if (ipv6Hostname) {\n\t      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\t      if (rest[0] !== '/') {\n\t        rest = '/' + rest;\n\t      }\n\t    }\n\t  }\n\t\n\t  // now rest is set to the post-host stuff.\n\t  // chop off any delim chars.\n\t  if (!unsafeProtocol[lowerProto]) {\n\t\n\t    // First, make 100% sure that any \"autoEscape\" chars get\n\t    // escaped, even if encodeURIComponent doesn't think they\n\t    // need to be.\n\t    for (var i = 0, l = autoEscape.length; i < l; i++) {\n\t      var ae = autoEscape[i];\n\t      if (rest.indexOf(ae) === -1)\n\t        continue;\n\t      var esc = encodeURIComponent(ae);\n\t      if (esc === ae) {\n\t        esc = escape(ae);\n\t      }\n\t      rest = rest.split(ae).join(esc);\n\t    }\n\t  }\n\t\n\t\n\t  // chop off from the tail first.\n\t  var hash = rest.indexOf('#');\n\t  if (hash !== -1) {\n\t    // got a fragment string.\n\t    this.hash = rest.substr(hash);\n\t    rest = rest.slice(0, hash);\n\t  }\n\t  var qm = rest.indexOf('?');\n\t  if (qm !== -1) {\n\t    this.search = rest.substr(qm);\n\t    this.query = rest.substr(qm + 1);\n\t    if (parseQueryString) {\n\t      this.query = querystring.parse(this.query);\n\t    }\n\t    rest = rest.slice(0, qm);\n\t  } else if (parseQueryString) {\n\t    // no query string, but parseQueryString still requested\n\t    this.search = '';\n\t    this.query = {};\n\t  }\n\t  if (rest) this.pathname = rest;\n\t  if (slashedProtocol[lowerProto] &&\n\t      this.hostname && !this.pathname) {\n\t    this.pathname = '/';\n\t  }\n\t\n\t  //to support http.request\n\t  if (this.pathname || this.search) {\n\t    var p = this.pathname || '';\n\t    var s = this.search || '';\n\t    this.path = p + s;\n\t  }\n\t\n\t  // finally, reconstruct the href based on what has been validated.\n\t  this.href = this.format();\n\t  return this;\n\t};\n\t\n\t// format a parsed object into a url string\n\tfunction urlFormat(obj) {\n\t  // ensure it's an object, and not a string url.\n\t  // If it's an obj, this is a no-op.\n\t  // this way, you can call url_format() on strings\n\t  // to clean up potentially wonky urls.\n\t  if (util.isString(obj)) obj = urlParse(obj);\n\t  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n\t  return obj.format();\n\t}\n\t\n\tUrl.prototype.format = function() {\n\t  var auth = this.auth || '';\n\t  if (auth) {\n\t    auth = encodeURIComponent(auth);\n\t    auth = auth.replace(/%3A/i, ':');\n\t    auth += '@';\n\t  }\n\t\n\t  var protocol = this.protocol || '',\n\t      pathname = this.pathname || '',\n\t      hash = this.hash || '',\n\t      host = false,\n\t      query = '';\n\t\n\t  if (this.host) {\n\t    host = auth + this.host;\n\t  } else if (this.hostname) {\n\t    host = auth + (this.hostname.indexOf(':') === -1 ?\n\t        this.hostname :\n\t        '[' + this.hostname + ']');\n\t    if (this.port) {\n\t      host += ':' + this.port;\n\t    }\n\t  }\n\t\n\t  if (this.query &&\n\t      util.isObject(this.query) &&\n\t      Object.keys(this.query).length) {\n\t    query = querystring.stringify(this.query);\n\t  }\n\t\n\t  var search = this.search || (query && ('?' + query)) || '';\n\t\n\t  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\t\n\t  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n\t  // unless they had them to begin with.\n\t  if (this.slashes ||\n\t      (!protocol || slashedProtocol[protocol]) && host !== false) {\n\t    host = '//' + (host || '');\n\t    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n\t  } else if (!host) {\n\t    host = '';\n\t  }\n\t\n\t  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n\t  if (search && search.charAt(0) !== '?') search = '?' + search;\n\t\n\t  pathname = pathname.replace(/[?#]/g, function(match) {\n\t    return encodeURIComponent(match);\n\t  });\n\t  search = search.replace('#', '%23');\n\t\n\t  return protocol + host + pathname + search + hash;\n\t};\n\t\n\tfunction urlResolve(source, relative) {\n\t  return urlParse(source, false, true).resolve(relative);\n\t}\n\t\n\tUrl.prototype.resolve = function(relative) {\n\t  return this.resolveObject(urlParse(relative, false, true)).format();\n\t};\n\t\n\tfunction urlResolveObject(source, relative) {\n\t  if (!source) return relative;\n\t  return urlParse(source, false, true).resolveObject(relative);\n\t}\n\t\n\tUrl.prototype.resolveObject = function(relative) {\n\t  if (util.isString(relative)) {\n\t    var rel = new Url();\n\t    rel.parse(relative, false, true);\n\t    relative = rel;\n\t  }\n\t\n\t  var result = new Url();\n\t  var tkeys = Object.keys(this);\n\t  for (var tk = 0; tk < tkeys.length; tk++) {\n\t    var tkey = tkeys[tk];\n\t    result[tkey] = this[tkey];\n\t  }\n\t\n\t  // hash is always overridden, no matter what.\n\t  // even href=\"\" will remove it.\n\t  result.hash = relative.hash;\n\t\n\t  // if the relative url is empty, then there's nothing left to do here.\n\t  if (relative.href === '') {\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // hrefs like //foo/bar always cut to the protocol.\n\t  if (relative.slashes && !relative.protocol) {\n\t    // take everything except the protocol from relative\n\t    var rkeys = Object.keys(relative);\n\t    for (var rk = 0; rk < rkeys.length; rk++) {\n\t      var rkey = rkeys[rk];\n\t      if (rkey !== 'protocol')\n\t        result[rkey] = relative[rkey];\n\t    }\n\t\n\t    //urlParse appends trailing / to urls like http://www.example.com\n\t    if (slashedProtocol[result.protocol] &&\n\t        result.hostname && !result.pathname) {\n\t      result.path = result.pathname = '/';\n\t    }\n\t\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (relative.protocol && relative.protocol !== result.protocol) {\n\t    // if it's a known url protocol, then changing\n\t    // the protocol does weird things\n\t    // first, if it's not file:, then we MUST have a host,\n\t    // and if there was a path\n\t    // to begin with, then we MUST have a path.\n\t    // if it is file:, then the host is dropped,\n\t    // because that's known to be hostless.\n\t    // anything else is assumed to be absolute.\n\t    if (!slashedProtocol[relative.protocol]) {\n\t      var keys = Object.keys(relative);\n\t      for (var v = 0; v < keys.length; v++) {\n\t        var k = keys[v];\n\t        result[k] = relative[k];\n\t      }\n\t      result.href = result.format();\n\t      return result;\n\t    }\n\t\n\t    result.protocol = relative.protocol;\n\t    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n\t      var relPath = (relative.pathname || '').split('/');\n\t      while (relPath.length && !(relative.host = relPath.shift()));\n\t      if (!relative.host) relative.host = '';\n\t      if (!relative.hostname) relative.hostname = '';\n\t      if (relPath[0] !== '') relPath.unshift('');\n\t      if (relPath.length < 2) relPath.unshift('');\n\t      result.pathname = relPath.join('/');\n\t    } else {\n\t      result.pathname = relative.pathname;\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    result.host = relative.host || '';\n\t    result.auth = relative.auth;\n\t    result.hostname = relative.hostname || relative.host;\n\t    result.port = relative.port;\n\t    // to support http.request\n\t    if (result.pathname || result.search) {\n\t      var p = result.pathname || '';\n\t      var s = result.search || '';\n\t      result.path = p + s;\n\t    }\n\t    result.slashes = result.slashes || relative.slashes;\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n\t      isRelAbs = (\n\t          relative.host ||\n\t          relative.pathname && relative.pathname.charAt(0) === '/'\n\t      ),\n\t      mustEndAbs = (isRelAbs || isSourceAbs ||\n\t                    (result.host && relative.pathname)),\n\t      removeAllDots = mustEndAbs,\n\t      srcPath = result.pathname && result.pathname.split('/') || [],\n\t      relPath = relative.pathname && relative.pathname.split('/') || [],\n\t      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\t\n\t  // if the url is a non-slashed url, then relative\n\t  // links like ../.. should be able\n\t  // to crawl up to the hostname, as well.  This is strange.\n\t  // result.protocol has already been set by now.\n\t  // Later on, put the first path part into the host field.\n\t  if (psychotic) {\n\t    result.hostname = '';\n\t    result.port = null;\n\t    if (result.host) {\n\t      if (srcPath[0] === '') srcPath[0] = result.host;\n\t      else srcPath.unshift(result.host);\n\t    }\n\t    result.host = '';\n\t    if (relative.protocol) {\n\t      relative.hostname = null;\n\t      relative.port = null;\n\t      if (relative.host) {\n\t        if (relPath[0] === '') relPath[0] = relative.host;\n\t        else relPath.unshift(relative.host);\n\t      }\n\t      relative.host = null;\n\t    }\n\t    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n\t  }\n\t\n\t  if (isRelAbs) {\n\t    // it's absolute.\n\t    result.host = (relative.host || relative.host === '') ?\n\t                  relative.host : result.host;\n\t    result.hostname = (relative.hostname || relative.hostname === '') ?\n\t                      relative.hostname : result.hostname;\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    srcPath = relPath;\n\t    // fall through to the dot-handling below.\n\t  } else if (relPath.length) {\n\t    // it's relative\n\t    // throw away the existing file, and take the new path instead.\n\t    if (!srcPath) srcPath = [];\n\t    srcPath.pop();\n\t    srcPath = srcPath.concat(relPath);\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t  } else if (!util.isNullOrUndefined(relative.search)) {\n\t    // just pull out the search.\n\t    // like href='?foo'.\n\t    // Put this after the other two cases because it simplifies the booleans\n\t    if (psychotic) {\n\t      result.hostname = result.host = srcPath.shift();\n\t      //occationaly the auth can get stuck only in host\n\t      //this especially happens in cases like\n\t      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                       result.host.split('@') : false;\n\t      if (authInHost) {\n\t        result.auth = authInHost.shift();\n\t        result.host = result.hostname = authInHost.shift();\n\t      }\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    //to support http.request\n\t    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n\t      result.path = (result.pathname ? result.pathname : '') +\n\t                    (result.search ? result.search : '');\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    // no path at all.  easy.\n\t    // we've already handled the other stuff above.\n\t    result.pathname = null;\n\t    //to support http.request\n\t    if (result.search) {\n\t      result.path = '/' + result.search;\n\t    } else {\n\t      result.path = null;\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // if a url ENDs in . or .., then it must get a trailing slash.\n\t  // however, if it ends in anything else non-slashy,\n\t  // then it must NOT get a trailing slash.\n\t  var last = srcPath.slice(-1)[0];\n\t  var hasTrailingSlash = (\n\t      (result.host || relative.host || srcPath.length > 1) &&\n\t      (last === '.' || last === '..') || last === '');\n\t\n\t  // strip single dots, resolve double dots to parent dir\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = srcPath.length; i >= 0; i--) {\n\t    last = srcPath[i];\n\t    if (last === '.') {\n\t      srcPath.splice(i, 1);\n\t    } else if (last === '..') {\n\t      srcPath.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      srcPath.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (!mustEndAbs && !removeAllDots) {\n\t    for (; up--; up) {\n\t      srcPath.unshift('..');\n\t    }\n\t  }\n\t\n\t  if (mustEndAbs && srcPath[0] !== '' &&\n\t      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n\t    srcPath.push('');\n\t  }\n\t\n\t  var isAbsolute = srcPath[0] === '' ||\n\t      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\t\n\t  // put the host back\n\t  if (psychotic) {\n\t    result.hostname = result.host = isAbsolute ? '' :\n\t                                    srcPath.length ? srcPath.shift() : '';\n\t    //occationaly the auth can get stuck only in host\n\t    //this especially happens in cases like\n\t    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                     result.host.split('@') : false;\n\t    if (authInHost) {\n\t      result.auth = authInHost.shift();\n\t      result.host = result.hostname = authInHost.shift();\n\t    }\n\t  }\n\t\n\t  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\t\n\t  if (mustEndAbs && !isAbsolute) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    result.pathname = null;\n\t    result.path = null;\n\t  } else {\n\t    result.pathname = srcPath.join('/');\n\t  }\n\t\n\t  //to support request.http\n\t  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n\t    result.path = (result.pathname ? result.pathname : '') +\n\t                  (result.search ? result.search : '');\n\t  }\n\t  result.auth = relative.auth || result.auth;\n\t  result.slashes = result.slashes || relative.slashes;\n\t  result.href = result.format();\n\t  return result;\n\t};\n\t\n\tUrl.prototype.parseHost = function() {\n\t  var host = this.host;\n\t  var port = portPattern.exec(host);\n\t  if (port) {\n\t    port = port[0];\n\t    if (port !== ':') {\n\t      this.port = port.substr(1);\n\t    }\n\t    host = host.substr(0, host.length - port.length);\n\t  }\n\t  if (host) this.hostname = host;\n\t};\n\n\n/***/ }),\n/* 301 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  isString: function(arg) {\n\t    return typeof(arg) === 'string';\n\t  },\n\t  isObject: function(arg) {\n\t    return typeof(arg) === 'object' && arg !== null;\n\t  },\n\t  isNull: function(arg) {\n\t    return arg === null;\n\t  },\n\t  isNullOrUndefined: function(arg) {\n\t    return arg == null;\n\t  }\n\t};\n\n\n/***/ }),\n/* 302 */\n/***/ (function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ }),\n/* 303 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ }),\n/* 304 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = process.env.NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(303);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(302);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(12)))\n\n/***/ }),\n/* 305 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = mdns;\n\n/***/ }),\n/* 306 */\n/***/ (function(module, exports) {\n\n\tif(typeof ws === 'undefined') {var e = new Error(\"Cannot find module \\\"ws\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\n\tmodule.exports = ws;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// gauges.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 655456356335f72866d1","steelseries = require('./lib/steelseries.js');\nsimplegauges = require('./lib/simplegauges.js');\nSignalK = require('@signalk/client');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./gauges.js\n// module id = 0\n// module chunks = 0","\"use strict\";\nvar es5 = require(\"./es5\");\nvar canEvaluate = typeof navigator == \"undefined\";\n\nvar errorObj = {e: {}};\nvar tryCatchTarget;\nvar globalObject = typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    typeof global !== \"undefined\" ? global :\n    this !== undefined ? this : null;\n\nfunction tryCatcher() {\n    try {\n        var target = tryCatchTarget;\n        tryCatchTarget = null;\n        return target.apply(this, arguments);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n\nvar inherits = function(Child, Parent) {\n    var hasProp = {}.hasOwnProperty;\n\n    function T() {\n        this.constructor = Child;\n        this.constructor$ = Parent;\n        for (var propertyName in Parent.prototype) {\n            if (hasProp.call(Parent.prototype, propertyName) &&\n                propertyName.charAt(propertyName.length-1) !== \"$\"\n           ) {\n                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n            }\n        }\n    }\n    T.prototype = Parent.prototype;\n    Child.prototype = new T();\n    return Child.prototype;\n};\n\n\nfunction isPrimitive(val) {\n    return val == null || val === true || val === false ||\n        typeof val === \"string\" || typeof val === \"number\";\n\n}\n\nfunction isObject(value) {\n    return typeof value === \"function\" ||\n           typeof value === \"object\" && value !== null;\n}\n\nfunction maybeWrapAsError(maybeError) {\n    if (!isPrimitive(maybeError)) return maybeError;\n\n    return new Error(safeToString(maybeError));\n}\n\nfunction withAppended(target, appendee) {\n    var len = target.length;\n    var ret = new Array(len + 1);\n    var i;\n    for (i = 0; i < len; ++i) {\n        ret[i] = target[i];\n    }\n    ret[i] = appendee;\n    return ret;\n}\n\nfunction getDataPropertyOrDefault(obj, key, defaultValue) {\n    if (es5.isES5) {\n        var desc = Object.getOwnPropertyDescriptor(obj, key);\n\n        if (desc != null) {\n            return desc.get == null && desc.set == null\n                    ? desc.value\n                    : defaultValue;\n        }\n    } else {\n        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n    }\n}\n\nfunction notEnumerableProp(obj, name, value) {\n    if (isPrimitive(obj)) return obj;\n    var descriptor = {\n        value: value,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    };\n    es5.defineProperty(obj, name, descriptor);\n    return obj;\n}\n\nfunction thrower(r) {\n    throw r;\n}\n\nvar inheritedDataKeys = (function() {\n    var excludedPrototypes = [\n        Array.prototype,\n        Object.prototype,\n        Function.prototype\n    ];\n\n    var isExcludedProto = function(val) {\n        for (var i = 0; i < excludedPrototypes.length; ++i) {\n            if (excludedPrototypes[i] === val) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    if (es5.isES5) {\n        var getKeys = Object.getOwnPropertyNames;\n        return function(obj) {\n            var ret = [];\n            var visitedKeys = Object.create(null);\n            while (obj != null && !isExcludedProto(obj)) {\n                var keys;\n                try {\n                    keys = getKeys(obj);\n                } catch (e) {\n                    return ret;\n                }\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (visitedKeys[key]) continue;\n                    visitedKeys[key] = true;\n                    var desc = Object.getOwnPropertyDescriptor(obj, key);\n                    if (desc != null && desc.get == null && desc.set == null) {\n                        ret.push(key);\n                    }\n                }\n                obj = es5.getPrototypeOf(obj);\n            }\n            return ret;\n        };\n    } else {\n        var hasProp = {}.hasOwnProperty;\n        return function(obj) {\n            if (isExcludedProto(obj)) return [];\n            var ret = [];\n\n            /*jshint forin:false */\n            enumeration: for (var key in obj) {\n                if (hasProp.call(obj, key)) {\n                    ret.push(key);\n                } else {\n                    for (var i = 0; i < excludedPrototypes.length; ++i) {\n                        if (hasProp.call(excludedPrototypes[i], key)) {\n                            continue enumeration;\n                        }\n                    }\n                    ret.push(key);\n                }\n            }\n            return ret;\n        };\n    }\n\n})();\n\nvar thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\nfunction isClass(fn) {\n    try {\n        if (typeof fn === \"function\") {\n            var keys = es5.names(fn.prototype);\n\n            var hasMethods = es5.isES5 && keys.length > 1;\n            var hasMethodsOtherThanConstructor = keys.length > 0 &&\n                !(keys.length === 1 && keys[0] === \"constructor\");\n            var hasThisAssignmentAndStaticMethods =\n                thisAssignmentPattern.test(fn + \"\") && es5.names(fn).length > 0;\n\n            if (hasMethods || hasMethodsOtherThanConstructor ||\n                hasThisAssignmentAndStaticMethods) {\n                return true;\n            }\n        }\n        return false;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction toFastProperties(obj) {\n    /*jshint -W027,-W055,-W031*/\n    function FakeConstructor() {}\n    FakeConstructor.prototype = obj;\n    var l = 8;\n    while (l--) new FakeConstructor();\n    return obj;\n    eval(obj);\n}\n\nvar rident = /^[a-z$_][a-z$_0-9]*$/i;\nfunction isIdentifier(str) {\n    return rident.test(str);\n}\n\nfunction filledRange(count, prefix, suffix) {\n    var ret = new Array(count);\n    for(var i = 0; i < count; ++i) {\n        ret[i] = prefix + i + suffix;\n    }\n    return ret;\n}\n\nfunction safeToString(obj) {\n    try {\n        return obj + \"\";\n    } catch (e) {\n        return \"[no string representation]\";\n    }\n}\n\nfunction isError(obj) {\n    return obj !== null &&\n           typeof obj === \"object\" &&\n           typeof obj.message === \"string\" &&\n           typeof obj.name === \"string\";\n}\n\nfunction markAsOriginatingFromRejection(e) {\n    try {\n        notEnumerableProp(e, \"isOperational\", true);\n    }\n    catch(ignore) {}\n}\n\nfunction originatesFromRejection(e) {\n    if (e == null) return false;\n    return ((e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError) ||\n        e[\"isOperational\"] === true);\n}\n\nfunction canAttachTrace(obj) {\n    return isError(obj) && es5.propertyIsWritable(obj, \"stack\");\n}\n\nvar ensureErrorObject = (function() {\n    if (!(\"stack\" in new Error())) {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            try {throw new Error(safeToString(value));}\n            catch(err) {return err;}\n        };\n    } else {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            return new Error(safeToString(value));\n        };\n    }\n})();\n\nfunction classString(obj) {\n    return {}.toString.call(obj);\n}\n\nfunction copyDescriptors(from, to, filter) {\n    var keys = es5.names(from);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        if (filter(key)) {\n            try {\n                es5.defineProperty(to, key, es5.getDescriptor(from, key));\n            } catch (ignore) {}\n        }\n    }\n}\n\nvar asArray = function(v) {\n    if (es5.isArray(v)) {\n        return v;\n    }\n    return null;\n};\n\nif (typeof Symbol !== \"undefined\" && Symbol.iterator) {\n    var ArrayFrom = typeof Array.from === \"function\" ? function(v) {\n        return Array.from(v);\n    } : function(v) {\n        var ret = [];\n        var it = v[Symbol.iterator]();\n        var itResult;\n        while (!((itResult = it.next()).done)) {\n            ret.push(itResult.value);\n        }\n        return ret;\n    };\n\n    asArray = function(v) {\n        if (es5.isArray(v)) {\n            return v;\n        } else if (v != null && typeof v[Symbol.iterator] === \"function\") {\n            return ArrayFrom(v);\n        }\n        return null;\n    };\n}\n\nvar isNode = typeof process !== \"undefined\" &&\n        classString(process).toLowerCase() === \"[object process]\";\n\nvar hasEnvVariables = typeof process !== \"undefined\" &&\n    typeof process.env !== \"undefined\";\n\nfunction env(key) {\n    return hasEnvVariables ? process.env[key] : undefined;\n}\n\nfunction getNativePromise() {\n    if (typeof Promise === \"function\") {\n        try {\n            var promise = new Promise(function(){});\n            if ({}.toString.call(promise) === \"[object Promise]\") {\n                return Promise;\n            }\n        } catch (e) {}\n    }\n}\n\nfunction domainBind(self, cb) {\n    return self.bind(cb);\n}\n\nvar ret = {\n    isClass: isClass,\n    isIdentifier: isIdentifier,\n    inheritedDataKeys: inheritedDataKeys,\n    getDataPropertyOrDefault: getDataPropertyOrDefault,\n    thrower: thrower,\n    isArray: es5.isArray,\n    asArray: asArray,\n    notEnumerableProp: notEnumerableProp,\n    isPrimitive: isPrimitive,\n    isObject: isObject,\n    isError: isError,\n    canEvaluate: canEvaluate,\n    errorObj: errorObj,\n    tryCatch: tryCatch,\n    inherits: inherits,\n    withAppended: withAppended,\n    maybeWrapAsError: maybeWrapAsError,\n    toFastProperties: toFastProperties,\n    filledRange: filledRange,\n    toString: safeToString,\n    canAttachTrace: canAttachTrace,\n    ensureErrorObject: ensureErrorObject,\n    originatesFromRejection: originatesFromRejection,\n    markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n    classString: classString,\n    copyDescriptors: copyDescriptors,\n    hasDevTools: typeof chrome !== \"undefined\" && chrome &&\n                 typeof chrome.loadTimes === \"function\",\n    isNode: isNode,\n    hasEnvVariables: hasEnvVariables,\n    env: env,\n    global: globalObject,\n    getNativePromise: getNativePromise,\n    domainBind: domainBind\n};\nret.isRecentNode = ret.isNode && (function() {\n    var version = process.versions.node.split(\".\").map(Number);\n    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);\n})();\n\nif (ret.isNode) ret.toFastProperties(process);\n\ntry {throw new Error(); } catch (e) {ret.lastLineError = e;}\nmodule.exports = ret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/util.js\n// module id = 1\n// module chunks = 0","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isArray.js\n// module id = 2\n// module chunks = 0","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isObject.js\n// module id = 3\n// module chunks = 0","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/keys.js\n// module id = 4\n// module chunks = 0","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/keysIn.js\n// module id = 5\n// module chunks = 0","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_copyObject.js\n// module id = 6\n// module chunks = 0","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_root.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nvar es5 = require(\"./es5\");\nvar Objectfreeze = es5.freeze;\nvar util = require(\"./util\");\nvar inherits = util.inherits;\nvar notEnumerableProp = util.notEnumerableProp;\n\nfunction subError(nameProperty, defaultMessage) {\n    function SubError(message) {\n        if (!(this instanceof SubError)) return new SubError(message);\n        notEnumerableProp(this, \"message\",\n            typeof message === \"string\" ? message : defaultMessage);\n        notEnumerableProp(this, \"name\", nameProperty);\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            Error.call(this);\n        }\n    }\n    inherits(SubError, Error);\n    return SubError;\n}\n\nvar _TypeError, _RangeError;\nvar Warning = subError(\"Warning\", \"warning\");\nvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\nvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\nvar AggregateError = subError(\"AggregateError\", \"aggregate error\");\ntry {\n    _TypeError = TypeError;\n    _RangeError = RangeError;\n} catch(e) {\n    _TypeError = subError(\"TypeError\", \"type error\");\n    _RangeError = subError(\"RangeError\", \"range error\");\n}\n\nvar methods = (\"join pop push shift unshift slice filter forEach some \" +\n    \"every map indexOf lastIndexOf reduce reduceRight sort reverse\").split(\" \");\n\nfor (var i = 0; i < methods.length; ++i) {\n    if (typeof Array.prototype[methods[i]] === \"function\") {\n        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];\n    }\n}\n\nes5.defineProperty(AggregateError.prototype, \"length\", {\n    value: 0,\n    configurable: false,\n    writable: true,\n    enumerable: true\n});\nAggregateError.prototype[\"isOperational\"] = true;\nvar level = 0;\nAggregateError.prototype.toString = function() {\n    var indent = Array(level * 4 + 1).join(\" \");\n    var ret = \"\\n\" + indent + \"AggregateError of:\" + \"\\n\";\n    level++;\n    indent = Array(level * 4 + 1).join(\" \");\n    for (var i = 0; i < this.length; ++i) {\n        var str = this[i] === this ? \"[Circular AggregateError]\" : this[i] + \"\";\n        var lines = str.split(\"\\n\");\n        for (var j = 0; j < lines.length; ++j) {\n            lines[j] = indent + lines[j];\n        }\n        str = lines.join(\"\\n\");\n        ret += str + \"\\n\";\n    }\n    level--;\n    return ret;\n};\n\nfunction OperationalError(message) {\n    if (!(this instanceof OperationalError))\n        return new OperationalError(message);\n    notEnumerableProp(this, \"name\", \"OperationalError\");\n    notEnumerableProp(this, \"message\", message);\n    this.cause = message;\n    this[\"isOperational\"] = true;\n\n    if (message instanceof Error) {\n        notEnumerableProp(this, \"message\", message.message);\n        notEnumerableProp(this, \"stack\", message.stack);\n    } else if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n    }\n\n}\ninherits(OperationalError, Error);\n\nvar errorTypes = Error[\"__BluebirdErrorTypes__\"];\nif (!errorTypes) {\n    errorTypes = Objectfreeze({\n        CancellationError: CancellationError,\n        TimeoutError: TimeoutError,\n        OperationalError: OperationalError,\n        RejectionError: OperationalError,\n        AggregateError: AggregateError\n    });\n    es5.defineProperty(Error, \"__BluebirdErrorTypes__\", {\n        value: errorTypes,\n        writable: false,\n        enumerable: false,\n        configurable: false\n    });\n}\n\nmodule.exports = {\n    Error: Error,\n    TypeError: _TypeError,\n    RangeError: _RangeError,\n    CancellationError: errorTypes.CancellationError,\n    OperationalError: errorTypes.OperationalError,\n    TimeoutError: errorTypes.TimeoutError,\n    AggregateError: errorTypes.AggregateError,\n    Warning: Warning\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/errors.js\n// module id = 8\n// module chunks = 0","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseIteratee.js\n// module id = 9\n// module chunks = 0","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_castPath.js\n// module id = 10\n// module chunks = 0","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_toKey.js\n// module id = 11\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 12\n// module chunks = 0","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getNative.js\n// module id = 13\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isObjectLike.js\n// module id = 14\n// module chunks = 0","var isES5 = (function(){\n    \"use strict\";\n    return this === undefined;\n})();\n\nif (isES5) {\n    module.exports = {\n        freeze: Object.freeze,\n        defineProperty: Object.defineProperty,\n        getDescriptor: Object.getOwnPropertyDescriptor,\n        keys: Object.keys,\n        names: Object.getOwnPropertyNames,\n        getPrototypeOf: Object.getPrototypeOf,\n        isArray: Array.isArray,\n        isES5: isES5,\n        propertyIsWritable: function(obj, prop) {\n            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n            return !!(!descriptor || descriptor.writable || descriptor.set);\n        }\n    };\n} else {\n    var has = {}.hasOwnProperty;\n    var str = {}.toString;\n    var proto = {}.constructor.prototype;\n\n    var ObjectKeys = function (o) {\n        var ret = [];\n        for (var key in o) {\n            if (has.call(o, key)) {\n                ret.push(key);\n            }\n        }\n        return ret;\n    };\n\n    var ObjectGetDescriptor = function(o, key) {\n        return {value: o[key]};\n    };\n\n    var ObjectDefineProperty = function (o, key, desc) {\n        o[key] = desc.value;\n        return o;\n    };\n\n    var ObjectFreeze = function (obj) {\n        return obj;\n    };\n\n    var ObjectGetPrototypeOf = function (obj) {\n        try {\n            return Object(obj).constructor.prototype;\n        }\n        catch (e) {\n            return proto;\n        }\n    };\n\n    var ArrayIsArray = function (obj) {\n        try {\n            return str.call(obj) === \"[object Array]\";\n        }\n        catch(e) {\n            return false;\n        }\n    };\n\n    module.exports = {\n        isArray: ArrayIsArray,\n        keys: ObjectKeys,\n        names: ObjectKeys,\n        defineProperty: ObjectDefineProperty,\n        getDescriptor: ObjectGetDescriptor,\n        freeze: ObjectFreeze,\n        getPrototypeOf: ObjectGetPrototypeOf,\n        isES5: isES5,\n        propertyIsWritable: function() {\n            return true;\n        }\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/es5.js\n// module id = 15\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Symbol.js\n// module id = 16\n// module chunks = 0","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseForOwn.js\n// module id = 17\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseGetTag.js\n// module id = 18\n// module chunks = 0","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_castFunction.js\n// module id = 19\n// module chunks = 0","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_createAssigner.js\n// module id = 20\n// module chunks = 0","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/eq.js\n// module id = 21\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isFunction.js\n// module id = 22\n// module chunks = 0","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayMap.js\n// module id = 23\n// module chunks = 0","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseAssignValue.js\n// module id = 24\n// module chunks = 0","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseGet.js\n// module id = 25\n// module chunks = 0","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/identity.js\n// module id = 26\n// module chunks = 0","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isArrayLike.js\n// module id = 27\n// module chunks = 0","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isBuffer.js\n// module id = 28\n// module chunks = 0","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_ListCache.js\n// module id = 29\n// module chunks = 0","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Stack.js\n// module id = 30\n// module chunks = 0","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_apply.js\n// module id = 31\n// module chunks = 0","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_assignValue.js\n// module id = 32\n// module chunks = 0","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_assocIndexOf.js\n// module id = 33\n// module chunks = 0","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseRest.js\n// module id = 34\n// module chunks = 0","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseSet.js\n// module id = 35\n// module chunks = 0","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getMapData.js\n// module id = 36\n// module chunks = 0","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getPrototype.js\n// module id = 37\n// module chunks = 0","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isIndex.js\n// module id = 38\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isPrototype.js\n// module id = 39\n// module chunks = 0","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_nativeCreate.js\n// module id = 40\n// module chunks = 0","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isArguments.js\n// module id = 41\n// module chunks = 0","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isTypedArray.js\n// module id = 42\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 43\n// module chunks = 0","'use strict';var NodeWebSocket,_object=require('lodash/object'),EventEmitter=require('eventemitter3'),debug=require('debug')('signalk:client'),url=require('url'),Promise=require('bluebird'),agent=require('superagent-promise')(require('superagent'),Promise),BrowserWebSocket=global.WebSocket||global.MozWebSocket;if('undefined'==typeof window)try{NodeWebSocket=require('ws')}catch(a){}var WebSocket=BrowserWebSocket;WebSocket||'undefined'!=typeof window||(WebSocket=NodeWebSocket);function Client(a,b,c){EventEmitter.call(this),this.hostname=a,c?(this.protocol='https',this.wsProtocol='wss',this.port=b||443):(this.protocol='http',this.wsProtocol='ws',this.port=b||80)}require('util').inherits(Client,EventEmitter),Client.prototype.connect=function(a){debug('connect');var b=this.hostname,c=this.port;return a&&(b=a.hostname||b,c=a.port||c),b&&c?this.connectDelta(b+':'+c,a.onData,a.onConnect,a.onDisconnect,a.onError,a.onClose,a.subscribe):this.discoverAndConnect(a)},Client.prototype.connectP=function(a){console.log(a),debug('connect'),debug(a);var b=this.hostname,c=this.port;return a&&(b=a.hostname||b,c=a.port||c),new Promise(function(d,e){var f=this.connectDeltaByUrl.bind(this);this.get('/signalk',b,c).then(function(b){debug('Got '+JSON.stringify(b.body.endpoints,null,2));f(b.body.endpoints.v1['signalk-ws'],a.onData,function onConnect(b){a.onConnect&&a.onConnect(b),d(b)},a.onDisconnect,function onError(b){a.onError&&a.onError(b),e(b)},a.onClose,a.subscribe)}).catch(function(a){e(a)})})},Client.prototype.apiGet=function(a){return this.get('/signalk/v1/api'+a)},Client.prototype.get=function(a,b,c){var d={protocol:this.protocol,hostname:b||this.hostname,port:c||this.port,path:a};return agent('GET',url.format(d))},Client.prototype.discoveryAvailable=function(){return moduleAvailable('mdns')},Client.prototype.startDiscovery=function(){var a=this;return new Promise(function(b,c){a.discoveryAvailable()||(console.log('Discovery requires mdns, please install it with \\'npm install mdns\\' or specify hostname and port'),c('Discovery requires mdns'));var d=require('mdns');a.browser=d.createBrowser(d.tcp('signalk-http'),{resolverSequence:[d.rst.DNSServiceResolve()]}),a.browser.on('serviceUp',function(c){debug('Discovered signalk-http:'+JSON.stringify(c,null,2)),debug('GETting /signalk'),a.get('/signalk',c.host,c.port).then(function(d){debug('Got '+JSON.stringify(d.body.endpoints,null,2));var e={host:c.host,port:c.port,httpResponse:d.body,service:c};a.emit('discovery',e),b(e)})}),debug('Starting discovery'),a.browser.start()})},Client.prototype.stopDiscovery=function(){debug('Stopping discovery'),this.browser&&(this.browser.stop(),debug('Discovery stopping'))},Client.prototype.discoverAndConnect=function(a){debug('discoverAndConnect');var b=this;return this.startDiscovery().then(function(c){var d=c.httpResponse;return b.endpoints=d.endpoints,debug('Connecting to '+JSON.stringify(_object.values(b.endpoints)[0]['signalk-ws'],null,2)),b.stopDiscovery(),b.connectDeltaByUrl(_object.values(b.endpoints)[0]['signalk-ws'],a.onData,a.onConnect,a.onDisconnect,a.onError,a.onClose)})},Client.prototype.connectDelta=function(a,b,c,d,e,f,g){var h={protocol:this.wsProtocol,slashes:!0,hostname:a.split(':')[0],port:a.split(':')[1],pathname:'/signalk/v1/stream'};return g&&(h.query={subscribe:g}),this.connectDeltaByUrl(url.format(h),b,c,d,e,f)},Client.prototype.connectDeltaByUrl=function(a,b,c,d,e,f){var g=url.parse(a);this.hostname=g.hostname,this.port=g.port;var h={context:'vessels.self',subscribe:[{path:'*'}]};debug('Connecting ws to '+g.href);var i={hostname:this.hostname};if('undefined'!=typeof Primus){debug('Using Primus');var j=Primus.connect(a,{reconnect:{maxDelay:15000,minDelay:500,retries:Infinity}});j.on('data',b),i.send=j.write.bind(j),i.disconnect=function(){j.end(),debug('Disconnected')},c?j.on('open',c.bind(this,i)):j.on('open',function(){i.send(h)})}else{debug('Using ws');var k=new WebSocket(a);i.send=function(a){k.send('string'==typeof a?a:JSON.stringify(a))},i.disconnect=function(){k.close(),debug('Disconnected')},k.onopen=function(){debug('open'),c?c(i):i.send(h)},k.onerror=function(a){debug('error:'+a),e&&e(a)},k.onmessage=function(a){try{b(JSON.parse(a.data))}catch(a){console.error(a)}},k.onclose=function(a){debug('close:'+a),f&&f(a)}}return i.subscribeAll=function(){i.send(h)},i},Client.prototype.getSelf=function(){var a={protocol:this.protocol,hostname:this.hostname,port:this.port,pathname:'/signalk/v1/api/vessels/self'};return agent('GET',url.format(a))},Client.prototype.getSelfId=function(){var a={protocol:this.protocol,hostname:this.hostname,port:this.port,pathname:'/signalk/v1/api/self'};return agent('GET',url.format(a))},Client.prototype.getSelfMatcher=function(){return this.getSelfId().then(function(a){var b=a.body,c=b.mmsi||b.uuid;if(c){return function(a){return'self'===a.context||'vessels.self'===a.context||a.context==='vessels.'+c}}return function(){return!0}})},Client.prototype.getMeta=function(a,b){return this.get(a+'/'+b.split('.').join('/')+'/meta')};function isDelta(a){return'undefined'!=typeof a.context}function isHello(a){return'undefined'!=typeof a.version}function moduleAvailable(a){try{return require.resolve(a),!0}catch(a){}return!1}module.exports={Client:Client,isDelta:isDelta,isHello:isHello};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@signalk/client/dist/index.js\n// module id = 44\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Map.js\n// module id = 45\n// module chunks = 0","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_MapCache.js\n// module id = 46\n// module chunks = 0","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayPush.js\n// module id = 47\n// module chunks = 0","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseCreate.js\n// module id = 48\n// module chunks = 0","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseFor.js\n// module id = 49\n// module chunks = 0","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseMerge.js\n// module id = 50\n// module chunks = 0","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneArrayBuffer.js\n// module id = 51\n// module chunks = 0","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_flatRest.js\n// module id = 52\n// module chunks = 0","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getAllKeysIn.js\n// module id = 53\n// module chunks = 0","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getSymbols.js\n// module id = 54\n// module chunks = 0","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getTag.js\n// module id = 55\n// module chunks = 0","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isKey.js\n// module id = 56\n// module chunks = 0","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapToArray.js\n// module id = 57\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keysIn(source), object, customizer);\n});\n\nmodule.exports = assignInWith;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/assignInWith.js\n// module id = 58\n// module chunks = 0","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/get.js\n// module id = 59\n// module chunks = 0","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/hasIn.js\n// module id = 60\n// module chunks = 0","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isLength.js\n// module id = 61\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isSymbol.js\n// module id = 62\n// module chunks = 0","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/is-object.js\n// module id = 63\n// module chunks = 0","\"use strict\";\nmodule.exports = function(NEXT_FILTER) {\nvar util = require(\"./util\");\nvar getKeys = require(\"./es5\").keys;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction catchFilter(instances, cb, promise) {\n    return function(e) {\n        var boundTo = promise._boundValue();\n        predicateLoop: for (var i = 0; i < instances.length; ++i) {\n            var item = instances[i];\n\n            if (item === Error ||\n                (item != null && item.prototype instanceof Error)) {\n                if (e instanceof item) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (typeof item === \"function\") {\n                var matchesPredicate = tryCatch(item).call(boundTo, e);\n                if (matchesPredicate === errorObj) {\n                    return matchesPredicate;\n                } else if (matchesPredicate) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (util.isObject(e)) {\n                var keys = getKeys(item);\n                for (var j = 0; j < keys.length; ++j) {\n                    var key = keys[j];\n                    if (item[key] != e[key]) {\n                        continue predicateLoop;\n                    }\n                }\n                return tryCatch(cb).call(boundTo, e);\n            }\n        }\n        return NEXT_FILTER;\n    };\n}\n\nreturn catchFilter;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/catch_filter.js\n// module id = 64\n// module chunks = 0","\"use strict\";\nvar util = require(\"./util\");\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar errors = require(\"./errors\");\nvar OperationalError = errors.OperationalError;\nvar es5 = require(\"./es5\");\n\nfunction isUntypedError(obj) {\n    return obj instanceof Error &&\n        es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nvar rErrorKey = /^(?:name|message|stack|cause)$/;\nfunction wrapAsOperationalError(obj) {\n    var ret;\n    if (isUntypedError(obj)) {\n        ret = new OperationalError(obj);\n        ret.name = obj.name;\n        ret.message = obj.message;\n        ret.stack = obj.stack;\n        var keys = es5.keys(obj);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!rErrorKey.test(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    util.markAsOriginatingFromRejection(obj);\n    return obj;\n}\n\nfunction nodebackForPromise(promise, multiArgs) {\n    return function(err, value) {\n        if (promise === null) return;\n        if (err) {\n            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        } else if (!multiArgs) {\n            promise._fulfill(value);\n        } else {\n            var $_len = arguments.length;var args = new Array(Math.max($_len - 1, 0)); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];};\n            promise._fulfill(args);\n        }\n        promise = null;\n    };\n}\n\nmodule.exports = nodebackForPromise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/nodeback.js\n// module id = 65\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Uint8Array.js\n// module id = 66\n// module chunks = 0","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayEach.js\n// module id = 67\n// module chunks = 0","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayFilter.js\n// module id = 68\n// module chunks = 0","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayLikeKeys.js\n// module id = 69\n// module chunks = 0","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayReduce.js\n// module id = 70\n// module chunks = 0","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_assignMergeValue.js\n// module id = 71\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseAssign.js\n// module id = 72\n// module chunks = 0","/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFindKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseFindKey.js\n// module id = 73\n// module chunks = 0","var baseForRight = require('./_baseForRight'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwnRight(object, iteratee) {\n  return object && baseForRight(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwnRight;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseForOwnRight.js\n// module id = 74\n// module chunks = 0","var createBaseFor = require('./_createBaseFor');\n\n/**\n * This function is like `baseFor` except that it iterates over properties\n * in the opposite order.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseForRight = createBaseFor(true);\n\nmodule.exports = baseForRight;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseForRight.js\n// module id = 75\n// module chunks = 0","var arrayFilter = require('./_arrayFilter'),\n    isFunction = require('./isFunction');\n\n/**\n * The base implementation of `_.functions` which creates an array of\n * `object` function property names filtered from `props`.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Array} props The property names to filter.\n * @returns {Array} Returns the function names.\n */\nfunction baseFunctions(object, props) {\n  return arrayFilter(props, function(key) {\n    return isFunction(object[key]);\n  });\n}\n\nmodule.exports = baseFunctions;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseFunctions.js\n// module id = 76\n// module chunks = 0","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseGetAllKeys.js\n// module id = 77\n// module chunks = 0","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseIsEqual.js\n// module id = 78\n// module chunks = 0","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_basePickBy.js\n// module id = 79\n// module chunks = 0","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseUnset.js\n// module id = 80\n// module chunks = 0","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet');\n\n/**\n * The base implementation of `_.update`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to update.\n * @param {Function} updater The function to produce the updated value.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseUpdate(object, path, updater, customizer) {\n  return baseSet(object, path, updater(baseGet(object, path)), customizer);\n}\n\nmodule.exports = baseUpdate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseUpdate.js\n// module id = 81\n// module chunks = 0","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseValues.js\n// module id = 82\n// module chunks = 0","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneBuffer.js\n// module id = 83\n// module chunks = 0","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneTypedArray.js\n// module id = 84\n// module chunks = 0","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_copyArray.js\n// module id = 85\n// module chunks = 0","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_createBaseFor.js\n// module id = 86\n// module chunks = 0","var baseInverter = require('./_baseInverter');\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\nmodule.exports = createInverter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_createInverter.js\n// module id = 87\n// module chunks = 0","var baseToPairs = require('./_baseToPairs'),\n    getTag = require('./_getTag'),\n    mapToArray = require('./_mapToArray'),\n    setToPairs = require('./_setToPairs');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Creates a `_.toPairs` or `_.toPairsIn` function.\n *\n * @private\n * @param {Function} keysFunc The function to get the keys of a given object.\n * @returns {Function} Returns the new pairs function.\n */\nfunction createToPairs(keysFunc) {\n  return function(object) {\n    var tag = getTag(object);\n    if (tag == mapTag) {\n      return mapToArray(object);\n    }\n    if (tag == setTag) {\n      return setToPairs(object);\n    }\n    return baseToPairs(object, keysFunc(object));\n  };\n}\n\nmodule.exports = createToPairs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_createToPairs.js\n// module id = 88\n// module chunks = 0","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_defineProperty.js\n// module id = 89\n// module chunks = 0","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_equalArrays.js\n// module id = 90\n// module chunks = 0","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_freeGlobal.js\n// module id = 91\n// module chunks = 0","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getAllKeys.js\n// module id = 92\n// module chunks = 0","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getSymbolsIn.js\n// module id = 93\n// module chunks = 0","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hasPath.js\n// module id = 94\n// module chunks = 0","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_initCloneObject.js\n// module id = 95\n// module chunks = 0","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isStrictComparable.js\n// module id = 96\n// module chunks = 0","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_matchesStrictComparable.js\n// module id = 97\n// module chunks = 0","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_overArg.js\n// module id = 98\n// module chunks = 0","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_overRest.js\n// module id = 99\n// module chunks = 0","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_parent.js\n// module id = 100\n// module chunks = 0","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_setToArray.js\n// module id = 101\n// module chunks = 0","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_setToString.js\n// module id = 102\n// module chunks = 0","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_toSource.js\n// module id = 103\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/assignIn.js\n// module id = 104\n// module chunks = 0","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/constant.js\n// module id = 105\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isPlainObject.js\n// module id = 106\n// module chunks = 0","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/last.js\n// module id = 107\n// module chunks = 0","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nmodule.exports = mergeWith;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/mergeWith.js\n// module id = 108\n// module chunks = 0","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/pickBy.js\n// module id = 109\n// module chunks = 0","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/stubArray.js\n// module id = 110\n// module chunks = 0","var createToPairs = require('./_createToPairs'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable string keyed-value pairs for `object`\n * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n * entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entries\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nvar toPairs = createToPairs(keys);\n\nmodule.exports = toPairs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/toPairs.js\n// module id = 111\n// module chunks = 0","var createToPairs = require('./_createToPairs'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable string keyed-value pairs\n * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n * or set, its entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entriesIn\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairsIn(new Foo);\n * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n */\nvar toPairsIn = createToPairs(keysIn);\n\nmodule.exports = toPairsIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/toPairsIn.js\n// module id = 112\n// module chunks = 0","function GaugeSet() {\n  this.speed = new steelseries.Radial('speedCanvas', {\n    gaugeType: steelseries.GaugeType.TYPE4,\n    frameDesign: steelseries.FrameDesign.TILTED_BLACK,\n    size: 400,\n    titleString: \"SOG\",\n    unitString: \"m/s\",\n    lcdVisible: true,\n    maxValue: 10,\n    maxMeasuredValue: 0,\n    maxMeasuredValueVisible: true,\n    thresholdVisible: false,\n    ledVisible: false,\n    pointerType: steelseries.PointerType.TYPE4\n  });\n\n  this.depth = new steelseries.Radial('depthCanvas', {\n    gaugeType: steelseries.GaugeType.TYPE4,\n    frameDesign: steelseries.FrameDesign.TILTED_BLACK,\n    size: 400,\n    section: [\n      steelseries.Section(0, 4, 'rgba(255, 0, 0, 0.3)'),\n      steelseries.Section(4, 8, 'rgba(220, 220, 0, 0.3)')\n    ],\n    titleString: \"Depth\",\n    unitString: \"m\",\n    lcdVisible: true,\n    maxValue: 20,\n    maxMeasuredValue: 0,\n    maxMeasuredValueVisible: true,\n    thresholdVisible: false,\n    ledVisible: false,\n    pointerType: steelseries.PointerType.TYPE2\n  });\n\n  this.compass = new steelseries.Compass('compassCanvas', {\n    frameDesign: steelseries.FrameDesign.TILTED_BLACK,\n    size: 400,\n    rotateFace: true,\n    pointerType: steelseries.PointerType.TYPE5\n  });\n\n  this.wind = new steelseries.WindDirection('windCanvas', {\n    frameDesign: steelseries.FrameDesign.TILTED_BLACK,\n    size: 400,\n    lcdVisible: true,\n    degreeScaleHalf: true,\n    pointSymbolsVisible: false,\n    pointerType: steelseries.PointerType.TYPE5,\n  });\n\n\n  this.eventHandlers = {\n    \"navigation.speedOverGround\": function(value) {\n      if (value != null) {\n        this.speed.setValue(value);\n      }\n    }.bind(this),\n    \"navigation.courseOverGroundTrue\": function(value) {\n      this.compass.setValue(value / Math.PI * 180);\n    }.bind(this),\n    \"environment.depth.belowTransducer\": function(value) {\n      this.depth.setValue(value);\n    }.bind(this),\n    \"environment.wind.angleApparent\": function(value) {\n      this.wind.setValueLatest(value);\n    }.bind(this)\n  }\n  this.dispatch = this.doDispatch.bind(this);\n};\n\nGaugeSet.prototype = {\n  doDispatch: function dispatch(delta) {\n    if (delta.context === 'vessels.' + this.selfId && delta.updates) {\n      var that  = this;\n      delta.updates.forEach(function(update) {\n        update.values.forEach(function(value) {\n          if (that.eventHandlers[value.path] && typeof that.eventHandlers[value.path] === 'function') {\n            that.eventHandlers[value.path](value.value);\n          }\n        })\n      })\n    }\n  },\n  setSelfId: function(selfId) {\n    this.selfId = selfId;\n  }\n}\n\n\n\nmodule.exports.GaugeSet = GaugeSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/simplegauges.js\n// module id = 113\n// module chunks = 0","/*!\n * Name          : steelseries.js\n * Authors       : Gerrit Grunwald, Mark Crossley\n * Last modified : 29.01.2014\n * Revision      : 0.14.7\n *\n * Copyright (c) 2011, Gerrit Grunwald, Mark Crossley\n * All rights reserved.\n *\n *  Redistribution and use in source and binary forms, with or without modification, are permitted\n *  provided that the following conditions are met:\n *\n *  # Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n *  # Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided with the distribution.\n *\n *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,\n *   BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\n *   SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n *   OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/*globals Tween */\n/*jshint onevar:false,plusplus:false,nomen:false,bitwise:false*/\n'option strict';\n\nvar steelseries = (function () {\n\n    // Constants\n    var HALF_PI     = Math.PI * 0.5,\n        TWO_PI      = Math.PI * 2,\n        PI          = Math.PI,\n        RAD_FACTOR  = Math.PI / 180,\n        DEG_FACTOR  = 180 / Math.PI,\n        doc         = document,\n        lcdFontName = 'LCDMono2Ultra,Arial,Verdana,sans-serif',\n        stdFontName = 'Arial,Verdana,sans-serif';\n\n    //*************************************   C O M P O N O N E N T S   ************************************************\n    var radial = function (canvas, parameters) {\n        parameters = parameters || {};\n        var gaugeType = (undefined === parameters.gaugeType ? steelseries.GaugeType.TYPE4 : parameters.gaugeType),\n            size = (undefined === parameters.size ? 0 : parameters.size),\n            minValue = (undefined === parameters.minValue ? 0 : parameters.minValue),\n            maxValue = (undefined === parameters.maxValue ? (minValue + 100) : parameters.maxValue),\n            niceScale = (undefined === parameters.niceScale ? true : parameters.niceScale),\n            threshold = (undefined === parameters.threshold ? (maxValue - minValue) / 2 + minValue: parameters.threshold),\n            thresholdRising = (undefined === parameters.thresholdRising ? true : parameters.thresholdRising),\n            section = (undefined === parameters.section ? null : parameters.section),\n            area = (undefined === parameters.area ? null : parameters.area),\n            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            pointerType = (undefined === parameters.pointerType ? steelseries.PointerType.TYPE1 : parameters.pointerType),\n            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.RED : parameters.pointerColor),\n            knobType = (undefined === parameters.knobType ? steelseries.KnobType.STANDARD_KNOB : parameters.knobType),\n            knobStyle = (undefined === parameters.knobStyle ? steelseries.KnobStyle.SILVER : parameters.knobStyle),\n            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n            fractionalScaleDecimals = (undefined === parameters.fractionalScaleDecimals ? 1 : parameters.fractionalScaleDecimals),\n            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor),\n            ledVisible = (undefined === parameters.ledVisible ? true : parameters.ledVisible),\n            userLedColor = (undefined === parameters.userLedColor ? steelseries.LedColor.GREEN_LED : parameters.userLedColor),\n            userLedVisible = (undefined === parameters.userLedVisible ? false : parameters.userLedVisible),\n            thresholdVisible = (undefined === parameters.thresholdVisible ? true : parameters.thresholdVisible),\n            minMeasuredValueVisible = (undefined === parameters.minMeasuredValueVisible ? false : parameters.minMeasuredValueVisible),\n            maxMeasuredValueVisible = (undefined === parameters.maxMeasuredValueVisible ? false : parameters.maxMeasuredValueVisible),\n            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            labelNumberFormat = (undefined === parameters.labelNumberFormat ? steelseries.LabelNumberFormat.STANDARD : parameters.labelNumberFormat),\n            playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),\n            alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),\n            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n            tickLabelOrientation = (undefined === parameters.tickLabelOrientation ? (gaugeType === steelseries.GaugeType.TYPE1 ? steelseries.TickLabelOrientation.TANGENT : steelseries.TickLabelOrientation.NORMAL) : parameters.tickLabelOrientation),\n            trendVisible = (undefined === parameters.trendVisible ? false : parameters.trendVisible),\n            trendColors = (undefined === parameters.trendColors ? [steelseries.LedColor.RED_LED, steelseries.LedColor.GREEN_LED, steelseries.LedColor.CYAN_LED] : parameters.trendColors),\n            useOdometer = (undefined === parameters.useOdometer ? false : parameters.useOdometer),\n            odometerParams = (undefined === parameters.odometerParams ? {} : parameters.odometerParams),\n            odometerUseValue = (undefined === parameters.odometerUseValue ? false : parameters.odometerUseValue),\n            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (size === 0) {\n            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        // Create audio tag for alarm sound\n        var audioElement;\n        if (playAlarm && alarmSound !== false) {\n            audioElement = doc.createElement('audio');\n            audioElement.setAttribute('src', alarmSound);\n            audioElement.setAttribute('preload', 'auto');\n        }\n\n        var value = minValue;\n        var odoValue = minValue;\n        var self = this;\n\n        // Properties\n        var minMeasuredValue = maxValue;\n        var maxMeasuredValue = minValue;\n\n        var ledBlinking = false;\n        var userLedBlinking = false;\n\n        var ledTimerId = 0;\n        var userLedTimerId = 0;\n        var tween;\n        var repainting = false;\n\n        var trendIndicator = steelseries.TrendState.OFF;\n        var trendSize = size * 0.06;\n        var trendPosX = size * 0.29;\n        var trendPosY = size * 0.36;\n\n        // GaugeType specific private variables\n        var freeAreaAngle;\n        var rotationOffset;\n        var tickmarkOffset;\n        var angleRange;\n        var angleStep;\n\n        var angle = rotationOffset + (value - minValue) * angleStep;\n\n        var imageWidth = size;\n        var imageHeight = size;\n\n        var centerX = imageWidth / 2;\n        var centerY = imageHeight / 2;\n\n        // Misc\n        var ledSize = size * 0.093457;\n        var ledPosX = 0.6 * imageWidth;\n        var ledPosY = 0.4 * imageHeight;\n        var userLedPosX = gaugeType === steelseries.GaugeType.TYPE3 ? 0.6 * imageWidth : centerX - ledSize / 2;\n        var userLedPosY = gaugeType === steelseries.GaugeType.TYPE3 ? 0.72 * imageHeight : 0.75 * imageHeight;\n        var lcdFontHeight = Math.floor(imageWidth / 10);\n        var stdFont = lcdFontHeight + 'px ' + stdFontName;\n        var lcdFont = lcdFontHeight + 'px ' + lcdFontName;\n        var lcdHeight = imageHeight * 0.13;\n        var lcdWidth = imageWidth * 0.4;\n        var lcdPosX = (imageWidth - lcdWidth) / 2;\n        var lcdPosY = imageHeight * 0.57;\n        var odoPosX, odoPosY = imageHeight * 0.61;\n        var shadowOffset = imageWidth * 0.006;\n\n        // Constants\n        var initialized = false;\n\n        // Tickmark specific private variables\n        var niceMinValue = minValue;\n        var niceMaxValue = maxValue;\n        var niceRange = maxValue - minValue;\n        var range = niceMaxValue - niceMinValue;\n        var minorTickSpacing = 0;\n        var majorTickSpacing = 0;\n        var maxNoOfMinorTicks = 10;\n        var maxNoOfMajorTicks = 10;\n\n        // Method to calculate nice values for min, max and range for the tickmarks\n        var calculate = function calculate() {\n            if (niceScale) {\n                niceRange = calcNiceNumber(maxValue - minValue, false);\n                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n                niceMinValue = Math.floor(minValue / majorTickSpacing) * majorTickSpacing;\n                niceMaxValue = Math.ceil(maxValue / majorTickSpacing) * majorTickSpacing;\n                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n                minValue = niceMinValue;\n                maxValue = niceMaxValue;\n                range = maxValue - minValue;\n            } else {\n                niceRange = (maxValue - minValue);\n                niceMinValue = minValue;\n                niceMaxValue = maxValue;\n                range = niceRange;\n                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n            }\n\n            switch (gaugeType.type) {\n            case 'type1':\n                freeAreaAngle = 0;\n                rotationOffset = PI;\n                tickmarkOffset = HALF_PI;\n                angleRange = HALF_PI;\n                angleStep = angleRange / range;\n                break;\n\n            case 'type2':\n                freeAreaAngle = 0;\n                rotationOffset = PI;\n                tickmarkOffset = HALF_PI;\n                angleRange = PI;\n                angleStep = angleRange / range;\n                break;\n\n            case 'type3':\n                freeAreaAngle = 0;\n                rotationOffset = HALF_PI;\n                tickmarkOffset = 0;\n                angleRange = 1.5 * PI;\n                angleStep = angleRange / range;\n                break;\n\n            case 'type4':\n            /* falls through */\n            default:\n                freeAreaAngle = 60 * RAD_FACTOR;\n                rotationOffset = HALF_PI + (freeAreaAngle / 2);\n                tickmarkOffset = 0;\n                angleRange = TWO_PI - freeAreaAngle;\n                angleStep = angleRange / range;\n                break;\n            }\n            angle = rotationOffset + (value - minValue) * angleStep;\n        };\n\n        // **************   Buffer creation  ********************\n        // Buffer for the frame\n        var frameBuffer = createBuffer(size, size);\n        var frameContext = frameBuffer.getContext('2d');\n\n        // Buffer for the background\n        var backgroundBuffer = createBuffer(size, size);\n        var backgroundContext = backgroundBuffer.getContext('2d');\n\n        var lcdBuffer;\n\n        // Buffer for led on painting code\n        var ledBufferOn = createBuffer(ledSize, ledSize);\n        var ledContextOn = ledBufferOn.getContext('2d');\n\n        // Buffer for led off painting code\n        var ledBufferOff = createBuffer(ledSize, ledSize);\n        var ledContextOff = ledBufferOff.getContext('2d');\n\n        // Buffer for current led painting code\n        var ledBuffer = ledBufferOff;\n\n        // Buffer for user led on painting code\n        var userLedBufferOn = createBuffer(ledSize, ledSize);\n        var userLedContextOn = userLedBufferOn.getContext('2d');\n\n        // Buffer for user led off painting code\n        var userLedBufferOff = createBuffer(ledSize, ledSize);\n        var userLedContextOff = userLedBufferOff.getContext('2d');\n\n        // Buffer for current user led painting code\n        var userLedBuffer = userLedBufferOff;\n\n        // Buffer for the minMeasuredValue indicator\n        var minMeasuredValueBuffer = createBuffer(Math.ceil(size * 0.028037), Math.ceil(size * 0.028037));\n        var minMeasuredValueCtx = minMeasuredValueBuffer.getContext('2d');\n\n        // Buffer for the maxMeasuredValue indicator\n        var maxMeasuredValueBuffer = createBuffer(Math.ceil(size * 0.028037), Math.ceil(size * 0.028037));\n        var maxMeasuredValueCtx = maxMeasuredValueBuffer.getContext('2d');\n\n        // Buffer for pointer image painting code\n        var pointerBuffer = createBuffer(size, size);\n        var pointerContext = pointerBuffer.getContext('2d');\n\n        // Buffer for static foreground painting code\n        var foregroundBuffer = createBuffer(size, size);\n        var foregroundContext = foregroundBuffer.getContext('2d');\n\n        // Buffers for trend indicators\n        var trendUpBuffer, trendSteadyBuffer, trendDownBuffer, trendOffBuffer;\n\n        // Buffer for odometer\n        var odoGauge, odoBuffer, odoContext;\n        if (useOdometer && lcdVisible) {\n            odoBuffer = createBuffer(10, 10);          // size doesn't matter, it will get reset by odometer code\n            odoContext = odoBuffer.getContext('2d');\n        }\n\n        // **************   Image creation  ********************\n        var drawLcdText = function (ctx, value) {\n            ctx.restore();\n            ctx.save();\n            ctx.textAlign = 'right';\n            ctx.strokeStyle = lcdColor.textColor;\n            ctx.fillStyle = lcdColor.textColor;\n\n            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n                ctx.shadowColor = 'gray';\n                ctx.shadowOffsetX = imageWidth * 0.007;\n                ctx.shadowOffsetY = imageWidth * 0.007;\n                ctx.shadowBlur = imageWidth * 0.007;\n            }\n            if (digitalFont) {\n                ctx.font = lcdFont;\n            } else {\n                ctx.font = stdFont;\n            }\n            ctx.fillText(value.toFixed(lcdDecimals), lcdPosX + lcdWidth - lcdWidth * 0.05, lcdPosY + lcdHeight * 0.5 + lcdFontHeight * 0.38, lcdWidth * 0.9);\n\n            ctx.restore();\n        };\n\n        var drawPostsImage = function (ctx) {\n            ctx.save();\n\n            if ('type1' === gaugeType.type) {\n                // Draw max center top post\n                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.523364, imageHeight * 0.130841);\n            }\n\n            if ('type1' === gaugeType.type || 'type2' === gaugeType.type) {\n                // Draw min left post\n                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.130841, imageHeight * 0.514018);\n            }\n\n            if ('type2' === gaugeType.type || 'type3' === gaugeType.type) {\n                // Draw max right post\n                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.831775, imageHeight * 0.514018);\n            }\n\n            if ('type3' === gaugeType.type) {\n                // Draw min center bottom post\n                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.523364, imageHeight * 0.831775);\n            }\n\n            if ('type4' === gaugeType.type) {\n                // Min post\n                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.336448, imageHeight * 0.803738);\n\n                // Max post\n                ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.626168, imageHeight * 0.803738);\n            }\n\n            ctx.restore();\n\n        };\n\n        var createThresholdImage = function () {\n            var thresholdBuffer = doc.createElement('canvas');\n            thresholdBuffer.width = Math.ceil(size * 0.046728);\n            thresholdBuffer.height = Math.ceil(thresholdBuffer.width * 0.9);\n            var thresholdCtx = thresholdBuffer.getContext('2d');\n\n            thresholdCtx.save();\n            var gradThreshold = thresholdCtx.createLinearGradient(0, 0.1, 0, thresholdBuffer.height * 0.9);\n            gradThreshold.addColorStop(0, '#520000');\n            gradThreshold.addColorStop(0.3, '#fc1d00');\n            gradThreshold.addColorStop(0.59, '#fc1d00');\n            gradThreshold.addColorStop(1, '#520000');\n            thresholdCtx.fillStyle = gradThreshold;\n\n            thresholdCtx.beginPath();\n            thresholdCtx.moveTo(thresholdBuffer.width * 0.5, 0.1);\n            thresholdCtx.lineTo(thresholdBuffer.width * 0.9, thresholdBuffer.height * 0.9);\n            thresholdCtx.lineTo(thresholdBuffer.width * 0.1, thresholdBuffer.height * 0.9);\n            thresholdCtx.lineTo(thresholdBuffer.width * 0.5, 0.1);\n            thresholdCtx.closePath();\n\n            thresholdCtx.fill();\n            thresholdCtx.strokeStyle = '#FFFFFF';\n            thresholdCtx.stroke();\n\n            thresholdCtx.restore();\n\n            return thresholdBuffer;\n        };\n\n        var drawAreaSectionImage = function (ctx, start, stop, color, filled) {\n            if (start < minValue) {\n                start = minValue;\n            } else if (start > maxValue) {\n                start = maxValue;\n            }\n            if (stop < minValue) {\n                stop = minValue;\n            } else if (stop > maxValue) {\n                stop = maxValue;\n            }\n            if (start >= stop) {\n                return;\n            }\n            ctx.save();\n            ctx.strokeStyle = color;\n            ctx.fillStyle = color;\n            ctx.lineWidth = imageWidth * 0.035;\n            var startAngle = (angleRange / range * start - angleRange / range * minValue);\n            var stopAngle = startAngle + (stop - start) / (range / angleRange);\n            ctx.translate(centerX, centerY);\n            ctx.rotate(rotationOffset);\n            ctx.beginPath();\n            if (filled) {\n                ctx.moveTo(0, 0);\n                ctx.arc(0, 0, imageWidth * 0.365 - ctx.lineWidth / 2, startAngle, stopAngle, false);\n            } else {\n                ctx.arc(0, 0, imageWidth * 0.365, startAngle, stopAngle, false);\n            }\n            if (filled) {\n                ctx.moveTo(0, 0);\n                ctx.fill();\n            } else {\n                ctx.stroke();\n            }\n\n            ctx.translate(-centerX, -centerY);\n            ctx.restore();\n        };\n\n        var drawTickmarksImage = function (ctx, labelNumberFormat) {\n            var fontSize = Math.ceil(imageWidth * 0.04),\n                alpha = rotationOffset,      // Tracks total rotation\n                rotationStep = angleStep * minorTickSpacing,\n                textRotationAngle,\n                valueCounter = minValue,\n                majorTickCounter = maxNoOfMinorTicks - 1,\n                OUTER_POINT = imageWidth * 0.38,\n                MAJOR_INNER_POINT = imageWidth * 0.35,\n                MED_INNER_POINT = imageWidth * 0.355,\n                MINOR_INNER_POINT = imageWidth * 0.36,\n                TEXT_TRANSLATE_X = imageWidth * 0.3,\n                TEXT_WIDTH = imageWidth * 0.1,\n                HALF_MAX_NO_OF_MINOR_TICKS = maxNoOfMinorTicks / 2,\n                MAX_VALUE_ROUNDED = parseFloat(maxValue.toFixed(2)),\n                i;\n\n            backgroundColor.labelColor.setAlpha(1);\n            ctx.save();\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.font = fontSize + 'px' + stdFontName;\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.translate(centerX, centerY);\n            ctx.rotate(rotationOffset);\n\n            if (gaugeType.type === 'type1' || gaugeType.type === 'type2') {\n                TEXT_WIDTH = imageWidth * 0.04;\n            }\n\n            for (i = minValue; parseFloat(i.toFixed(2)) <= MAX_VALUE_ROUNDED; i += minorTickSpacing) {\n                textRotationAngle = rotationStep + HALF_PI;\n                majorTickCounter++;\n                // Draw major tickmarks\n                if (majorTickCounter === maxNoOfMinorTicks) {\n                    ctx.lineWidth = 1.5;\n                    ctx.beginPath();\n                    ctx.moveTo(OUTER_POINT, 0);\n                    ctx.lineTo(MAJOR_INNER_POINT, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                    ctx.save();\n                    ctx.translate(TEXT_TRANSLATE_X, 0);\n\n                    switch (tickLabelOrientation.type) {\n                    case 'horizontal':\n                        textRotationAngle = -alpha;\n                        break;\n\n                    case 'tangent':\n                        textRotationAngle = (alpha <= HALF_PI + PI ? PI : 0);\n                        break;\n\n                    case 'normal':\n                    /* falls through */\n                    default:\n                        textRotationAngle = HALF_PI;\n                        break;\n                    }\n                    ctx.rotate(textRotationAngle);\n\n                    switch (labelNumberFormat.format) {\n                    case 'fractional':\n                        ctx.fillText((valueCounter.toFixed(fractionalScaleDecimals)), 0, 0, TEXT_WIDTH);\n                        break;\n\n                    case 'scientific':\n                        ctx.fillText((valueCounter.toPrecision(2)), 0, 0, TEXT_WIDTH);\n                        break;\n\n                    case 'standard':\n                    /* falls through */\n                    default:\n                        ctx.fillText((valueCounter.toFixed(0)), 0, 0, TEXT_WIDTH);\n                        break;\n                    }\n                    ctx.translate(-TEXT_TRANSLATE_X, 0);\n                    ctx.restore();\n\n                    valueCounter += majorTickSpacing;\n                    majorTickCounter = 0;\n                    ctx.rotate(rotationStep);\n                    alpha += rotationStep;\n                    continue;\n                }\n\n                // Draw tickmark every minor tickmark spacing\n                if (0 === maxNoOfMinorTicks % 2 && majorTickCounter === (HALF_MAX_NO_OF_MINOR_TICKS)) {\n                    ctx.lineWidth = 1;\n                    ctx.beginPath();\n                    ctx.moveTo(OUTER_POINT, 0);\n                    ctx.lineTo(MED_INNER_POINT, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                } else {\n                    ctx.lineWidth = 0.5;\n                    ctx.beginPath();\n                    ctx.moveTo(OUTER_POINT, 0);\n                    ctx.lineTo(MINOR_INNER_POINT, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                }\n                ctx.rotate(rotationStep);\n                alpha += rotationStep;\n            }\n\n            /*\n             // Logarithmic scale\n             var tmp = 0.1;\n             var minValueLog10 = 0.1;\n             var maxValueLog10 = parseInt(Math.pow(10, Math.ceil(Math.log10(maxValue))));\n             var drawLabel = true;\n             angleStep = angleRange / (maxValueLog10 - minValueLog10)\n             for (var scaleFactor = minValueLog10 ; scaleFactor <= maxValueLog10 ; scaleFactor *= 10)\n             {\n             for (var i = parseFloat((1 * scaleFactor).toFixed(1)) ; i < parseFloat((10 * scaleFactor).toFixed(1)) ; i += scaleFactor)\n             {\n             textRotationAngle =+ rotationStep + HALF_PI;\n\n             if(drawLabel)\n             {\n             ctx.lineWidth = 1.5;\n             ctx.beginPath();\n             ctx.moveTo(imageWidth * 0.38,0);\n             ctx.lineTo(imageWidth * 0.35,0);\n             ctx.closePath();\n             ctx.stroke();\n             ctx.save();\n             ctx.translate(imageWidth * 0.31, 0);\n             ctx.rotate(textRotationAngle);\n             ctx.fillText(parseFloat((i).toFixed(1)), 0, 0, imageWidth * 0.0375);\n             ctx.translate(-imageWidth * 0.31, 0);\n             ctx.restore();\n             drawLabel = false;\n             }\n             else\n             {\n             ctx.lineWidth = 0.5;\n             ctx.beginPath();\n             ctx.moveTo(imageWidth * 0.38,0);\n             ctx.lineTo(imageWidth * 0.36,0);\n             ctx.closePath();\n             ctx.stroke();\n             }\n             //doc.write('log10 scale value: ' + parseFloat((i).toFixed(1)) + '<br>');\n             //Math.log10(parseFloat((i).toFixed(1)));\n\n             ctx.rotate(rotationStep);\n             }\n             tmp = 0.1;\n             drawLabel = true;\n             }\n             */\n\n            ctx.translate(-centerX, -centerY);\n            ctx.restore();\n        };\n\n        // **************   Initialization  ********************\n        // Draw all static painting code to background\n        var init = function (parameters) {\n            parameters = parameters || {};\n            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n            var drawLed = (undefined === parameters.led ? false : parameters.led);\n            var drawUserLed = (undefined === parameters.userLed ? false : parameters.userLed);\n            var drawPointer = (undefined === parameters.pointer ? false : parameters.pointer);\n            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n            var drawTrend = (undefined === parameters.trend ? false : parameters.trend);\n            var drawOdo = (undefined === parameters.odo ? false : parameters.odo);\n\n            initialized = true;\n\n            // Calculate the current min and max values and the range\n            calculate();\n\n            // Create frame in frame buffer (backgroundBuffer)\n            if (drawFrame && frameVisible) {\n                drawRadialFrameImage(frameContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n            }\n\n            // Create background in background buffer (backgroundBuffer)\n            if (drawBackground && backgroundVisible) {\n                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\n                // Create custom layer in background buffer (backgroundBuffer)\n                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n            }\n\n            if (drawLed) {\n                // Draw LED ON in ledBuffer_ON\n                ledContextOn.drawImage(createLedImage(Math.ceil(size * 0.093457), 1, ledColor), 0, 0);\n\n                // Draw LED OFF in ledBuffer_OFF\n                ledContextOff.drawImage(createLedImage(Math.ceil(size * 0.093457), 0, ledColor), 0, 0);\n            }\n\n            if (drawUserLed) {\n                // Draw user LED ON in userLedBuffer_ON\n                userLedContextOn.drawImage(createLedImage(Math.ceil(size * 0.093457), 1, userLedColor), 0, 0);\n\n                // Draw user LED OFF in userLedBuffer_OFF\n                userLedContextOff.drawImage(createLedImage(Math.ceil(size * 0.093457), 0, userLedColor), 0, 0);\n            }\n\n            // Draw min measured value indicator in minMeasuredValueBuffer\n            if (minMeasuredValueVisible) {\n                minMeasuredValueCtx.drawImage(createMeasuredValueImage(Math.ceil(size * 0.028037), steelseries.ColorDef.BLUE.dark.getRgbaColor(), true, true), 0, 0);\n            }\n\n            // Draw max measured value indicator in maxMeasuredValueBuffer\n            if (maxMeasuredValueVisible) {\n                maxMeasuredValueCtx.drawImage(createMeasuredValueImage(Math.ceil(size * 0.028037), steelseries.ColorDef.RED.medium.getRgbaColor(), true), 0, 0);\n            }\n\n            // Create alignment posts in background buffer (backgroundBuffer)\n            if (drawBackground && backgroundVisible) {\n                drawPostsImage(backgroundContext);\n\n                // Create section in background buffer (backgroundBuffer)\n                if (null !== section && 0 < section.length) {\n                    var sectionIndex = section.length;\n                    do {\n                        sectionIndex--;\n                        drawAreaSectionImage(backgroundContext, section[sectionIndex].start, section[sectionIndex].stop, section[sectionIndex].color, false);\n                    }\n                    while (0 < sectionIndex);\n                }\n\n                // Create area in background buffer (backgroundBuffer)\n                if (null !== area && 0 < area.length) {\n                    var areaIndex = area.length;\n                    do {\n                        areaIndex--;\n                        drawAreaSectionImage(backgroundContext, area[areaIndex].start, area[areaIndex].stop, area[areaIndex].color, true);\n                    }\n                    while (0 < areaIndex);\n                }\n\n                // Create tickmarks in background buffer (backgroundBuffer)\n                drawTickmarksImage(backgroundContext, labelNumberFormat);\n\n                // Create title in background buffer (backgroundBuffer)\n                drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, true, true);\n            }\n\n            // Draw threshold image to background context\n            if (drawBackground && thresholdVisible) {\n                backgroundContext.save();\n                backgroundContext.translate(centerX, centerY);\n                backgroundContext.rotate(rotationOffset + (threshold - minValue) * angleStep + HALF_PI);\n                backgroundContext.translate(-centerX, -centerY);\n                backgroundContext.drawImage(createThresholdImage(), imageWidth * 0.475, imageHeight * 0.13);\n                backgroundContext.translate(centerX, centerY);\n                backgroundContext.restore();\n            }\n\n            // Create lcd background if selected in background buffer (backgroundBuffer)\n            if (drawBackground && lcdVisible) {\n                if (useOdometer && drawOdo) {\n                    odoGauge = new steelseries.Odometer('', {\n                            _context: odoContext,\n                            height: size * 0.075,\n                            decimals: odometerParams.decimals,\n                            digits: (odometerParams.digits === undefined ? 5 : odometerParams.digits),\n                            valueForeColor: odometerParams.valueForeColor,\n                            valueBackColor: odometerParams.valueBackColor,\n                            decimalForeColor: odometerParams.decimalForeColor,\n                            decimalBackColor: odometerParams.decimalBackColor,\n                            font: odometerParams.font,\n                            value: value\n                        });\n                    odoPosX = (imageWidth - odoBuffer.width) / 2;\n                } else if (!useOdometer) {\n                    lcdBuffer = createLcdBackgroundImage(lcdWidth, lcdHeight, lcdColor);\n                    backgroundContext.drawImage(lcdBuffer, lcdPosX, lcdPosY);\n                }\n            }\n\n            // Create pointer image in pointer buffer (contentBuffer)\n            if (drawPointer) {\n                drawPointerImage(pointerContext, imageWidth, pointerType, pointerColor, backgroundColor.labelColor);\n            }\n\n            // Create foreground in foreground buffer (foregroundBuffer)\n            if (drawForeground && foregroundVisible) {\n                var knobVisible = (pointerType.type === 'type15' || pointerType.type === 'type16' ? false : true);\n                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, knobVisible, knobType, knobStyle, gaugeType);\n            }\n\n            // Create the trend indicator buffers\n            if (drawTrend && trendVisible) {\n                trendUpBuffer = createTrendIndicator(trendSize, steelseries.TrendState.UP, trendColors);\n                trendSteadyBuffer = createTrendIndicator(trendSize, steelseries.TrendState.STEADY, trendColors);\n                trendDownBuffer = createTrendIndicator(trendSize, steelseries.TrendState.DOWN, trendColors);\n                trendOffBuffer = createTrendIndicator(trendSize, steelseries.TrendState.OFF, trendColors);\n            }\n        };\n\n        var resetBuffers = function (buffers) {\n            buffers = buffers || {};\n            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n            var resetLed = (undefined === buffers.led ? false : buffers.led);\n            var resetUserLed = (undefined === buffers.userLed ? false : buffers.userLed);\n            var resetPointer = (undefined === buffers.pointer ? false : buffers.pointer);\n            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\n            if (resetFrame) {\n                frameBuffer.width = size;\n                frameBuffer.height = size;\n                frameContext = frameBuffer.getContext('2d');\n            }\n\n            if (resetBackground) {\n                backgroundBuffer.width = size;\n                backgroundBuffer.height = size;\n                backgroundContext = backgroundBuffer.getContext('2d');\n            }\n\n            if (resetLed) {\n                ledBufferOn.width = Math.ceil(size * 0.093457);\n                ledBufferOn.height = Math.ceil(size * 0.093457);\n                ledContextOn = ledBufferOn.getContext('2d');\n\n                ledBufferOff.width = Math.ceil(size * 0.093457);\n                ledBufferOff.height = Math.ceil(size * 0.093457);\n                ledContextOff = ledBufferOff.getContext('2d');\n\n                // Buffer for current led painting code\n                ledBuffer = ledBufferOff;\n            }\n\n            if (resetUserLed) {\n                userLedBufferOn.width = Math.ceil(size * 0.093457);\n                userLedBufferOn.height = Math.ceil(size * 0.093457);\n                userLedContextOn = userLedBufferOn.getContext('2d');\n\n                userLedBufferOff.width = Math.ceil(size * 0.093457);\n                userLedBufferOff.height = Math.ceil(size * 0.093457);\n                userLedContextOff = userLedBufferOff.getContext('2d');\n\n                // Buffer for current user led painting code\n                userLedBuffer = userLedBufferOff;\n            }\n\n            if (resetPointer) {\n                pointerBuffer.width = size;\n                pointerBuffer.height = size;\n                pointerContext = pointerBuffer.getContext('2d');\n            }\n\n            if (resetForeground) {\n                foregroundBuffer.width = size;\n                foregroundBuffer.height = size;\n                foregroundContext = foregroundBuffer.getContext('2d');\n            }\n        };\n\n        var toggleAndRepaintLed = function () {\n            if (ledVisible) {\n                if (ledBuffer === ledBufferOn) {\n                    ledBuffer = ledBufferOff;\n                } else {\n                    ledBuffer = ledBufferOn;\n                }\n                if (!repainting) {\n                    repainting = true;\n                    requestAnimFrame(self.repaint);\n                }\n            }\n        };\n\n        var toggleAndRepaintUserLed = function () {\n            if (userLedVisible) {\n                if (userLedBuffer === userLedBufferOn) {\n                    userLedBuffer = userLedBufferOff;\n                } else {\n                    userLedBuffer = userLedBufferOn;\n                }\n                if (!repainting) {\n                    repainting = true;\n                    requestAnimFrame(self.repaint);\n                }\n            }\n        };\n\n        var blink = function (blinking) {\n            if (blinking) {\n                ledTimerId = setInterval(toggleAndRepaintLed, 1000);\n            } else {\n                clearInterval(ledTimerId);\n                ledBuffer = ledBufferOff;\n            }\n        };\n\n        var blinkUser = function (blinking) {\n            if (blinking) {\n                userLedTimerId = setInterval(toggleAndRepaintUserLed, 1000);\n            } else {\n                clearInterval(userLedTimerId);\n                userLedBuffer = userLedBufferOff;\n            }\n        };\n\n        //************************************ Public methods **************************************\n        this.setValue = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue);\n            if (value !== targetValue) {\n                value = targetValue;\n\n                if (value > maxMeasuredValue) {\n                    maxMeasuredValue = value;\n                }\n                if (value < minMeasuredValue) {\n                    minMeasuredValue = value;\n                }\n\n                if ((value >= threshold && !ledBlinking && thresholdRising) ||\n                    (value <= threshold && !ledBlinking && !thresholdRising)) {\n                    ledBlinking = true;\n                    blink(ledBlinking);\n                    if (playAlarm) {\n                        audioElement.play();\n                    }\n                } else if ((value < threshold && ledBlinking && thresholdRising) ||\n                           (value > threshold && ledBlinking && !thresholdRising)) {\n                    ledBlinking = false;\n                    blink(ledBlinking);\n                    if (playAlarm) {\n                        audioElement.pause();\n                    }\n                }\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getValue = function () {\n            return value;\n        };\n\n        this.setOdoValue = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < 0 ? 0 : newValue);\n            if (odoValue !== targetValue) {\n                odoValue = targetValue;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getOdoValue = function () {\n            return odoValue;\n        };\n\n        this.setValueAnimated = function (newValue, callback) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue)),\n                gauge = this,\n                time;\n\n            if (value !== targetValue) {\n                if (undefined !== tween && tween.isPlaying) {\n                    tween.stop();\n                }\n                time = fullScaleDeflectionTime * Math.abs(targetValue - value) / (maxValue - minValue);\n                time = Math.max(time, fullScaleDeflectionTime / 5);\n                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n                //tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, 1);\n                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, value, targetValue, 1);\n\n                tween.onMotionChanged = function (event) {\n                    value = event.target._pos;\n\n                    if ((value >= threshold && !ledBlinking && thresholdRising) ||\n                        (value <= threshold && !ledBlinking && !thresholdRising)) {\n                        ledBlinking = true;\n                        blink(ledBlinking);\n                        if (playAlarm) {\n                            audioElement.play();\n                        }\n                    } else if ((value < threshold && ledBlinking && thresholdRising) ||\n                               (value > threshold && ledBlinking && !thresholdRising)) {\n                        ledBlinking = false;\n                        blink(ledBlinking);\n                        if (playAlarm) {\n                            audioElement.pause();\n                        }\n                    }\n\n                    if (value > maxMeasuredValue) {\n                        maxMeasuredValue = value;\n                    }\n                    if (value < minMeasuredValue) {\n                        minMeasuredValue = value;\n                    }\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tween.onMotionFinished = callback;\n                }\n\n                tween.start();\n            }\n            return this;\n        };\n\n        this.resetMinMeasuredValue = function () {\n            minMeasuredValue = value;\n            this.repaint();\n        };\n\n        this.resetMaxMeasuredValue = function () {\n            maxMeasuredValue = value;\n            this.repaint();\n            return this;\n        };\n\n        this.setMinMeasuredValueVisible = function (visible) {\n            minMeasuredValueVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setMaxMeasuredValueVisible = function (visible) {\n            maxMeasuredValueVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setMaxMeasuredValue = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue);\n            maxMeasuredValue = targetValue;\n            this.repaint();\n            return this;\n        };\n\n        this.setMinMeasuredValue = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue);\n            minMeasuredValue = targetValue;\n            this.repaint();\n            return this;\n        };\n\n        this.setTitleString = function (title) {\n            titleString = title;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setUnitString = function (unit) {\n            unitString = unit;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setMinValue = function (value) {\n            minValue = parseFloat(value);\n            resetBuffers({frame: true,\n                          background: true});\n            init({frame: true,\n                  background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.getMinValue = function () {\n            return minValue;\n        };\n\n        this.setMaxValue = function (value) {\n            maxValue = parseFloat(value);\n            resetBuffers({frame: true,\n                          background: true});\n            init({frame: true,\n                  background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.getMaxValue = function () {\n            return maxValue;\n        };\n\n        this.setThreshold = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue);\n            threshold = targetValue;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setArea = function (areaVal) {\n            area = areaVal;\n            resetBuffers({background: true,\n                          foreground: true});\n            init({background: true,\n                  foreground: true\n                  });\n            this.repaint();\n            return this;\n        };\n\n        this.setSection = function (areaSec) {\n            section = areaSec;\n            resetBuffers({background: true,\n                          foreground: true});\n            init({background: true,\n                  foreground: true\n                  });\n            this.repaint();\n            return this;\n        };\n\n        this.setThresholdVisible = function (visible) {\n            thresholdVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setThresholdRising = function (rising) {\n            thresholdRising = !!rising;\n            // reset existing threshold alerts\n            ledBlinking = !ledBlinking;\n            blink(ledBlinking);\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdDecimals = function (decimals) {\n            lcdDecimals = parseInt(decimals, 10);\n            this.repaint();\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers({frame: true});\n            frameDesign = newFrameDesign;\n            init({frame: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            resetBuffers({background: true,\n                          pointer: (pointerType.type === 'type2' || pointerType.type === 'type13' ? true : false)       // type2 & 13 depend on background\n                });\n            backgroundColor = newBackgroundColor;\n            init({background: true,   // type2 & 13 depend on background\n                  pointer: (pointerType.type === 'type2' || pointerType.type === 'type13' ? true : false)\n                });\n            this.repaint();\n            return this;\n        };\n\n        this.setForegroundType = function (newForegroundType) {\n            resetBuffers({foreground: true});\n            foregroundType = newForegroundType;\n            init({foreground: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerType = function (newPointerType) {\n            resetBuffers({pointer: true,\n                          foreground: true\n                         });\n            pointerType = newPointerType;\n            init({pointer: true,\n                  foreground: true\n                  });\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerColor = function (newPointerColor) {\n            resetBuffers({pointer: true});\n            pointerColor = newPointerColor;\n            init({pointer: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLedColor = function (newLedColor) {\n            resetBuffers({led: true});\n            ledColor = newLedColor;\n            init({led: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setUserLedColor = function (newLedColor) {\n            resetBuffers({userLed: true});\n            userLedColor = newLedColor;\n            init({userLed: true});\n            this.repaint();\n            return this;\n        };\n\n        this.toggleUserLed = function () {\n            if (userLedBuffer === userLedBufferOn) {\n                userLedBuffer = userLedBufferOff;\n            } else {\n                userLedBuffer = userLedBufferOn;\n            }\n            this.repaint();\n            return this;\n        };\n\n        this.setUserLedOnOff = function (on) {\n            if (true === on) {\n                userLedBuffer = userLedBufferOn;\n            } else {\n                userLedBuffer = userLedBufferOff;\n            }\n            this.repaint();\n            return this;\n        };\n\n        this.blinkUserLed = function (blink) {\n            if (blink) {\n                if (!userLedBlinking) {\n                    blinkUser(true);\n                    userLedBlinking = true;\n                }\n            } else {\n                if (userLedBlinking) {\n                    clearInterval(userLedTimerId);\n                    userLedBlinking = false;\n                }\n            }\n            return this;\n        };\n\n        this.setLedVisible = function (visible) {\n            ledVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setUserLedVisible = function (visible) {\n            userLedVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdColor = function (newLcdColor) {\n            lcdColor = newLcdColor;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setTrend = function (newValue) {\n            trendIndicator = newValue;\n            this.repaint();\n            return this;\n        };\n\n        this.setTrendVisible = function (visible) {\n            trendVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setFractionalScaleDecimals = function (decimals) {\n            fractionalScaleDecimals = parseInt(decimals, 10);\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLabelNumberFormat = function (format) {\n            labelNumberFormat = format;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init({frame: true,\n                      background: true,\n                      led: true,\n                      userLed: true,\n                      pointer: true,\n                      trend: true,\n                      foreground: true,\n                      odo: true});\n            }\n            mainCtx.clearRect(0, 0, size, size);\n\n            // Draw frame\n            if (frameVisible) {\n                mainCtx.drawImage(frameBuffer, 0, 0);\n            }\n\n            // Draw buffered image to visible canvas\n            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\n            // Draw lcd display\n            if (lcdVisible) {\n                if (useOdometer) {\n                    odoGauge.setValue(odometerUseValue ? value : odoValue);\n                    mainCtx.drawImage(odoBuffer, odoPosX, odoPosY);\n                } else {\n                    drawLcdText(mainCtx, value);\n                }\n            }\n\n            // Draw led\n            if (ledVisible) {\n                mainCtx.drawImage(ledBuffer, ledPosX, ledPosY);\n            }\n\n            // Draw user led\n            if (userLedVisible) {\n                mainCtx.drawImage(userLedBuffer, userLedPosX, userLedPosY);\n            }\n\n            // Draw the trend indicator\n            if (trendVisible) {\n                switch (trendIndicator.state) {\n                case 'up':\n                    mainCtx.drawImage(trendUpBuffer, trendPosX, trendPosY);\n                    break;\n                case 'steady':\n                    mainCtx.drawImage(trendSteadyBuffer, trendPosX, trendPosY);\n                    break;\n                case 'down':\n                    mainCtx.drawImage(trendDownBuffer, trendPosX, trendPosY);\n                    break;\n                case 'off':\n                    mainCtx.drawImage(trendOffBuffer, trendPosX, trendPosY);\n                    break;\n                }\n            }\n\n            // Draw min measured value indicator\n            if (minMeasuredValueVisible) {\n                mainCtx.save();\n                mainCtx.translate(centerX, centerY);\n                mainCtx.rotate(rotationOffset + HALF_PI + (minMeasuredValue - minValue) * angleStep);\n                mainCtx.translate(-centerX, -centerY);\n                mainCtx.drawImage(minMeasuredValueBuffer, mainCtx.canvas.width * 0.4865, mainCtx.canvas.height * 0.105);\n                mainCtx.restore();\n            }\n\n            // Draw max measured value indicator\n            if (maxMeasuredValueVisible) {\n                mainCtx.save();\n                mainCtx.translate(centerX, centerY);\n                mainCtx.rotate(rotationOffset + HALF_PI + (maxMeasuredValue - minValue) * angleStep);\n                mainCtx.translate(-centerX, -centerY);\n                mainCtx.drawImage(maxMeasuredValueBuffer, mainCtx.canvas.width * 0.4865, mainCtx.canvas.height * 0.105);\n                mainCtx.restore();\n            }\n\n            angle = rotationOffset + HALF_PI + (value - minValue) * angleStep;\n\n            // Define rotation center\n            mainCtx.save();\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate(angle);\n            mainCtx.translate(-centerX, -centerY);\n            // Set the pointer shadow params\n            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n            mainCtx.shadowBlur = shadowOffset * 2;\n            // Draw the pointer\n            mainCtx.drawImage(pointerBuffer, 0, 0);\n            // Undo the translations & shadow settings\n            mainCtx.restore();\n\n            // Draw foreground\n            if (foregroundVisible) {\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n\n            repainting = false;\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var radialBargraph = function (canvas, parameters) {\n        parameters = parameters || {};\n        var gaugeType = (undefined === parameters.gaugeType ? steelseries.GaugeType.TYPE4 : parameters.gaugeType),\n            size = (undefined === parameters.size ? 0 : parameters.size),\n            minValue = (undefined === parameters.minValue ? 0 : parameters.minValue),\n            maxValue = (undefined === parameters.maxValue ? (minValue + 100) : parameters.maxValue),\n            niceScale = (undefined === parameters.niceScale ? true : parameters.niceScale),\n            threshold = (undefined === parameters.threshold ? (maxValue - minValue) / 2 + minValue: parameters.threshold),\n            thresholdRising = (undefined === parameters.thresholdRising ? true : parameters.thresholdRising),\n            section = (undefined === parameters.section ? null : parameters.section),\n            useSectionColors = (undefined === parameters.useSectionColors ? false : parameters.useSectionColors),\n            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            valueColor = (undefined === parameters.valueColor ? steelseries.ColorDef.RED : parameters.valueColor),\n            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n            fractionalScaleDecimals = (undefined === parameters.fractionalScaleDecimals ? 1 : parameters.fractionalScaleDecimals),\n            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor),\n            ledVisible = (undefined === parameters.ledVisible ? true : parameters.ledVisible),\n            userLedColor = (undefined === parameters.userLedColor ? steelseries.LedColor.GREEN_LED : parameters.userLedColor),\n            userLedVisible = (undefined === parameters.userLedVisible ? false : parameters.userLedVisible),\n            labelNumberFormat = (undefined === parameters.labelNumberFormat ? steelseries.LabelNumberFormat.STANDARD : parameters.labelNumberFormat),\n            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),\n            alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),\n            valueGradient = (undefined === parameters.valueGradient ? null : parameters.valueGradient),\n            useValueGradient = (undefined === parameters.useValueGradient ? false : parameters.useValueGradient),\n            tickLabelOrientation = (undefined === parameters.tickLabelOrientation ? (gaugeType === steelseries.GaugeType.TYPE1 ? steelseries.TickLabelOrientation.TANGENT : steelseries.TickLabelOrientation.NORMAL) : parameters.tickLabelOrientation),\n            trendVisible = (undefined === parameters.trendVisible ? false : parameters.trendVisible),\n            trendColors = (undefined === parameters.trendColors ? [steelseries.LedColor.RED_LED, steelseries.LedColor.GREEN_LED, steelseries.LedColor.CYAN_LED] : parameters.trendColors),\n            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (size === 0) {\n            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        // Create audio tag for alarm sound\n        if (playAlarm && alarmSound !== false) {\n            var audioElement = doc.createElement('audio');\n            audioElement.setAttribute('src', alarmSound);\n            audioElement.setAttribute('preload', 'auto');\n        }\n\n        var value = minValue;\n        var range = maxValue - minValue;\n        var ledBlinking = false;\n        var ledTimerId = 0;\n        var userLedBlinking = false;\n        var userLedTimerId = 0;\n        var tween;\n        var self = this;\n        var repainting = false;\n\n        // GaugeType specific private variables\n        var freeAreaAngle;\n        var rotationOffset;\n        var bargraphOffset;\n        var tickmarkOffset;\n        var angleRange;\n        var degAngleRange;\n        var angleStep;\n        var angle;\n\n        var sectionAngles = [];\n        var isSectionsVisible = false;\n        var isGradientVisible = false;\n\n        var imageWidth = size;\n        var imageHeight = size;\n\n        var centerX = imageWidth / 2;\n        var centerY = imageHeight / 2;\n\n        // Misc\n        var lcdFontHeight = Math.floor(imageWidth / 10);\n        var stdFont = lcdFontHeight + 'px ' + stdFontName;\n        var lcdFont = lcdFontHeight + 'px ' + lcdFontName;\n        var lcdHeight = imageHeight * 0.13;\n        var lcdWidth = imageWidth * 0.4;\n        var lcdPosX = (imageWidth - lcdWidth) / 2;\n        var lcdPosY = imageHeight / 2 - lcdHeight / 2;\n\n        // Constants\n        var ACTIVE_LED_POS_X = imageWidth * 0.116822;\n        var ACTIVE_LED_POS_Y = imageWidth * 0.485981;\n        var LED_SIZE = Math.ceil(size * 0.093457);\n        //var LED_POS_X = imageWidth * 0.453271;\n        var LED_POS_X = imageWidth * 0.53;\n        var LED_POS_Y = imageHeight * 0.61;\n        var USER_LED_POS_X = gaugeType === steelseries.GaugeType.TYPE3 ? 0.7 * imageWidth : centerX - LED_SIZE / 2;\n        var USER_LED_POS_Y = gaugeType === steelseries.GaugeType.TYPE3 ? 0.61 * imageHeight : 0.75 * imageHeight;\n\n        var trendIndicator = steelseries.TrendState.OFF;\n        var trendSize = size * 0.06;\n        var trendPosX = size * 0.38;\n        var trendPosY = size * 0.57;\n\n        switch (gaugeType.type) {\n        case 'type1':\n            freeAreaAngle = 0;\n            rotationOffset = PI;\n            bargraphOffset = 0;\n            tickmarkOffset = HALF_PI;\n            angleRange = HALF_PI;\n            degAngleRange = angleRange * DEG_FACTOR;\n            angleStep = angleRange / range;\n            break;\n\n        case 'type2':\n            freeAreaAngle = 0;\n            rotationOffset = PI;\n            bargraphOffset = 0;\n            tickmarkOffset = HALF_PI;\n            angleRange = PI;\n            degAngleRange = angleRange * DEG_FACTOR;\n            angleStep = angleRange / range;\n            break;\n\n        case 'type3':\n            freeAreaAngle = 0;\n            rotationOffset = HALF_PI;\n            bargraphOffset = -HALF_PI;\n            tickmarkOffset = 0;\n            angleRange = 1.5 * PI;\n            degAngleRange = angleRange * DEG_FACTOR;\n            angleStep = angleRange / range;\n            break;\n\n        case 'type4':\n        /* falls through */\n        default:\n            freeAreaAngle = 60 * RAD_FACTOR;\n            rotationOffset = HALF_PI + (freeAreaAngle / 2);\n            bargraphOffset = -TWO_PI / 6;\n            tickmarkOffset = 0;\n            angleRange = TWO_PI - freeAreaAngle;\n            degAngleRange = angleRange * DEG_FACTOR;\n            angleStep = angleRange / range;\n            break;\n        }\n\n        // Buffer for the frame\n        var frameBuffer = createBuffer(size, size);\n        var frameContext = frameBuffer.getContext('2d');\n\n        // Buffer for static background painting code\n        var backgroundBuffer = createBuffer(size, size);\n        var backgroundContext = backgroundBuffer.getContext('2d');\n\n        var lcdBuffer;\n\n        // Buffer for active bargraph led\n        var activeLedBuffer = createBuffer(Math.ceil(size * 0.060747), Math.ceil(size * 0.023364));\n        var activeLedContext = activeLedBuffer.getContext('2d');\n\n        // Buffer for led on painting code\n        var ledBufferOn = createBuffer(LED_SIZE, LED_SIZE);\n        var ledContextOn = ledBufferOn.getContext('2d');\n\n        // Buffer for led off painting code\n        var ledBufferOff = createBuffer(LED_SIZE, LED_SIZE);\n        var ledContextOff = ledBufferOff.getContext('2d');\n\n        // Buffer for current led painting code\n        var ledBuffer = ledBufferOff;\n\n        // Buffer for user led on painting code\n        var userLedBufferOn = createBuffer(LED_SIZE, LED_SIZE);\n        var userLedContextOn = userLedBufferOn.getContext('2d');\n\n        // Buffer for user led off painting code\n        var userLedBufferOff = createBuffer(LED_SIZE, LED_SIZE);\n        var userLedContextOff = userLedBufferOff.getContext('2d');\n\n        // Buffer for current user led painting code\n        var userLedBuffer = userLedBufferOff;\n        // Buffer for the background of the led\n        var ledBackground;\n\n        // Buffer for static foreground painting code\n        var foregroundBuffer = createBuffer(size, size);\n        var foregroundContext = foregroundBuffer.getContext('2d');\n\n        // Buffers for trend indicators\n        var trendUpBuffer, trendSteadyBuffer, trendDownBuffer, trendOffBuffer;\n\n        var initialized = false;\n\n        // Tickmark specific private variables\n        var niceMinValue = minValue;\n        var niceMaxValue = maxValue;\n        var niceRange = maxValue - minValue;\n        range = niceMaxValue - niceMinValue;\n        var minorTickSpacing = 0;\n        var majorTickSpacing = 0;\n        var maxNoOfMinorTicks = 10;\n        var maxNoOfMajorTicks = 10;\n\n        // Method to calculate nice values for min, max and range for the tickmarks\n        var calculate = function calculate() {\n            if (niceScale) {\n                niceRange = calcNiceNumber(maxValue - minValue, false);\n                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n                niceMinValue = Math.floor(minValue / majorTickSpacing) * majorTickSpacing;\n                niceMaxValue = Math.ceil(maxValue / majorTickSpacing) * majorTickSpacing;\n                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n                minValue = niceMinValue;\n                maxValue = niceMaxValue;\n                range = maxValue - minValue;\n            } else {\n                niceRange = (maxValue - minValue);\n                niceMinValue = minValue;\n                niceMaxValue = maxValue;\n                range = niceRange;\n                //minorTickSpacing = 1;\n                //majorTickSpacing = 10;\n                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n            }\n\n            switch (gaugeType.type) {\n            case 'type1':\n                freeAreaAngle = 0;\n                rotationOffset = PI;\n                tickmarkOffset = HALF_PI;\n                angleRange = HALF_PI;\n                angleStep = angleRange / range;\n                break;\n\n            case 'type2':\n                freeAreaAngle = 0;\n                rotationOffset = PI;\n                tickmarkOffset = HALF_PI;\n                angleRange = PI;\n                angleStep = angleRange / range;\n                break;\n\n            case 'type3':\n                freeAreaAngle = 0;\n                rotationOffset = HALF_PI;\n                tickmarkOffset = 0;\n                angleRange = 1.5 * PI;\n                angleStep = angleRange / range;\n                break;\n\n            case 'type4':       // fall through\n            /* falls through */\n            default:\n                freeAreaAngle = 60 * RAD_FACTOR;\n                rotationOffset = HALF_PI + (freeAreaAngle / 2);\n                tickmarkOffset = 0;\n                angleRange = TWO_PI - freeAreaAngle;\n                angleStep = angleRange / range;\n                break;\n            }\n            angle = rotationOffset + (value - minValue) * angleStep;\n        };\n\n        //********************************* Private methods *********************************\n        // Draw all static painting code to background\n        var init = function (parameters) {\n            parameters = parameters || {};\n            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n            var drawLed = (undefined === parameters.led ? false : parameters.led);\n            var drawUserLed = (undefined === parameters.userLed ? false : parameters.userLed);\n            var drawValue =  (undefined === parameters.value ? false : parameters.value);\n            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n            var drawTrend = (undefined === parameters.trend ? false : parameters.trend);\n\n            initialized = true;\n\n            calculate();\n\n            // Create frame in frame buffer (frameBuffer)\n            if (drawFrame && frameVisible) {\n                drawRadialFrameImage(frameContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n            }\n\n            // Create background in background buffer (backgroundBuffer)\n            if (drawBackground && backgroundVisible) {\n                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\n                // Create custom layer in background buffer (backgroundBuffer)\n                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n            }\n\n            if (drawLed) {\n                // Draw LED ON in ledBuffer_ON\n                ledContextOn.drawImage(createLedImage(LED_SIZE, 1, ledColor), 0, 0);\n\n                // Draw LED OFF in ledBuffer_OFF\n                ledContextOff.drawImage(createLedImage(LED_SIZE, 0, ledColor), 0, 0);\n\n                // Buffer the background of the led for blinking\n                ledBackground = backgroundContext.getImageData(LED_POS_X, LED_POS_Y, LED_SIZE, LED_SIZE);\n            }\n\n            if (drawUserLed) {\n                // Draw user LED ON in userLedBuffer_ON\n                userLedContextOn.drawImage(createLedImage(Math.ceil(LED_SIZE), 1, userLedColor), 0, 0);\n\n                // Draw user LED OFF in userLedBuffer_OFF\n                userLedContextOff.drawImage(createLedImage(Math.ceil(LED_SIZE), 0, userLedColor), 0, 0);\n            }\n\n            if (drawBackground) {\n                // Create bargraphtrack in background buffer (backgroundBuffer)\n                drawBargraphTrackImage(backgroundContext);\n            }\n\n            // Create tickmarks in background buffer (backgroundBuffer)\n            if (drawBackground  && backgroundVisible) {\n                drawTickmarksImage(backgroundContext, labelNumberFormat);\n\n                // Create title in background buffer (backgroundBuffer)\n                drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, true, true);\n            }\n\n            // Create lcd background if selected in background buffer (backgroundBuffer)\n            if (drawBackground && lcdVisible) {\n                lcdBuffer = createLcdBackgroundImage(lcdWidth, lcdHeight, lcdColor);\n                backgroundContext.drawImage(lcdBuffer, lcdPosX, lcdPosY);\n            }\n\n            // Convert Section values into angles\n            isSectionsVisible = false;\n            if (useSectionColors && null !== section && 0 < section.length) {\n                isSectionsVisible = true;\n                var sectionIndex = section.length;\n                sectionAngles = [];\n                do {\n                    sectionIndex--;\n                    sectionAngles.push({start: (((section[sectionIndex].start + Math.abs(minValue)) / (maxValue - minValue)) * degAngleRange),\n                                         stop: (((section[sectionIndex].stop + Math.abs(minValue)) / (maxValue - minValue)) * degAngleRange),\n                                        color: customColorDef(section[sectionIndex].color)});\n                } while (0 < sectionIndex);\n            }\n\n            // Use a gradient for the valueColor?\n            isGradientVisible = false;\n            if (useValueGradient && valueGradient !== null) {\n                // force section colors off!\n                isSectionsVisible = false;\n                isGradientVisible = true;\n            }\n\n            // Create an image of an active led in active led buffer (activeLedBuffer)\n            if (drawValue) {\n                drawActiveLed(activeLedContext, valueColor);\n            }\n\n            // Create foreground in foreground buffer (foregroundBuffer)\n            if (drawForeground && foregroundVisible) {\n                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, false);\n            }\n\n            // Create the trend indicator buffers\n            if (drawTrend && trendVisible) {\n                trendUpBuffer = createTrendIndicator(trendSize, steelseries.TrendState.UP, trendColors);\n                trendSteadyBuffer = createTrendIndicator(trendSize, steelseries.TrendState.STEADY, trendColors);\n                trendDownBuffer = createTrendIndicator(trendSize, steelseries.TrendState.DOWN, trendColors);\n                trendOffBuffer = createTrendIndicator(trendSize, steelseries.TrendState.OFF, trendColors);\n            }\n        };\n\n        var resetBuffers = function (buffers) {\n            buffers = buffers || {};\n            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n            var resetLed = (undefined === buffers.led ? false : buffers.led);\n            var resetUserLed = (undefined === buffers.userLed ? false : buffers.userLed);\n            var resetValue = (undefined === buffers.value ? false : buffers.value);\n            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\n            // Buffer for the frame\n            if (resetFrame) {\n                frameBuffer.width = size;\n                frameBuffer.height = size;\n                frameContext = frameBuffer.getContext('2d');\n            }\n\n            // Buffer for static background painting code\n            if (resetBackground) {\n                backgroundBuffer.width = size;\n                backgroundBuffer.height = size;\n                backgroundContext = backgroundBuffer.getContext('2d');\n            }\n\n            // Buffer for active bargraph led\n            if (resetValue) {\n                activeLedBuffer.width = Math.ceil(size * 0.060747);\n                activeLedBuffer.height = Math.ceil(size * 0.023364);\n                activeLedContext = activeLedBuffer.getContext('2d');\n            }\n\n            if (resetLed) {\n                // Buffer for led on painting code\n                ledBufferOn.width = Math.ceil(LED_SIZE);\n                ledBufferOn.height = Math.ceil(LED_SIZE);\n                ledContextOn = ledBufferOn.getContext('2d');\n\n                // Buffer for led off painting code\n                ledBufferOff.width = Math.ceil(LED_SIZE);\n                ledBufferOff.height = Math.ceil(LED_SIZE);\n                ledContextOff = ledBufferOff.getContext('2d');\n\n                // Buffer for current led painting code\n                ledBuffer = ledBufferOff;\n            }\n\n            if (resetUserLed) {\n                userLedBufferOn.width = Math.ceil(LED_SIZE);\n                userLedBufferOn.height = Math.ceil(LED_SIZE);\n                userLedContextOn = userLedBufferOn.getContext('2d');\n\n                userLedBufferOff.width = Math.ceil(LED_SIZE);\n                userLedBufferOff.height = Math.ceil(LED_SIZE);\n                userLedContextOff = userLedBufferOff.getContext('2d');\n\n                // Buffer for current user led painting code\n                userLedBuffer = userLedBufferOff;\n            }\n\n            // Buffer for static foreground painting code\n            if (resetForeground) {\n                foregroundBuffer.width = size;\n                foregroundBuffer.height = size;\n                foregroundContext = foregroundBuffer.getContext('2d');\n            }\n        };\n\n        var drawBargraphTrackImage = function (ctx) {\n\n            ctx.save();\n\n            // Bargraphtrack\n\n            // Frame\n            ctx.save();\n            ctx.lineWidth = size * 0.085;\n            ctx.beginPath();\n            ctx.translate(centerX, centerY);\n            ctx.rotate(rotationOffset - 4 * RAD_FACTOR);\n            ctx.translate(-centerX, -centerY);\n            ctx.arc(centerX, centerY, imageWidth * 0.355140, 0, angleRange + 8 * RAD_FACTOR, false);\n            ctx.rotate(-rotationOffset);\n            var ledTrackFrameGradient = ctx.createLinearGradient(0, 0.107476 * imageHeight, 0, 0.897195 * imageHeight);\n            ledTrackFrameGradient.addColorStop(0, '#000000');\n            ledTrackFrameGradient.addColorStop(0.22, '#333333');\n            ledTrackFrameGradient.addColorStop(0.76, '#333333');\n            ledTrackFrameGradient.addColorStop(1, '#cccccc');\n            ctx.strokeStyle = ledTrackFrameGradient;\n            ctx.stroke();\n            ctx.restore();\n\n            // Main\n            ctx.save();\n            ctx.lineWidth = size * 0.075;\n            ctx.beginPath();\n            ctx.translate(centerX, centerY);\n            ctx.rotate(rotationOffset - 4 * RAD_FACTOR);\n            ctx.translate(-centerX, -centerY);\n            ctx.arc(centerX, centerY, imageWidth * 0.355140, 0, angleRange + 8 * RAD_FACTOR, false);\n            ctx.rotate(-rotationOffset);\n            var ledTrackMainGradient = ctx.createLinearGradient(0, 0.112149 * imageHeight, 0, 0.892523 * imageHeight);\n            ledTrackMainGradient.addColorStop(0, '#111111');\n            ledTrackMainGradient.addColorStop(1, '#333333');\n            ctx.strokeStyle = ledTrackMainGradient;\n            ctx.stroke();\n            ctx.restore();\n\n            // Draw inactive leds\n            var ledCenterX = (imageWidth * 0.116822 + imageWidth * 0.060747) / 2;\n            var ledCenterY = (imageWidth * 0.485981 + imageWidth * 0.023364) / 2;\n            var ledOffGradient = ctx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, 0.030373 * imageWidth);\n            ledOffGradient.addColorStop(0, '#3c3c3c');\n            ledOffGradient.addColorStop(1, '#323232');\n            var angle = 0;\n            for (angle = 0; angle <= degAngleRange; angle += 5) {\n                ctx.save();\n                ctx.translate(centerX, centerY);\n                ctx.rotate((angle * RAD_FACTOR) + bargraphOffset);\n                ctx.translate(-centerX, -centerY);\n                ctx.beginPath();\n                ctx.rect(imageWidth * 0.116822, imageWidth * 0.485981, imageWidth * 0.060747, imageWidth * 0.023364);\n                ctx.closePath();\n                ctx.fillStyle = ledOffGradient;\n                ctx.fill();\n                ctx.restore();\n            }\n\n            ctx.restore();\n        };\n\n        var drawActiveLed = function (ctx, color) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            ctx.closePath();\n            var ledCenterX = (ctx.canvas.width / 2);\n            var ledCenterY = (ctx.canvas.height / 2);\n            var ledGradient = mainCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, ctx.canvas.width / 2);\n            ledGradient.addColorStop(0, color.light.getRgbaColor());\n            ledGradient.addColorStop(1, color.dark.getRgbaColor());\n            ctx.fillStyle = ledGradient;\n            ctx.fill();\n            ctx.restore();\n        };\n\n        var drawLcdText = function (ctx, value) {\n\n            ctx.save();\n            ctx.textAlign = 'right';\n            ctx.strokeStyle = lcdColor.textColor;\n            ctx.fillStyle = lcdColor.textColor;\n\n            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n                ctx.shadowColor = 'gray';\n                ctx.shadowOffsetX = imageWidth * 0.007;\n                ctx.shadowOffsetY = imageWidth * 0.007;\n                ctx.shadowBlur = imageWidth * 0.007;\n            }\n\n            if (digitalFont) {\n                ctx.font = lcdFont;\n            } else {\n                ctx.font = stdFont;\n            }\n            ctx.fillText(value.toFixed(lcdDecimals), lcdPosX + lcdWidth - lcdWidth * 0.05, lcdPosY + lcdHeight * 0.5 + lcdFontHeight * 0.38, lcdWidth * 0.9);\n\n            ctx.restore();\n        };\n\n        var drawTickmarksImage = function (ctx, labelNumberFormat) {\n            var alpha = rotationOffset,      // Tracks total rotation\n                rotationStep = angleStep * minorTickSpacing,\n                textRotationAngle,\n                fontSize = Math.ceil(imageWidth * 0.04),\n                valueCounter = minValue,\n                majorTickCounter = maxNoOfMinorTicks - 1,\n                TEXT_TRANSLATE_X = imageWidth * 0.28,\n                TEXT_WIDTH = imageWidth * 0.1,\n                MAX_VALUE_ROUNDED = parseFloat(maxValue.toFixed(2)),\n                i;\n\n            backgroundColor.labelColor.setAlpha(1);\n            ctx.save();\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.font = fontSize + 'px ' + stdFontName;\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.translate(centerX, centerY);\n            ctx.rotate(rotationOffset);\n\n            if (gaugeType.type === 'type1' || gaugeType.type === 'type2') {\n                TEXT_WIDTH = imageWidth * 0.0375;\n            }\n\n            for (i = minValue; parseFloat(i.toFixed(2)) <= MAX_VALUE_ROUNDED; i += minorTickSpacing) {\n                textRotationAngle = + rotationStep + HALF_PI;\n                majorTickCounter++;\n                // Draw major tickmarks\n                if (majorTickCounter === maxNoOfMinorTicks) {\n                    ctx.save();\n                    ctx.translate(TEXT_TRANSLATE_X, 0);\n\n                    switch (tickLabelOrientation.type) {\n                    case 'horizontal':\n                        textRotationAngle = -alpha;\n                        break;\n\n                    case 'tangent':\n                        textRotationAngle = (alpha <= HALF_PI + PI ? PI : 0);\n                        break;\n\n                    case 'normal':\n                    /* falls through */\n                    default:\n                        textRotationAngle = HALF_PI;\n                        break;\n                    }\n                    ctx.rotate(textRotationAngle);\n\n                    switch (labelNumberFormat.format) {\n                    case 'fractional':\n                        ctx.fillText((valueCounter.toFixed(fractionalScaleDecimals)), 0, 0, TEXT_WIDTH);\n                        break;\n\n                    case 'scientific':\n                        ctx.fillText((valueCounter.toPrecision(2)), 0, 0, TEXT_WIDTH);\n                        break;\n\n                    case 'standard':\n                    /* falls through */\n                    default:\n                        ctx.fillText((valueCounter.toFixed(0)), 0, 0, TEXT_WIDTH);\n                        break;\n                    }\n                    ctx.translate(-TEXT_TRANSLATE_X, 0);\n                    ctx.restore();\n\n                    valueCounter += majorTickSpacing;\n                    majorTickCounter = 0;\n                    ctx.rotate(rotationStep);\n                    alpha += rotationStep;\n                    continue;\n                }\n                ctx.rotate(rotationStep);\n                alpha += rotationStep;\n            }\n\n            ctx.translate(-centerX, -centerY);\n            ctx.restore();\n        };\n\n        var blink = function (blinking) {\n            if (blinking) {\n                ledTimerId = setInterval(toggleAndRepaintLed, 1000);\n            } else {\n                clearInterval(ledTimerId);\n                ledBuffer = ledBufferOff;\n            }\n        };\n\n        var blinkUser = function (blinking) {\n            if (blinking) {\n                userLedTimerId = setInterval(toggleAndRepaintUserLed, 1000);\n            } else {\n                clearInterval(userLedTimerId);\n                userLedBuffer = userLedBufferOff;\n            }\n        };\n\n        var toggleAndRepaintLed = function () {\n            if (ledVisible) {\n                if (ledBuffer === ledBufferOn) {\n                    ledBuffer = ledBufferOff;\n                } else {\n                    ledBuffer = ledBufferOn;\n                }\n                if (!repainting) {\n                    repainting = true;\n                    requestAnimFrame(self.repaint);\n                }\n            }\n        };\n\n        var toggleAndRepaintUserLed = function () {\n            if (userLedVisible) {\n                if (userLedBuffer === userLedBufferOn) {\n                    userLedBuffer = userLedBufferOff;\n                } else {\n                    userLedBuffer = userLedBufferOn;\n                }\n                if (!repainting) {\n                    repainting = true;\n                    requestAnimFrame(self.repaint);\n                }\n            }\n        };\n\n        //********************************* Public methods *********************************\n        this.setValue = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n            if (value !== targetValue) {\n                value = targetValue;\n                if ((value >= threshold && !ledBlinking && thresholdRising) ||\n                    (value <= threshold && !ledBlinking && !thresholdRising)) {\n                    ledBlinking = true;\n                    blink(ledBlinking);\n                    if (playAlarm) {\n                        audioElement.play();\n                    }\n                } else if ((value < threshold && ledBlinking && thresholdRising) ||\n                           (value > threshold && ledBlinking && !thresholdRising)) {\n                    ledBlinking = false;\n                    blink(ledBlinking);\n                    if (playAlarm) {\n                        audioElement.pause();\n                    }\n                }\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getValue = function () {\n            return value;\n        };\n\n        this.setValueAnimated = function (newValue, callback) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue)),\n                gauge = this,\n                time;\n\n            if (value !== targetValue) {\n                if (undefined !== tween && tween.isPlaying) {\n                    tween.stop();\n                }\n\n                time = fullScaleDeflectionTime * Math.abs(targetValue - value) / (maxValue - minValue);\n                time = Math.max(time, fullScaleDeflectionTime / 5);\n                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n                //tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, 1);\n                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, this.value, targetValue, 1);\n                tween.onMotionChanged = function (event) {\n                    value = event.target._pos;\n\n                    if ((value >= threshold && !ledBlinking && thresholdRising) ||\n                        (value <= threshold && !ledBlinking && !thresholdRising)) {\n                        ledBlinking = true;\n                        blink(ledBlinking);\n                        if (playAlarm) {\n                            audioElement.play();\n                        }\n                    } else if ((value < threshold && ledBlinking && thresholdRising) ||\n                               (value > threshold && ledBlinking && !thresholdRising)) {\n                        ledBlinking = false;\n                        blink(ledBlinking);\n                        if (playAlarm) {\n                            audioElement.pause();\n                        }\n                    }\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tween.onMotionFinished = callback;\n                }\n\n                tween.start();\n            }\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers({frame: true});\n            frameDesign = newFrameDesign;\n            init({frame: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            resetBuffers({background: true,\n                          led: true});\n            backgroundColor = newBackgroundColor;\n            init({background: true,\n                  led: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setForegroundType = function (newForegroundType) {\n            resetBuffers({foreground: true});\n            foregroundType = newForegroundType;\n            init({foreground: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setValueColor = function (newValueColor) {\n            resetBuffers({value: true});\n            valueColor = newValueColor;\n            init({value: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLedColor = function (newLedColor) {\n            resetBuffers({led: true});\n            ledColor = newLedColor;\n            init({led: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setUserLedColor = function (newLedColor) {\n            resetBuffers({userLed: true});\n            userLedColor = newLedColor;\n            init({userLed: true});\n            this.repaint();\n            return this;\n        };\n\n        this.toggleUserLed = function () {\n            if (userLedBuffer === userLedBufferOn) {\n                userLedBuffer = userLedBufferOff;\n            } else {\n                userLedBuffer = userLedBufferOn;\n            }\n            this.repaint();\n            return this;\n        };\n\n        this.setUserLedOnOff = function (on) {\n            if (true === on) {\n                userLedBuffer = userLedBufferOn;\n            } else {\n                userLedBuffer = userLedBufferOff;\n            }\n            this.repaint();\n            return this;\n        };\n\n        this.blinkUserLed = function (blink) {\n            if (blink) {\n                if (!userLedBlinking) {\n                    blinkUser(true);\n                    userLedBlinking = true;\n                }\n            } else {\n                if (userLedBlinking) {\n                    clearInterval(userLedTimerId);\n                    userLedBlinking = false;\n                }\n            }\n            return this;\n        };\n\n        this.setLedVisible = function (visible) {\n            ledVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setUserLedVisible = function (visible) {\n            userLedVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdColor = function (newLcdColor) {\n            lcdColor = newLcdColor;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdDecimals = function (decimals) {\n            lcdDecimals = parseInt(decimals, 10);\n            this.repaint();\n            return this;\n        };\n\n        this.setSection = function (areaSec) {\n            section = areaSec;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setSectionActive = function (value) {\n            useSectionColors = value;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setGradient = function (grad) {\n            valueGradient = grad;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setGradientActive = function (value) {\n            useValueGradient = value;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setMinValue = function (value) {\n            minValue = value;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.getMinValue = function () {\n            return minValue;\n        };\n\n        this.setMaxValue = function (value) {\n            maxValue = value;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.getMaxValue = function () {\n            return maxValue;\n        };\n\n        this.setThreshold = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue);\n            threshold = targetValue;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setThresholdRising = function (rising) {\n            thresholdRising = !!rising;\n            // reset existing threshold alerts\n            ledBlinking = !ledBlinking;\n            blink(ledBlinking);\n            this.repaint();\n            return this;\n        };\n\n        this.setTitleString = function (title) {\n            titleString = title;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setUnitString = function (unit) {\n            unitString = unit;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setTrend = function (newValue) {\n            trendIndicator = newValue;\n            this.repaint();\n            return this;\n        };\n\n        this.setTrendVisible = function (visible) {\n            trendVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setFractionalScaleDecimals = function (decimals) {\n            fractionalScaleDecimals = parseInt(decimals, 10);\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n        };\n\n        this.setLabelNumberFormat = function (format) {\n            labelNumberFormat = format;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            var activeLedAngle = ((value - minValue) / (maxValue - minValue)) * degAngleRange,\n                activeLedColor,\n                lastActiveLedColor = valueColor,\n                angle, i,\n                currentValue,\n                gradRange,\n                fraction;\n\n            if (!initialized) {\n                init({frame: true,\n                      background: true,\n                      led: true,\n                      userLed: true,\n                      value: true,\n                      trend: true,\n                      foreground: true});\n            }\n\n            mainCtx.clearRect(0, 0, size, size);\n\n            // Draw frame image\n            if (frameVisible) {\n                mainCtx.drawImage(frameBuffer, 0, 0);\n            }\n\n            // Draw buffered image to visible canvas\n            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\n            // Draw active leds\n            for (angle = 0; angle <= activeLedAngle; angle += 5) {\n                //check for LED color\n                activeLedColor = valueColor;\n                // Use a gradient for value colors?\n                if (isGradientVisible) {\n                    // Convert angle back to value\n                    currentValue = minValue + (angle / degAngleRange) * (maxValue - minValue);\n                    gradRange = valueGradient.getEnd() - valueGradient.getStart();\n                    fraction = currentValue / gradRange;\n                    fraction = Math.max(Math.min(fraction, 1), 0);\n                    activeLedColor = customColorDef(valueGradient.getColorAt(fraction).getRgbaColor());\n                } else if (isSectionsVisible) {\n                    for (i = 0; i < sectionAngles.length; i++) {\n                        if (angle >= sectionAngles[i].start && angle < sectionAngles[i].stop) {\n                            activeLedColor = sectionAngles[i].color;\n                            break;\n                        }\n                    }\n                }\n                // Has LED color changed? If so redraw the buffer\n                if (lastActiveLedColor.medium.getHexColor() !== activeLedColor.medium.getHexColor()) {\n                    drawActiveLed(activeLedContext, activeLedColor);\n                    lastActiveLedColor = activeLedColor;\n                }\n                mainCtx.save();\n                mainCtx.translate(centerX, centerY);\n                mainCtx.rotate((angle * RAD_FACTOR) + bargraphOffset);\n                mainCtx.translate(-centerX, -centerY);\n                mainCtx.drawImage(activeLedBuffer, ACTIVE_LED_POS_X, ACTIVE_LED_POS_Y);\n                mainCtx.restore();\n            }\n\n            // Draw lcd display\n            if (lcdVisible) {\n                drawLcdText(mainCtx, value);\n            }\n\n            // Draw led\n            if (ledVisible) {\n                mainCtx.drawImage(ledBuffer, LED_POS_X, LED_POS_Y);\n            }\n\n            // Draw user led\n            if (userLedVisible) {\n                mainCtx.drawImage(userLedBuffer, USER_LED_POS_X, USER_LED_POS_Y);\n            }\n\n            // Draw the trend indicator\n            if (trendVisible) {\n                switch (trendIndicator.state) {\n                case 'up':\n                    mainCtx.drawImage(trendUpBuffer, trendPosX, trendPosY);\n                    break;\n                case 'steady':\n                    mainCtx.drawImage(trendSteadyBuffer, trendPosX, trendPosY);\n                    break;\n                case 'down':\n                    mainCtx.drawImage(trendDownBuffer, trendPosX, trendPosY);\n                    break;\n                case 'off':\n                    mainCtx.drawImage(trendOffBuffer, trendPosX, trendPosY);\n                    break;\n                }\n            }\n\n            // Draw foreground\n            if (foregroundVisible) {\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n\n            repainting = false;\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var radialVertical = function (canvas, parameters) {\n        parameters = parameters || {};\n        var orientation = (undefined === parameters.orientation ? steelseries.Orientation.NORTH : parameters.orientation),\n            size = (undefined === parameters.size ? 0 : parameters.size),\n            minValue = (undefined === parameters.minValue ? 0 : parameters.minValue),\n            maxValue = (undefined === parameters.maxValue ? (minValue + 100) : parameters.maxValue),\n            niceScale = (undefined === parameters.niceScale ? true : parameters.niceScale),\n            threshold = (undefined === parameters.threshold ? (maxValue - minValue) / 2 + minValue: parameters.threshold),\n            section = (undefined === parameters.section ? null : parameters.section),\n            area = (undefined === parameters.area ? null : parameters.area),\n            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            pointerType = (undefined === parameters.pointerType ? steelseries.PointerType.TYPE1 : parameters.pointerType),\n            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.RED : parameters.pointerColor),\n            knobType = (undefined === parameters.knobType ? steelseries.KnobType.STANDARD_KNOB : parameters.knobType),\n            knobStyle = (undefined === parameters.knobStyle ? steelseries.KnobStyle.SILVER : parameters.knobStyle),\n            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor),\n            ledVisible = (undefined === parameters.ledVisible ? true : parameters.ledVisible),\n            thresholdVisible = (undefined === parameters.thresholdVisible ? true : parameters.thresholdVisible),\n            thresholdRising = (undefined === parameters.thresholdRising ? true : parameters.thresholdRising),\n            minMeasuredValueVisible = (undefined === parameters.minMeasuredValueVisible ? false : parameters.minMeasuredValueVisible),\n            maxMeasuredValueVisible = (undefined === parameters.maxMeasuredValueVisible ? false : parameters.maxMeasuredValueVisible),\n            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            labelNumberFormat = (undefined === parameters.labelNumberFormat ? steelseries.LabelNumberFormat.STANDARD : parameters.labelNumberFormat),\n            playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),\n            alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),\n            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (size === 0) {\n            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        // Create audio tag for alarm sound\n        if (playAlarm && alarmSound !== false) {\n            var audioElement = doc.createElement('audio');\n            audioElement.setAttribute('src', alarmSound);\n            audioElement.setAttribute('preload', 'auto');\n        }\n        var gaugeType = steelseries.GaugeType.TYPE5;\n\n        var self = this;\n        var value = minValue;\n\n        // Properties\n        var minMeasuredValue = maxValue;\n        var maxMeasuredValue = minValue;\n        var imageWidth = size;\n        var imageHeight = size;\n\n        var ledBlinking = false;\n\n        var ledTimerId = 0;\n        var tween;\n        var repainting = false;\n\n        // Tickmark specific private variables\n        var niceMinValue = minValue;\n        var niceMaxValue = maxValue;\n        var niceRange = maxValue - minValue;\n        var range = niceMaxValue - niceMinValue;\n        var minorTickSpacing = 0;\n        var majorTickSpacing = 0;\n        var maxNoOfMinorTicks = 10;\n        var maxNoOfMajorTicks = 10;\n\n        var freeAreaAngle = 0;\n        var rotationOffset = 1.25 * PI;\n        var tickmarkOffset = 1.25 * PI;\n        var angleRange = HALF_PI;\n        var angleStep = angleRange / range;\n        var shadowOffset = imageWidth * 0.006;\n        var pointerOffset = imageWidth * 1.17 / 2;\n\n        var initialized = false;\n\n        var angle = rotationOffset + (value - minValue) * angleStep;\n\n        var centerX = imageWidth / 2;\n        var centerY = imageHeight * 0.733644;\n\n        // Misc\n        var ledPosX = 0.455 * imageWidth;\n        var ledPosY = 0.51 * imageHeight;\n\n        // Method to calculate nice values for min, max and range for the tickmarks\n        var calculate = function calculate() {\n            if (niceScale) {\n                niceRange = calcNiceNumber(maxValue - minValue, false);\n                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n                niceMinValue = Math.floor(minValue / majorTickSpacing) * majorTickSpacing;\n                niceMaxValue = Math.ceil(maxValue / majorTickSpacing) * majorTickSpacing;\n                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n                minValue = niceMinValue;\n                maxValue = niceMaxValue;\n                range = maxValue - minValue;\n            }\n            else {\n                niceRange = (maxValue - minValue);\n                niceMinValue = minValue;\n                niceMaxValue = maxValue;\n                range = niceRange;\n                minorTickSpacing = 1;\n                majorTickSpacing = 10;\n            }\n\n            freeAreaAngle = 0;\n            rotationOffset = 1.25 * PI;\n            tickmarkOffset = 1.25 * PI;\n            angleRange = HALF_PI;\n            angleStep = angleRange / range;\n\n            angle = rotationOffset + (value - minValue) * angleStep;\n        };\n\n        // **************   Buffer creation  ********************\n        // Buffer for the frame\n        var frameBuffer = createBuffer(size, size);\n        var frameContext = frameBuffer.getContext('2d');\n\n        // Buffer for the background\n        var backgroundBuffer = createBuffer(size, size);\n        var backgroundContext = backgroundBuffer.getContext('2d');\n\n        // Buffer for led on painting code\n        var ledBufferOn = createBuffer(size * 0.093457, size * 0.093457);\n        var ledContextOn = ledBufferOn.getContext('2d');\n\n        // Buffer for led off painting code\n        var ledBufferOff = createBuffer(size * 0.093457, size * 0.093457);\n        var ledContextOff = ledBufferOff.getContext('2d');\n\n        // Buffer for current led painting code\n        var ledBuffer = ledBufferOff;\n\n        // Buffer for the minMeasuredValue indicator\n        var minMeasuredValueBuffer = createBuffer(Math.ceil(size * 0.028037), Math.ceil(size * 0.028037));\n        var minMeasuredValueCtx = minMeasuredValueBuffer.getContext('2d');\n\n        // Buffer for the maxMeasuredValue indicator\n        var maxMeasuredValueBuffer = createBuffer(Math.ceil(size * 0.028037), Math.ceil(size * 0.028037));\n        var maxMeasuredValueCtx = maxMeasuredValueBuffer.getContext('2d');\n\n        // Buffer for pointer image painting code\n        var pointerBuffer = createBuffer(size, size);\n        var pointerContext = pointerBuffer.getContext('2d');\n\n        // Buffer for static foreground painting code\n        var foregroundBuffer = createBuffer(size, size);\n        var foregroundContext = foregroundBuffer.getContext('2d');\n\n        // **************   Image creation  ********************\n        var drawPostsImage = function (ctx) {\n            if ('type5' === gaugeType.type) {\n                ctx.save();\n                if (orientation.type === 'west') {\n                    // Min post\n                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.44, imageHeight * 0.80);\n                    // Max post\n                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.44, imageHeight * 0.16);\n                } else if (orientation.type === 'east') {\n                    // Min post\n                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.52, imageHeight * 0.80);\n                    // Max post\n                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.52, imageHeight * 0.16);\n                } else {\n                    // Min post\n                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.2 - imageHeight * 0.037383, imageHeight * 0.446666);\n                    // Max post\n                    ctx.drawImage(createKnobImage(Math.ceil(imageHeight * 0.037383), steelseries.KnobType.STANDARD_KNOB, knobStyle), imageWidth * 0.8, imageHeight * 0.446666);\n                }\n                ctx.restore();\n            }\n        };\n\n        var createThresholdImage = function () {\n            var thresholdBuffer = doc.createElement('canvas');\n            thresholdBuffer.width = Math.ceil(size * 0.046728);\n            thresholdBuffer.height = Math.ceil(thresholdBuffer.width * 0.9);\n            var thresholdCtx = thresholdBuffer.getContext('2d');\n\n            thresholdCtx.save();\n            var gradThreshold = thresholdCtx.createLinearGradient(0, 0.1, 0, thresholdBuffer.height * 0.9);\n            gradThreshold.addColorStop(0, '#520000');\n            gradThreshold.addColorStop(0.3, '#fc1d00');\n            gradThreshold.addColorStop(0.59, '#fc1d00');\n            gradThreshold.addColorStop(1, '#520000');\n            thresholdCtx.fillStyle = gradThreshold;\n\n            thresholdCtx.beginPath();\n            thresholdCtx.moveTo(thresholdBuffer.width * 0.5, 0.1);\n            thresholdCtx.lineTo(thresholdBuffer.width * 0.9, thresholdBuffer.height * 0.9);\n            thresholdCtx.lineTo(thresholdBuffer.width * 0.1, thresholdBuffer.height * 0.9);\n            thresholdCtx.lineTo(thresholdBuffer.width * 0.5, 0.1);\n            thresholdCtx.closePath();\n\n            thresholdCtx.fill();\n            thresholdCtx.strokeStyle = '#FFFFFF';\n            thresholdCtx.stroke();\n\n            thresholdCtx.restore();\n\n            return thresholdBuffer;\n        };\n\n        var drawAreaSectionImage = function (ctx, start, stop, color, filled) {\n            ctx.save();\n            ctx.strokeStyle = color;\n            ctx.fillStyle = color;\n            ctx.lineWidth = imageWidth * 0.035;\n            var startAngle = (angleRange / range * start - angleRange / range * minValue);\n            var stopAngle = startAngle + (stop - start) / (range / angleRange);\n            ctx.translate(centerX, centerY);\n            ctx.rotate(rotationOffset);\n            ctx.beginPath();\n            if (filled) {\n                ctx.moveTo(0, 0);\n                ctx.arc(0, 0, imageWidth * 0.365 - ctx.lineWidth / 2, startAngle, stopAngle, false);\n            } else {\n                ctx.arc(0, 0, imageWidth * 0.365, startAngle, stopAngle, false);\n            }\n            if (filled) {\n                ctx.moveTo(0, 0);\n                ctx.fill();\n            } else {\n                ctx.stroke();\n            }\n\n            ctx.translate(-centerX, -centerY);\n            ctx.restore();\n        };\n\n        var drawTitleImage = function (ctx) {\n            var titleWidth, unitWidth;\n            ctx.save();\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\n            ctx.font = 0.046728 * imageWidth + 'px ' + stdFontName;\n            titleWidth = ctx.measureText(titleString).width;\n            ctx.fillText(titleString, (imageWidth - titleWidth) / 2, imageHeight * 0.4, imageWidth * 0.3);\n            unitWidth = ctx.measureText(unitString).width;\n            ctx.fillText(unitString, (imageWidth - unitWidth) / 2, imageHeight * 0.47, imageWidth * 0.2);\n\n            ctx.restore();\n        };\n\n        var drawTickmarksImage = function (ctx, labelNumberFormat) {\n            backgroundColor.labelColor.setAlpha(1);\n            ctx.save();\n\n            if (steelseries.Orientation.WEST === orientation) {\n                ctx.translate(centerX, centerX);\n                ctx.rotate(-HALF_PI);\n                ctx.translate(-centerX, -centerX);\n            }\n            if (steelseries.Orientation.EAST === orientation) {\n                ctx.translate(centerX, centerX);\n                ctx.rotate(HALF_PI);\n                ctx.translate(-centerX, -centerX);\n            }\n\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            var fontSize = Math.ceil(imageWidth * 0.04);\n            ctx.font = fontSize + 'px ' + stdFontName;\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.translate(centerX, centerY);\n            ctx.rotate(rotationOffset);\n            var rotationStep = angleStep * minorTickSpacing;\n            var textRotationAngle;\n\n            var valueCounter = minValue;\n            var majorTickCounter = maxNoOfMinorTicks - 1;\n\n            var OUTER_POINT = imageWidth * 0.44;\n            var MAJOR_INNER_POINT = imageWidth * 0.41;\n            var MED_INNER_POINT = imageWidth * 0.415;\n            var MINOR_INNER_POINT = imageWidth * 0.42;\n            var TEXT_TRANSLATE_X = imageWidth * 0.48;\n            var TEXT_WIDTH = imageWidth * 0.04;\n            var HALF_MAX_NO_OF_MINOR_TICKS = maxNoOfMinorTicks / 2;\n            var MAX_VALUE_ROUNDED = parseFloat(maxValue.toFixed(2));\n            var i;\n\n            for (i = minValue; parseFloat(i.toFixed(2)) <= MAX_VALUE_ROUNDED; i += minorTickSpacing) {\n                textRotationAngle = + rotationStep + HALF_PI;\n                majorTickCounter++;\n                // Draw major tickmarks\n                if (majorTickCounter === maxNoOfMinorTicks) {\n                    ctx.lineWidth = 1.5;\n                    ctx.beginPath();\n                    ctx.moveTo(OUTER_POINT, 0);\n                    ctx.lineTo(MAJOR_INNER_POINT, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                    ctx.save();\n                    ctx.translate(TEXT_TRANSLATE_X, 0);\n                    ctx.rotate(textRotationAngle);\n                    switch (labelNumberFormat.format) {\n                    case 'fractional':\n                        ctx.fillText((valueCounter.toFixed(2)), 0, 0, TEXT_WIDTH);\n                        break;\n\n                    case 'scientific':\n                        ctx.fillText((valueCounter.toPrecision(2)), 0, 0, TEXT_WIDTH);\n                        break;\n\n                    case 'standard':\n                    /* falls through */\n                    default:\n                        ctx.fillText((valueCounter.toFixed(0)), 0, 0, TEXT_WIDTH);\n                        break;\n                    }\n                    ctx.translate(-TEXT_TRANSLATE_X, 0);\n                    ctx.restore();\n\n                    valueCounter += majorTickSpacing;\n                    majorTickCounter = 0;\n                    ctx.rotate(rotationStep);\n                    continue;\n                }\n\n                // Draw tickmark every minor tickmark spacing\n                if (0 === maxNoOfMinorTicks % 2 && majorTickCounter === (HALF_MAX_NO_OF_MINOR_TICKS)) {\n                    ctx.lineWidth = 1;\n                    ctx.beginPath();\n                    ctx.moveTo(OUTER_POINT, 0);\n                    ctx.lineTo(MED_INNER_POINT, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                } else {\n                    ctx.lineWidth = 0.5;\n                    ctx.beginPath();\n                    ctx.moveTo(OUTER_POINT, 0);\n                    ctx.lineTo(MINOR_INNER_POINT, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                }\n                ctx.rotate(rotationStep);\n            }\n\n            /*\n             // Logarithmic scale\n             var tmp = 0.1;\n             var minValueLog10 = 0.1;\n             var maxValueLog10 = parseInt(Math.pow(10, Math.ceil(Math.log10(maxValue))));\n             var drawLabel = true;\n             angleStep = angleRange / (maxValueLog10 - minValueLog10)\n             for (var scaleFactor = minValueLog10 ; scaleFactor <= maxValueLog10 ; scaleFactor *= 10)\n             {\n             for (var i = parseFloat((1 * scaleFactor).toFixed(1)) ; i < parseFloat((10 * scaleFactor).toFixed(1)) ; i += scaleFactor)\n             {\n             textRotationAngle =+ rotationStep + HALF_PI;\n\n             if(drawLabel)\n             {\n             ctx.lineWidth = 1.5;\n             ctx.beginPath();\n             ctx.moveTo(imageWidth * 0.38,0);\n             ctx.lineTo(imageWidth * 0.35,0);\n             ctx.closePath();\n             ctx.stroke();\n             ctx.save();\n             ctx.translate(imageWidth * 0.31, 0);\n             ctx.rotate(textRotationAngle);\n             ctx.fillText(parseFloat((i).toFixed(1)), 0, 0, imageWidth * 0.0375);\n             ctx.translate(-imageWidth * 0.31, 0);\n             ctx.restore();\n             drawLabel = false;\n             }\n             else\n             {\n             ctx.lineWidth = 0.5;\n             ctx.beginPath();\n             ctx.moveTo(imageWidth * 0.38,0);\n             ctx.lineTo(imageWidth * 0.36,0);\n             ctx.closePath();\n             ctx.stroke();\n             }\n             //doc.write('log10 scale value: ' + parseFloat((i).toFixed(1)) + '<br>');\n             //Math.log10(parseFloat((i).toFixed(1)));\n\n             ctx.rotate(rotationStep);\n             }\n             tmp = 0.1;\n             drawLabel = true;\n             }\n             */\n\n            ctx.translate(-centerX, -centerY);\n            ctx.restore();\n        };\n\n        // **************   Initialization  ********************\n        // Draw all static painting code to background\n        var init = function (parameters) {\n            parameters = parameters || {};\n            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n            var drawLed = (undefined === parameters.led ? false : parameters.led);\n            var drawPointer = (undefined === parameters.pointer ? false : parameters.pointer);\n            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\n            initialized = true;\n\n            // Calculate the current min and max values and the range\n            calculate();\n\n            // Create frame in frame buffer (backgroundBuffer)\n            if (drawFrame && frameVisible) {\n                drawRadialFrameImage(frameContext, frameDesign, centerX, size / 2, imageWidth, imageHeight);\n            }\n\n            // Create background in background buffer (backgroundBuffer)\n            if (drawBackground && backgroundVisible) {\n                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, size / 2, imageWidth, imageHeight);\n            }\n\n            // Draw LED ON in ledBuffer_ON\n            if (drawLed) {\n                ledContextOn.drawImage(createLedImage(Math.ceil(size * 0.093457), 1, ledColor), 0, 0);\n\n                // Draw LED ON in ledBuffer_OFF\n                ledContextOff.drawImage(createLedImage(Math.ceil(size * 0.093457), 0, ledColor), 0, 0);\n            }\n\n            // Draw min measured value indicator in minMeasuredValueBuffer\n            if (minMeasuredValueVisible) {\n                minMeasuredValueCtx.drawImage(createMeasuredValueImage(Math.ceil(size * 0.028037), steelseries.ColorDef.BLUE.dark.getRgbaColor(), true, true), 0, 0);\n                minMeasuredValueCtx.restore();\n            }\n\n            // Draw max measured value indicator in maxMeasuredValueBuffer\n            if (maxMeasuredValueVisible) {\n                maxMeasuredValueCtx.drawImage(createMeasuredValueImage(Math.ceil(size * 0.028037), steelseries.ColorDef.RED.medium.getRgbaColor(), true), 0, 0);\n                maxMeasuredValueCtx.restore();\n            }\n\n            // Create alignment posts in background buffer (backgroundBuffer)\n            if (drawBackground && backgroundVisible) {\n                drawPostsImage(backgroundContext);\n\n                // Create section in background buffer (backgroundBuffer)\n                if (null !== section && 0 < section.length) {\n                    backgroundContext.save();\n                    if (steelseries.Orientation.WEST === orientation) {\n                        backgroundContext.translate(centerX, centerX);\n                        backgroundContext.rotate(-HALF_PI);\n                        backgroundContext.translate(-centerX, -centerX);\n                    } else if (steelseries.Orientation.EAST === orientation) {\n                        backgroundContext.translate(centerX, centerX);\n                        backgroundContext.rotate(HALF_PI);\n                        backgroundContext.translate(-centerX, -centerX);\n                    }\n                    var sectionIndex = section.length;\n                    do {\n                        sectionIndex--;\n                        drawAreaSectionImage(backgroundContext, section[sectionIndex].start, section[sectionIndex].stop, section[sectionIndex].color, false);\n                    }\n                    while (0 < sectionIndex);\n                    backgroundContext.restore();\n                }\n\n                // Create area in background buffer (backgroundBuffer)\n                if (null !== area && 0 < area.length) {\n                    if (steelseries.Orientation.WEST === orientation) {\n                        backgroundContext.translate(centerX, centerX);\n                        backgroundContext.rotate(-HALF_PI);\n                        backgroundContext.translate(-centerX, -centerX);\n                    }\n                    if (steelseries.Orientation.EAST === orientation) {\n                        backgroundContext.translate(centerX, centerX);\n                        backgroundContext.rotate(HALF_PI);\n                        backgroundContext.translate(-centerX, -centerX);\n                    }\n                    var areaIndex = area.length;\n                    do {\n                        areaIndex--;\n                        drawAreaSectionImage(backgroundContext, area[areaIndex].start, area[areaIndex].stop, area[areaIndex].color, true);\n                    }\n                    while (0 < areaIndex);\n                    backgroundContext.restore();\n                }\n\n                // Create tickmarks in background buffer (backgroundBuffer)\n                drawTickmarksImage(backgroundContext, labelNumberFormat);\n\n                // Create title in background buffer (backgroundBuffer)\n                drawTitleImage(backgroundContext);\n            }\n\n            // Draw threshold image to background context\n            if (thresholdVisible) {\n                backgroundContext.save();\n                if (steelseries.Orientation.WEST === orientation) {\n                    backgroundContext.translate(centerX, centerX);\n                    backgroundContext.rotate(-HALF_PI);\n                    backgroundContext.translate(-centerX, -centerX);\n                }\n                if (steelseries.Orientation.EAST === orientation) {\n                    backgroundContext.translate(centerX, centerX);\n                    backgroundContext.rotate(HALF_PI);\n                    backgroundContext.translate(-centerX, -centerX);\n                }\n                backgroundContext.translate(centerX, centerY);\n                backgroundContext.rotate(rotationOffset + (threshold - minValue) * angleStep + HALF_PI);\n                backgroundContext.translate(-centerX, -centerY);\n                backgroundContext.drawImage(createThresholdImage(), imageWidth * 0.475, imageHeight * 0.32);\n                backgroundContext.restore();\n            }\n\n            // Create pointer image in pointer buffer (contentBuffer)\n            if (drawPointer) {\n                drawPointerImage(pointerContext, imageWidth * 1.17, pointerType, pointerColor, backgroundColor.labelColor);\n\n            }\n\n            // Create foreground in foreground buffer (foregroundBuffer)\n            if (drawForeground && foregroundVisible) {\n                var knobVisible = (pointerType.type === 'type15' || pointerType.type === 'type16' ? false : true);\n                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, knobVisible, knobType, knobStyle, gaugeType, orientation);\n            }\n        };\n\n        var resetBuffers = function (buffers) {\n            buffers = buffers || {};\n            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n            var resetLed = (undefined === buffers.led ? false : buffers.led);\n            var resetPointer = (undefined === buffers.pointer ? false : buffers.pointer);\n            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\n            if (resetFrame) {\n                frameBuffer.width = size;\n                frameBuffer.height = size;\n                frameContext = frameBuffer.getContext('2d');\n            }\n\n            if (resetBackground) {\n                backgroundBuffer.width = size;\n                backgroundBuffer.height = size;\n                backgroundContext = backgroundBuffer.getContext('2d');\n            }\n\n            if (resetLed) {\n                ledBufferOn.width = Math.ceil(size * 0.093457);\n                ledBufferOn.height = Math.ceil(size * 0.093457);\n                ledContextOn = ledBufferOn.getContext('2d');\n\n                ledBufferOff.width = Math.ceil(size * 0.093457);\n                ledBufferOff.height = Math.ceil(size * 0.093457);\n                ledContextOff = ledBufferOff.getContext('2d');\n\n                // Buffer for current led painting code\n                ledBuffer = ledBufferOff;\n            }\n\n            if (resetPointer) {\n                pointerBuffer.width = size;\n                pointerBuffer.height = size;\n                pointerContext = pointerBuffer.getContext('2d');\n            }\n\n            if (resetForeground) {\n                foregroundBuffer.width = size;\n                foregroundBuffer.height = size;\n                foregroundContext = foregroundBuffer.getContext('2d');\n            }\n        };\n\n        var blink = function (blinking) {\n            if (blinking) {\n                ledTimerId = setInterval(toggleAndRepaintLed, 1000);\n            } else {\n                clearInterval(ledTimerId);\n                ledBuffer = ledBufferOff;\n            }\n        };\n\n        var toggleAndRepaintLed = function () {\n            if (ledVisible) {\n                if (ledBuffer === ledBufferOn) {\n                    ledBuffer = ledBufferOff;\n                } else {\n                    ledBuffer = ledBufferOn;\n                }\n                if (!repainting) {\n                    repainting = true;\n                    requestAnimFrame(self.repaint);\n                }\n            }\n        };\n\n        //************************************ Public methods **************************************\n        this.setValue = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n            if (value !== targetValue) {\n                value = targetValue;\n\n                if (value > maxMeasuredValue) {\n                    maxMeasuredValue = value;\n                }\n                if (value < minMeasuredValue) {\n                    minMeasuredValue = value;\n                }\n\n                if ((value >= threshold && !ledBlinking && thresholdRising) ||\n                    (value <= threshold && !ledBlinking && !thresholdRising)) {\n                    ledBlinking = true;\n                    blink(ledBlinking);\n                    if (playAlarm) {\n                        audioElement.play();\n                    }\n                } else if ((value < threshold && ledBlinking && thresholdRising) ||\n                           (value > threshold && ledBlinking && !thresholdRising)) {\n                    ledBlinking = false;\n                    blink(ledBlinking);\n                    if (playAlarm) {\n                        audioElement.pause();\n                    }\n                }\n\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getValue = function () {\n            return value;\n        };\n\n        this.setValueAnimated = function (newValue, callback) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue)),\n                gauge = this,\n                time;\n\n            if (value !== targetValue) {\n                if (undefined !==  tween && tween.isPlaying) {\n                    tween.stop();\n                }\n\n                time = fullScaleDeflectionTime * Math.abs(targetValue - value) / (maxValue - minValue);\n                time = Math.max(time, fullScaleDeflectionTime / 5);\n                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n                //tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, 1);\n                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, value, targetValue, 1);\n                tween.onMotionChanged = function (event) {\n                    value = event.target._pos;\n\n                    if ((value >= threshold && !ledBlinking && thresholdRising) ||\n                        (value <= threshold && !ledBlinking && !thresholdRising)) {\n                        ledBlinking = true;\n                        blink(ledBlinking);\n                        if (playAlarm) {\n                            audioElement.play();\n                        }\n                    } else if ((value < threshold && ledBlinking && thresholdRising) ||\n                               (value > threshold && ledBlinking && !thresholdRising)) {\n                        ledBlinking = false;\n                        blink(ledBlinking);\n                        if (playAlarm) {\n                            audioElement.pause();\n                        }\n                    }\n\n                    if (value > maxMeasuredValue) {\n                        maxMeasuredValue = value;\n                    }\n                    if (value < minMeasuredValue) {\n                        minMeasuredValue = value;\n                    }\n\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tween.onMotionFinished = callback;\n                }\n\n                tween.start();\n            }\n            return this;\n        };\n\n        this.resetMinMeasuredValue = function () {\n            minMeasuredValue = value;\n            this.repaint();\n            return this;\n        };\n\n        this.resetMaxMeasuredValue = function () {\n            maxMeasuredValue = value;\n            this.repaint();\n            return this;\n        };\n\n        this.setMinMeasuredValueVisible = function (visible) {\n            minMeasuredValueVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setMaxMeasuredValueVisible = function (visible) {\n            maxMeasuredValueVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setThresholdVisible = function (visible) {\n            thresholdVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setThresholdRising = function (rising) {\n            thresholdRising = !!rising;\n            // reset existing threshold alerts\n            ledBlinking = !ledBlinking;\n            blink(ledBlinking);\n            this.repaint();\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers({frame: true});\n            frameDesign = newFrameDesign;\n            init({frame: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            resetBuffers({background: true,\n                          pointer: (pointerType.type === 'type2' || pointerType.type === 'type13' ? true : false)       // type2 & 13 depend on background\n                          });\n            backgroundColor = newBackgroundColor;\n            init({background: true,\n                  pointer: (pointerType.type === 'type2' || pointerType.type === 'type13' ? true : false)       // type2 & 13 depend on background\n                });\n            this.repaint();\n            return this;\n        };\n\n        this.setForegroundType = function (newForegroundType) {\n            resetBuffers({foreground: true});\n            foregroundType = newForegroundType;\n            init({foreground: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerType = function (newPointerType) {\n            resetBuffers({pointer: true,\n                          foreground: true  // Required as type15 does not need a knob\n                         });\n            pointerType = newPointerType;\n            init({pointer: true,\n                  foreground: true\n                 });\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerColor = function (newPointerColor) {\n            resetBuffers({pointer: true});\n            pointerColor = newPointerColor;\n            init({pointer: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLedColor = function (newLedColor) {\n            resetBuffers({led: true});\n            ledColor = newLedColor;\n            init({led: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLedVisible = function (visible) {\n            ledVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init({frame: true,\n                      background: true,\n                      led: true,\n                      pointer: true,\n                      foreground: true});\n            }\n\n            mainCtx.clearRect(0, 0, size, size);\n            mainCtx.save();\n\n            // Draw frame\n            if (frameVisible) {\n                mainCtx.drawImage(frameBuffer, 0, 0);\n            }\n\n            // Draw buffered image to visible canvas\n            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\n            // Draw led\n            if (ledVisible) {\n                mainCtx.drawImage(ledBuffer, ledPosX, ledPosY);\n            }\n\n            if (steelseries.Orientation.WEST === orientation) {\n                mainCtx.translate(centerX, centerX);\n                mainCtx.rotate(-HALF_PI);\n                mainCtx.translate(-centerX, -centerX);\n            }\n            if (steelseries.Orientation.EAST === orientation) {\n                mainCtx.translate(centerX, centerX);\n                mainCtx.rotate(HALF_PI);\n                mainCtx.translate(-centerX, -centerX);\n            }\n\n            // Draw min measured value indicator\n            if (minMeasuredValueVisible) {\n                mainCtx.save();\n                mainCtx.translate(centerX, centerY);\n                mainCtx.rotate(rotationOffset + HALF_PI + (minMeasuredValue - minValue) * angleStep);\n                mainCtx.translate(-centerX, -centerY);\n                mainCtx.drawImage(minMeasuredValueBuffer, mainCtx.canvas.width * 0.4865, mainCtx.canvas.height * 0.27);\n                mainCtx.restore();\n            }\n\n            // Draw max measured value indicator\n            if (maxMeasuredValueVisible) {\n                mainCtx.save();\n                mainCtx.translate(centerX, centerY);\n                mainCtx.rotate(rotationOffset + HALF_PI + (maxMeasuredValue - minValue) * angleStep);\n                mainCtx.translate(-centerX, -centerY);\n                mainCtx.drawImage(maxMeasuredValueBuffer, mainCtx.canvas.width * 0.4865, mainCtx.canvas.height * 0.27);\n                mainCtx.restore();\n            }\n\n            angle = rotationOffset + HALF_PI + (value - minValue) * angleStep;\n\n            // Define rotation center\n            mainCtx.save();\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate(angle);\n            // Set the pointer shadow params\n            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n            mainCtx.shadowBlur = shadowOffset * 2;\n            // Draw pointer\n            mainCtx.translate(-pointerOffset, -pointerOffset);\n            mainCtx.drawImage(pointerBuffer, 0, 0);\n            // Undo the translations & shadow settings\n            mainCtx.restore();\n\n            // Draw foreground\n            if (foregroundVisible) {\n                if (steelseries.Orientation.WEST === orientation) {\n                    mainCtx.translate(centerX, centerX);\n                    mainCtx.rotate(HALF_PI);\n                    mainCtx.translate(-centerX, -centerX);\n                } else if (steelseries.Orientation.EAST === orientation) {\n                    mainCtx.translate(centerX, centerX);\n                    mainCtx.rotate(-HALF_PI);\n                    mainCtx.translate(-centerX, -centerX);\n                }\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n            mainCtx.restore();\n\n            repainting = false;\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var linear = function (canvas, parameters) {\n        parameters = parameters || {};\n        var gaugeType = (undefined === parameters.gaugeType ? steelseries.GaugeType.TYPE1 : parameters.gaugeType),\n            width = (undefined === parameters.width ? 0 : parameters.width),\n            height = (undefined === parameters.height ? 0 : parameters.height),\n            minValue = (undefined === parameters.minValue ? 0 : parameters.minValue),\n            maxValue = (undefined === parameters.maxValue ? (minValue + 100) : parameters.maxValue),\n            niceScale = (undefined === parameters.niceScale ? true : parameters.niceScale),\n            threshold = (undefined === parameters.threshold ? (maxValue - minValue) / 2 + minValue: parameters.threshold),\n            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            valueColor = (undefined === parameters.valueColor ? steelseries.ColorDef.RED : parameters.valueColor),\n            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor),\n            ledVisible = (undefined === parameters.ledVisible ? true : parameters.ledVisible),\n            thresholdVisible = (undefined === parameters.thresholdVisible ? true : parameters.thresholdVisible),\n            thresholdRising = (undefined === parameters.thresholdRising ? true : parameters.thresholdRising),\n            minMeasuredValueVisible = (undefined === parameters.minMeasuredValueVisible ? false : parameters.minMeasuredValueVisible),\n            maxMeasuredValueVisible = (undefined === parameters.maxMeasuredValueVisible ? false : parameters.maxMeasuredValueVisible),\n            labelNumberFormat = (undefined === parameters.labelNumberFormat ? steelseries.LabelNumberFormat.STANDARD : parameters.labelNumberFormat),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),\n            alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),\n            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (width === 0) {\n            width = mainCtx.canvas.width;\n        }\n        if (height === 0) {\n            height = mainCtx.canvas.height;\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = width;\n        mainCtx.canvas.height = height;\n\n        var imageWidth = width;\n        var imageHeight = height;\n\n        // Create audio tag for alarm sound\n        if (playAlarm && alarmSound !== false) {\n            var audioElement = doc.createElement('audio');\n            audioElement.setAttribute('src', alarmSound);\n            //audioElement.setAttribute('src', 'js/alarm.mp3');\n            audioElement.setAttribute('preload', 'auto');\n        }\n\n        var self = this;\n        var value = minValue;\n\n        // Properties\n        var minMeasuredValue = maxValue;\n        var maxMeasuredValue = minValue;\n\n        // Check gaugeType is 1 or 2\n        if (gaugeType.type !== 'type1' && gaugeType.type !== 'type2') {\n            gaugeType = steelseries.GaugeType.TYPE1;\n        }\n\n        var tween;\n        var ledBlinking = false;\n        var repainting = false;\n\n        var ledTimerId = 0;\n\n        var vertical = width <= height;\n\n        // Constants\n        var ledPosX;\n        var ledPosY;\n        var ledSize = Math.round((vertical ? height : width) * 0.05);\n        var minMaxIndSize = Math.round((vertical ? width : height) * 0.05);\n        var stdFont;\n        var lcdFont;\n\n        // Misc\n        if (vertical) {\n            ledPosX = imageWidth / 2 - ledSize / 2;\n            ledPosY = (gaugeType.type === 'type1' ? 0.053 : 0.038) * imageHeight;\n            stdFont = Math.floor(imageHeight / 22) + 'px ' + stdFontName;\n            lcdFont = Math.floor(imageHeight / 22) + 'px ' + lcdFontName;\n        } else {\n            ledPosX = 0.89 * imageWidth;\n            ledPosY = imageHeight / 2 - ledSize / 2;\n            stdFont = Math.floor(imageHeight / 10) + 'px ' + stdFontName;\n            lcdFont = Math.floor(imageHeight / 10) + 'px ' + lcdFontName;\n        }\n\n        var initialized = false;\n\n        // Tickmark specific private variables\n        var niceMinValue = minValue;\n        var niceMaxValue = maxValue;\n        var niceRange = maxValue - minValue;\n        var range = niceMaxValue - niceMinValue;\n        var minorTickSpacing = 0;\n        var majorTickSpacing = 0;\n        var maxNoOfMinorTicks = 10;\n        var maxNoOfMajorTicks = 10;\n\n        // Method to calculate nice values for min, max and range for the tickmarks\n        var calculate = function calculate() {\n            if (niceScale) {\n                niceRange = calcNiceNumber(maxValue - minValue, false);\n                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n                niceMinValue = Math.floor(minValue / majorTickSpacing) * majorTickSpacing;\n                niceMaxValue = Math.ceil(maxValue / majorTickSpacing) * majorTickSpacing;\n                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n                minValue = niceMinValue;\n                maxValue = niceMaxValue;\n                range = maxValue - minValue;\n            } else {\n                niceRange = (maxValue - minValue);\n                niceMinValue = minValue;\n                niceMaxValue = maxValue;\n                range = niceRange;\n                minorTickSpacing = 1;\n                majorTickSpacing = 10;\n            }\n        };\n\n        // **************   Buffer creation  ********************\n        // Buffer for the frame\n        var frameBuffer = createBuffer(width, height);\n        var frameContext = frameBuffer.getContext('2d');\n\n        // Buffer for the background\n        var backgroundBuffer = createBuffer(width, height);\n        var backgroundContext = backgroundBuffer.getContext('2d');\n\n        var lcdBuffer;\n\n        // Buffer for led on painting code\n        var ledBufferOn = createBuffer(ledSize, ledSize);\n        var ledContextOn = ledBufferOn.getContext('2d');\n\n        // Buffer for led off painting code\n        var ledBufferOff = createBuffer(ledSize, ledSize);\n        var ledContextOff = ledBufferOff.getContext('2d');\n\n        // Buffer for current led painting code\n        var ledBuffer = ledBufferOff;\n\n        // Buffer for the minMeasuredValue indicator\n        var minMeasuredValueBuffer = createBuffer(minMaxIndSize, minMaxIndSize);\n        var minMeasuredValueCtx = minMeasuredValueBuffer.getContext('2d');\n\n        // Buffer for the maxMeasuredValue indicator\n        var maxMeasuredValueBuffer = createBuffer(minMaxIndSize, minMaxIndSize);\n        var maxMeasuredValueCtx = maxMeasuredValueBuffer.getContext('2d');\n\n        // Buffer for static foreground painting code\n        var foregroundBuffer = createBuffer(width, height);\n        var foregroundContext = foregroundBuffer.getContext('2d');\n\n        // **************   Image creation  ********************\n        var drawLcdText = function (ctx, value, vertical) {\n            ctx.save();\n            ctx.textAlign = 'right';\n            ctx.textBaseline = 'middle';\n            ctx.strokeStyle = lcdColor.textColor;\n            ctx.fillStyle = lcdColor.textColor;\n\n            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n                ctx.shadowColor = 'gray';\n                if (vertical) {\n                    ctx.shadowOffsetX = imageHeight * 0.003;\n                    ctx.shadowOffsetY = imageHeight * 0.003;\n                    ctx.shadowBlur = imageHeight * 0.004;\n                } else {\n                    ctx.shadowOffsetX = imageHeight * 0.007;\n                    ctx.shadowOffsetY = imageHeight * 0.007;\n                    ctx.shadowBlur = imageHeight * 0.009;\n                }\n            }\n\n            var lcdTextX;\n            var lcdTextY;\n            var lcdTextWidth;\n\n            if (digitalFont) {\n                ctx.font = lcdFont;\n            } else {\n                ctx.font = stdFont;\n            }\n\n            if (vertical) {\n                lcdTextX = (imageWidth - (imageWidth * 0.571428)) / 2  + imageWidth * 0.571428 - 2;\n                lcdTextY = imageHeight * 0.88 + 1 + (imageHeight * 0.055 - 2) / 2;\n                lcdTextWidth = imageWidth * 0.7 - 2;\n            } else {\n                lcdTextX = (imageWidth * 0.695) + imageWidth * 0.18 - 2;\n                lcdTextY = (imageHeight * 0.22) + 1 + (imageHeight * 0.15 - 2) / 2;\n                lcdTextWidth = imageHeight * 0.22 - 2;\n            }\n\n            ctx.fillText(value.toFixed(lcdDecimals), lcdTextX, lcdTextY, lcdTextWidth);\n\n            ctx.restore();\n        };\n\n        var createThresholdImage = function (vertical) {\n            var thresholdBuffer = doc.createElement('canvas');\n            var thresholdCtx = thresholdBuffer.getContext('2d');\n            thresholdBuffer.height = thresholdBuffer.width = minMaxIndSize;\n\n            thresholdCtx.save();\n            var gradThreshold = thresholdCtx.createLinearGradient(0, 0.1, 0, thresholdBuffer.height * 0.9);\n            gradThreshold.addColorStop(0, '#520000');\n            gradThreshold.addColorStop(0.3, '#fc1d00');\n            gradThreshold.addColorStop(0.59, '#fc1d00');\n            gradThreshold.addColorStop(1, '#520000');\n            thresholdCtx.fillStyle = gradThreshold;\n\n            if (vertical) {\n                thresholdCtx.beginPath();\n                thresholdCtx.moveTo(0.1, thresholdBuffer.height * 0.5);\n                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, 0.1);\n                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, thresholdBuffer.height * 0.9);\n                thresholdCtx.closePath();\n            } else {\n                thresholdCtx.beginPath();\n                thresholdCtx.moveTo(0.1, 0.1);\n                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, 0.1);\n                thresholdCtx.lineTo(thresholdBuffer.width * 0.5, thresholdBuffer.height * 0.9);\n                thresholdCtx.closePath();\n            }\n\n            thresholdCtx.fill();\n            thresholdCtx.strokeStyle = '#FFFFFF';\n            thresholdCtx.stroke();\n\n            thresholdCtx.restore();\n\n            return thresholdBuffer;\n        };\n\n        var drawTickmarksImage = function (ctx, labelNumberFormat, vertical) {\n            backgroundColor.labelColor.setAlpha(1);\n            ctx.save();\n            ctx.textBaseline = 'middle';\n            var TEXT_WIDTH = imageWidth * 0.1;\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\n            var valueCounter = minValue;\n            var majorTickCounter = maxNoOfMinorTicks - 1;\n            var tickCounter;\n            var currentPos;\n            var scaleBoundsX;\n            var scaleBoundsY;\n            var scaleBoundsW;\n            var scaleBoundsH;\n            var tickSpaceScaling = 1;\n\n            var minorTickStart;\n            var minorTickStop;\n            var mediumTickStart;\n            var mediumTickStop;\n            var majorTickStart;\n            var majorTickStop;\n            if (vertical) {\n                minorTickStart = (0.34 * imageWidth);\n                minorTickStop = (0.36 * imageWidth);\n                mediumTickStart = (0.33 * imageWidth);\n                mediumTickStop = (0.36 * imageWidth);\n                majorTickStart = (0.32 * imageWidth);\n                majorTickStop = (0.36 * imageWidth);\n                ctx.textAlign = 'right';\n                scaleBoundsX = 0;\n                scaleBoundsY = imageHeight * 0.128640;\n                scaleBoundsW = 0;\n                if (gaugeType.type === 'type1') {\n                    scaleBoundsH = (imageHeight * 0.856796 - imageHeight * 0.128640);\n                } else {\n                    scaleBoundsH = (imageHeight * 0.7475 - imageHeight * 0.128640);\n                }\n                tickSpaceScaling = scaleBoundsH / (maxValue - minValue);\n            } else {\n                minorTickStart = (0.65 * imageHeight);\n                minorTickStop = (0.63 * imageHeight);\n                mediumTickStart = (0.66 * imageHeight);\n                mediumTickStop = (0.63 * imageHeight);\n                majorTickStart = (0.67 * imageHeight);\n                majorTickStop = (0.63 * imageHeight);\n                ctx.textAlign = 'center';\n                scaleBoundsY = 0;\n                if (gaugeType.type === 'type1') {\n                    scaleBoundsX = imageWidth * 0.142857;\n                    scaleBoundsW = (imageWidth * 0.871012 - scaleBoundsX);\n                } else {\n                    scaleBoundsX = imageWidth * 0.19857;\n                    scaleBoundsW = (imageWidth * 0.82 - scaleBoundsX);\n                }\n                scaleBoundsH = 0;\n                tickSpaceScaling = scaleBoundsW / (maxValue - minValue);\n            }\n\n            var labelCounter;\n            for (labelCounter = minValue, tickCounter = 0; labelCounter <= maxValue; labelCounter += minorTickSpacing, tickCounter += minorTickSpacing) {\n\n                // Calculate the bounds of the scaling\n                if (vertical) {\n                    currentPos = scaleBoundsY + scaleBoundsH - tickCounter * tickSpaceScaling;\n                } else {\n                    currentPos = scaleBoundsX + tickCounter * tickSpaceScaling;\n                }\n\n                majorTickCounter++;\n\n                // Draw tickmark every major tickmark spacing\n                if (majorTickCounter === maxNoOfMinorTicks) {\n\n                    // Draw the major tickmarks\n                    ctx.lineWidth = 1.5;\n                    drawLinearTicks(ctx, majorTickStart, majorTickStop, currentPos, vertical);\n\n                    // Draw the standard tickmark labels\n                    if (vertical) {\n                        // Vertical orientation\n                        switch (labelNumberFormat.format) {\n                        case 'fractional':\n                            ctx.fillText((valueCounter.toFixed(2)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n                            break;\n\n                        case 'scientific':\n                            ctx.fillText((valueCounter.toPrecision(2)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n                            break;\n\n                        case 'standard':\n                        /* falls through */\n                        default:\n                            ctx.fillText((valueCounter.toFixed(0)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n                            break;\n                        }\n                    } else {\n                        // Horizontal orientation\n                        switch (labelNumberFormat.format) {\n                        case 'fractional':\n                            ctx.fillText((valueCounter.toFixed(2)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n                            break;\n\n                        case 'scientific':\n                            ctx.fillText((valueCounter.toPrecision(2)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n                            break;\n\n                        case 'standard':\n                        /* falls through */\n                        default:\n                            ctx.fillText((valueCounter.toFixed(0)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n                            break;\n                        }\n                    }\n\n                    valueCounter += majorTickSpacing;\n                    majorTickCounter = 0;\n                    continue;\n                }\n\n                // Draw tickmark every minor tickmark spacing\n                if (0 === maxNoOfMinorTicks % 2 && majorTickCounter === (maxNoOfMinorTicks / 2)) {\n                    ctx.lineWidth = 1;\n                    drawLinearTicks(ctx, mediumTickStart, mediumTickStop, currentPos, vertical);\n                } else {\n                    ctx.lineWidth = 0.5;\n                    drawLinearTicks(ctx, minorTickStart, minorTickStop, currentPos, vertical);\n                }\n            }\n\n            ctx.restore();\n        };\n\n        var drawLinearTicks = function (ctx, tickStart, tickStop, currentPos, vertical) {\n            if (vertical) {\n                // Vertical orientation\n                ctx.beginPath();\n                ctx.moveTo(tickStart, currentPos);\n                ctx.lineTo(tickStop, currentPos);\n                ctx.closePath();\n                ctx.stroke();\n            } else {\n                // Horizontal orientation\n                ctx.beginPath();\n                ctx.moveTo(currentPos, tickStart);\n                ctx.lineTo(currentPos, tickStop);\n                ctx.closePath();\n                ctx.stroke();\n            }\n        };\n\n        // **************   Initialization  ********************\n        var init = function (parameters) {\n            parameters = parameters || {};\n            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n            var drawLed = (undefined === parameters.led ? false : parameters.led);\n            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\n            var yOffset;\n            var yRange;\n            var valuePos;\n\n            initialized = true;\n\n            // Calculate the current min and max values and the range\n            calculate();\n\n            // Create frame in frame buffer (backgroundBuffer)\n            if (drawFrame && frameVisible) {\n                drawLinearFrameImage(frameContext, frameDesign, imageWidth, imageHeight, vertical);\n            }\n\n            // Create background in background buffer (backgroundBuffer)\n            if (drawBackground && backgroundVisible) {\n                drawLinearBackgroundImage(backgroundContext, backgroundColor, imageWidth, imageHeight, vertical);\n            }\n\n            // draw Thermometer outline\n            if (drawBackground && gaugeType.type === 'type2') {\n                drawBackgroundImage(backgroundContext);\n            }\n\n            if (drawLed) {\n                if (vertical) {\n                    // Draw LED ON in ledBuffer_ON\n                    ledContextOn.drawImage(createLedImage(ledSize, 1, ledColor), 0, 0);\n\n                    // Draw LED ON in ledBuffer_OFF\n                    ledContextOff.drawImage(createLedImage(ledSize, 0, ledColor), 0, 0);\n                } else {\n                    // Draw LED ON in ledBuffer_ON\n                    ledContextOn.drawImage(createLedImage(ledSize, 1, ledColor), 0, 0);\n\n                    // Draw LED ON in ledBuffer_OFF\n                    ledContextOff.drawImage(createLedImage(ledSize, 0, ledColor), 0, 0);\n                }\n            }\n\n            // Draw min measured value indicator in minMeasuredValueBuffer\n            if (minMeasuredValueVisible) {\n                if (vertical) {\n                    minMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.BLUE.dark.getRgbaColor(), false, vertical), 0, 0);\n                } else {\n                    minMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.BLUE.dark.getRgbaColor(), false, vertical), 0, 0);\n                }\n            }\n\n            // Draw max measured value indicator in maxMeasuredValueBuffer\n            if (maxMeasuredValueVisible) {\n                if (vertical) {\n                    maxMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.RED.medium.getRgbaColor(), false, vertical), 0, 0);\n                } else {\n                    maxMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.RED.medium.getRgbaColor(), false, vertical), 0, 0);\n                }\n            }\n\n            // Create alignment posts in background buffer (backgroundBuffer)\n            if (drawBackground && backgroundVisible) {\n\n                // Create tickmarks in background buffer (backgroundBuffer)\n                drawTickmarksImage(backgroundContext, labelNumberFormat, vertical);\n\n                // Create title in background buffer (backgroundBuffer)\n                if (vertical) {\n                    drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, vertical, null, lcdVisible, gaugeType);\n                } else {\n                    drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, vertical, null, lcdVisible, gaugeType);\n                }\n            }\n\n            // Draw threshold image to background context\n            if (drawBackground && thresholdVisible) {\n                backgroundContext.save();\n                if (vertical) {\n                    // Vertical orientation\n                    yOffset = (gaugeType.type === 'type1' ? 0.856796 : 0.7475);\n                    yRange = yOffset - 0.128640;\n                    valuePos = imageHeight * yOffset - (imageHeight * yRange) * (threshold - minValue) / (maxValue - minValue);\n                    backgroundContext.translate(imageWidth * 0.365, valuePos - minMaxIndSize / 2);\n                } else {\n                    // Horizontal orientation\n                    yOffset = (gaugeType.type === 'type1' ? 0.871012 : 0.82);\n                    yRange = yOffset - (gaugeType.type === 'type1' ? 0.142857 : 0.19857);\n                    valuePos = imageWidth * yRange * (threshold - minValue) / (maxValue - minValue);\n                    backgroundContext.translate(imageWidth * (gaugeType.type === 'type1' ? 0.142857 : 0.19857) - minMaxIndSize / 2 + valuePos, imageHeight * 0.58);\n                }\n                backgroundContext.drawImage(createThresholdImage(vertical), 0, 0);\n                backgroundContext.restore();\n            }\n\n            // Create lcd background if selected in background buffer (backgroundBuffer)\n            if (drawBackground && lcdVisible) {\n                if (vertical) {\n                    lcdBuffer = createLcdBackgroundImage(imageWidth * 0.571428, imageHeight * 0.055, lcdColor);\n                    backgroundContext.drawImage(lcdBuffer, ((imageWidth - (imageWidth * 0.571428)) / 2), imageHeight * 0.88);\n                } else {\n                    lcdBuffer = createLcdBackgroundImage(imageWidth * 0.18, imageHeight * 0.15, lcdColor);\n                    backgroundContext.drawImage(lcdBuffer, imageWidth * 0.695, imageHeight * 0.22);\n                }\n            }\n\n            // add thermometer stem foreground\n            if (drawForeground && gaugeType.type === 'type2') {\n                drawForegroundImage(foregroundContext);\n            }\n\n            // Create foreground in foreground buffer (foregroundBuffer)\n            if (drawForeground && foregroundVisible) {\n                drawLinearForegroundImage(foregroundContext, imageWidth, imageHeight, vertical, false);\n            }\n        };\n\n        var resetBuffers = function (buffers) {\n            buffers = buffers || {};\n            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n            var resetLed = (undefined === buffers.led ? false : buffers.led);\n            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\n            if (resetFrame) {\n                frameBuffer.width = width;\n                frameBuffer.height = height;\n                frameContext = frameBuffer.getContext('2d');\n            }\n\n            if (resetBackground) {\n                backgroundBuffer.width = width;\n                backgroundBuffer.height = height;\n                backgroundContext = backgroundBuffer.getContext('2d');\n            }\n\n            if (resetLed) {\n                ledBufferOn.width = Math.ceil(width * 0.093457);\n                ledBufferOn.height = Math.ceil(height * 0.093457);\n                ledContextOn = ledBufferOn.getContext('2d');\n\n                ledBufferOff.width = Math.ceil(width * 0.093457);\n                ledBufferOff.height = Math.ceil(height * 0.093457);\n                ledContextOff = ledBufferOff.getContext('2d');\n\n                // Buffer for current led painting code\n                ledBuffer = ledBufferOff;\n            }\n\n            if (resetForeground) {\n                foregroundBuffer.width = width;\n                foregroundBuffer.height = height;\n                foregroundContext = foregroundBuffer.getContext('2d');\n            }\n        };\n\n        var blink = function (blinking) {\n            if (blinking) {\n                ledTimerId = setInterval(toggleAndRepaintLed, 1000);\n            } else {\n                clearInterval(ledTimerId);\n                ledBuffer = ledBufferOff;\n            }\n        };\n\n        var toggleAndRepaintLed = function () {\n            if (ledVisible) {\n                if (ledBuffer === ledBufferOn) {\n                    ledBuffer = ledBufferOff;\n                } else {\n                    ledBuffer = ledBufferOn;\n                }\n                if (!repainting) {\n                    repainting = true;\n                    requestAnimFrame(self.repaint);\n                }\n            }\n        };\n\n        var drawValue = function (ctx, imageWidth, imageHeight) {\n            var top; // position of max value\n            var bottom; // position of min value\n            var labelColor = backgroundColor.labelColor;\n            var fullSize;\n            var valueSize, valueTop;\n            var valueStartX, valueStartY, valueStopX, valueStopY;\n            var valueBackgroundStartX, valueBackgroundStartY, valueBackgroundStopX, valueBackgroundStopY;\n            var valueBorderStartX, valueBorderStartY, valueBorderStopX, valueBorderStopY;\n            var valueForegroundStartX, valueForegroundStartY, valueForegroundStopX, valueForegroundStopY;\n\n            // Orientation dependend definitions\n            if (vertical) {\n                // Vertical orientation\n                top =  imageHeight * 0.128640; // position of max value\n                if (gaugeType.type === 'type1') {\n                    bottom = imageHeight * 0.856796; // position of min value\n                } else {\n                    bottom = imageHeight * 0.7475;\n                }\n                fullSize = bottom - top;\n                valueSize = fullSize * (value - minValue) / (maxValue - minValue);\n                valueTop = bottom - valueSize;\n                valueBackgroundStartX = 0;\n                valueBackgroundStartY = top;\n                valueBackgroundStopX = 0;\n                valueBackgroundStopY = bottom;\n            } else {\n                // Horizontal orientation\n                if (gaugeType.type === 'type1') {\n                    top = imageWidth * 0.871012; // position of max value\n                    bottom = imageWidth * 0.142857; // position of min value\n                } else {\n                    top = imageWidth * 0.82; // position of max value\n                    bottom = imageWidth * 0.19857; // position of min value\n                }\n                fullSize = top - bottom;\n                valueSize = fullSize * (value - minValue) / (maxValue - minValue);\n                valueTop = bottom;\n                valueBackgroundStartX = top;\n                valueBackgroundStartY = 0;\n                valueBackgroundStopX = bottom;\n                valueBackgroundStopY = 0;\n            }\n            if (gaugeType.type === 'type1') {\n                var darker = (backgroundColor === steelseries.BackgroundColor.CARBON ||\n                              backgroundColor === steelseries.BackgroundColor.PUNCHED_SHEET ||\n                              backgroundColor === steelseries.BackgroundColor.STAINLESS ||\n                              backgroundColor === steelseries.BackgroundColor.BRUSHED_STAINLESS ||\n                              backgroundColor === steelseries.BackgroundColor.TURNED) ? 0.3 : 0;\n                var valueBackgroundTrackGradient = ctx.createLinearGradient(valueBackgroundStartX, valueBackgroundStartY, valueBackgroundStopX, valueBackgroundStopY);\n                labelColor.setAlpha(0.05 + darker);\n                valueBackgroundTrackGradient.addColorStop(0, labelColor.getRgbaColor());\n                labelColor.setAlpha(0.15 + darker);\n                valueBackgroundTrackGradient.addColorStop(0.48, labelColor.getRgbaColor());\n                labelColor.setAlpha(0.15 + darker);\n                valueBackgroundTrackGradient.addColorStop(0.49, labelColor.getRgbaColor());\n                labelColor.setAlpha(0.05 + darker);\n                valueBackgroundTrackGradient.addColorStop(1, labelColor.getRgbaColor());\n                ctx.fillStyle = valueBackgroundTrackGradient;\n\n                if (vertical) {\n                    ctx.fillRect(imageWidth * 0.435714, top, imageWidth * 0.142857, fullSize);\n                } else {\n                    ctx.fillRect(imageWidth * 0.142857, imageHeight * 0.435714, fullSize, imageHeight * 0.142857);\n                }\n\n                if (vertical) {\n                    // Vertical orientation\n                    valueBorderStartX = 0;\n                    valueBorderStartY = top;\n                    valueBorderStopX = 0;\n                    valueBorderStopY = top + fullSize;\n                } else {\n                    // Horizontal orientation\n                    valueBorderStartX = imageWidth * 0.142857 + fullSize;\n                    valueBorderStartY = 0;\n                    valueBorderStopX = imageWidth * 0.142857;\n                    valueBorderStopY = 0;\n                }\n                var valueBorderGradient = ctx.createLinearGradient(valueBorderStartX, valueBorderStartY, valueBorderStopX, valueBorderStopY);\n                labelColor.setAlpha(0.3 + darker);\n                valueBorderGradient.addColorStop(0, labelColor.getRgbaColor());\n                labelColor.setAlpha(0.69);\n                valueBorderGradient.addColorStop(0.48, labelColor.getRgbaColor());\n                labelColor.setAlpha(0.7);\n                valueBorderGradient.addColorStop(0.49, labelColor.getRgbaColor());\n                labelColor.setAlpha(0.4);\n                valueBorderGradient.addColorStop(1, labelColor.getRgbaColor());\n                ctx.fillStyle = valueBorderGradient;\n                if (vertical) {\n                    ctx.fillRect(imageWidth * 0.435714, top, imageWidth * 0.007142, fullSize);\n                    ctx.fillRect(imageWidth * 0.571428, top, imageWidth * 0.007142, fullSize);\n                } else {\n                    ctx.fillRect(imageWidth * 0.142857, imageHeight * 0.435714, fullSize, imageHeight * 0.007142);\n                    ctx.fillRect(imageWidth * 0.142857, imageHeight * 0.571428, fullSize, imageHeight * 0.007142);\n                }\n            }\n            if (vertical) {\n                // Vertical orientation\n                if (gaugeType.type === 'type1') {\n                    valueStartX = imageWidth * 0.45;\n                    valueStartY = 0;\n                    valueStopX = imageWidth * 0.45 + imageWidth * 0.114285;\n                    valueStopY = 0;\n                } else {\n                    valueStartX = imageWidth / 2 - imageHeight * 0.0486 / 2;\n                    valueStartY = 0;\n                    valueStopX = valueStartX + imageHeight * 0.053;\n                    valueStopY = 0;\n                }\n            } else {\n                // Horizontal orientation\n                if (gaugeType.type === 'type1') {\n                    valueStartX = 0;\n                    valueStartY = imageHeight * 0.45;\n                    valueStopX = 0;\n                    valueStopY = imageHeight * 0.45 + imageHeight * 0.114285;\n                } else {\n                    valueStartX = 0;\n                    valueStartY = imageHeight / 2 - imageWidth * 0.0250;\n                    valueStopX = 0;\n                    valueStopY = valueStartY + imageWidth * 0.053;\n                }\n            }\n\n            var valueBackgroundGradient = ctx.createLinearGradient(valueStartX, valueStartY, valueStopX, valueStopY);\n            valueBackgroundGradient.addColorStop(0, valueColor.medium.getRgbaColor());\n            valueBackgroundGradient.addColorStop(1, valueColor.light.getRgbaColor());\n            ctx.fillStyle = valueBackgroundGradient;\n            var thermoTweak = (gaugeType.type === 'type1' ? 0 : (vertical ? imageHeight * 0.05 : imageWidth * 0.05));\n            if (vertical) {\n                ctx.fillRect(valueStartX, valueTop, valueStopX - valueStartX, valueSize + thermoTweak);\n            } else {\n                ctx.fillRect(valueTop - thermoTweak, valueStartY, valueSize + thermoTweak, valueStopY - valueStartY);\n            }\n\n            if (gaugeType.type === 'type1') {\n                // The light effect on the value\n                if (vertical) {\n                    // Vertical orientation\n                    valueForegroundStartX = imageWidth * 0.45;\n                    valueForegroundStartY = 0;\n                    valueForegroundStopX = valueForegroundStartX + imageWidth * 0.05;\n                    valueForegroundStopY = 0;\n                } else {\n                    // Horizontal orientation\n                    valueForegroundStartX = 0;\n                    valueForegroundStartY = imageHeight * 0.45;\n                    valueForegroundStopX = 0;\n                    valueForegroundStopY = valueForegroundStartY + imageHeight * 0.05;\n                }\n                var valueForegroundGradient = ctx.createLinearGradient(valueForegroundStartX, valueForegroundStartY, valueForegroundStopX, valueForegroundStopY);\n                valueForegroundGradient.addColorStop(0, 'rgba(255, 255, 255, 0.7)');\n                valueForegroundGradient.addColorStop(0.98, 'rgba(255, 255, 255, 0.0)');\n                ctx.fillStyle = valueForegroundGradient;\n                if (vertical) {\n                    ctx.fillRect(valueForegroundStartX, valueTop, valueForegroundStopX, valueSize);\n                } else {\n                    ctx.fillRect(valueTop, valueForegroundStartY, valueSize, valueForegroundStopY - valueForegroundStartY);\n                }\n            }\n        };\n\n        var drawForegroundImage = function (ctx) {\n            var foreSize = (vertical ? imageHeight : imageWidth);\n\n            ctx.save();\n            if (vertical) {\n                ctx.translate(imageWidth / 2, 0);\n            } else {\n                ctx.translate(imageWidth / 2, imageHeight / 2);\n                ctx.rotate(HALF_PI);\n                ctx.translate(0, -imageWidth / 2 + imageWidth * 0.05);\n            }\n\n            // draw bulb\n            ctx.beginPath();\n            ctx.moveTo(-0.0490 * foreSize, 0.825 * foreSize);\n            ctx.bezierCurveTo(-0.0490 * foreSize, 0.7975 * foreSize, -0.0264 * foreSize, 0.775 * foreSize, 0.0013 * foreSize, 0.775 * foreSize);\n            ctx.bezierCurveTo(0.0264 * foreSize, 0.775 * foreSize, 0.0490 * foreSize, 0.7975 * foreSize, 0.0490 * foreSize, 0.825 * foreSize);\n            ctx.bezierCurveTo(0.0490 * foreSize, 0.85 * foreSize, 0.0264 * foreSize, 0.8725 * foreSize, 0.0013 * foreSize, 0.8725 * foreSize);\n            ctx.bezierCurveTo(-0.0264 * foreSize, 0.8725 * foreSize, -0.0490 * foreSize, 0.85 * foreSize, -0.0490 * foreSize, 0.825 * foreSize);\n            ctx.closePath();\n            var grad = ctx.createRadialGradient(0 * foreSize, 0.825 * foreSize, 0, 0 * foreSize, 0.825 * foreSize, 0.0490 * foreSize);\n            grad.addColorStop(0, valueColor.medium.getRgbaColor());\n            grad.addColorStop(0.3, valueColor.medium.getRgbaColor());\n            grad.addColorStop(1, valueColor.light.getRgbaColor());\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            // draw bulb highlight\n            ctx.beginPath();\n            if (vertical) {\n                ctx.moveTo(-0.0365 * foreSize, 0.8075 * foreSize);\n                ctx.bezierCurveTo(-0.0365 * foreSize, 0.7925 * foreSize, -0.0214 * foreSize, 0.7875 * foreSize, -0.0214 * foreSize, 0.7825 * foreSize);\n                ctx.bezierCurveTo(0.0189 * foreSize, 0.785 * foreSize, 0.0365 * foreSize, 0.7925 * foreSize, 0.0365 * foreSize, 0.8075 * foreSize);\n                ctx.bezierCurveTo(0.0365 * foreSize, 0.8175 * foreSize, 0.0214 * foreSize, 0.815 * foreSize, 0.0013 * foreSize, 0.8125 * foreSize);\n                ctx.bezierCurveTo(-0.0189 * foreSize, 0.8125 * foreSize, -0.0365 * foreSize, 0.8175 * foreSize, -0.0365 * foreSize, 0.8075 * foreSize);\n                grad = ctx.createRadialGradient(0, 0.8 * foreSize, 0, 0, 0.8 * foreSize, 0.0377 * foreSize);\n            } else {\n                ctx.beginPath();\n                ctx.moveTo(-0.0214 * foreSize, 0.86 * foreSize);\n                ctx.bezierCurveTo(-0.0365 * foreSize, 0.86 * foreSize, -0.0415 * foreSize, 0.845 * foreSize, -0.0465 * foreSize, 0.825 * foreSize);\n                ctx.bezierCurveTo(-0.0465 * foreSize, 0.805 * foreSize, -0.0365 * foreSize, 0.7875 * foreSize, -0.0214 * foreSize, 0.7875 * foreSize);\n                ctx.bezierCurveTo(-0.0113 * foreSize, 0.7875 * foreSize, -0.0163 * foreSize, 0.8025 * foreSize, -0.0163 * foreSize, 0.8225 * foreSize);\n                ctx.bezierCurveTo(-0.0163 * foreSize, 0.8425 * foreSize, -0.0113 * foreSize, 0.86 * foreSize, -0.0214 * foreSize, 0.86 * foreSize);\n                grad = ctx.createRadialGradient(-0.03 * foreSize, 0.8225 * foreSize, 0, -0.03 * foreSize, 0.8225 * foreSize, 0.0377 * foreSize);\n            }\n            grad.addColorStop(0.0, 'rgba(255, 255, 255, 0.55)');\n            grad.addColorStop(1.0, 'rgba(255, 255, 255, 0.05)');\n            ctx.fillStyle = grad;\n            ctx.closePath();\n            ctx.fill();\n\n            // stem highlight\n            ctx.beginPath();\n            ctx.moveTo(-0.0214 * foreSize, 0.115 * foreSize);\n            ctx.bezierCurveTo(-0.0214 * foreSize, 0.1075 * foreSize, -0.0163 * foreSize, 0.1025 * foreSize, -0.0113 * foreSize, 0.1025 * foreSize);\n            ctx.bezierCurveTo(-0.0113 * foreSize, 0.1025 * foreSize, -0.0113 * foreSize, 0.1025 * foreSize, -0.0113 * foreSize, 0.1025 * foreSize);\n            ctx.bezierCurveTo(-0.0038 * foreSize, 0.1025 * foreSize, 0.0013 * foreSize, 0.1075 * foreSize, 0.0013 * foreSize, 0.115 * foreSize);\n            ctx.bezierCurveTo(0.0013 * foreSize, 0.115 * foreSize, 0.0013 * foreSize, 0.76 * foreSize, 0.0013 * foreSize, 0.76 * foreSize);\n            ctx.bezierCurveTo(0.0013 * foreSize, 0.7675 * foreSize, -0.0038 * foreSize, 0.7725 * foreSize, -0.0113 * foreSize, 0.7725 * foreSize);\n            ctx.bezierCurveTo(-0.0113 * foreSize, 0.7725 * foreSize, -0.0113 * foreSize, 0.7725 * foreSize, -0.0113 * foreSize, 0.7725 * foreSize);\n            ctx.bezierCurveTo(-0.0163 * foreSize, 0.7725 * foreSize, -0.0214 * foreSize, 0.7675 * foreSize, -0.0214 * foreSize, 0.76 * foreSize);\n            ctx.bezierCurveTo(-0.0214 * foreSize, 0.76 * foreSize, -0.0214 * foreSize, 0.115 * foreSize, -0.0214 * foreSize, 0.115 * foreSize);\n            ctx.closePath();\n            grad = ctx.createLinearGradient(-0.0189 * foreSize, 0, 0.0013 * foreSize, 0);\n            grad.addColorStop(0.0, 'rgba(255, 255, 255, 0.1)');\n            grad.addColorStop(0.34, 'rgba(255, 255, 255, 0.5)');\n            grad.addColorStop(1.0, 'rgba(255, 255, 255, 0.1)');\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            ctx.restore();\n        };\n\n        var drawBackgroundImage = function (ctx) {\n            var backSize = (vertical ? imageHeight : imageWidth);\n            ctx.save();\n            if (vertical) {\n                ctx.translate(imageWidth / 2, 0);\n            } else {\n                ctx.translate(imageWidth / 2, imageHeight / 2);\n                ctx.rotate(HALF_PI);\n                ctx.translate(0, -imageWidth / 2 + imageWidth * 0.05);\n            }\n            ctx.beginPath();\n            ctx.moveTo(-0.0516 * backSize, 0.825 * backSize);\n            ctx.bezierCurveTo(-0.0516 * backSize, 0.8525 * backSize, -0.0289 * backSize, 0.875 * backSize, 0.0013 * backSize, 0.875 * backSize);\n            ctx.bezierCurveTo(0.0289 * backSize, 0.875 * backSize, 0.0516 * backSize, 0.8525 * backSize, 0.0516 * backSize, 0.825 * backSize);\n            ctx.bezierCurveTo(0.0516 * backSize, 0.8075 * backSize, 0.0440 * backSize, 0.7925 * backSize, 0.0314 * backSize, 0.7825 * backSize);\n            ctx.bezierCurveTo(0.0314 * backSize, 0.7825 * backSize, 0.0314 * backSize, 0.12 * backSize, 0.0314 * backSize, 0.12 * backSize);\n            ctx.bezierCurveTo(0.0314 * backSize, 0.1025 * backSize, 0.0189 * backSize, 0.0875 * backSize, 0.0013 * backSize, 0.0875 * backSize);\n            ctx.bezierCurveTo(-0.0163 * backSize, 0.0875 * backSize, -0.0289 * backSize, 0.1025 * backSize, -0.0289 * backSize, 0.12 * backSize);\n            ctx.bezierCurveTo(-0.0289 * backSize, 0.12 * backSize, -0.0289 * backSize, 0.7825 * backSize, -0.0289 * backSize, 0.7825 * backSize);\n            ctx.bezierCurveTo(-0.0415 * backSize, 0.79 * backSize, -0.0516 * backSize, 0.805 * backSize, -0.0516 * backSize, 0.825 * backSize);\n            ctx.closePath();\n            var grad = ctx.createLinearGradient(-0.0163 * backSize, 0, 0.0289 * backSize, 0);\n            grad.addColorStop(0, 'rgba(226, 226, 226, 0.5)');\n            grad.addColorStop(0.5, 'rgba(226, 226, 226, 0.2)');\n            grad.addColorStop(1, 'rgba(226, 226, 226, 0.5)');\n            ctx.fillStyle = grad;\n            ctx.fill();\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = 'rgba(153, 153, 153, 0.5)';\n            ctx.stroke();\n            ctx.restore();\n        };\n\n        //************************************ Public methods **************************************\n        this.setValue = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n            if (value !== targetValue) {\n                value = targetValue;\n\n                if (value > maxMeasuredValue) {\n                    maxMeasuredValue = value;\n                }\n                if (value < minMeasuredValue) {\n                    minMeasuredValue = value;\n                }\n\n                if ((value >= threshold && !ledBlinking && thresholdRising) ||\n                    (value <= threshold && !ledBlinking && !thresholdRising)) {\n                    ledBlinking = true;\n                    blink(ledBlinking);\n                    if (playAlarm) {\n                        audioElement.play();\n                    }\n                } else if ((value < threshold && ledBlinking && thresholdRising) ||\n                           (value > threshold && ledBlinking && !thresholdRising)) {\n                    ledBlinking = false;\n                    blink(ledBlinking);\n                    if (playAlarm) {\n                        audioElement.pause();\n                    }\n                }\n\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getValue = function () {\n            return value;\n        };\n\n        this.setValueAnimated = function (newValue, callback) {\n            var targetValue,\n                gauge = this,\n                time;\n            newValue = parseFloat(newValue);\n            targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n            if (value !== targetValue) {\n                if (undefined !== tween && tween.isPlaying) {\n                    tween.stop();\n                }\n\n                time = fullScaleDeflectionTime * Math.abs(targetValue - value) / (maxValue - minValue);\n                time = Math.max(time, fullScaleDeflectionTime / 5);\n                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n                //tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, 1);\n\n                tween.onMotionChanged = function (event) {\n                    value = event.target._pos;\n                    if (value > maxMeasuredValue) {\n                        maxMeasuredValue = value;\n                    }\n                    if (value < minMeasuredValue) {\n                        minMeasuredValue = value;\n                    }\n\n                    if ((value >= threshold && !ledBlinking && thresholdRising) ||\n                        (value <= threshold && !ledBlinking && !thresholdRising)) {\n                        ledBlinking = true;\n                        blink(ledBlinking);\n                        if (playAlarm) {\n                            audioElement.play();\n                        }\n                    } else if ((value < threshold && ledBlinking && thresholdRising) ||\n                               (value > threshold && ledBlinking && !thresholdRising)) {\n                        ledBlinking = false;\n                        blink(ledBlinking);\n                        if (playAlarm) {\n                            audioElement.pause();\n                        }\n                    }\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tween.onMotionFinished = callback;\n                }\n\n                tween.start();\n            }\n            return this;\n        };\n\n        this.resetMinMeasuredValue = function () {\n            minMeasuredValue = value;\n            this.repaint();\n            return this;\n        };\n\n        this.resetMaxMeasuredValue = function () {\n            maxMeasuredValue = value;\n            this.repaint();\n            return this;\n        };\n\n        this.setMinMeasuredValueVisible = function (visible) {\n            minMeasuredValueVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setMaxMeasuredValueVisible = function (visible) {\n            maxMeasuredValueVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setThreshold = function (threshVal) {\n            threshVal = parseFloat(threshVal);\n            var targetValue = (threshVal < minValue ? minValue : (threshVal > maxValue ? maxValue : threshVal));\n            threshold = targetValue;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setThresholdVisible = function (visible) {\n            thresholdVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setThresholdRising = function (rising) {\n            thresholdRising = !!rising;\n            // reset existing threshold alerts\n            ledBlinking = !ledBlinking;\n            blink(ledBlinking);\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdDecimals = function (decimals) {\n            lcdDecimals = parseInt(decimals, 10);\n            this.repaint();\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers({frame: true});\n            frameDesign = newFrameDesign;\n            init({frame: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            resetBuffers({background: true});\n            backgroundColor = newBackgroundColor;\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setValueColor = function (newValueColor) {\n            resetBuffers({foreground: true});\n            valueColor = newValueColor;\n            init({foreground: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLedColor = function (newLedColor) {\n            resetBuffers({led: true});\n            ledColor = newLedColor;\n            init({led: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLedVisible = function (visible) {\n            ledVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdColor = function (newLcdColor) {\n            resetBuffers({background: true});\n            lcdColor = newLcdColor;\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setMaxMeasuredValue = function (newVal) {\n            newVal = parseFloat(newVal);\n            var targetValue = (newVal < minValue ? minValue : (newVal > maxValue ? maxValue : newVal));\n            maxMeasuredValue = targetValue;\n            this.repaint();\n            return this;\n        };\n\n        this.setMinMeasuredValue = function (newVal) {\n            newVal = parseFloat(newVal);\n            var targetValue = (newVal < minValue ? minValue : (newVal > maxValue ? maxValue : newVal));\n            minMeasuredValue = targetValue;\n            this.repaint();\n            return this;\n        };\n\n        this.setTitleString = function (title) {\n            titleString = title;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setUnitString = function (unit) {\n            unitString = unit;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setMinValue = function (newVal) {\n            resetBuffers({background: true});\n            minValue = parseFloat(newVal);\n            if (minMeasuredValue < minValue) {\n                minMeasuredValue = minValue;\n            }\n            if (value < minValue) {\n                value = minValue;\n            }\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.getMinValue = function () {\n            return minValue;\n        };\n\n        this.setMaxValue = function (newVal) {\n            resetBuffers({background: true});\n            maxValue = parseFloat(newVal);\n            if (maxMeasuredValue > maxValue) {\n                maxMeasuredValue = maxValue;\n            }\n            if (value > maxValue) {\n                value = maxValue;\n            }\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.getMaxValue = function () {\n            return maxValue;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init({frame: true,\n                      background: true,\n                      led: true,\n                      foreground: true});\n            }\n\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            // Draw frame\n            if (frameVisible) {\n                mainCtx.drawImage(frameBuffer, 0, 0);\n            }\n\n            // Draw buffered image to visible canvas\n            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\n            // Draw lcd display\n            if (lcdVisible) {\n                drawLcdText(mainCtx, value, vertical);\n            }\n\n            // Draw led\n            if (ledVisible) {\n                mainCtx.drawImage(ledBuffer, ledPosX, ledPosY);\n            }\n\n            var valuePos;\n            var yOffset;\n            var yRange;\n            var minMaxX, minMaxY;\n            // Draw min measured value indicator\n            if (minMeasuredValueVisible) {\n                if (vertical) {\n                    yOffset = (gaugeType.type === 'type1' ? 0.856796 : 0.7475);\n                    yRange = (yOffset - 0.128640);\n                    valuePos = imageHeight * yOffset - (imageHeight * yRange) * (minMeasuredValue - minValue) / (maxValue - minValue);\n                    minMaxX = imageWidth * 0.34 - minMeasuredValueBuffer.width;\n                    minMaxY = valuePos - minMeasuredValueBuffer.height / 2;\n                } else {\n                    yOffset = (gaugeType.type === 'type1' ? 0.871012 : 0.82);\n                    yRange = yOffset - (gaugeType.type === 'type1' ? 0.142857 : 0.19857);\n                    valuePos = (imageWidth * yRange) * (minMeasuredValue - minValue) / (maxValue - minValue);\n                    minMaxX = imageWidth * (gaugeType.type === 'type1' ? 0.142857 : 0.19857) - minMeasuredValueBuffer.height / 2 + valuePos;\n                    minMaxY = imageHeight * 0.65;\n                }\n                mainCtx.drawImage(minMeasuredValueBuffer, minMaxX, minMaxY);\n            }\n\n            // Draw max measured value indicator\n            if (maxMeasuredValueVisible) {\n                if (vertical) {\n                    valuePos = imageHeight * yOffset - (imageHeight * yRange) * (maxMeasuredValue - minValue) / (maxValue - minValue);\n                    minMaxX = imageWidth * 0.34 - maxMeasuredValueBuffer.width;\n                    minMaxY = valuePos - maxMeasuredValueBuffer.height / 2;\n                } else {\n                    yOffset = (gaugeType.type === 'type1' ? 0.871012 : 0.8);\n                    yRange = yOffset - (gaugeType.type === 'type1' ? 0.14857 : 0.19857);\n                    valuePos = (imageWidth * yRange) * (maxMeasuredValue - minValue) / (maxValue - minValue);\n                    minMaxX = imageWidth * (gaugeType.type === 'type1' ? 0.142857 : 0.19857) - maxMeasuredValueBuffer.height / 2 + valuePos;\n                    minMaxY = imageHeight * 0.65;\n                }\n                mainCtx.drawImage(maxMeasuredValueBuffer, minMaxX, minMaxY);\n            }\n\n            mainCtx.save();\n            drawValue(mainCtx, imageWidth, imageHeight);\n            mainCtx.restore();\n\n            // Draw foreground\n            if (foregroundVisible || gaugeType.type === 'type2') {\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n\n            repainting = false;\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var linearBargraph = function (canvas, parameters) {\n        parameters = parameters || {};\n        var width = (undefined === parameters.width ? 0 : parameters.width),\n            height = (undefined === parameters.height ? 0 : parameters.height),\n            minValue = (undefined === parameters.minValue ? 0 : parameters.minValue),\n            maxValue = (undefined === parameters.maxValue ? (minValue + 100) : parameters.maxValue),\n            section = (undefined === parameters.section ? null : parameters.section),\n            useSectionColors = (undefined === parameters.useSectionColors ? false : parameters.useSectionColors),\n            niceScale = (undefined === parameters.niceScale ? true : parameters.niceScale),\n            threshold = (undefined === parameters.threshold ? (maxValue - minValue) / 2 + minValue: parameters.threshold),\n            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            valueColor = (undefined === parameters.valueColor ? steelseries.ColorDef.RED : parameters.valueColor),\n            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor),\n            ledVisible = (undefined === parameters.ledVisible ? true : parameters.ledVisible),\n            thresholdVisible = (undefined === parameters.thresholdVisible ? true : parameters.thresholdVisible),\n            thresholdRising = (undefined === parameters.thresholdRising ? true : parameters.thresholdRising),\n            minMeasuredValueVisible = (undefined === parameters.minMeasuredValueVisible ? false : parameters.minMeasuredValueVisible),\n            maxMeasuredValueVisible = (undefined === parameters.maxMeasuredValueVisible ? false : parameters.maxMeasuredValueVisible),\n            labelNumberFormat = (undefined === parameters.labelNumberFormat ? steelseries.LabelNumberFormat.STANDARD : parameters.labelNumberFormat),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),\n            alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),\n            valueGradient = (undefined === parameters.valueGradient ? null : parameters.valueGradient),\n            useValueGradient = (undefined === parameters.useValueGradient ? false : parameters.useValueGradient),\n            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (width === 0) {\n            width = mainCtx.canvas.width;\n        }\n        if (height === 0) {\n            height = mainCtx.canvas.height;\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = width;\n        mainCtx.canvas.height = height;\n\n        var imageWidth = width;\n        var imageHeight = height;\n\n        // Create audio tag for alarm sound\n        if (playAlarm && alarmSound !== false) {\n            var audioElement = doc.createElement('audio');\n            audioElement.setAttribute('src', alarmSound);\n            audioElement.setAttribute('preload', 'auto');\n        }\n\n        var self = this;\n        var value = minValue;\n\n        // Properties\n        var minMeasuredValue = maxValue;\n        var maxMeasuredValue = minValue;\n\n        var tween;\n        var ledBlinking = false;\n        var repainting = false;\n        var isSectionsVisible = false;\n        var isGradientVisible = false;\n        var sectionPixels = [];\n        var ledTimerId = 0;\n\n        var vertical = width <= height;\n\n        // Constants\n        var ledPosX;\n        var ledPosY;\n        var ledSize = Math.round((vertical ? height : width) * 0.05);\n        var minMaxIndSize = Math.round((vertical ? width : height) * 0.05);\n        var stdFont;\n        var lcdFont;\n\n        if (vertical) {\n            ledPosX = imageWidth / 2 - ledSize / 2;\n            ledPosY = 0.053 * imageHeight;\n            stdFont = Math.floor(imageHeight / 22) + 'px ' + stdFontName;\n            lcdFont = Math.floor(imageHeight / 22) + 'px ' + lcdFontName;\n        } else {\n            ledPosX = 0.89 * imageWidth;\n            ledPosY = imageHeight / 1.95 - ledSize / 2;\n            stdFont = Math.floor(imageHeight / 10) + 'px ' + stdFontName;\n            lcdFont = Math.floor(imageHeight / 10) + 'px ' + lcdFontName;\n        }\n\n        var initialized = false;\n\n        // Tickmark specific private variables\n        var niceMinValue = minValue;\n        var niceMaxValue = maxValue;\n        var niceRange = maxValue - minValue;\n        var range = niceMaxValue - niceMinValue;\n        var minorTickSpacing = 0;\n        var majorTickSpacing = 0;\n        var maxNoOfMinorTicks = 10;\n        var maxNoOfMajorTicks = 10;\n\n        // Method to calculate nice values for min, max and range for the tickmarks\n        var calculate = function calculate() {\n            if (niceScale) {\n                niceRange = calcNiceNumber(maxValue - minValue, false);\n                majorTickSpacing = calcNiceNumber(niceRange / (maxNoOfMajorTicks - 1), true);\n                niceMinValue = Math.floor(minValue / majorTickSpacing) * majorTickSpacing;\n                niceMaxValue = Math.ceil(maxValue / majorTickSpacing) * majorTickSpacing;\n                minorTickSpacing = calcNiceNumber(majorTickSpacing / (maxNoOfMinorTicks - 1), true);\n                minValue = niceMinValue;\n                maxValue = niceMaxValue;\n                range = maxValue - minValue;\n            } else {\n                niceRange = (maxValue - minValue);\n                niceMinValue = minValue;\n                niceMaxValue = maxValue;\n                range = niceRange;\n                minorTickSpacing = 1;\n                majorTickSpacing = 10;\n            }\n        };\n\n        // **************   Buffer creation  ********************\n        // Buffer for the frame\n        var frameBuffer = createBuffer(width, height);\n        var frameContext = frameBuffer.getContext('2d');\n\n        // Buffer for the background\n        var backgroundBuffer = createBuffer(width, height);\n        var backgroundContext = backgroundBuffer.getContext('2d');\n\n        var lcdBuffer;\n\n        // Buffer for active bargraph led\n        var activeLedBuffer = doc.createElement('canvas');\n        if (vertical) {\n            activeLedBuffer.width = imageWidth * 0.121428;\n            activeLedBuffer.height = imageHeight * 0.012135;\n        } else {\n            activeLedBuffer.width = imageWidth * 0.012135;\n            activeLedBuffer.height = imageHeight * 0.121428;\n        }\n        var activeLedContext = activeLedBuffer.getContext('2d');\n\n        // Buffer for active bargraph led\n        var inActiveLedBuffer = doc.createElement('canvas');\n        if (vertical) {\n            inActiveLedBuffer.width = imageWidth * 0.121428;\n            inActiveLedBuffer.height = imageHeight * 0.012135;\n        } else {\n            inActiveLedBuffer.width = imageWidth * 0.012135;\n            inActiveLedBuffer.height = imageHeight * 0.121428;\n        }\n        var inActiveLedContext = inActiveLedBuffer.getContext('2d');\n\n        // Buffer for led on painting code\n        var ledBufferOn = createBuffer(ledSize, ledSize);\n        var ledContextOn = ledBufferOn.getContext('2d');\n\n        // Buffer for led off painting code\n        var ledBufferOff = createBuffer(ledSize, ledSize);\n        var ledContextOff = ledBufferOff.getContext('2d');\n\n        // Buffer for current led painting code\n        var ledBuffer = ledBufferOff;\n\n        // Buffer for the minMeasuredValue indicator\n        var minMeasuredValueBuffer = createBuffer(minMaxIndSize, minMaxIndSize);\n        var minMeasuredValueCtx = minMeasuredValueBuffer.getContext('2d');\n\n        // Buffer for the maxMeasuredValue indicator\n        var maxMeasuredValueBuffer = createBuffer(minMaxIndSize, minMaxIndSize);\n        var maxMeasuredValueCtx = maxMeasuredValueBuffer.getContext('2d');\n\n        // Buffer for static foreground painting code\n        var foregroundBuffer = createBuffer(width, height);\n        var foregroundContext = foregroundBuffer.getContext('2d');\n\n        // **************   Image creation  ********************\n        var drawLcdText = function (ctx, value, vertical) {\n            ctx.save();\n            ctx.textAlign = 'right';\n            ctx.textBaseline = 'middle';\n            ctx.strokeStyle = lcdColor.textColor;\n            ctx.fillStyle = lcdColor.textColor;\n\n            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n                ctx.shadowColor = 'gray';\n                if (vertical) {\n                    ctx.shadowOffsetX = imageWidth * 0.007;\n                    ctx.shadowOffsetY = imageWidth * 0.007;\n                    ctx.shadowBlur = imageWidth * 0.009;\n                } else {\n                    ctx.shadowOffsetX = imageHeight * 0.007;\n                    ctx.shadowOffsetY = imageHeight * 0.007;\n                    ctx.shadowBlur = imageHeight * 0.009;\n                }\n            }\n\n            var lcdTextX;\n            var lcdTextY;\n            var lcdTextWidth;\n\n            if (digitalFont) {\n                ctx.font = lcdFont;\n            } else {\n                ctx.font = stdFont;\n            }\n\n            if (vertical) {\n                lcdTextX = (imageWidth - (imageWidth * 0.571428)) / 2 + 1 + imageWidth * 0.571428 - 2;\n                lcdTextY = imageHeight * 0.88 + 1 + (imageHeight * 0.055 - 2) / 2;\n                lcdTextWidth = imageWidth * 0.7 - 2;\n            } else {\n                lcdTextX = (imageWidth * 0.695) + imageWidth * 0.18 - 2;\n                lcdTextY = (imageHeight * 0.22) + 1 + (imageHeight * 0.15 - 2) / 2;\n                lcdTextWidth = imageHeight * 0.22 - 2;\n            }\n\n            ctx.fillText(value.toFixed(lcdDecimals), lcdTextX, lcdTextY, lcdTextWidth);\n\n            ctx.restore();\n        };\n\n        var createThresholdImage = function (vertical) {\n            var thresholdBuffer = doc.createElement('canvas');\n            thresholdBuffer.height = thresholdBuffer.width = minMaxIndSize;\n            var thresholdCtx = thresholdBuffer.getContext('2d');\n\n            thresholdCtx.save();\n            var gradThreshold = thresholdCtx.createLinearGradient(0, 0.1, 0, thresholdBuffer.height * 0.9);\n            gradThreshold.addColorStop(0, '#520000');\n            gradThreshold.addColorStop(0.3, '#fc1d00');\n            gradThreshold.addColorStop(0.59, '#fc1d00');\n            gradThreshold.addColorStop(1, '#520000');\n            thresholdCtx.fillStyle = gradThreshold;\n\n            if (vertical) {\n                thresholdCtx.beginPath();\n                thresholdCtx.moveTo(0.1, thresholdBuffer.height * 0.5);\n                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, 0.1);\n                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, thresholdBuffer.height * 0.9);\n                thresholdCtx.closePath();\n            } else {\n                thresholdCtx.beginPath();\n                thresholdCtx.moveTo(0.1, 0.1);\n                thresholdCtx.lineTo(thresholdBuffer.width * 0.9, 0.1);\n                thresholdCtx.lineTo(thresholdBuffer.width * 0.5, thresholdBuffer.height * 0.9);\n                thresholdCtx.closePath();\n            }\n\n            thresholdCtx.fill();\n            thresholdCtx.strokeStyle = '#FFFFFF';\n            thresholdCtx.stroke();\n\n            thresholdCtx.restore();\n\n            return thresholdBuffer;\n        };\n\n        var drawTickmarksImage = function (ctx, labelNumberFormat, vertical) {\n            backgroundColor.labelColor.setAlpha(1);\n            ctx.save();\n            ctx.textBaseline = 'middle';\n            var TEXT_WIDTH = imageWidth * 0.1;\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\n            var valueCounter = minValue;\n            var majorTickCounter = maxNoOfMinorTicks - 1;\n            var tickCounter;\n            var currentPos;\n            var scaleBoundsX;\n            var scaleBoundsY;\n            var scaleBoundsW;\n            var scaleBoundsH;\n            var tickSpaceScaling = 1;\n\n            var minorTickStart;\n            var minorTickStop;\n            var mediumTickStart;\n            var mediumTickStop;\n            var majorTickStart;\n            var majorTickStop;\n            if (vertical) {\n                minorTickStart = (0.34 * imageWidth);\n                minorTickStop = (0.36 * imageWidth);\n                mediumTickStart = (0.33 * imageWidth);\n                mediumTickStop = (0.36 * imageWidth);\n                majorTickStart = (0.32 * imageWidth);\n                majorTickStop = (0.36 * imageWidth);\n                ctx.textAlign = 'right';\n                scaleBoundsX = 0;\n                scaleBoundsY = imageHeight * 0.128640;\n                scaleBoundsW = 0;\n                scaleBoundsH = (imageHeight * 0.856796 - imageHeight * 0.128640);\n                tickSpaceScaling = scaleBoundsH / (maxValue - minValue);\n            } else {\n                minorTickStart = (0.65 * imageHeight);\n                minorTickStop = (0.63 * imageHeight);\n                mediumTickStart = (0.66 * imageHeight);\n                mediumTickStop = (0.63 * imageHeight);\n                majorTickStart = (0.67 * imageHeight);\n                majorTickStop = (0.63 * imageHeight);\n                ctx.textAlign = 'center';\n                scaleBoundsX = imageWidth * 0.142857;\n                scaleBoundsY = 0;\n                scaleBoundsW = (imageWidth * 0.871012 - imageWidth * 0.142857);\n                scaleBoundsH = 0;\n                tickSpaceScaling = scaleBoundsW / (maxValue - minValue);\n            }\n\n            var labelCounter;\n            for (labelCounter = minValue, tickCounter = 0; labelCounter <= maxValue; labelCounter += minorTickSpacing, tickCounter += minorTickSpacing) {\n\n                // Calculate the bounds of the scaling\n                if (vertical) {\n                    currentPos = scaleBoundsY + scaleBoundsH - tickCounter * tickSpaceScaling;\n                } else {\n                    currentPos = scaleBoundsX + tickCounter * tickSpaceScaling;\n                }\n\n                majorTickCounter++;\n\n                // Draw tickmark every major tickmark spacing\n                if (majorTickCounter === maxNoOfMinorTicks) {\n\n                    // Draw the major tickmarks\n                    ctx.lineWidth = 1.5;\n                    drawLinearTicks(ctx, majorTickStart, majorTickStop, currentPos, vertical);\n\n                    // Draw the standard tickmark labels\n                    if (vertical) {\n                        // Vertical orientation\n                        switch (labelNumberFormat.format) {\n                        case 'fractional':\n                            ctx.fillText((valueCounter.toFixed(2)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n                            break;\n\n                        case 'scientific':\n                            ctx.fillText((valueCounter.toPrecision(2)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n                            break;\n\n                        case 'standard':\n                        /* falls through */\n                        default:\n                            ctx.fillText((valueCounter.toFixed(0)), imageWidth * 0.28, currentPos, TEXT_WIDTH);\n                            break;\n                        }\n                    } else {\n                        // Horizontal orientation\n                        switch (labelNumberFormat.format) {\n                        case 'fractional':\n                            ctx.fillText((valueCounter.toFixed(2)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n                            break;\n\n                        case 'scientific':\n                            ctx.fillText((valueCounter.toPrecision(2)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n                            break;\n\n                        case 'standard':\n                        /* falls through */\n                        default:\n                            ctx.fillText((valueCounter.toFixed(0)), currentPos, (imageHeight * 0.73), TEXT_WIDTH);\n                            break;\n                        }\n                    }\n\n                    valueCounter += majorTickSpacing;\n                    majorTickCounter = 0;\n                    continue;\n                }\n\n                // Draw tickmark every minor tickmark spacing\n                if (0 === maxNoOfMinorTicks % 2 && majorTickCounter === (maxNoOfMinorTicks / 2)) {\n                    ctx.lineWidth = 1;\n                    drawLinearTicks(ctx, mediumTickStart, mediumTickStop, currentPos, vertical);\n                } else {\n                    ctx.lineWidth = 0.5;\n                    drawLinearTicks(ctx, minorTickStart, minorTickStop, currentPos, vertical);\n                }\n            }\n\n            ctx.restore();\n        };\n\n        var drawLinearTicks = function (ctx, tickStart, tickStop, currentPos, vertical) {\n            if (vertical) {\n                // Vertical orientation\n                ctx.beginPath();\n                ctx.moveTo(tickStart, currentPos);\n                ctx.lineTo(tickStop, currentPos);\n                ctx.closePath();\n                ctx.stroke();\n            } else {\n                // Horizontal orientation\n                ctx.beginPath();\n                ctx.moveTo(currentPos, tickStart);\n                ctx.lineTo(currentPos, tickStop);\n                ctx.closePath();\n                ctx.stroke();\n            }\n        };\n\n        // **************   Initialization  ********************\n        var init = function (parameters) {\n            parameters = parameters || {};\n            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n            var drawLed = (undefined === parameters.led ? false : parameters.led);\n            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n            var drawBargraphLed = (undefined === parameters.bargraphled ? false : parameters.bargraphled);\n\n            initialized = true;\n\n            // Calculate the current min and max values and the range\n            calculate();\n\n            // Create frame in frame buffer (backgroundBuffer)\n            if (drawFrame && frameVisible) {\n                drawLinearFrameImage(frameContext, frameDesign, imageWidth, imageHeight, vertical);\n            }\n\n            // Create background in background buffer (backgroundBuffer)\n            if (drawBackground && backgroundVisible) {\n                drawLinearBackgroundImage(backgroundContext, backgroundColor, imageWidth, imageHeight, vertical);\n            }\n\n            if (drawLed) {\n                if (vertical) {\n                    // Draw LED ON in ledBuffer_ON\n                    ledContextOn.drawImage(createLedImage(ledSize, 1, ledColor), 0, 0);\n\n                    // Draw LED ON in ledBuffer_OFF\n                    ledContextOff.drawImage(createLedImage(ledSize, 0, ledColor), 0, 0);\n                } else {\n                    // Draw LED ON in ledBuffer_ON\n                    ledContextOn.drawImage(createLedImage(ledSize, 1, ledColor), 0, 0);\n\n                    // Draw LED ON in ledBuffer_OFF\n                    ledContextOff.drawImage(createLedImage(ledSize, 0, ledColor), 0, 0);\n                }\n            }\n\n            // Draw min measured value indicator in minMeasuredValueBuffer\n            if (minMeasuredValueVisible) {\n                if (vertical) {\n                    minMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.BLUE.dark.getRgbaColor(), false, vertical), 0, 0);\n                } else {\n                    minMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.BLUE.dark.getRgbaColor(), false, vertical), 0, 0);\n                }\n            }\n\n            // Draw max measured value indicator in maxMeasuredValueBuffer\n            if (maxMeasuredValueVisible) {\n                if (vertical) {\n                    maxMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.RED.medium.getRgbaColor(), false, vertical), 0, 0);\n                } else {\n                    maxMeasuredValueCtx.drawImage(createMeasuredValueImage(minMaxIndSize, steelseries.ColorDef.RED.medium.getRgbaColor(), false, vertical), 0, 0);\n                }\n            }\n\n            // Create alignment posts in background buffer (backgroundBuffer)\n            if (drawBackground && backgroundVisible) {\n                var valuePos;\n                // Create tickmarks in background buffer (backgroundBuffer)\n                drawTickmarksImage(backgroundContext, labelNumberFormat, vertical);\n\n                // Draw threshold image to background context\n                if (thresholdVisible) {\n                    backgroundContext.save();\n                    if (vertical) {\n                        // Vertical orientation\n                        valuePos = imageHeight * 0.856796 - (imageHeight * 0.728155) * (threshold - minValue) / (maxValue - minValue);\n                        backgroundContext.translate(imageWidth * 0.365, valuePos - minMaxIndSize / 2);\n                    } else {\n                        // Horizontal orientation\n                        valuePos = (imageWidth * 0.856796 - imageWidth * 0.128640) * (threshold - minValue) / (maxValue - minValue);\n                        backgroundContext.translate(imageWidth * 0.142857 - minMaxIndSize / 2 + valuePos, imageHeight * 0.58);\n                    }\n                    backgroundContext.drawImage(createThresholdImage(vertical), 0, 0);\n                    backgroundContext.restore();\n                }\n\n                // Create title in background buffer (backgroundBuffer)\n                if (vertical) {\n                    drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, vertical, null, lcdVisible);\n                } else {\n                    drawTitleImage(backgroundContext, imageWidth, imageHeight, titleString, unitString, backgroundColor, vertical, null, lcdVisible);\n                }\n            }\n\n            // Create lcd background if selected in background buffer (backgroundBuffer)\n            if (drawBackground && lcdVisible) {\n                if (vertical) {\n                    lcdBuffer = createLcdBackgroundImage(imageWidth * 0.571428, imageHeight * 0.055, lcdColor);\n                    backgroundContext.drawImage(lcdBuffer, ((imageWidth - (imageWidth * 0.571428)) / 2), imageHeight * 0.88);\n                } else {\n                    lcdBuffer = createLcdBackgroundImage(imageWidth * 0.18, imageHeight * 0.15, lcdColor);\n                    backgroundContext.drawImage(lcdBuffer, imageWidth * 0.695, imageHeight * 0.22);\n                }\n            }\n\n            // Draw leds of bargraph\n            if (drawBargraphLed) {\n                drawInActiveLed(inActiveLedContext);\n                drawActiveLed(activeLedContext, valueColor);\n            }\n\n            // Convert Section values into pixels\n            isSectionsVisible = false;\n            if (null !== section && 0 < section.length) {\n                isSectionsVisible = true;\n                var sectionIndex = section.length;\n                var top, bottom, fullSize, ledWidth2;\n\n                if (vertical) {\n                    // Vertical orientation\n                    top =  imageHeight * 0.128640; // position of max value\n                    bottom = imageHeight * 0.856796; // position of min value\n                    fullSize = bottom - top;\n                    ledWidth2 = 0;\n                } else {\n                    // Horizontal orientation\n                    top = imageWidth * 0.856796; // position of max value\n                    bottom = imageWidth * 0.128640;\n                    fullSize = top - bottom;\n                    ledWidth2 = imageWidth * 0.012135 / 2;\n                }\n                sectionPixels = [];\n                do {\n                    sectionIndex--;\n                    sectionPixels.push({start: (((section[sectionIndex].start + Math.abs(minValue)) / (maxValue - minValue)) * fullSize - ledWidth2),\n                                         stop: (((section[sectionIndex].stop + Math.abs(minValue)) / (maxValue - minValue)) * fullSize - ledWidth2),\n                                        color: customColorDef(section[sectionIndex].color)});\n                } while (0 < sectionIndex);\n            }\n\n            // Use a gradient for the valueColor?\n            isGradientVisible = false;\n            if (useValueGradient && valueGradient !== null) {\n                // force section colors off!\n                isSectionsVisible = false;\n                isGradientVisible = true;\n            }\n\n            // Create foreground in foreground buffer (foregroundBuffer)\n            if (drawForeground && foregroundVisible) {\n                drawLinearForegroundImage(foregroundContext, imageWidth, imageHeight, vertical, false);\n            }\n        };\n\n        var resetBuffers = function (buffers) {\n            buffers = buffers || {};\n            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n            var resetLed = (undefined === buffers.led ? false : buffers.led);\n            var resetBargraphLed = (undefined === buffers.bargraphled ? false : buffers.bargraphled);\n            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\n            if (resetFrame) {\n                frameBuffer.width = width;\n                frameBuffer.height = height;\n                frameContext = frameBuffer.getContext('2d');\n            }\n\n            if (resetBackground) {\n                backgroundBuffer.width = width;\n                backgroundBuffer.height = height;\n                backgroundContext = backgroundBuffer.getContext('2d');\n            }\n\n            if (resetBargraphLed) {\n                if (vertical) {\n                    activeLedBuffer.width = width * 0.121428;\n                    activeLedBuffer.height = height * 0.012135;\n                } else {\n                    activeLedBuffer.width = width * 0.012135;\n                    activeLedBuffer.height = height * 0.121428;\n                }\n                activeLedContext = activeLedBuffer.getContext('2d');\n\n                // Buffer for active bargraph led\n                if (vertical) {\n                    inActiveLedBuffer.width = width * 0.121428;\n                    inActiveLedBuffer.height = height * 0.012135;\n                } else {\n                    inActiveLedBuffer.width = width * 0.012135;\n                    inActiveLedBuffer.height = height * 0.121428;\n                }\n                inActiveLedContext = inActiveLedBuffer.getContext('2d');\n            }\n\n            if (resetLed) {\n                ledBufferOn.width = Math.ceil(width * 0.093457);\n                ledBufferOn.height = Math.ceil(height * 0.093457);\n                ledContextOn = ledBufferOn.getContext('2d');\n\n                ledBufferOff.width = Math.ceil(width * 0.093457);\n                ledBufferOff.height = Math.ceil(height * 0.093457);\n                ledContextOff = ledBufferOff.getContext('2d');\n\n                // Buffer for current led painting code\n                ledBuffer = ledBufferOff;\n            }\n\n            if (resetForeground) {\n                foregroundBuffer.width = width;\n                foregroundBuffer.height = height;\n                foregroundContext = foregroundBuffer.getContext('2d');\n            }\n        };\n\n        var blink = function (blinking) {\n            if (blinking) {\n                ledTimerId = setInterval(toggleAndRepaintLed, 1000);\n            } else {\n                clearInterval(ledTimerId);\n                ledBuffer = ledBufferOff;\n            }\n        };\n\n        var toggleAndRepaintLed = function () {\n            if (ledVisible) {\n                if (ledBuffer === ledBufferOn) {\n                    ledBuffer = ledBufferOff;\n                } else {\n                    ledBuffer = ledBufferOn;\n                }\n                if (!repainting) {\n                    repainting = true;\n                    requestAnimFrame(self.repaint);\n                }\n            }\n        };\n\n        var drawValue = function (ctx, imageWidth, imageHeight) {\n            var top; // position of max value\n            var bottom; // position of min value\n            var labelColor = backgroundColor.labelColor;\n            var fullSize;\n            var valueSize;\n            var valueTop;\n            var valueBackgroundStartX;\n            var valueBackgroundStartY;\n            var valueBackgroundStopX;\n            var valueBackgroundStopY;\n            var valueBorderStartX;\n            var valueBorderStartY;\n            var valueBorderStopX;\n            var valueBorderStopY;\n            var currentValue;\n            var gradRange;\n            var fraction;\n\n            // Orientation dependend definitions\n            if (vertical) {\n                // Vertical orientation\n                top =  imageHeight * 0.128640; // position of max value\n                bottom = imageHeight * 0.856796; // position of min value\n                fullSize = bottom - top;\n                valueSize = fullSize * (value - minValue) / (maxValue - minValue);\n                valueTop = top + fullSize - valueSize;\n                valueBackgroundStartX = 0;\n                valueBackgroundStartY = top;\n                valueBackgroundStopX = 0;\n                valueBackgroundStopY = top + fullSize * 1.014;\n            } else {\n                // Horizontal orientation\n                top = imageWidth * 0.856796; // position of max value\n                bottom = imageWidth * 0.128640;\n                fullSize = top - bottom;\n                valueSize = fullSize * (value - minValue) / (maxValue - minValue);\n                valueTop = bottom;\n                valueBackgroundStartX = imageWidth * 0.13;\n                valueBackgroundStartY = imageHeight * 0.435714;\n                valueBackgroundStopX = valueBackgroundStartX + fullSize * 1.035;\n                valueBackgroundStopY = valueBackgroundStartY;\n            }\n\n            var darker = (backgroundColor === steelseries.BackgroundColor.CARBON ||\n                          backgroundColor === steelseries.BackgroundColor.PUNCHED_SHEET ||\n                          backgroundColor === steelseries.BackgroundColor.STAINLESS ||\n                          backgroundColor === steelseries.BackgroundColor.BRUSHED_STAINLESS ||\n                          backgroundColor === steelseries.BackgroundColor.TURNED) ? 0.3 : 0;\n\n            var valueBackgroundTrackGradient = ctx.createLinearGradient(valueBackgroundStartX, valueBackgroundStartY, valueBackgroundStopX, valueBackgroundStopY);\n            labelColor.setAlpha(0.047058 + darker);\n            valueBackgroundTrackGradient.addColorStop(0, labelColor.getRgbaColor());\n            labelColor.setAlpha(0.145098 + darker);\n            valueBackgroundTrackGradient.addColorStop(0.48, labelColor.getRgbaColor());\n            labelColor.setAlpha(0.149019 + darker);\n            valueBackgroundTrackGradient.addColorStop(0.49, labelColor.getRgbaColor());\n            labelColor.setAlpha(0.047058 + darker);\n            valueBackgroundTrackGradient.addColorStop(1, labelColor.getRgbaColor());\n            ctx.fillStyle = valueBackgroundTrackGradient;\n\n            if (vertical) {\n                ctx.fillRect(imageWidth * 0.435714, top, imageWidth * 0.15, fullSize * 1.014);\n            } else {\n                ctx.fillRect(valueBackgroundStartX, valueBackgroundStartY, fullSize * 1.035, imageHeight * 0.152857);\n            }\n\n            if (vertical) {\n                // Vertical orientation\n                valueBorderStartX = 0;\n                valueBorderStartY = top;\n                valueBorderStopX = 0;\n                valueBorderStopY = top + fullSize * 1.014;\n            } else {\n                // Horizontal orientation                ;\n                valueBorderStartX = valueBackgroundStartX;\n                valueBorderStartY = 0;\n                valueBorderStopX = valueBackgroundStopX;\n                valueBorderStopY = 0;\n            }\n\n            var valueBorderGradient = ctx.createLinearGradient(valueBorderStartX, valueBorderStartY, valueBorderStopX, valueBorderStopY);\n            labelColor.setAlpha(0.298039 + darker);\n            valueBorderGradient.addColorStop(0, labelColor.getRgbaColor());\n            labelColor.setAlpha(0.686274 + darker);\n            valueBorderGradient.addColorStop(0.48, labelColor.getRgbaColor());\n            labelColor.setAlpha(0.698039 + darker);\n            valueBorderGradient.addColorStop(0.49, labelColor.getRgbaColor());\n            labelColor.setAlpha(0.4 + darker);\n            valueBorderGradient.addColorStop(1, labelColor.getRgbaColor());\n            ctx.fillStyle = valueBorderGradient;\n            if (vertical) {\n                ctx.fillRect(imageWidth * 0.435714, top, imageWidth * 0.007142, fullSize * 1.014);\n                ctx.fillRect(imageWidth * 0.571428, top, imageWidth * 0.007142, fullSize * 1.014);\n            } else {\n                ctx.fillRect(imageWidth * 0.13, imageHeight * 0.435714, fullSize * 1.035, imageHeight * 0.007142);\n                ctx.fillRect(imageWidth * 0.13, imageHeight * 0.571428, fullSize * 1.035, imageHeight * 0.007142);\n            }\n\n            // Prepare led specific variables\n            var ledX;\n            var ledY;\n            var ledW;\n            var ledH;\n            var ledCenterX;\n            var ledCenterY;\n            var activeLeds;\n            var inactiveLeds;\n            if (vertical) {\n                // VERTICAL\n                ledX = imageWidth * 0.45;\n                ledY = imageHeight * 0.851941;\n                ledW = imageWidth * 0.121428;\n                ledH = imageHeight * 0.012135;\n                ledCenterX = (ledX + ledW) / 2;\n                ledCenterY = (ledY + ledH) / 2;\n            } else {\n                // HORIZONTAL\n                ledX = imageWidth * 0.142857;\n                ledY = imageHeight * 0.45;\n                ledW = imageWidth * 0.012135;\n                ledH = imageHeight * 0.121428;\n                ledCenterX = (ledX + ledW) / 2;\n                ledCenterY = (ledY + ledH) / 2;\n            }\n\n            var translateX, translateY;\n            var activeLedColor;\n            var lastActiveLedColor = valueColor;\n            var i;\n            // Draw the value\n            if (vertical) {\n                // Draw the inactive leds\n                inactiveLeds = fullSize;\n                for (translateY = 0 ; translateY <= inactiveLeds ; translateY += ledH + 1) {\n                    ctx.translate(0, -translateY);\n                    ctx.drawImage(inActiveLedBuffer, ledX, ledY);\n                    ctx.translate(0, translateY);\n                }\n                // Draw the active leds in dependence on the current value\n                activeLeds = ((value - minValue) / (maxValue - minValue)) * fullSize;\n                for (translateY = 0 ; translateY <= activeLeds ; translateY += ledH + 1) {\n                    //check for LED color\n                    activeLedColor = valueColor;\n                    // Use a gradient for value colors?\n                    if (isGradientVisible) {\n                        // Convert pixel back to value\n                        currentValue = minValue + (translateY / fullSize) * (maxValue - minValue);\n                        gradRange = valueGradient.getEnd() - valueGradient.getStart();\n                        fraction = currentValue / gradRange;\n                        fraction = Math.max(Math.min(fraction, 1), 0);\n                        activeLedColor = customColorDef(valueGradient.getColorAt(fraction).getRgbaColor());\n                    } else if (isSectionsVisible) {\n                        for (i = 0; i < sectionPixels.length; i++) {\n                            if (translateY >= sectionPixels[i].start && translateY < sectionPixels[i].stop) {\n                                activeLedColor = sectionPixels[i].color;\n                                break;\n                            }\n                        }\n                    }\n                    // Has LED color changed? If so redraw the buffer\n                    if (lastActiveLedColor.medium.getHexColor() !== activeLedColor.medium.getHexColor()) {\n                        drawActiveLed(activeLedContext, activeLedColor);\n                        lastActiveLedColor = activeLedColor;\n                    }\n                    // Draw LED\n                    ctx.translate(0, -translateY);\n                    ctx.drawImage(activeLedBuffer, ledX, ledY);\n                    ctx.translate(0, translateY);\n                }\n            } else {\n                // Draw the inactive leds\n                inactiveLeds = fullSize;\n                for (translateX = -(ledW / 2) ; translateX <= inactiveLeds ; translateX += ledW + 1) {\n                    ctx.translate(translateX, 0);\n                    ctx.drawImage(inActiveLedBuffer, ledX, ledY);\n                    ctx.translate(-translateX, 0);\n                }\n                // Draw the active leds in dependence on the current value\n                activeLeds = ((value - minValue) / (maxValue - minValue)) * fullSize;\n                for (translateX = -(ledW / 2) ; translateX <= activeLeds ; translateX += ledW + 1) {\n                    //check for LED color\n                    activeLedColor = valueColor;\n                    if (isGradientVisible) {\n                        // Convert pixel back to value\n                        currentValue = minValue + (translateX / fullSize) * (maxValue - minValue);\n                        gradRange = valueGradient.getEnd() - valueGradient.getStart();\n                        fraction = currentValue / gradRange;\n                        fraction = Math.max(Math.min(fraction, 1), 0);\n                        activeLedColor = customColorDef(valueGradient.getColorAt(fraction).getRgbaColor());\n                    } else if (isSectionsVisible) {\n                        for (i = 0; i < sectionPixels.length; i++) {\n                            if (translateX >= sectionPixels[i].start && translateX < sectionPixels[i].stop) {\n                                activeLedColor = sectionPixels[i].color;\n                                break;\n                            }\n                        }\n                    }\n                    // Has LED color changed? If so redraw the buffer\n                    if (lastActiveLedColor.medium.getHexColor() !== activeLedColor.medium.getHexColor()) {\n                        drawActiveLed(activeLedContext, activeLedColor);\n                        lastActiveLedColor = activeLedColor;\n                    }\n                    ctx.translate(translateX, 0);\n                    ctx.drawImage(activeLedBuffer, ledX, ledY);\n                    ctx.translate(-translateX, 0);\n                }\n            }\n        };\n\n        var drawInActiveLed = function (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            ctx.closePath();\n            var ledCenterX = (ctx.canvas.width / 2);\n            var ledCenterY = (ctx.canvas.height / 2);\n            var ledGradient = mainCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, ctx.canvas.width / 2);\n            ledGradient.addColorStop(0, '#3c3c3c');\n            ledGradient.addColorStop(1, '#323232');\n            ctx.fillStyle = ledGradient;\n            ctx.fill();\n            ctx.restore();\n        };\n\n        var drawActiveLed = function (ctx, color) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            ctx.closePath();\n            var ledCenterX = (ctx.canvas.width / 2);\n            var ledCenterY = (ctx.canvas.height / 2);\n            var outerRadius;\n            if (vertical) {\n                outerRadius = ctx.canvas.width / 2;\n            } else {\n                outerRadius = ctx.canvas.height / 2;\n            }\n            var ledGradient = mainCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, outerRadius);\n            ledGradient.addColorStop(0, color.light.getRgbaColor());\n            ledGradient.addColorStop(1, color.dark.getRgbaColor());\n            ctx.fillStyle = ledGradient;\n            ctx.fill();\n            ctx.restore();\n        };\n\n        //************************************ Public methods **************************************\n        this.setValue = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n            if (value !== targetValue) {\n                value = targetValue;\n\n                if (value > maxMeasuredValue) {\n                    maxMeasuredValue = value;\n                }\n                if (value < minMeasuredValue) {\n                    minMeasuredValue = value;\n                }\n\n                if ((value >= threshold && !ledBlinking && thresholdRising) ||\n                    (value <= threshold && !ledBlinking && !thresholdRising)) {\n                    ledBlinking = true;\n                    blink(ledBlinking);\n                    if (playAlarm) {\n                        audioElement.play();\n                    }\n                } else if ((value < threshold && ledBlinking && thresholdRising) ||\n                           (value > threshold && ledBlinking && !thresholdRising)) {\n                    ledBlinking = false;\n                    blink(ledBlinking);\n                    if (playAlarm) {\n                        audioElement.pause();\n                    }\n                }\n\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getValue = function () {\n            return value;\n        };\n\n        this.setValueAnimated = function (newValue, callback) {\n            var targetValue,\n                gauge = this,\n                time;\n            newValue = parseFloat(newValue);\n            targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n\n            if (value !== targetValue) {\n                if (undefined !== tween && tween.isPlaying) {\n                    tween.stop();\n                }\n\n                time = fullScaleDeflectionTime * Math.abs(targetValue - value) / (maxValue - minValue);\n                time = Math.max(time, fullScaleDeflectionTime / 5);\n                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n                //tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, 1);\n                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, value, targetValue, 1);\n                tween.onMotionChanged = function (event) {\n                    value = event.target._pos;\n\n                    if ((value >= threshold && !ledBlinking && thresholdRising) ||\n                        (value <= threshold && !ledBlinking && !thresholdRising)) {\n                        ledBlinking = true;\n                        blink(ledBlinking);\n                        if (playAlarm) {\n                            audioElement.play();\n                        }\n                    } else if ((value < threshold && ledBlinking && thresholdRising) ||\n                               (value > threshold && ledBlinking && !thresholdRising)) {\n                        ledBlinking = false;\n                        blink(ledBlinking);\n                        if (playAlarm) {\n                            audioElement.pause();\n                        }\n                    }\n\n                    if (value > maxMeasuredValue) {\n                        maxMeasuredValue = value;\n                    }\n                    if (value < minMeasuredValue) {\n                        minMeasuredValue = value;\n                    }\n\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tween.onMotionFinished = callback;\n                }\n\n                tween.start();\n            }\n            return this;\n        };\n\n        this.resetMinMeasuredValue = function () {\n            minMeasuredValue = value;\n            this.repaint();\n            return this;\n        };\n\n        this.resetMaxMeasuredValue = function () {\n            maxMeasuredValue = value;\n            this.repaint();\n            return this;\n        };\n\n        this.setMinMeasuredValueVisible = function (visible) {\n            minMeasuredValueVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setMaxMeasuredValueVisible = function (visible) {\n            maxMeasuredValueVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setThresholdVisible = function (visible) {\n            thresholdVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setThresholdRising = function (rising) {\n            thresholdRising = !!rising;\n            // reset existing threshold alerts\n            ledBlinking = !ledBlinking;\n            blink(ledBlinking);\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdDecimals = function (decimals) {\n            lcdDecimals = parseInt(decimals, 10);\n            this.repaint();\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers({frame: true});\n            frameDesign = newFrameDesign;\n            init({frame: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            resetBuffers({background: true});\n            backgroundColor = newBackgroundColor;\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setValueColor = function (newValueColor) {\n            resetBuffers({bargraphled: true});\n            valueColor = newValueColor;\n            init({bargraphled: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLedColor = function (newLedColor) {\n            resetBuffers({led: true});\n            ledColor = newLedColor;\n            init({led: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLedVisible = function (visible) {\n            ledVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdColor = function (newLcdColor) {\n            lcdColor = newLcdColor;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setSection = function (areaSec) {\n            section = areaSec;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setSectionActive = function (value) {\n            useSectionColors = value;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setGradient = function (grad) {\n            valueGradient = grad;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setGradientActive = function (value) {\n            useValueGradient = value;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setMaxMeasuredValue = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n            if (maxMeasuredValue !== targetValue) {\n                maxMeasuredValue = targetValue;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.setMinMeasuredValue = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n            if (minMeasuredValue !== targetValue) {\n                minMeasuredValue = targetValue;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.setTitleString = function (title) {\n            titleString = title;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setUnitString = function (unit) {\n            unitString = unit;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setMinValue = function (value) {\n            minValue = parseFloat(value);\n            resetBuffers({background: true,\n                          foreground: true,\n                          pointer: true});\n            init({background: true,\n                foreground: true,\n                pointer: true});\n            this.repaint();\n            return this;\n        };\n\n        this.getMinValue = function () {\n            return minValue;\n        };\n\n        this.setMaxValue = function (value) {\n            maxValue = parseFloat(value);\n            resetBuffers({background: true,\n                          foreground: true,\n                          pointer: true});\n            init({background: true,\n                  foreground: true,\n                  pointer: true});\n            this.repaint();\n            return this;\n        };\n\n        this.getMaxValue = function () {\n            return maxValue;\n        };\n\n        this.setThreshold = function (newValue) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : (newValue > maxValue ? maxValue : newValue));\n            if (threshold !== targetValue) {\n                threshold = targetValue;\n                resetBuffers({background: true});\n                init({background: true});\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.setThresholdVisible = function (visible) {\n            thresholdVisible = !!visible;\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init({frame: true,\n                      background: true,\n                      led: true,\n                      pointer: true,\n                      foreground: true,\n                      bargraphled: true});\n            }\n\n            //mainCtx.save();\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            // Draw frame\n            if (frameVisible) {\n                mainCtx.drawImage(frameBuffer, 0, 0);\n            }\n\n            // Draw buffered image to visible canvas\n            if (backgroundVisible) {\n                mainCtx.drawImage(backgroundBuffer, 0, 0);\n            }\n\n            // Draw lcd display\n            if (lcdVisible) {\n                drawLcdText(mainCtx, value, vertical);\n            }\n\n            // Draw led\n            if (ledVisible) {\n                mainCtx.drawImage(ledBuffer, ledPosX, ledPosY);\n            }\n            var valuePos;\n            var minMaxX, minMaxY;\n           // Draw min measured value indicator\n            if (minMeasuredValueVisible) {\n                if (vertical) {\n                    valuePos = imageHeight * 0.856796 - (imageHeight * 0.728155) * (minMeasuredValue - minValue) / (maxValue - minValue);\n                    minMaxX = imageWidth * 0.34 - minMeasuredValueBuffer.width;\n                    minMaxY = valuePos - minMeasuredValueBuffer.height / 2;\n                } else {\n                    valuePos = ((imageWidth * 0.856796) - (imageWidth * 0.128640)) * (minMeasuredValue - minValue) / (maxValue - minValue);\n                    minMaxX = imageWidth * 0.142857 - minMeasuredValueBuffer.height / 2 + valuePos;\n                    minMaxY = imageHeight * 0.65;\n                }\n                mainCtx.drawImage(minMeasuredValueBuffer, minMaxX, minMaxY);\n            }\n\n            // Draw max measured value indicator\n            if (maxMeasuredValueVisible) {\n                if (vertical) {\n                    valuePos = imageHeight * 0.856796 - (imageHeight * 0.728155) * (maxMeasuredValue - minValue) / (maxValue - minValue);\n                    minMaxX = imageWidth * 0.34 - maxMeasuredValueBuffer.width;\n                    minMaxY = valuePos - maxMeasuredValueBuffer.height / 2;\n                } else {\n                    valuePos = ((imageWidth * 0.856796) - (imageWidth * 0.128640)) * (maxMeasuredValue - minValue) / (maxValue - minValue);\n                    minMaxX = imageWidth * 0.142857 - maxMeasuredValueBuffer.height / 2 + valuePos;\n                    minMaxY = imageHeight * 0.65;\n                }\n                mainCtx.drawImage(maxMeasuredValueBuffer, minMaxX, minMaxY);\n            }\n\n            mainCtx.save();\n            drawValue(mainCtx, imageWidth, imageHeight);\n            mainCtx.restore();\n\n            // Draw foreground\n            if (foregroundVisible) {\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n\n            repainting = false;\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var displaySingle = function (canvas, parameters) {\n        parameters = parameters || {};\n        var width = (undefined === parameters.width ? 0 : parameters.width),\n            height = (undefined === parameters.height ? 0 : parameters.height),\n            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n            unitStringVisible = (undefined === parameters.unitStringVisible ? false : parameters.unitStringVisible),\n            headerString = (undefined === parameters.headerString ? '' : parameters.headerString),\n            headerStringVisible = (undefined === parameters.headerStringVisible ? false : parameters.headerStringVisible),\n            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n            valuesNumeric = (undefined === parameters.valuesNumeric ? true : parameters.valuesNumeric),\n            value = (undefined === parameters.value ? 0 : parameters.value),\n            alwaysScroll = (undefined === parameters.alwaysScroll ? false : parameters.alwaysScroll),\n            autoScroll = (undefined === parameters.autoScroll ? false : parameters.autoScroll),\n            section = (undefined === parameters.section ? null : parameters.section);\n\n        var scrolling = false;\n        var scrollX = 0;\n        var scrollTimer;\n        var repainting = false;\n\n        var self = this;\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (width === 0) {\n            width = mainCtx.canvas.width;\n        }\n        if (height === 0) {\n            height = mainCtx.canvas.height;\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = width;\n        mainCtx.canvas.height = height;\n\n        var imageWidth = width;\n        var imageHeight = height;\n        var textWidth = 0;\n\n        var fontHeight = Math.floor(imageHeight / 1.5);\n        var stdFont = fontHeight + 'px ' + stdFontName;\n        var lcdFont = fontHeight + 'px ' + lcdFontName;\n\n        var initialized = false;\n\n        // **************   Buffer creation  ********************\n        // Buffer for the lcd\n        var lcdBuffer;\n        var sectionBuffer = [];\n        var sectionForegroundColor = [];\n\n        // **************   Image creation  ********************\n        var drawLcdText = function (value, color) {\n            mainCtx.save();\n            mainCtx.textAlign = 'right';\n            //mainCtx.textBaseline = 'top';\n            mainCtx.strokeStyle = color;\n            mainCtx.fillStyle = color;\n\n            mainCtx.beginPath();\n            mainCtx.rect(2, 0, imageWidth - 4, imageHeight);\n            mainCtx.closePath();\n            mainCtx.clip();\n\n            if ((lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) &&\n                 section === null) {\n                mainCtx.shadowColor = 'gray';\n                mainCtx.shadowOffsetX = imageHeight * 0.035;\n                mainCtx.shadowOffsetY = imageHeight * 0.035;\n                mainCtx.shadowBlur = imageHeight * 0.055;\n            }\n\n            mainCtx.font = digitalFont ? lcdFont : stdFont;\n\n            if (valuesNumeric) {\n                // Numeric value\n                var unitWidth = 0;\n                textWidth = 0;\n                if (unitStringVisible) {\n                    mainCtx.font = Math.floor(imageHeight / 2.5) + 'px ' + stdFontName;\n                    unitWidth = mainCtx.measureText(unitString).width;\n                }\n                mainCtx.font = digitalFont ? lcdFont : stdFont;\n                var lcdText = value.toFixed(lcdDecimals);\n                textWidth = mainCtx.measureText(lcdText).width;\n                var vPos = 0.38;\n                if (headerStringVisible) {\n                    vPos = 0.52;\n                }\n\n                mainCtx.fillText(lcdText, imageWidth - unitWidth - 4 - scrollX, imageHeight * 0.5 + fontHeight * vPos);\n\n                if (unitStringVisible) {\n                    mainCtx.font = Math.floor(imageHeight / 2.5) + 'px ' + stdFontName;\n                    mainCtx.fillText(unitString, imageWidth - 2 - scrollX, imageHeight * 0.5 + fontHeight * vPos);\n                }\n                if (headerStringVisible) {\n                    mainCtx.textAlign = 'center';\n                    mainCtx.font = Math.floor(imageHeight / 3.5) + 'px ' + stdFontName;\n                    mainCtx.fillText(headerString, imageWidth / 2, imageHeight * 0.3);\n                }\n            } else {\n                // Text value\n                textWidth = mainCtx.measureText(value).width;\n                if (alwaysScroll || (autoScroll && textWidth > imageWidth - 4)) {\n                    if (!scrolling) {\n                        if (textWidth > imageWidth * 0.8) {\n                            scrollX = imageWidth - textWidth - imageWidth * 0.2; // leave 20% blank leading space to give time to read start of message\n                        } else {\n                            scrollX = 0;\n                        }\n                        scrolling = true;\n                        clearTimeout(scrollTimer);  // kill any pending animate\n                        scrollTimer = setTimeout(animate, 200);\n                    }\n                } else if (autoScroll && textWidth <= imageWidth - 4) {\n                    scrollX = 0;\n                    scrolling = false;\n                }\n                mainCtx.fillText(value, imageWidth - 2 - scrollX, imageHeight * 0.5 + fontHeight * 0.38);\n            }\n            mainCtx.restore();\n        };\n\n        var createLcdSectionImage = function (width, height, color, lcdColor) {\n            var lcdSectionBuffer = createBuffer(width, height);\n            var lcdCtx = lcdSectionBuffer.getContext('2d');\n\n            lcdCtx.save();\n            var xB = 0;\n            var yB = 0;\n            var wB = width;\n            var hB = height;\n            var rB = Math.min(width, height) * 0.095;\n\n            var lcdBackground = lcdCtx.createLinearGradient(0, yB, 0, yB + hB);\n\n            lcdBackground.addColorStop(0, '#4c4c4c');\n            lcdBackground.addColorStop(0.08, '#666666');\n            lcdBackground.addColorStop(0.92, '#666666');\n            lcdBackground.addColorStop(1, '#e6e6e6');\n            lcdCtx.fillStyle = lcdBackground;\n\n            roundedRectangle(lcdCtx, xB, yB, wB, hB, rB);\n\n            lcdCtx.fill();\n            lcdCtx.restore();\n\n            lcdCtx.save();\n\n            var rgb = getColorValues(color);\n            var hsb = rgbToHsb(rgb[0], rgb[1], rgb[2]);\n\n            var rgbStart = getColorValues(lcdColor.gradientStartColor);\n            var hsbStart = rgbToHsb(rgbStart[0], rgbStart[1], rgbStart[2]);\n            var rgbFraction1 = getColorValues(lcdColor.gradientFraction1Color);\n            var hsbFraction1 = rgbToHsb(rgbFraction1[0], rgbFraction1[1], rgbFraction1[2]);\n            var rgbFraction2 = getColorValues(lcdColor.gradientFraction2Color);\n            var hsbFraction2 = rgbToHsb(rgbFraction2[0], rgbFraction2[1], rgbFraction2[2]);\n            var rgbFraction3 = getColorValues(lcdColor.gradientFraction3Color);\n            var hsbFraction3 = rgbToHsb(rgbFraction3[0], rgbFraction3[1], rgbFraction3[2]);\n            var rgbStop = getColorValues(lcdColor.gradientStopColor);\n            var hsbStop = rgbToHsb(rgbStop[0], rgbStop[1], rgbStop[2]);\n\n            var startColor = hsbToRgb(hsb[0], hsb[1], hsbStart[2] - 0.31);\n            var fraction1Color = hsbToRgb(hsb[0], hsb[1], hsbFraction1[2] - 0.31);\n            var fraction2Color = hsbToRgb(hsb[0], hsb[1], hsbFraction2[2] - 0.31);\n            var fraction3Color = hsbToRgb(hsb[0], hsb[1], hsbFraction3[2] - 0.31);\n            var stopColor = hsbToRgb(hsb[0], hsb[1], hsbStop[2] - 0.31);\n\n            var xF = 1;\n            var yF = 1;\n            var wF = width - 2;\n            var hF = height - 2;\n            var rF = rB - 1;\n            var lcdForeground = lcdCtx.createLinearGradient(0, yF, 0, yF + hF);\n            lcdForeground.addColorStop(0, 'rgb(' + startColor[0] + ', ' + startColor[1] + ', ' + startColor[2] + ')');\n            lcdForeground.addColorStop(0.03, 'rgb(' + fraction1Color[0] + ',' + fraction1Color[1] + ',' + fraction1Color[2] + ')');\n            lcdForeground.addColorStop(0.49, 'rgb(' + fraction2Color[0] + ',' + fraction2Color[1] + ',' + fraction2Color[2] + ')');\n            lcdForeground.addColorStop(0.5, 'rgb(' + fraction3Color[0] + ',' + fraction3Color[1] + ',' + fraction3Color[2] + ')');\n            lcdForeground.addColorStop(1, 'rgb(' + stopColor[0] + ',' + stopColor[1] + ',' + stopColor[2] + ')');\n            lcdCtx.fillStyle = lcdForeground;\n\n            roundedRectangle(lcdCtx, xF, yF, wF, hF, rF);\n\n            lcdCtx.fill();\n            lcdCtx.restore();\n\n            return lcdSectionBuffer;\n        };\n\n        var createSectionForegroundColor = function (sectionColor) {\n            var rgbSection = getColorValues(sectionColor);\n            var hsbSection = rgbToHsb(rgbSection[0], rgbSection[1], rgbSection[2]);\n            var sectionForegroundRgb = hsbToRgb(hsbSection[0], 0.57, 0.83);\n            return 'rgb(' + sectionForegroundRgb[0] + ', ' + sectionForegroundRgb[1] + ', ' + sectionForegroundRgb[2] + ')';\n        };\n\n        var animate = function () {\n            if (scrolling) {\n                if (scrollX > imageWidth) {\n                    scrollX = -textWidth;\n                }\n                scrollX += 2;\n                scrollTimer = setTimeout(animate, 50);\n            } else {\n                scrollX = 0;\n            }\n            if (!repainting) {\n                repainting = true;\n                requestAnimFrame(self.repaint);\n            }\n        };\n\n        // **************   Initialization  ********************\n        var init = function () {\n            var sectionIndex;\n            initialized = true;\n\n            // Create lcd background if selected in background buffer (backgroundBuffer)\n            lcdBuffer = createLcdBackgroundImage(width, height, lcdColor);\n\n            if (null !== section && 0 < section.length) {\n                for (sectionIndex = 0 ; sectionIndex < section.length ; sectionIndex++) {\n                    sectionBuffer[sectionIndex] = createLcdSectionImage(width, height, section[sectionIndex].color, lcdColor);\n                    sectionForegroundColor[sectionIndex] = createSectionForegroundColor(section[sectionIndex].color);\n                }\n            }\n\n        };\n\n        // **************   Public methods  ********************\n        this.setValue = function (newValue) {\n            if (value !== newValue) {\n                value = newValue;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.setLcdColor = function (newLcdColor) {\n            lcdColor = newLcdColor;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setSection = function (newSection) {\n            section = newSection;\n            init({background: true, foreground: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setScrolling = function (scroll) {\n            if (scroll) {\n                if (scrolling) {\n                    return;\n                } else {\n                    scrolling = scroll;\n                    animate();\n                }\n            } else { //disable scrolling\n                scrolling = scroll;\n            }\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init();\n            }\n\n            //mainCtx.save();\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            var lcdBackgroundBuffer = lcdBuffer;\n            var lcdTextColor = lcdColor.textColor;\n            var sectionIndex;\n            // Draw sections\n            if (null !== section && 0 < section.length) {\n                for (sectionIndex = 0 ; sectionIndex < section.length ; sectionIndex++) {\n                    if (value >= section[sectionIndex].start && value <= section[sectionIndex].stop) {\n                        lcdBackgroundBuffer = sectionBuffer[sectionIndex];\n                        lcdTextColor = sectionForegroundColor[sectionIndex];\n                        break;\n                    }\n                }\n            }\n\n            // Draw lcd background\n            mainCtx.drawImage(lcdBackgroundBuffer, 0, 0);\n\n            // Draw lcd text\n            drawLcdText(value, lcdTextColor);\n\n            repainting = false;\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var displayMulti = function (canvas, parameters) {\n        parameters = parameters || {};\n        var width = (undefined === parameters.width ? 0 : parameters.width),\n            height = (undefined === parameters.height ? 0 : parameters.height),\n            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n            lcdDecimals = (undefined === parameters.lcdDecimals ? 2 : parameters.lcdDecimals),\n            headerString = (undefined === parameters.headerString ? '' : parameters.headerString),\n            headerStringVisible = (undefined === parameters.headerStringVisible ? false : parameters.headerStringVisible),\n            detailString = (undefined === parameters.detailString ? '' : parameters.detailString),\n            detailStringVisible = (undefined === parameters.detailStringVisible ? false : parameters.detailStringVisible),\n            linkAltValue = (undefined === parameters.linkAltValue ? true : parameters.linkAltValue),\n            unitString = (undefined === parameters.unitString ? '' : parameters.unitString),\n            unitStringVisible = (undefined === parameters.unitStringVisible ? false : parameters.unitStringVisible),\n            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n            valuesNumeric = (undefined === parameters.valuesNumeric ? true : parameters.valuesNumeric),\n            value = (undefined === parameters.value ? 0 : parameters.value),\n            altValue = (undefined === parameters.altValue ? 0 : parameters.altValue);\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (width === 0) {\n            width = mainCtx.canvas.width;\n        }\n        if (height === 0) {\n            height = mainCtx.canvas.height;\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = width;\n        mainCtx.canvas.height = height;\n\n        var imageWidth = width;\n        var imageHeight = height;\n\n        var stdFont = Math.floor(imageHeight / 1.875) + 'px ' + stdFontName;\n        var lcdFont = Math.floor(imageHeight / 1.875) + 'px ' + lcdFontName;\n        var stdAltFont = Math.floor(imageHeight / 3.5) + 'px ' + stdFontName;\n        var lcdAltFont = Math.floor(imageHeight / 3.5) + 'px ' + lcdFontName;\n\n        var initialized = false;\n\n        // **************   Buffer creation  ********************\n        // Buffer for the lcd\n        var lcdBuffer;\n\n        // **************   Image creation  ********************\n        var drawLcdText = function (value) {\n            mainCtx.save();\n            mainCtx.textAlign = 'right';\n            mainCtx.textBaseline = 'middle';\n            mainCtx.strokeStyle = lcdColor.textColor;\n            mainCtx.fillStyle = lcdColor.textColor;\n\n            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n                mainCtx.shadowColor = 'gray';\n                mainCtx.shadowOffsetX = imageHeight * 0.025;\n                mainCtx.shadowOffsetY = imageHeight * 0.025;\n                mainCtx.shadowBlur = imageHeight * 0.05;\n            }\n\n            if (valuesNumeric) {\n                // Numeric value\n                if (headerStringVisible) {\n                    mainCtx.font = Math.floor(imageHeight / 3) + 'px ' + stdFontName;\n                } else {\n                    mainCtx.font = Math.floor(imageHeight / 2.5) + 'px ' + stdFontName;\n                }\n                var unitWidth = 0;\n                if (unitStringVisible) {\n                    if (headerStringVisible) {\n                        mainCtx.font = Math.floor(imageHeight / 3) + 'px ' + stdFontName;\n                        unitWidth = mainCtx.measureText(unitString).width;\n                    } else {\n                        mainCtx.font = Math.floor(imageHeight / 2.5) + 'px ' + stdFontName;\n                        unitWidth = mainCtx.measureText(unitString).width;\n                    }\n                }\n                mainCtx.font = digitalFont ? lcdFont : stdFont;\n                var valueText = value.toFixed(lcdDecimals);\n                if (headerStringVisible) {\n                    mainCtx.fillText(valueText, imageWidth - unitWidth - 4, imageHeight * 0.5);\n                } else {\n                    mainCtx.fillText(valueText, imageWidth - unitWidth - 4, imageHeight * 0.38);\n                }\n\n                if (unitStringVisible) {\n                    mainCtx.font = Math.floor(imageHeight / 3) + 'px ' + stdFontName;\n                    mainCtx.fillText(unitString, imageWidth - 2, imageHeight * 0.55);\n                }\n\n                var altValueText = altValue.toFixed(lcdDecimals);\n                if (detailStringVisible) {\n                    altValueText = detailString + altValueText;\n                }\n                if (digitalFont) {\n                    mainCtx.font = lcdAltFont;\n                } else {\n                    if (headerStringVisible) {\n                        mainCtx.font = Math.floor(imageHeight / 5) + 'px ' + stdFontName;\n                    } else {\n                        mainCtx.font = stdAltFont;\n                    }\n                }\n                mainCtx.textAlign = 'center';\n                if (headerStringVisible) {\n                    mainCtx.fillText(altValueText, imageWidth / 2, imageHeight * 0.83);\n                    mainCtx.fillText(headerString, imageWidth / 2, imageHeight * 0.16);\n                } else {\n                    mainCtx.fillText(altValueText, imageWidth / 2, imageHeight * 0.8);\n                }\n            } else {\n                if (headerStringVisible) {\n                    // Text value\n                    mainCtx.font = Math.floor(imageHeight / 3.5) + 'px ' + stdFontName;\n                    mainCtx.fillText(value, imageWidth - 2, imageHeight * 0.48);\n\n                    //mainCtx.font = stdAltFont;\n                    mainCtx.font = Math.floor(imageHeight / 5) + 'px ' + stdFontName;\n                    mainCtx.textAlign = 'center';\n                    mainCtx.fillText(altValue, imageWidth / 2, imageHeight * 0.83);\n                    mainCtx.fillText(headerString, imageWidth / 2, imageHeight * 0.17);\n                } else {\n                    // Text value\n                    mainCtx.font = Math.floor(imageHeight / 2.5) + 'px ' + stdFontName;\n                    mainCtx.fillText(value, imageWidth - 2, imageHeight * 0.38);\n\n                    mainCtx.font = stdAltFont;\n                    mainCtx.textAlign = 'center';\n                    mainCtx.fillText(altValue, imageWidth / 2, imageHeight * 0.8);\n                }\n            }\n            mainCtx.restore();\n        };\n\n        // **************   Initialization  ********************\n        var init = function () {\n            initialized = true;\n\n            // Create lcd background if selected in background buffer (backgroundBuffer)\n            lcdBuffer = createLcdBackgroundImage(width, height, lcdColor);\n        };\n\n        // **************   Public methods  ********************\n        this.setValue = function (newValue) {\n            if (value !== newValue || altValue !== newValue) {\n                if (linkAltValue) {\n                    altValue = value;\n                }\n                value = newValue;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.setAltValue = function (altValue) {\n            if (altValue !== altValue) {\n                altValue = altValue;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.setLcdColor = function (newLcdColor) {\n            lcdColor = newLcdColor;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init();\n            }\n\n            //mainCtx.save();\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            // Draw lcd background\n            mainCtx.drawImage(lcdBuffer, 0, 0);\n\n            // Draw lcd text\n            drawLcdText(value);\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var level = function (canvas, parameters) {\n        parameters = parameters || {};\n        var size = (undefined === parameters.size ? 0 : parameters.size),\n            decimalsVisible = (undefined === parameters.decimalsVisible ? false : parameters.decimalsVisible),\n            textOrientationFixed = (undefined === parameters.textOrientationFixed ? false : parameters.textOrientationFixed),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.RED : parameters.pointerColor),\n            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            rotateFace = (undefined === parameters.rotateFace ? false : parameters.rotateFace);\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (size === 0) {\n            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        var tween;\n        var repainting = false;\n\n        var value = 0;\n        var stepValue = 0;\n        var visibleValue = 0;\n        var angleStep = TWO_PI / 360;\n        var angle = this.value;\n        var decimals = decimalsVisible ? 1 : 0;\n\n        var imageWidth = size;\n        var imageHeight = size;\n\n        var centerX = imageWidth / 2;\n        var centerY = imageHeight / 2;\n\n        var initialized = false;\n\n        // **************   Buffer creation  ********************\n        // Buffer for all static background painting code\n        var backgroundBuffer = createBuffer(size, size);\n        var backgroundContext = backgroundBuffer.getContext('2d');\n\n        // Buffer for pointer image painting code\n        var pointerBuffer = createBuffer(size, size);\n        var pointerContext = pointerBuffer.getContext('2d');\n\n        // Buffer for step pointer image painting code\n        var stepPointerBuffer = createBuffer(size, size);\n        var stepPointerContext = stepPointerBuffer.getContext('2d');\n\n        // Buffer for static foreground painting code\n        var foregroundBuffer = createBuffer(size, size);\n        var foregroundContext = foregroundBuffer.getContext('2d');\n\n        // **************   Image creation  ********************\n        var drawTickmarksImage = function (ctx) {\n            var stdFont, smlFont, i;\n\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.save();\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.translate(centerX, centerY);\n\n            for (i = 0; 360 > i; i++) {\n                ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n                ctx.lineWidth = 0.5;\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.38, 0);\n                ctx.lineTo(imageWidth * 0.37, 0);\n                ctx.closePath();\n                ctx.stroke();\n\n                if (0 === i % 5) {\n                    ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n                    ctx.lineWidth = 1;\n                    ctx.beginPath();\n                    ctx.moveTo(imageWidth * 0.38, 0);\n                    ctx.lineTo(imageWidth * 0.36, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                }\n\n                if (0 === i % 45) {\n                    ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n                    ctx.lineWidth = 1;\n                    ctx.beginPath();\n                    ctx.moveTo(imageWidth * 0.38, 0);\n                    ctx.lineTo(imageWidth * 0.34, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                }\n\n                // Draw the labels\n                if (300 < imageWidth) {\n                    stdFont = '14px ' + stdFont;\n                    smlFont = '12px '  + stdFont;\n                }\n                if (300 >= imageWidth) {\n                    stdFont = '12px '  + stdFont;\n                    smlFont = '10px '  + stdFont;\n                }\n                if (200 >= imageWidth) {\n                    stdFont = '10px '  + stdFont;\n                    smlFont = '8px '  + stdFont;\n                }\n                if (100 >= imageWidth) {\n                    stdFont = '8px '  + stdFont;\n                    smlFont = '6px '  + stdFont;\n                }\n                ctx.save();\n                switch (i) {\n                case 0:\n                    ctx.translate(imageWidth * 0.31, 0);\n                    ctx.rotate((i * RAD_FACTOR) + HALF_PI);\n                    ctx.font = stdFont;\n                    ctx.fillText('0\\u00B0', 0, 0, imageWidth);\n                    ctx.rotate(-(i * RAD_FACTOR) + HALF_PI);\n                    ctx.translate(-imageWidth * 0.31, 0);\n\n                    ctx.translate(imageWidth * 0.41, 0);\n                    ctx.rotate((i * RAD_FACTOR) - HALF_PI);\n                    ctx.font = smlFont;\n                    ctx.fillText('0%', 0, 0, imageWidth);\n                    break;\n                case 45:\n                    ctx.translate(imageWidth * 0.31, 0);\n                    ctx.rotate((i * RAD_FACTOR) + 0.25 * PI);\n                    ctx.font = stdFont;\n                    ctx.fillText('45\\u00B0', 0, 0, imageWidth);\n                    ctx.rotate(-(i * RAD_FACTOR) + 0.25 * PI);\n                    ctx.translate(-imageWidth * 0.31, 0);\n\n                    ctx.translate(imageWidth * 0.31, imageWidth * 0.085);\n                    ctx.rotate((i * RAD_FACTOR) - 0.25 * PI);\n                    ctx.font = smlFont;\n                    ctx.fillText('100%', 0, 0, imageWidth);\n                    break;\n                case 90:\n                    ctx.translate(imageWidth * 0.31, 0);\n                    ctx.rotate((i * RAD_FACTOR));\n                    ctx.font = stdFont;\n                    ctx.fillText('90\\u00B0', 0, 0, imageWidth);\n                    ctx.rotate(-(i * RAD_FACTOR));\n                    ctx.translate(-imageWidth * 0.31, 0);\n\n                    ctx.translate(imageWidth * 0.21, 0);\n                    ctx.rotate((i * RAD_FACTOR));\n                    ctx.font = smlFont;\n                    ctx.fillText('\\u221E', 0, 0, imageWidth);\n                    break;\n                case 135:\n                    ctx.translate(imageWidth * 0.31, 0);\n                    ctx.rotate((i * RAD_FACTOR) - 0.25 * PI);\n                    ctx.font = stdFont;\n                    ctx.fillText('45\\u00B0', 0, 0, imageWidth);\n                    ctx.rotate(-(i * RAD_FACTOR) - 0.25 * PI);\n                    ctx.translate(-imageWidth * 0.31, 0);\n\n                    ctx.translate(imageWidth * 0.31, -imageWidth * 0.085);\n                    ctx.rotate((i * RAD_FACTOR) + 0.25 * PI);\n                    ctx.font = smlFont;\n                    ctx.fillText('100%', 0, 0, imageWidth);\n                    break;\n                case 180:\n                    ctx.translate(imageWidth * 0.31, 0);\n                    ctx.rotate((i * RAD_FACTOR) - HALF_PI);\n                    ctx.font = stdFont;\n                    ctx.fillText('0\\u00B0', 0, 0, imageWidth);\n                    ctx.rotate(-(i * RAD_FACTOR) - HALF_PI);\n                    ctx.translate(-imageWidth * 0.31, 0);\n\n                    ctx.translate(imageWidth * 0.41, 0);\n                    ctx.rotate((i * RAD_FACTOR) + HALF_PI);\n                    ctx.font = smlFont;\n                    ctx.fillText('0%', 0, 0, imageWidth);\n                    ctx.translate(-imageWidth * 0.41, 0);\n                    break;\n                case 225:\n                    ctx.translate(imageWidth * 0.31, 0);\n                    ctx.rotate((i * RAD_FACTOR) - 0.75 * PI);\n                    ctx.font = stdFont;\n                    ctx.fillText('45\\u00B0', 0, 0, imageWidth);\n                    ctx.rotate(-(i * RAD_FACTOR) - 0.75 * PI);\n                    ctx.translate(-imageWidth * 0.31, 0);\n\n                    ctx.translate(imageWidth * 0.31, imageWidth * 0.085);\n                    ctx.rotate((i * RAD_FACTOR) + 0.75 * PI);\n                    ctx.font = smlFont;\n                    ctx.fillText('100%', 0, 0, imageWidth);\n                    break;\n                case 270:\n                    ctx.translate(imageWidth * 0.31, 0);\n                    ctx.rotate((i * RAD_FACTOR) - PI);\n                    ctx.font = stdFont;\n                    ctx.fillText('90\\u00B0', 0, 0, imageWidth);\n                    ctx.rotate(-(i * RAD_FACTOR) - PI);\n                    ctx.translate(-imageWidth * 0.31, 0);\n\n                    ctx.translate(imageWidth * 0.21, 0);\n                    ctx.rotate((i * RAD_FACTOR) - PI);\n                    ctx.font = smlFont;\n                    ctx.fillText('\\u221E', 0, 0, imageWidth);\n                    break;\n                case 315:\n                    ctx.translate(imageWidth * 0.31, 0);\n                    ctx.rotate((i * RAD_FACTOR) - 1.25 * PI);\n                    ctx.font = stdFont;\n                    ctx.fillText('45\\u00B0', 0, 0, imageWidth);\n                    ctx.rotate(-(i * RAD_FACTOR) - 1.25 * PI);\n                    ctx.translate(-imageWidth * 0.31, 0);\n\n                    ctx.translate(imageWidth * 0.31, -imageWidth * 0.085);\n                    ctx.rotate((i * RAD_FACTOR) + 1.25 * PI);\n                    ctx.font = smlFont;\n                    ctx.fillText('100%', 0, 0, imageWidth);\n                    break;\n                }\n                ctx.restore();\n\n                ctx.rotate(angleStep);\n            }\n            ctx.translate(-centerX, -centerY);\n            ctx.restore();\n        };\n\n        var drawMarkerImage = function (ctx) {\n            ctx.save();\n\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\n            // FRAMELEFT\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.200934, imageHeight * 0.434579);\n            ctx.lineTo(imageWidth * 0.163551, imageHeight * 0.434579);\n            ctx.lineTo(imageWidth * 0.163551, imageHeight * 0.560747);\n            ctx.lineTo(imageWidth * 0.200934, imageHeight * 0.560747);\n            ctx.lineWidth = 1;\n            ctx.lineCap = 'square';\n            ctx.lineJoin = 'miter';\n            ctx.stroke();\n\n            // TRIANGLELEFT\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.163551, imageHeight * 0.471962);\n            ctx.lineTo(imageWidth * 0.205607, imageHeight * 0.5);\n            ctx.lineTo(imageWidth * 0.163551, imageHeight * 0.523364);\n            ctx.lineTo(imageWidth * 0.163551, imageHeight * 0.471962);\n            ctx.closePath();\n            ctx.fill();\n\n            // FRAMERIGHT\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.799065, imageHeight * 0.434579);\n            ctx.lineTo(imageWidth * 0.836448, imageHeight * 0.434579);\n            ctx.lineTo(imageWidth * 0.836448, imageHeight * 0.560747);\n            ctx.lineTo(imageWidth * 0.799065, imageHeight * 0.560747);\n            ctx.lineWidth = 1;\n            ctx.lineCap = 'square';\n            ctx.lineJoin = 'miter';\n            ctx.stroke();\n\n            // TRIANGLERIGHT\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.836448, imageHeight * 0.471962);\n            ctx.lineTo(imageWidth * 0.794392, imageHeight * 0.5);\n            ctx.lineTo(imageWidth * 0.836448, imageHeight * 0.523364);\n            ctx.lineTo(imageWidth * 0.836448, imageHeight * 0.471962);\n            ctx.closePath();\n            ctx.fill();\n\n            ctx.restore();\n        };\n\n        var drawPointerImage = function (ctx) {\n            ctx.save();\n\n            // POINTER_LEVEL\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.523364, imageHeight * 0.350467);\n            ctx.lineTo(imageWidth * 0.5, imageHeight * 0.130841);\n            ctx.lineTo(imageWidth * 0.476635, imageHeight * 0.350467);\n            ctx.bezierCurveTo(imageWidth * 0.476635, imageHeight * 0.350467, imageWidth * 0.490654, imageHeight * 0.345794, imageWidth * 0.5, imageHeight * 0.345794);\n            ctx.bezierCurveTo(imageWidth * 0.509345, imageHeight * 0.345794, imageWidth * 0.523364, imageHeight * 0.350467, imageWidth * 0.523364, imageHeight * 0.350467);\n            ctx.closePath();\n            var POINTER_LEVEL_GRADIENT = ctx.createLinearGradient(0, 0.154205 * imageHeight, 0, 0.350466 * imageHeight);\n            var tmpDarkColor = pointerColor.dark;\n            var tmpLightColor = pointerColor.light;\n            tmpDarkColor.setAlpha(0.70588);\n            tmpLightColor.setAlpha(0.70588);\n            POINTER_LEVEL_GRADIENT.addColorStop(0, tmpDarkColor.getRgbaColor());\n            POINTER_LEVEL_GRADIENT.addColorStop(0.3, tmpLightColor.getRgbaColor());\n            POINTER_LEVEL_GRADIENT.addColorStop(0.59, tmpLightColor.getRgbaColor());\n            POINTER_LEVEL_GRADIENT.addColorStop(1, tmpDarkColor.getRgbaColor());\n            ctx.fillStyle = POINTER_LEVEL_GRADIENT;\n            var strokeColor_POINTER_LEVEL = pointerColor.light.getRgbaColor();\n            ctx.lineWidth = 1;\n            ctx.lineCap = 'square';\n            ctx.lineJoin = 'miter';\n            ctx.strokeStyle = strokeColor_POINTER_LEVEL;\n            ctx.fill();\n            ctx.stroke();\n\n            tmpDarkColor.setAlpha(1);\n            tmpLightColor.setAlpha(1);\n\n            ctx.restore();\n        };\n\n        var drawStepPointerImage = function (ctx) {\n            ctx.save();\n\n            var tmpDarkColor = pointerColor.dark;\n            var tmpLightColor = pointerColor.light;\n            tmpDarkColor.setAlpha(0.70588);\n            tmpLightColor.setAlpha(0.70588);\n\n            // POINTER_LEVEL_LEFT\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.285046, imageHeight * 0.514018);\n            ctx.lineTo(imageWidth * 0.210280, imageHeight * 0.5);\n            ctx.lineTo(imageWidth * 0.285046, imageHeight * 0.481308);\n            ctx.bezierCurveTo(imageWidth * 0.285046, imageHeight * 0.481308, imageWidth * 0.280373, imageHeight * 0.490654, imageWidth * 0.280373, imageHeight * 0.495327);\n            ctx.bezierCurveTo(imageWidth * 0.280373, imageHeight * 0.504672, imageWidth * 0.285046, imageHeight * 0.514018, imageWidth * 0.285046, imageHeight * 0.514018);\n            ctx.closePath();\n            var POINTER_LEVEL_LEFT_GRADIENT = ctx.createLinearGradient(0.224299 * imageWidth, 0, 0.289719 * imageWidth, 0);\n            POINTER_LEVEL_LEFT_GRADIENT.addColorStop(0, tmpDarkColor.getRgbaColor());\n            POINTER_LEVEL_LEFT_GRADIENT.addColorStop(0.3, tmpLightColor.getRgbaColor());\n            POINTER_LEVEL_LEFT_GRADIENT.addColorStop(0.59, tmpLightColor.getRgbaColor());\n            POINTER_LEVEL_LEFT_GRADIENT.addColorStop(1, tmpDarkColor.getRgbaColor());\n            ctx.fillStyle = POINTER_LEVEL_LEFT_GRADIENT;\n            var strokeColor_POINTER_LEVEL_LEFT = pointerColor.light.getRgbaColor();\n            ctx.lineWidth = 1;\n            ctx.lineCap = 'square';\n            ctx.lineJoin = 'miter';\n            ctx.strokeStyle = strokeColor_POINTER_LEVEL_LEFT;\n            ctx.fill();\n            ctx.stroke();\n\n            // POINTER_LEVEL_RIGHT\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.714953, imageHeight * 0.514018);\n            ctx.lineTo(imageWidth * 0.789719, imageHeight * 0.5);\n            ctx.lineTo(imageWidth * 0.714953, imageHeight * 0.481308);\n            ctx.bezierCurveTo(imageWidth * 0.714953, imageHeight * 0.481308, imageWidth * 0.719626, imageHeight * 0.490654, imageWidth * 0.719626, imageHeight * 0.495327);\n            ctx.bezierCurveTo(imageWidth * 0.719626, imageHeight * 0.504672, imageWidth * 0.714953, imageHeight * 0.514018, imageWidth * 0.714953, imageHeight * 0.514018);\n            ctx.closePath();\n            var POINTER_LEVEL_RIGHT_GRADIENT = ctx.createLinearGradient(0.775700 * imageWidth, 0, 0.71028 * imageWidth, 0);\n            POINTER_LEVEL_RIGHT_GRADIENT.addColorStop(0, tmpDarkColor.getRgbaColor());\n            POINTER_LEVEL_RIGHT_GRADIENT.addColorStop(0.3, tmpLightColor.getRgbaColor());\n            POINTER_LEVEL_RIGHT_GRADIENT.addColorStop(0.59, tmpLightColor.getRgbaColor());\n            POINTER_LEVEL_RIGHT_GRADIENT.addColorStop(1, tmpDarkColor.getRgbaColor());\n            ctx.fillStyle = POINTER_LEVEL_RIGHT_GRADIENT;\n            var strokeColor_POINTER_LEVEL_RIGHT = pointerColor.light.getRgbaColor();\n            ctx.lineWidth = 1;\n            ctx.lineCap = 'square';\n            ctx.lineJoin = 'miter';\n            ctx.strokeStyle = strokeColor_POINTER_LEVEL_RIGHT;\n            ctx.fill();\n            ctx.stroke();\n\n            tmpDarkColor.setAlpha(1);\n            tmpLightColor.setAlpha(1);\n\n            ctx.restore();\n        };\n\n        // **************   Initialization  ********************\n        // Draw all static painting code to background\n        var init = function () {\n            initialized = true;\n\n            if (frameVisible) {\n                drawRadialFrameImage(backgroundContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n            }\n\n            if (backgroundVisible) {\n                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n                drawTickmarksImage(backgroundContext);\n            }\n\n            drawMarkerImage(pointerContext);\n\n            drawPointerImage(pointerContext);\n\n            drawStepPointerImage(stepPointerContext);\n\n            if (foregroundVisible) {\n                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, false);\n            }\n        };\n\n        var resetBuffers = function () {\n            backgroundBuffer.width = size;\n            backgroundBuffer.height = size;\n            backgroundContext = backgroundBuffer.getContext('2d');\n\n            // Buffer for pointer image painting code\n            pointerBuffer.width = size;\n            pointerBuffer.height = size;\n            pointerContext = pointerBuffer.getContext('2d');\n\n            // Buffer for step pointer image painting code\n            stepPointerBuffer.width = size;\n            stepPointerBuffer.height = size;\n            stepPointerContext = stepPointerBuffer.getContext('2d');\n\n            // Buffer for static foreground painting code\n            foregroundBuffer.width = size;\n            foregroundBuffer.height = size;\n            foregroundContext = foregroundBuffer.getContext('2d');\n        };\n\n        //************************************ Public methods **************************************\n        this.setValue = function (newValue) {\n            var targetValue;\n            newValue = parseFloat(newValue);\n            targetValue = 0 > newValue ? (360 + newValue) : newValue;\n            targetValue = 359.9 < newValue ? (newValue - 360) : newValue;\n\n            if (value !== targetValue) {\n                value = targetValue;\n                stepValue = 2 * ((Math.abs(value) * 10) % 10);\n                if (10 < stepValue) {\n                    stepValue -= 20;\n                }\n\n                if (0 === value) {\n                    visibleValue = 90;\n                }\n\n                if (0 < value && 90 >= value) {\n                    visibleValue = (90 - value);\n                }\n\n                if (90 < value && 180 >= value) {\n                    visibleValue = (value - 90);\n                }\n\n                if (180 < value && 270 >= value) {\n                    visibleValue = (270 - value);\n                }\n\n                if (270 < value && 360 >= value) {\n                    visibleValue = (value - 270);\n                }\n\n                if (0 > value && value >= -90) {\n                    visibleValue = (90 - Math.abs(value));\n                }\n\n                if (value < -90 && value >= -180) {\n                    visibleValue = Math.abs(value) - 90;\n                }\n\n                if (value < -180 && value >= -270) {\n                    visibleValue = 270 - Math.abs(value);\n                }\n\n                if (value < -270 && value >= -360) {\n                    visibleValue = Math.abs(value) - 270;\n                }\n\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getValue = function () {\n            return value;\n        };\n\n        this.setValueAnimated = function (newValue, callback) {\n            newValue = parseFloat(newValue);\n            if (360 - newValue + value < newValue - value) {\n                newValue = 360 - newValue;\n            }\n            if (value !== newValue) {\n                if (undefined !== tween && tween.isPlaying) {\n                    tween.stop();\n                }\n\n                //tween = new Tween(new Object(),'',Tween.elasticEaseOut,this.value,targetValue, 1);\n                tween = new Tween({}, '', Tween.regularEaseInOut, value, newValue, 1);\n                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, this.value, targetValue, 1);\n\n                var gauge = this;\n\n                tween.onMotionChanged = function (event) {\n                    value = event.target._pos;\n                    stepValue = 2 * ((Math.abs(value) * 10) % 10);\n                    if (10 < stepValue) {\n                        stepValue -= 20;\n                    }\n\n                    if (0 === value) {\n                        visibleValue = 90;\n                    }\n\n                    if (0 < value && 90 >= value) {\n                        visibleValue = (90 - value);\n                    }\n\n                    if (90 < value && 180 >= value) {\n                        visibleValue = (value - 90);\n                    }\n\n                    if (180 < value && 270 >= value) {\n                        visibleValue = (270 - value);\n                    }\n\n                    if (270 < value && 360 >= value) {\n                        visibleValue = (value - 270);\n                    }\n\n                    if (0 > value && value >= -90) {\n                        visibleValue = (90 - Math.abs(value));\n                    }\n\n                    if (value < -90 && value >= -180) {\n                        visibleValue = Math.abs(value) - 90;\n                    }\n\n                    if (value < -180 && value >= -270) {\n                        visibleValue = 270 - Math.abs(value);\n                    }\n\n                    if (value < -270 && value >= -360) {\n                        visibleValue = Math.abs(value) - 270;\n                    }\n\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tween.onMotionFinished = callback;\n                }\n\n                tween.start();\n            }\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers();\n            frameDesign = newFrameDesign;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            resetBuffers();\n            backgroundColor = newBackgroundColor;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setForegroundType = function (newForegroundType) {\n            resetBuffers();\n            foregroundType = newForegroundType;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerColor = function (newPointerColor) {\n            resetBuffers();\n            pointerColor = newPointerColor;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init();\n            }\n\n            mainCtx.save();\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            angle = HALF_PI + value * angleStep - HALF_PI;\n            if (rotateFace) {\n                mainCtx.translate(centerX, centerY);\n                mainCtx.rotate(-angle);\n                mainCtx.translate(-centerX, -centerY);\n            }\n            // Draw buffered image to visible canvas\n            if (frameVisible || backgroundVisible) {\n                mainCtx.drawImage(backgroundBuffer, 0, 0);\n            }\n\n            mainCtx.save();\n            // Define rotation center\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate(angle);\n\n            // Draw pointer\n            mainCtx.translate(-centerX, -centerY);\n            mainCtx.drawImage(pointerBuffer, 0, 0);\n\n            mainCtx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n            mainCtx.textAlign = 'center';\n            mainCtx.textBaseline = 'middle';\n\n            if (textOrientationFixed) {\n                mainCtx.restore();\n                if (decimalsVisible) {\n                    mainCtx.font = imageWidth * 0.1 + 'px ' + stdFontName;\n                } else {\n                    mainCtx.font = imageWidth * 0.15 + 'px ' + stdFontName;\n                }\n                mainCtx.fillText(visibleValue.toFixed(decimals) + '\\u00B0', centerX, centerY, imageWidth * 0.35);\n            } else {\n                if (decimalsVisible) {\n                    mainCtx.font = imageWidth * 0.15 + 'px ' + stdFontName;\n                } else {\n                    mainCtx.font = imageWidth * 0.2 + 'px ' + stdFontName;\n                }\n                mainCtx.fillText(visibleValue.toFixed(decimals) + '\\u00B0', centerX, centerY, imageWidth * 0.35);\n                mainCtx.restore();\n            }\n\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate(angle + stepValue * RAD_FACTOR);\n            mainCtx.translate(-centerX, -centerY);\n            mainCtx.drawImage(stepPointerBuffer, 0, 0);\n            mainCtx.restore();\n\n            // Draw foreground\n            if (foregroundVisible) {\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n\n            mainCtx.restore();\n\n            repainting = false;\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var compass = function (canvas, parameters) {\n        parameters = parameters || {};\n        var size = (undefined === parameters.size ? 0 : parameters.size),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            pointerType = (undefined === parameters.pointerType ? steelseries.PointerType.TYPE2 : parameters.pointerType),\n            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.RED : parameters.pointerColor),\n            knobType = (undefined === parameters.knobType ? steelseries.KnobType.STANDARD_KNOB : parameters.knobType),\n            knobStyle = (undefined === parameters.knobStyle ? steelseries.KnobStyle.SILVER : parameters.knobStyle),\n            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            pointSymbols = (undefined === parameters.pointSymbols ? ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'] : parameters.pointSymbols),\n            pointSymbolsVisible = (undefined === parameters.pointSymbolsVisible ? true : parameters.pointSymbolsVisible),\n            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n            degreeScale = (undefined === parameters.degreeScale ? false : parameters.degreeScale),\n            roseVisible = (undefined === parameters.roseVisible ? true : parameters.roseVisible),\n            rotateFace = (undefined === parameters.rotateFace ? false : parameters.rotateFace);\n\n        var tween;\n        var repainting = false;\n        var value = 0;\n        var angleStep = RAD_FACTOR;\n        var angle = this.value;\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (size === 0) {\n            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        var imageWidth = size;\n        var imageHeight = size;\n\n        var centerX = imageWidth / 2;\n        var centerY = imageHeight / 2;\n\n        var shadowOffset = imageWidth * 0.006;\n\n        var initialized = false;\n\n        // **************   Buffer creation  ********************\n        // Buffer for all static background painting code\n        var backgroundBuffer = createBuffer(size, size);\n        var backgroundContext = backgroundBuffer.getContext('2d');\n\n        // Buffer for symbol/rose painting code\n        var roseBuffer = createBuffer(size, size);\n        var roseContext = roseBuffer.getContext('2d');\n\n        // Buffer for pointer image painting code\n        var pointerBuffer = createBuffer(size, size);\n        var pointerContext = pointerBuffer.getContext('2d');\n\n        // Buffer for static foreground painting code\n        var foregroundBuffer = createBuffer(size, size);\n        var foregroundContext = foregroundBuffer.getContext('2d');\n\n        // **************   Image creation  ********************\n        var drawTickmarksImage = function (ctx) {\n            var val;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n\n            var stdFont, smlFont, i;\n\n            ctx.save();\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.translate(centerX, centerY);\n\n            if (!degreeScale) {\n\n                stdFont = 0.12 * imageWidth + 'px serif';\n                smlFont = 0.06 * imageWidth + 'px serif';\n\n                for (i = 0; 360 > i; i += 2.5) {\n\n                    if (0 === i % 5) {\n                        ctx.lineWidth = 1;\n                        ctx.beginPath();\n                        ctx.moveTo(imageWidth * 0.38, 0);\n                        ctx.lineTo(imageWidth * 0.36, 0);\n                        ctx.closePath();\n                        ctx.stroke();\n                    }\n\n                    // Draw the labels\n                    ctx.save();\n                    switch (i) {\n                    case 0:\n                        ctx.translate(imageWidth * 0.35, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = stdFont;\n                        ctx.fillText(pointSymbols[2], 0, 0, imageWidth);\n                        ctx.translate(-imageWidth * 0.35, 0);\n                        break;\n                    case 45:\n                        ctx.translate(imageWidth * 0.29, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = smlFont;\n                        ctx.fillText(pointSymbols[3], 0, 0, imageWidth);\n                        ctx.translate(-imageWidth * 0.29, 0);\n                        break;\n                    case 90:\n                        ctx.translate(imageWidth * 0.35, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = stdFont;\n                        ctx.fillText(pointSymbols[4], 0, 0, imageWidth);\n                        ctx.translate(-imageWidth * 0.35, 0);\n                        break;\n                    case 135:\n                        ctx.translate(imageWidth * 0.29, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = smlFont;\n                        ctx.fillText(pointSymbols[5], 0, 0, imageWidth);\n                        ctx.translate(-imageWidth * 0.29, 0);\n                        break;\n                    case 180:\n                        ctx.translate(imageWidth * 0.35, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = stdFont;\n                        ctx.fillText(pointSymbols[6], 0, 0, imageWidth);\n                        ctx.translate(-imageWidth * 0.35, 0);\n                        break;\n                    case 225:\n                        ctx.translate(imageWidth * 0.29, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = smlFont;\n                        ctx.fillText(pointSymbols[7], 0, 0, imageWidth);\n                        ctx.translate(-imageWidth * 0.29, 0);\n                        break;\n                    case 270:\n                        ctx.translate(imageWidth * 0.35, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = stdFont;\n                        ctx.fillText(pointSymbols[0], 0, 0, imageWidth);\n                        ctx.translate(-imageWidth * 0.35, 0);\n                        break;\n                    case 315:\n                        ctx.translate(imageWidth * 0.29, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = smlFont;\n                        ctx.fillText(pointSymbols[1], 0, 0, imageWidth);\n                        ctx.translate(-imageWidth * 0.29, 0);\n                        break;\n                    }\n                    ctx.restore();\n\n                    if (roseVisible && (0 === i || 22.5 === i || 45 === i || 67.5 === i || 90 === i || 112.5 === i || 135 === i || 157.5 === i || 180 === i || 202.5 === i || 225 === i || 247.5 === i || 270 === i || 292.5 === i || 315 === i || 337.5 === i || 360 === i)) {\n                        // ROSE_LINE\n                        ctx.save();\n                        ctx.beginPath();\n                        // indent the 16 half quadrant lines a bit for visual effect\n                        if (i % 45) {\n                            ctx.moveTo(imageWidth * 0.29, 0);\n                        } else {\n                            ctx.moveTo(imageWidth * 0.38, 0);\n                        }\n                        ctx.lineTo(imageWidth * 0.1, 0);\n                        ctx.closePath();\n                        ctx.restore();\n                        ctx.lineWidth = 1;\n                        ctx.strokeStyle = backgroundColor.symbolColor.getRgbaColor();\n                        ctx.stroke();\n                    }\n                    ctx.rotate(angleStep * 2.5);\n                }\n            } else {\n                stdFont = 0.08 * imageWidth + 'px serif';\n                smlFont = imageWidth * 0.033 + 'px serif';\n\n                ctx.rotate(angleStep * 10);\n\n                for (i = 10; 360 >= i; i += 10) {\n                    // Draw the labels\n                    ctx.save();\n                    if (pointSymbolsVisible) {\n                        switch (i) {\n                        case 360:\n                            ctx.translate(imageWidth * 0.35, 0);\n                            ctx.rotate(HALF_PI);\n                            ctx.font = stdFont;\n                            ctx.fillText(pointSymbols[2], 0, 0, imageWidth);\n                            ctx.translate(-imageWidth * 0.35, 0);\n                            break;\n                        case 90:\n                            ctx.translate(imageWidth * 0.35, 0);\n                            ctx.rotate(HALF_PI);\n                            ctx.font = stdFont;\n                            ctx.fillText(pointSymbols[4], 0, 0, imageWidth);\n                            ctx.translate(-imageWidth * 0.35, 0);\n                            break;\n                        case 180:\n                            ctx.translate(imageWidth * 0.35, 0);\n                            ctx.rotate(HALF_PI);\n                            ctx.font = stdFont;\n                            ctx.fillText(pointSymbols[6], 0, 0, imageWidth);\n                            ctx.translate(-imageWidth * 0.35, 0);\n                            break;\n                        case 270:\n                            ctx.translate(imageWidth * 0.35, 0);\n                            ctx.rotate(HALF_PI);\n                            ctx.font = stdFont;\n                            ctx.fillText(pointSymbols[0], 0, 0, imageWidth);\n                            ctx.translate(-imageWidth * 0.35, 0);\n                            break;\n                        default:\n                            val = (i + 90) % 360;\n                            ctx.translate(imageWidth * 0.37, 0);\n                            ctx.rotate(HALF_PI);\n                            ctx.font = smlFont;\n                            ctx.fillText(('0'.substring(val >= 100) + val), 0, 0, imageWidth);\n                            ctx.translate(-imageWidth * 0.37, 0);\n                        }\n                    } else {\n                        val = (i + 90) % 360;\n                        ctx.translate(imageWidth * 0.37, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = smlFont;\n                        ctx.fillText(('0'.substring(val >= 100) + val), 0, 0, imageWidth);\n                        ctx.translate(-imageWidth * 0.37, 0);\n                    }\n                    ctx.restore();\n                    ctx.rotate(angleStep * 10);\n                }\n\n            }\n            ctx.translate(-centerX, -centerY);\n            ctx.restore();\n        };\n\n        var drawPointerImage = function (ctx) {\n            ctx.save();\n\n            switch (pointerType.type) {\n            case 'type2':\n                // NORTHPOINTER\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.532710, imageHeight * 0.453271);\n                ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.453271, imageWidth * 0.5, imageHeight * 0.149532, imageWidth * 0.5, imageHeight * 0.149532);\n                ctx.bezierCurveTo(imageWidth * 0.5, imageHeight * 0.149532, imageWidth * 0.467289, imageHeight * 0.453271, imageWidth * 0.467289, imageHeight * 0.453271);\n                ctx.bezierCurveTo(imageWidth * 0.453271, imageHeight * 0.462616, imageWidth * 0.443925, imageHeight * 0.481308, imageWidth * 0.443925, imageHeight * 0.5);\n                ctx.bezierCurveTo(imageWidth * 0.443925, imageHeight * 0.5, imageWidth * 0.556074, imageHeight * 0.5, imageWidth * 0.556074, imageHeight * 0.5);\n                ctx.bezierCurveTo(imageWidth * 0.556074, imageHeight * 0.481308, imageWidth * 0.546728, imageHeight * 0.462616, imageWidth * 0.532710, imageHeight * 0.453271);\n                ctx.closePath();\n                var NORTHPOINTER2_GRADIENT = ctx.createLinearGradient(0.471962 * imageWidth, 0, 0.528036 * imageWidth, 0);\n                NORTHPOINTER2_GRADIENT.addColorStop(0, pointerColor.light.getRgbaColor());\n                NORTHPOINTER2_GRADIENT.addColorStop(0.46, pointerColor.light.getRgbaColor());\n                NORTHPOINTER2_GRADIENT.addColorStop(0.47, pointerColor.medium.getRgbaColor());\n                NORTHPOINTER2_GRADIENT.addColorStop(1, pointerColor.medium.getRgbaColor());\n                ctx.fillStyle = NORTHPOINTER2_GRADIENT;\n                ctx.strokeStyle = pointerColor.dark.getRgbaColor();\n                ctx.lineWidth = 1;\n                ctx.lineCap = 'square';\n                ctx.lineJoin = 'miter';\n                ctx.fill();\n                ctx.stroke();\n\n                // SOUTHPOINTER\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.467289, imageHeight * 0.546728);\n                ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.546728, imageWidth * 0.5, imageHeight * 0.850467, imageWidth * 0.5, imageHeight * 0.850467);\n                ctx.bezierCurveTo(imageWidth * 0.5, imageHeight * 0.850467, imageWidth * 0.532710, imageHeight * 0.546728, imageWidth * 0.532710, imageHeight * 0.546728);\n                ctx.bezierCurveTo(imageWidth * 0.546728, imageHeight * 0.537383, imageWidth * 0.556074, imageHeight * 0.518691, imageWidth * 0.556074, imageHeight * 0.5);\n                ctx.bezierCurveTo(imageWidth * 0.556074, imageHeight * 0.5, imageWidth * 0.443925, imageHeight * 0.5, imageWidth * 0.443925, imageHeight * 0.5);\n                ctx.bezierCurveTo(imageWidth * 0.443925, imageHeight * 0.518691, imageWidth * 0.453271, imageHeight * 0.537383, imageWidth * 0.467289, imageHeight * 0.546728);\n                ctx.closePath();\n                var SOUTHPOINTER2_GRADIENT = ctx.createLinearGradient(0.471962 * imageWidth, 0, 0.528036 * imageWidth, 0);\n                SOUTHPOINTER2_GRADIENT.addColorStop(0, '#e3e5e8');\n                SOUTHPOINTER2_GRADIENT.addColorStop(0.48, '#e3e5e8');\n                SOUTHPOINTER2_GRADIENT.addColorStop(0.48, '#abb1b8');\n                SOUTHPOINTER2_GRADIENT.addColorStop(1, '#abb1b8');\n                ctx.fillStyle = SOUTHPOINTER2_GRADIENT;\n                var strokeColor_SOUTHPOINTER2 = '#abb1b8';\n                ctx.strokeStyle = strokeColor_SOUTHPOINTER2;\n                ctx.lineWidth = 1;\n                ctx.lineCap = 'square';\n                ctx.lineJoin = 'miter';\n                ctx.fill();\n                ctx.stroke();\n                break;\n\n            case 'type3':\n                // NORTHPOINTER\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.5, imageHeight * 0.149532);\n                ctx.bezierCurveTo(imageWidth * 0.5, imageHeight * 0.149532, imageWidth * 0.443925, imageHeight * 0.490654, imageWidth * 0.443925, imageHeight * 0.5);\n                ctx.bezierCurveTo(imageWidth * 0.443925, imageHeight * 0.532710, imageWidth * 0.467289, imageHeight * 0.556074, imageWidth * 0.5, imageHeight * 0.556074);\n                ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.556074, imageWidth * 0.556074, imageHeight * 0.532710, imageWidth * 0.556074, imageHeight * 0.5);\n                ctx.bezierCurveTo(imageWidth * 0.556074, imageHeight * 0.490654, imageWidth * 0.5, imageHeight * 0.149532, imageWidth * 0.5, imageHeight * 0.149532);\n                ctx.closePath();\n                var NORTHPOINTER3_GRADIENT = ctx.createLinearGradient(0.471962 * imageWidth, 0, 0.528036 * imageWidth, 0);\n                NORTHPOINTER3_GRADIENT.addColorStop(0, pointerColor.light.getRgbaColor());\n                NORTHPOINTER3_GRADIENT.addColorStop(0.46, pointerColor.light.getRgbaColor());\n                NORTHPOINTER3_GRADIENT.addColorStop(0.47, pointerColor.medium.getRgbaColor());\n                NORTHPOINTER3_GRADIENT.addColorStop(1, pointerColor.medium.getRgbaColor());\n                ctx.fillStyle = NORTHPOINTER3_GRADIENT;\n                ctx.strokeStyle = pointerColor.dark.getRgbaColor();\n                ctx.lineWidth = 1;\n                ctx.lineCap = 'square';\n                ctx.lineJoin = 'miter';\n                ctx.fill();\n                ctx.stroke();\n                break;\n\n            case 'type1:':\n            /* falls through */\n            default:\n                // NORTHPOINTER\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.5, imageHeight * 0.495327);\n                ctx.lineTo(imageWidth * 0.528037, imageHeight * 0.495327);\n                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.149532);\n                ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.495327);\n                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.495327);\n                ctx.closePath();\n                var NORTHPOINTER1_GRADIENT = ctx.createLinearGradient(0.471962 * imageWidth, 0, 0.528036 * imageWidth, 0);\n                NORTHPOINTER1_GRADIENT.addColorStop(0, pointerColor.light.getRgbaColor());\n                NORTHPOINTER1_GRADIENT.addColorStop(0.46, pointerColor.light.getRgbaColor());\n                NORTHPOINTER1_GRADIENT.addColorStop(0.47, pointerColor.medium.getRgbaColor());\n                NORTHPOINTER1_GRADIENT.addColorStop(1, pointerColor.medium.getRgbaColor());\n                ctx.fillStyle = NORTHPOINTER1_GRADIENT;\n                ctx.strokeStyle = pointerColor.dark.getRgbaColor();\n                ctx.lineWidth = 1;\n                ctx.lineCap = 'square';\n                ctx.lineJoin = 'miter';\n                ctx.fill();\n                ctx.stroke();\n\n                // SOUTHPOINTER\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.5, imageHeight * 0.504672);\n                ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.504672);\n                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.850467);\n                ctx.lineTo(imageWidth * 0.528037, imageHeight * 0.504672);\n                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.504672);\n                ctx.closePath();\n                var SOUTHPOINTER1_GRADIENT = ctx.createLinearGradient(0.471962 * imageWidth, 0, 0.528036 * imageWidth, 0);\n                SOUTHPOINTER1_GRADIENT.addColorStop(0, '#e3e5e8');\n                SOUTHPOINTER1_GRADIENT.addColorStop(0.48, '#e3e5e8');\n                SOUTHPOINTER1_GRADIENT.addColorStop(0.480099, '#abb1b8');\n                SOUTHPOINTER1_GRADIENT.addColorStop(1, '#abb1b8');\n                ctx.fillStyle = SOUTHPOINTER1_GRADIENT;\n                var strokeColor_SOUTHPOINTER = '#abb1b8';\n                ctx.strokeStyle = strokeColor_SOUTHPOINTER;\n                ctx.lineWidth = 1;\n                ctx.lineCap = 'square';\n                ctx.lineJoin = 'miter';\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            ctx.restore();\n        };\n\n        // **************   Initialization  ********************\n        // Draw all static painting code to background\n        var init = function () {\n            initialized = true;\n\n            if (frameVisible) {\n                drawRadialFrameImage(backgroundContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n            }\n\n            if (backgroundVisible) {\n                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\n                if (roseVisible) {\n                    drawRoseImage(roseContext, centerX, centerY, imageWidth, imageHeight, backgroundColor);\n                }\n\n                drawTickmarksImage(roseContext);\n            }\n\n            drawPointerImage(pointerContext, false);\n\n            if (foregroundVisible) {\n                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, true, knobType, knobStyle);\n            }\n        };\n\n        var resetBuffers = function () {\n            // Buffer for all static background painting code\n            backgroundBuffer.width = size;\n            backgroundBuffer.height = size;\n            backgroundContext = backgroundBuffer.getContext('2d');\n\n            // Buffer for symbols/rose painting code\n            roseBuffer.width = size;\n            roseBuffer.height = size;\n            roseContext = roseBuffer.getContext('2d');\n\n            // Buffer for pointer image painting code\n            pointerBuffer.width = size;\n            pointerBuffer.height = size;\n            pointerContext = pointerBuffer.getContext('2d');\n\n            // Buffer for static foreground painting code\n            foregroundBuffer.width = size;\n            foregroundBuffer.height = size;\n            foregroundContext = foregroundBuffer.getContext('2d');\n        };\n\n        //************************************ Public methods **************************************\n        this.setValue = function (newValue) {\n            newValue = parseFloat(newValue) % 360;\n            if (value !== newValue) {\n                value = newValue;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getValue = function () {\n            return value;\n        };\n\n        this.setValueAnimated = function (newValue, callback) {\n            var targetValue = newValue % 360;\n            var gauge = this;\n            var diff;\n            if (value !== targetValue) {\n                if (undefined !==  tween && tween.isPlaying) {\n                    tween.stop();\n                }\n\n                diff = getShortestAngle(value, targetValue);\n                if (rotateFace) {\n                    tween = new Tween({}, '', Tween.regularEaseInOut, value, value + diff, 2);\n                } else {\n                    tween = new Tween({}, '', Tween.elasticEaseOut, value, value + diff, 2);\n                }\n                tween.onMotionChanged = function (event) {\n                    value = event.target._pos % 360;\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tween.onMotionFinished = callback;\n                }\n\n                tween.start();\n            }\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers();\n            frameDesign = newFrameDesign;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            resetBuffers();\n            backgroundColor = newBackgroundColor;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setForegroundType = function (newForegroundType) {\n            resetBuffers();\n            foregroundType = newForegroundType;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerColor = function (newPointerColor) {\n            resetBuffers();\n            pointerColor = newPointerColor;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerType = function (newPointerType) {\n            resetBuffers();\n            pointerType = newPointerType;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setPointSymbols = function (newPointSymbols) {\n            resetBuffers();\n            pointSymbols = newPointSymbols;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init();\n            }\n\n            mainCtx.save();\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n            // Define rotation center\n            angle = HALF_PI + value * angleStep - HALF_PI;\n\n            if (backgroundVisible || frameVisible) {\n                mainCtx.drawImage(backgroundBuffer, 0, 0);\n            }\n\n            if (rotateFace) {\n                mainCtx.save();\n                mainCtx.translate(centerX, centerY);\n                mainCtx.rotate(-angle);\n                mainCtx.translate(-centerX, -centerY);\n                if (backgroundVisible) {\n                    mainCtx.drawImage(roseBuffer, 0, 0);\n                }\n                mainCtx.restore();\n            } else {\n                if (backgroundVisible) {\n                    mainCtx.drawImage(roseBuffer, 0, 0);\n                }\n                mainCtx.translate(centerX, centerY);\n                mainCtx.rotate(angle);\n                mainCtx.translate(-centerX, -centerY);\n            }\n            // Set the pointer shadow params\n            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n            mainCtx.shadowBlur = shadowOffset * 2;\n            // Draw the pointer\n            mainCtx.drawImage(pointerBuffer, 0, 0);\n            // Undo the translations & shadow settings\n            mainCtx.restore();\n\n            if (foregroundVisible) {\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n\n            repainting = false;\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var windDirection = function (canvas, parameters) {\n        parameters = parameters || {};\n        var size = (undefined === parameters.size ? 0 : parameters.size),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            pointerTypeLatest = (undefined === parameters.pointerTypeLatest ? steelseries.PointerType.TYPE1 : parameters.pointerTypeLatest),\n            pointerTypeAverage = (undefined === parameters.pointerTypeAverage ? steelseries.PointerType.TYPE8 : parameters.pointerTypeAverage),\n            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.RED : parameters.pointerColor),\n            pointerColorAverage = (undefined === parameters.pointerColorAverage ? steelseries.ColorDef.BLUE : parameters.pointerColorAverage),\n            knobType = (undefined === parameters.knobType ? steelseries.KnobType.STANDARD_KNOB : parameters.knobType),\n            knobStyle = (undefined === parameters.knobStyle ? steelseries.KnobStyle.SILVER : parameters.knobStyle),\n            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            pointSymbols = (undefined === parameters.pointSymbols ? ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'] : parameters.pointSymbols),\n            pointSymbolsVisible = (undefined === parameters.pointSymbolsVisible ? true : parameters.pointSymbolsVisible),\n            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n            degreeScale = (undefined === parameters.degreeScale ? true : parameters.degreeScale),\n            degreeScaleHalf = (undefined === parameters.degreeScaleHalf ? false : parameters.degreeScaleHalf),\n            roseVisible = (undefined === parameters.roseVisible ? false : parameters.roseVisible),\n            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.STANDARD : parameters.lcdColor),\n            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n            section = (undefined === parameters.section ? null : parameters.section),\n            area = (undefined === parameters.area ? null : parameters.area),\n            lcdTitleStrings = (undefined === parameters.lcdTitleStrings ? ['Latest', 'Average'] : parameters.lcdTitleStrings),\n            titleString = (undefined === parameters.titleString ? '' : parameters.titleString),\n            useColorLabels = (undefined === parameters.useColorLabels ? false : parameters.useColorLabels),\n            fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);\n\n        var tweenLatest;\n        var tweenAverage;\n        var valueLatest = 0;\n        var valueAverage = 0;\n        var angleStep = RAD_FACTOR;\n        var angleLatest = this.valueLatest;\n        var angleAverage = this.valueAverage;\n        var rotationOffset = -HALF_PI;\n        var angleRange = TWO_PI;\n        var range = 360;\n        var repainting = false;\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (size === 0) {\n            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        var imageWidth = size;\n        var imageHeight = size;\n\n        var centerX = imageWidth / 2;\n        var centerY = imageHeight / 2;\n\n        var lcdFontHeight = Math.floor(imageWidth / 10);\n        var stdFont = lcdFontHeight + 'px ' + stdFontName;\n        var lcdFont = lcdFontHeight + 'px ' + lcdFontName;\n        var lcdWidth = imageWidth * 0.3;\n        var lcdHeight = imageHeight * 0.12;\n        var lcdPosX = (imageWidth - lcdWidth) / 2;\n        var lcdPosY1 = imageHeight * 0.32;\n        var lcdPosY2 = imageHeight * 0.565;\n\n        var initialized = false;\n\n        // **************   Buffer creation  ********************\n        // Buffer for all static background painting code\n        var backgroundBuffer = createBuffer(size, size);\n        var backgroundContext = backgroundBuffer.getContext('2d');\n\n        // Buffer for LCD displays\n        var lcdBuffer;\n\n        // Buffer for latest pointer images painting code\n        var pointerBufferLatest = createBuffer(size, size);\n        var pointerContextLatest = pointerBufferLatest.getContext('2d');\n\n        // Buffer for average pointer image\n        var pointerBufferAverage = createBuffer(size, size);\n        var pointerContextAverage = pointerBufferAverage.getContext('2d');\n\n        // Buffer for static foreground painting code\n        var foregroundBuffer = createBuffer(size, size);\n        var foregroundContext = foregroundBuffer.getContext('2d');\n\n        // **************   Image creation  ********************\n        var drawLcdText = function (value, bLatest) {\n            mainCtx.save();\n            mainCtx.textAlign = 'center';\n            mainCtx.strokeStyle = lcdColor.textColor;\n            mainCtx.fillStyle = lcdColor.textColor;\n\n            //convert value from -180,180 range into 0-360 range\n            while (value < -180) {\n                value += 360;\n            }\n            if (!degreeScaleHalf && value < 0) {\n                value += 360;\n            }\n\n            if (degreeScaleHalf && value > 180) {\n                value = -(360 - value);\n            }\n\n            if (value >= 0) {\n                value = '00' + Math.round(value);\n                value = value.substring(value.length, value.length - 3);\n            } else {\n                value = '00' + Math.abs(Math.round(value));\n                value = '-' + value.substring(value.length, value.length - 3);\n            }\n\n            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n                mainCtx.shadowColor = 'gray';\n                mainCtx.shadowOffsetX = imageWidth * 0.007;\n                mainCtx.shadowOffsetY = imageWidth * 0.007;\n                mainCtx.shadowBlur = imageWidth * 0.007;\n            }\n            mainCtx.font = (digitalFont ? lcdFont : stdFont);\n            mainCtx.fillText(value + '\\u00B0', imageWidth / 2 + lcdWidth * 0.05, (bLatest ? lcdPosY1 : lcdPosY2) + lcdHeight * 0.5 + lcdFontHeight * 0.38, lcdWidth * 0.9);\n\n            mainCtx.restore();\n        };\n\n        var drawAreaSectionImage = function (ctx, start, stop, color, filled) {\n\n            ctx.save();\n            ctx.strokeStyle = color;\n            ctx.fillStyle = color;\n            ctx.lineWidth = imageWidth * 0.035;\n            var startAngle = (angleRange / range * start);\n            var stopAngle = startAngle + (stop - start) / (range / angleRange);\n            ctx.translate(centerX, centerY);\n            ctx.rotate(rotationOffset);\n            ctx.beginPath();\n            if (filled) {\n                ctx.moveTo(0, 0);\n                ctx.arc(0, 0, imageWidth * 0.365 - ctx.lineWidth / 2, startAngle, stopAngle, false);\n            } else {\n                ctx.arc(0, 0, imageWidth * 0.365, startAngle, stopAngle, false);\n            }\n            if (filled) {\n                ctx.moveTo(0, 0);\n                ctx.fill();\n            } else {\n                ctx.stroke();\n            }\n\n            ctx.translate(-centerX, -centerY);\n            ctx.restore();\n        };\n\n        var drawTickmarksImage = function (ctx) {\n            var OUTER_POINT = imageWidth * 0.38,\n                MAJOR_INNER_POINT = imageWidth * 0.35,\n                //MED_INNER_POINT = imageWidth * 0.355,\n                MINOR_INNER_POINT = imageWidth * 0.36,\n                TEXT_WIDTH = imageWidth * 0.1,\n                TEXT_TRANSLATE_X = imageWidth * 0.31,\n                CARDINAL_TRANSLATE_X = imageWidth * 0.36,\n                stdFont, smlFont,\n                i, val, to;\n\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n\n            ctx.save();\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.translate(centerX, centerY);\n\n            if (!degreeScale) {\n\n                stdFont = 0.12 * imageWidth + 'px serif';\n                smlFont = 0.06 * imageWidth + 'px serif';\n\n                //var angleStep = RAD_FACTOR;\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = backgroundColor.symbolColor.getRgbaColor();\n\n                for (i = 0; 360 > i; i += 2.5) {\n\n                    if (0 === i % 5) {\n                        ctx.beginPath();\n                        ctx.moveTo(imageWidth * 0.38, 0);\n                        ctx.lineTo(imageWidth * 0.36, 0);\n                        ctx.closePath();\n                        ctx.stroke();\n                    }\n\n                    // Draw the labels\n                    ctx.save();\n                    switch (i) {\n                    case 0: //E\n                        ctx.translate(imageWidth * 0.35, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = stdFont;\n                        ctx.fillText(pointSymbols[2], 0, 0);\n                        ctx.translate(-imageWidth * 0.35, 0);\n                        break;\n                    case 45: //SE\n                        ctx.translate(imageWidth * 0.29, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = smlFont;\n                        ctx.fillText(pointSymbols[3], 0, 0);\n                        ctx.translate(-imageWidth * 0.29, 0);\n                        break;\n                    case 90: //S\n                        ctx.translate(imageWidth * 0.35, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = stdFont;\n                        ctx.fillText(pointSymbols[4], 0, 0);\n                        ctx.translate(-imageWidth * 0.35, 0);\n                        break;\n                    case 135: //SW\n                        ctx.translate(imageWidth * 0.29, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = smlFont;\n                        ctx.fillText(pointSymbols[5], 0, 0);\n                        ctx.translate(-imageWidth * 0.29, 0);\n                        break;\n                    case 180: //W\n                        ctx.translate(imageWidth * 0.35, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = stdFont;\n                        ctx.fillText(pointSymbols[6], 0, 0);\n                        ctx.translate(-imageWidth * 0.35, 0);\n                        break;\n                    case 225: //NW\n                        ctx.translate(imageWidth * 0.29, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = smlFont;\n                        ctx.fillText(pointSymbols[7], 0, 0);\n                        ctx.translate(-imageWidth * 0.29, 0);\n                        break;\n                    case 270: //N\n                        ctx.translate(imageWidth * 0.35, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = stdFont;\n                        ctx.fillText(pointSymbols[0], 0, 0);\n                        ctx.translate(-imageWidth * 0.35, 0);\n                        break;\n                    case 315: //NE\n                        ctx.translate(imageWidth * 0.29, 0);\n                        ctx.rotate(HALF_PI);\n                        ctx.font = smlFont;\n                        ctx.fillText(pointSymbols[1], 0, 0);\n                        ctx.translate(-imageWidth * 0.29, 0);\n                        break;\n                    }\n                    ctx.restore();\n\n                    if (roseVisible && (0 === i || 22.5 === i || 45 === i || 67.5 === i || 90 === i || 112.5 === i || 135 === i || 157.5 === i || 180 === i || 202.5 === i || 225 === i || 247.5 === i || 270 === i || 292.5 === i || 315 === i || 337.5 === i || 360 === i)) {\n                        // ROSE_LINE\n                        ctx.save();\n                        ctx.beginPath();\n                        // indent the 16 half quadrant lines a bit for visual effect\n                        if (i % 45) {\n                            ctx.moveTo(imageWidth * 0.29, 0);\n                        } else {\n                            ctx.moveTo(imageWidth * 0.38, 0);\n                        }\n                        ctx.lineTo(imageWidth * 0.1, 0);\n                        ctx.closePath();\n                        ctx.restore();\n                        ctx.stroke();\n                    }\n                    ctx.rotate(angleStep * 2.5);\n                }\n            } else {\n                stdFont = Math.floor(0.1 * imageWidth) + 'px serif bold';\n                smlFont = Math.floor(imageWidth * 0.04) + 'px ' + stdFontName;\n\n                ctx.rotate(angleStep * 5);\n                for (i = 5; 360 >= i; i += 5) {\n                    // Draw the labels\n                    ctx.save();\n                    if (pointSymbolsVisible) {\n\n                        switch (i) {\n                        case 360:\n                            ctx.translate(CARDINAL_TRANSLATE_X, 0);\n                            ctx.rotate(HALF_PI);\n                            ctx.font = stdFont;\n                            ctx.fillText(pointSymbols[2], 0, 0, TEXT_WIDTH);\n                            ctx.translate(-CARDINAL_TRANSLATE_X, 0);\n                            break;\n                        case 90:\n                            ctx.translate(CARDINAL_TRANSLATE_X, 0);\n                            ctx.rotate(HALF_PI);\n                            ctx.font = stdFont;\n                            ctx.fillText(pointSymbols[4], 0, 0, TEXT_WIDTH);\n                            ctx.translate(-CARDINAL_TRANSLATE_X, 0);\n                            break;\n                        case 180:\n                            ctx.translate(CARDINAL_TRANSLATE_X, 0);\n                            ctx.rotate(HALF_PI);\n                            ctx.font = stdFont;\n                            ctx.fillText(pointSymbols[6], 0, 0, TEXT_WIDTH);\n                            ctx.translate(-CARDINAL_TRANSLATE_X, 0);\n                            break;\n                        case 270:\n                            ctx.translate(CARDINAL_TRANSLATE_X, 0);\n                            ctx.rotate(HALF_PI);\n                            ctx.font = stdFont;\n                            ctx.fillText(pointSymbols[0], 0, 0, TEXT_WIDTH);\n                            ctx.translate(-CARDINAL_TRANSLATE_X, 0);\n                            break;\n\n                        case 5:\n                        case 85:\n                        case 95:\n                        case 175:\n                        case 185:\n                        case 265:\n                        case 275:\n                        case 355:\n                            //leave room for ordinal labels\n                            break;\n\n                        default:\n                            if ((i + 90) % 20) {\n                                ctx.lineWidth = ((i + 90) % 5) ? 1.5 : 1;\n                                ctx.beginPath();\n                                ctx.moveTo(OUTER_POINT, 0);\n                                to = (i + 90) % 10 ? MINOR_INNER_POINT : MAJOR_INNER_POINT;\n                                ctx.lineTo(to, 0);\n                                ctx.closePath();\n                                ctx.stroke();\n                            } else {\n                                ctx.lineWidth = 1.5;\n                                ctx.beginPath();\n                                ctx.moveTo(OUTER_POINT, 0);\n                                ctx.lineTo(MAJOR_INNER_POINT, 0);\n                                ctx.closePath();\n                                ctx.stroke();\n                                val = (i + 90) % 360;\n                                ctx.translate(TEXT_TRANSLATE_X, 0);\n                                ctx.rotate(HALF_PI);\n                                ctx.font = smlFont;\n                                ctx.fillText(('0'.substring(val >= 100) + val), 0, 0, TEXT_WIDTH);\n                                ctx.translate(-TEXT_TRANSLATE_X, 0);\n                            }\n                        }\n                    } else {\n\n                        if ((i + 90) % 20) {\n                            ctx.lineWidth = ((i + 90) % 5) ? 1.5 : 1;\n                            ctx.beginPath();\n                            ctx.moveTo(OUTER_POINT, 0);\n                            to = (i + 90) % 10 ? MINOR_INNER_POINT : MAJOR_INNER_POINT;\n                            ctx.lineTo(to, 0);\n                            ctx.closePath();\n                            ctx.stroke();\n                        } else {\n                            ctx.lineWidth = 1.5;\n                            ctx.beginPath();\n                            ctx.moveTo(OUTER_POINT, 0);\n                            ctx.lineTo(MAJOR_INNER_POINT, 0);\n                            ctx.closePath();\n                            ctx.stroke();\n                            val = (i + 90) % 360;\n                            if (degreeScaleHalf) {\n                                //invert 180-360\n                                if (val > 180) {\n                                    val = -(360 - val);\n                                }\n                            }\n                            ctx.translate(TEXT_TRANSLATE_X, 0);\n                            ctx.rotate(HALF_PI);\n                            ctx.font = smlFont;\n                            ctx.fillText(val, 0, 0, TEXT_WIDTH);\n                            ctx.translate(-TEXT_TRANSLATE_X, 0);\n                        }\n                    }\n                    ctx.restore();\n                    ctx.rotate(angleStep * 5);\n                }\n\n            }\n            ctx.translate(-centerX, -centerY);\n            ctx.restore();\n        };\n\n        var drawLcdTitles = function (ctx) {\n            if (lcdTitleStrings.length > 0) {\n                ctx.save();\n                ctx.textAlign = 'center';\n                ctx.textBaseline = 'middle';\n                ctx.fillStyle = (useColorLabels ? pointerColor.medium.getRgbaColor() : backgroundColor.labelColor.getRgbaColor());\n                ctx.font = 0.040 * imageWidth + 'px ' + stdFontName;\n                ctx.fillText(lcdTitleStrings[0], imageWidth / 2, imageHeight * 0.29, imageWidth * 0.3);\n                ctx.fillStyle = (useColorLabels ? pointerColorAverage.medium.getRgbaColor() : backgroundColor.labelColor.getRgbaColor());\n                ctx.fillText(lcdTitleStrings[1], imageWidth / 2, imageHeight * 0.71, imageWidth * 0.3);\n                if (titleString.length > 0) {\n                    ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n                    ctx.font = 0.0467 * imageWidth + 'px ' + stdFontName;\n                    ctx.fillText(titleString, imageWidth / 2, imageHeight * 0.5, imageWidth * 0.3);\n                }\n            }\n        };\n\n        // **************   Initialization  ********************\n        // Draw all static painting code to background\n\n        var init = function (parameters) {\n            parameters = parameters || {};\n            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n            var drawPointer = (undefined === parameters.pointer ? false : parameters.pointer);\n            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\n            initialized = true;\n\n            if (drawBackground && frameVisible) {\n                drawRadialFrameImage(backgroundContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n            }\n\n            if (drawBackground && backgroundVisible) {\n                // Create background in background buffer (backgroundBuffer)\n                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\n                // Create custom layer in background buffer (backgroundBuffer)\n                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\n                // Create section in background buffer (backgroundBuffer)\n                if (null !== section && 0 < section.length) {\n                    var sectionIndex = section.length;\n                    do {\n                        sectionIndex--;\n                        drawAreaSectionImage(backgroundContext, section[sectionIndex].start, section[sectionIndex].stop, section[sectionIndex].color, false);\n                    }\n                    while (0 < sectionIndex);\n                }\n\n                // Create area in background buffer (backgroundBuffer)\n                if (null !== area && 0 < area.length) {\n                    var areaIndex = area.length;\n                    do {\n                        areaIndex--;\n                        drawAreaSectionImage(backgroundContext, area[areaIndex].start, area[areaIndex].stop, area[areaIndex].color, true);\n                    }\n                    while (0 < areaIndex);\n                }\n\n                drawTickmarksImage(backgroundContext);\n            }\n\n            if (drawBackground && roseVisible) {\n                drawRoseImage(backgroundContext, centerX, centerY, imageWidth, imageHeight, backgroundColor);\n            }\n\n            // Create lcd background if selected in background buffer (backgroundBuffer)\n            if (drawBackground && lcdVisible) {\n                lcdBuffer = createLcdBackgroundImage(lcdWidth, lcdHeight, lcdColor);\n                backgroundContext.drawImage(lcdBuffer, lcdPosX, lcdPosY1);\n                backgroundContext.drawImage(lcdBuffer, lcdPosX, lcdPosY2);\n                // Create title in background buffer (backgroundBuffer)\n                drawLcdTitles(backgroundContext);\n            }\n\n            if (drawPointer) {\n                drawPointerImage(pointerContextAverage, imageWidth, pointerTypeAverage, pointerColorAverage, backgroundColor.labelColor);\n                drawPointerImage(pointerContextLatest, imageWidth, pointerTypeLatest, pointerColor, backgroundColor.labelColor);\n            }\n\n            if (drawForeground && foregroundVisible) {\n                var knobVisible = (pointerTypeLatest.type === 'type15' || pointerTypeLatest.type === 'type16' ? false : true);\n                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, knobVisible, knobType, knobStyle);\n            }\n        };\n\n        var resetBuffers = function (buffers) {\n            buffers = buffers || {};\n            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n            var resetPointer = (undefined === buffers.pointer ? false : buffers.pointer);\n            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\n            // Buffer for all static background painting code\n            if (resetBackground) {\n                backgroundBuffer.width = size;\n                backgroundBuffer.height = size;\n                backgroundContext = backgroundBuffer.getContext('2d');\n            }\n            // Buffers for pointer image painting code\n            if (resetPointer) {\n                pointerBufferLatest.width = size;\n                pointerBufferLatest.height = size;\n                pointerContextLatest = pointerBufferLatest.getContext('2d');\n\n                pointerBufferAverage.width = size;\n                pointerBufferAverage.height = size;\n                pointerContextAverage = pointerBufferAverage.getContext('2d');\n            }\n            // Buffer for static foreground painting code\n            if (resetForeground) {\n                foregroundBuffer.width = size;\n                foregroundBuffer.height = size;\n                foregroundContext = foregroundBuffer.getContext('2d');\n            }\n        };\n\n        //************************************ Public methods **************************************\n        this.setValueLatest = function (newValue) {\n            // Actually need to handle 0-360 rather than 0-359\n            // 1-360 are used for directions\n            // 0 is used as a special case to indicate 'calm'\n            newValue = parseFloat(newValue);\n            newValue = newValue === 360 ? 360 : newValue % 360;\n            if (valueLatest !== newValue) {\n                valueLatest = newValue;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getValueLatest = function () {\n            return valueLatest;\n        };\n\n        this.setValueAverage = function (newValue) {\n            // Actually need to handle 0-360 rather than 0-359\n            // 1-360 are used for directions\n            // 0 is used as a special case to indicate 'calm'\n            newValue = parseFloat(newValue);\n            newValue = newValue === 360 ? 360 : newValue % 360;\n            if (valueAverage !== newValue) {\n                valueAverage = newValue;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getValueAverage = function () {\n            return valueAverage;\n        };\n\n        this.setValueAnimatedLatest = function (newValue, callback) {\n            var targetValue,\n                gauge = this,\n                diff,\n                time;\n            // Actually need to handle 0-360 rather than 0-359\n            // 1-360 are used for directions\n            // 0 is used as a special case to indicate 'calm'\n            newValue = parseFloat(newValue);\n            targetValue = (newValue === 360 ? 360 : newValue % 360);\n\n            if (valueLatest !== targetValue) {\n                if (undefined !== tweenLatest && tweenLatest.isPlaying) {\n                    tweenLatest.stop();\n                }\n\n                diff = getShortestAngle(valueLatest, targetValue);\n\n                if (diff !== 0) { // 360 - 0 is a diff of zero\n                    time = fullScaleDeflectionTime * Math.abs(diff) / 180;\n                    time = Math.max(time, fullScaleDeflectionTime / 5);\n                    tweenLatest = new Tween({}, '', Tween.regularEaseInOut, valueLatest, valueLatest + diff, time);\n                    tweenLatest.onMotionChanged = function (event) {\n                        valueLatest = event.target._pos === 360 ? 360 : event.target._pos % 360;\n                        if (!repainting) {\n                            repainting = true;\n                            requestAnimFrame(gauge.repaint);\n                        }\n                    };\n\n                    tweenLatest.onMotionFinished = function (event) {\n                        valueLatest = event.target._pos === 360 ? 360 : event.target._pos % 360;\n                        if (!repainting) {\n                            repainting = true;\n                            requestAnimFrame(gauge.repaint);\n                        }\n                        // do we have a callback function to process?\n                        if (callback && typeof(callback) === \"function\") {\n                            callback();\n                        }\n                    };\n\n                    tweenLatest.start();\n                } else {\n                    // target different from current, but diff is zero (0 -> 360 for instance), so just repaint\n                    valueLatest = targetValue;\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                }\n            }\n            return this;\n        };\n\n        this.setValueAnimatedAverage = function (newValue, callback) {\n            var targetValue,\n                gauge = this,\n                diff, time;\n            // Actually need to handle 0-360 rather than 0-359\n            // 1-360 are used for directions\n            // 0 is used as a special case to indicate 'calm'\n            newValue = parseFloat(newValue);\n            targetValue = (newValue === 360 ? 360 : newValue % 360);\n            if (valueAverage !== newValue) {\n                if (undefined !== tweenAverage && tweenAverage.isPlaying) {\n                    tweenAverage.stop();\n                }\n\n                diff = getShortestAngle(valueAverage, targetValue);\n                if (diff !== 0) { // 360 - 0 is a diff of zero\n                    time = fullScaleDeflectionTime * Math.abs(diff) / 180;\n                    time = Math.max(time, fullScaleDeflectionTime / 5);\n                    tweenAverage = new Tween({}, '', Tween.regularEaseInOut, valueAverage, valueAverage + diff, time);\n                    tweenAverage.onMotionChanged = function (event) {\n                        valueAverage = event.target._pos === 360 ? 360 : event.target._pos % 360;\n                        if (!repainting) {\n                            repainting = true;\n                            requestAnimFrame(gauge.repaint);\n                        }\n                    };\n\n                    tweenAverage.onMotionFinished = function (event) {\n                        valueLatest = event.target._pos === 360 ? 360 : event.target._pos % 360;\n                        if (!repainting) {\n                            repainting = true;\n                            requestAnimFrame(gauge.repaint);\n                        }\n                        // do we have a callback function to process?\n                        if (callback && typeof(callback) === \"function\") {\n                            callback();\n                        }\n                    };\n                    \n                    tweenAverage.start();\n                } else {\n                    // target different from current, but diff is zero (0 -> 360 for instance), so just repaint\n                    valueAverage = targetValue;\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                }\n            }\n            return this;\n        };\n\n        this.setArea = function (areaVal) {\n            area = areaVal;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setSection = function (areaSec) {\n            section = areaSec;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            frameDesign = newFrameDesign;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            backgroundColor = newBackgroundColor;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setForegroundType = function (newForegroundType) {\n            resetBuffers({foreground: true});\n            foregroundType = newForegroundType;\n            init({foreground: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerColor = function (newPointerColor) {\n            resetBuffers({pointer: true});\n            pointerColor = newPointerColor;\n            init({pointer: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerColorAverage = function (newPointerColor) {\n            resetBuffers({pointer: true});\n            pointerColorAverage = newPointerColor;\n            init({pointer: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerType = function (newPointerType) {\n            pointerTypeLatest = newPointerType;\n            resetBuffers({pointer: true,\n                          foreground: true\n                         });\n            init({pointer: true,\n                  foreground: true\n                  });\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerTypeAverage = function (newPointerType) {\n            pointerTypeAverage = newPointerType;\n            resetBuffers({pointer: true,\n                          foreground: true\n                         });\n            init({pointer: true,\n                  foreground: true\n                  });\n            this.repaint();\n            return this;\n        };\n\n        this.setPointSymbols = function (newPointSymbols) {\n            pointSymbols = newPointSymbols;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdColor = function (newLcdColor) {\n            lcdColor = newLcdColor;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdTitleStrings = function (titles) {\n            lcdTitleStrings = titles;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init({frame: true,\n                      background: true,\n                      led: true,\n                      pointer: true,\n                      foreground: true});\n            }\n\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            if (frameVisible || backgroundVisible) {\n                mainCtx.drawImage(backgroundBuffer, 0, 0);\n            }\n\n            // Draw lcd display\n            if (lcdVisible) {\n                drawLcdText(valueLatest, true);\n                drawLcdText(valueAverage, false);\n            }\n\n            // Define rotation angle\n            angleAverage = valueAverage * angleStep;\n\n            // we have to draw to a rotated temporary image area so we can translate in\n            // absolute x, y values when drawing to main context\n            var shadowOffset = imageWidth * 0.006;\n\n            // Define rotation center\n            mainCtx.save();\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate(angleAverage);\n            mainCtx.translate(-centerX, -centerY);\n            // Set the pointer shadow params\n            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n            mainCtx.shadowBlur = shadowOffset * 2;\n            // Draw the pointer\n            mainCtx.drawImage(pointerBufferAverage, 0, 0);\n            // Define rotation angle difference for average pointer\n            angleLatest = valueLatest * angleStep  - angleAverage;\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate(angleLatest);\n            mainCtx.translate(-centerX, -centerY);\n            mainCtx.drawImage(pointerBufferLatest, 0, 0);\n            mainCtx.restore();\n\n            if (foregroundVisible) {\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n\n            repainting = false;\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var horizon = function (canvas, parameters) {\n        parameters = parameters || {};\n        var size = (undefined === parameters.size ? 0 : parameters.size),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.WHITE : parameters.pointerColor);\n\n        var tweenRoll;\n        var tweenPitch;\n        var repainting = false;\n        var roll = 0;\n        var pitch = 0;\n        var pitchPixel = (PI * size) / 360;\n        var pitchOffset = 0;\n        var upsidedown = false;\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (size === 0) {\n            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        var imageWidth = size;\n        var imageHeight = size;\n\n        var centerX = imageWidth / 2;\n        var centerY = imageHeight / 2;\n\n        var initialized = false;\n\n        // **************   Buffer creation  ********************\n        // Buffer for all static background painting code\n        var backgroundBuffer = createBuffer(size, size);\n        var backgroundContext = backgroundBuffer.getContext('2d');\n\n        // Buffer for pointer image painting code\n        var valueBuffer = createBuffer(size, size * PI);\n        var valueContext = valueBuffer.getContext('2d');\n\n        // Buffer for indicator painting code\n        var indicatorBuffer = createBuffer(size * 0.037383, size * 0.056074);\n        var indicatorContext = indicatorBuffer.getContext('2d');\n\n        // Buffer for static foreground painting code\n        var foregroundBuffer = createBuffer(size, size);\n        var foregroundContext = foregroundBuffer.getContext('2d');\n\n        // **************   Image creation  ********************\n        var drawHorizonBackgroundImage = function (ctx) {\n            ctx.save();\n\n            var imgWidth = size;\n            var imgHeight = size * PI;\n            var y;\n\n            // HORIZON\n            ctx.beginPath();\n            ctx.rect(0, 0, imgWidth, imgHeight);\n            ctx.closePath();\n            var HORIZON_GRADIENT = ctx.createLinearGradient(0, 0, 0, imgHeight);\n            HORIZON_GRADIENT.addColorStop(0, '#7fd5f0');\n            HORIZON_GRADIENT.addColorStop(0.5, '#7fd5f0');\n            HORIZON_GRADIENT.addColorStop(0.5, '#3c4439');\n            HORIZON_GRADIENT.addColorStop(1, '#3c4439');\n            ctx.fillStyle = HORIZON_GRADIENT;\n            ctx.fill();\n\n            ctx.lineWidth = 1;\n            var stepSizeY = imgHeight / 360 * 5;\n            var stepTen = false;\n            var step = 10;\n\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            var fontSize = imgWidth * 0.04;\n            ctx.font = fontSize + 'px ' + stdFontName;\n            ctx.fillStyle = '#37596e';\n            for (y = imgHeight / 2 - stepSizeY; y > 0; y -= stepSizeY) {\n                if (step <= 90) {\n                    if (stepTen) {\n                        ctx.fillText(step, (imgWidth - (imgWidth * 0.2)) / 2 - 8, y, imgWidth * 0.375);\n                        ctx.fillText(step, imgWidth - (imgWidth - (imgWidth * 0.2)) / 2 + 8, y, imgWidth * 0.375);\n                        ctx.beginPath();\n                        ctx.moveTo((imgWidth - (imgWidth * 0.2)) / 2, y);\n                        ctx.lineTo(imgWidth - (imgWidth - (imgWidth * 0.2)) / 2, y);\n                        ctx.closePath();\n                        step += 10;\n                    } else {\n                        ctx.beginPath();\n                        ctx.moveTo((imgWidth - (imgWidth * 0.1)) / 2, y);\n                        ctx.lineTo(imgWidth - (imgWidth - (imgWidth * 0.1)) / 2, y);\n                        ctx.closePath();\n                    }\n                    ctx.stroke();\n                }\n                stepTen ^= true;\n            }\n            stepTen = false;\n            step = 10;\n            ctx.strokeStyle = '#FFFFFF';\n            ctx.lineWidth = 1.5;\n            ctx.beginPath();\n            ctx.moveTo(0, imgHeight / 2);\n            ctx.lineTo(imgWidth, imgHeight / 2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.fillStyle = '#FFFFFF';\n            ctx.lineWidth = 1;\n            for (y = imgHeight / 2 + stepSizeY; y <= imgHeight; y += stepSizeY) {\n                if (step <= 90) {\n                    if (stepTen) {\n                        ctx.fillText(-step, (imgWidth - (imgWidth * 0.2)) / 2 - 8, y, imgWidth * 0.375);\n                        ctx.fillText(-step, imgWidth - (imgWidth - (imgWidth * 0.2)) / 2 + 8, y, imgWidth * 0.375);\n                        ctx.beginPath();\n                        ctx.moveTo((imgWidth - (imgWidth * 0.2)) / 2, y);\n                        ctx.lineTo(imgWidth - (imgWidth - (imgWidth * 0.2)) / 2, y);\n                        ctx.closePath();\n                        step += 10;\n                    } else {\n                        ctx.beginPath();\n                        ctx.moveTo((imgWidth - (imgWidth * 0.1)) / 2, y);\n                        ctx.lineTo(imgWidth - (imgWidth - (imgWidth * 0.1)) / 2, y);\n                        ctx.closePath();\n                    }\n                    ctx.stroke();\n                }\n                stepTen ^= true;\n            }\n\n            ctx.restore();\n        };\n\n        var drawHorizonForegroundImage = function (ctx) {\n            ctx.save();\n\n            ctx.fillStyle = pointerColor.light.getRgbaColor();\n\n            // CENTERINDICATOR\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.476635, imageHeight * 0.5);\n            ctx.bezierCurveTo(imageWidth * 0.476635, imageHeight * 0.514018, imageWidth * 0.485981, imageHeight * 0.523364, imageWidth * 0.5, imageHeight * 0.523364);\n            ctx.bezierCurveTo(imageWidth * 0.514018, imageHeight * 0.523364, imageWidth * 0.523364, imageHeight * 0.514018, imageWidth * 0.523364, imageHeight * 0.5);\n            ctx.bezierCurveTo(imageWidth * 0.523364, imageHeight * 0.485981, imageWidth * 0.514018, imageHeight * 0.476635, imageWidth * 0.5, imageHeight * 0.476635);\n            ctx.bezierCurveTo(imageWidth * 0.485981, imageHeight * 0.476635, imageWidth * 0.476635, imageHeight * 0.485981, imageWidth * 0.476635, imageHeight * 0.5);\n            ctx.closePath();\n            ctx.moveTo(imageWidth * 0.415887, imageHeight * 0.504672);\n            ctx.lineTo(imageWidth * 0.415887, imageHeight * 0.495327);\n            ctx.bezierCurveTo(imageWidth * 0.415887, imageHeight * 0.495327, imageWidth * 0.467289, imageHeight * 0.495327, imageWidth * 0.467289, imageHeight * 0.495327);\n            ctx.bezierCurveTo(imageWidth * 0.471962, imageHeight * 0.481308, imageWidth * 0.481308, imageHeight * 0.471962, imageWidth * 0.495327, imageHeight * 0.467289);\n            ctx.bezierCurveTo(imageWidth * 0.495327, imageHeight * 0.467289, imageWidth * 0.495327, imageHeight * 0.415887, imageWidth * 0.495327, imageHeight * 0.415887);\n            ctx.lineTo(imageWidth * 0.504672, imageHeight * 0.415887);\n            ctx.bezierCurveTo(imageWidth * 0.504672, imageHeight * 0.415887, imageWidth * 0.504672, imageHeight * 0.467289, imageWidth * 0.504672, imageHeight * 0.467289);\n            ctx.bezierCurveTo(imageWidth * 0.518691, imageHeight * 0.471962, imageWidth * 0.528037, imageHeight * 0.481308, imageWidth * 0.532710, imageHeight * 0.495327);\n            ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.495327, imageWidth * 0.584112, imageHeight * 0.495327, imageWidth * 0.584112, imageHeight * 0.495327);\n            ctx.lineTo(imageWidth * 0.584112, imageHeight * 0.504672);\n            ctx.bezierCurveTo(imageWidth * 0.584112, imageHeight * 0.504672, imageWidth * 0.532710, imageHeight * 0.504672, imageWidth * 0.532710, imageHeight * 0.504672);\n            ctx.bezierCurveTo(imageWidth * 0.528037, imageHeight * 0.518691, imageWidth * 0.518691, imageHeight * 0.532710, imageWidth * 0.5, imageHeight * 0.532710);\n            ctx.bezierCurveTo(imageWidth * 0.481308, imageHeight * 0.532710, imageWidth * 0.471962, imageHeight * 0.518691, imageWidth * 0.467289, imageHeight * 0.504672);\n            ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.504672, imageWidth * 0.415887, imageHeight * 0.504672, imageWidth * 0.415887, imageHeight * 0.504672);\n            ctx.closePath();\n            ctx.fill();\n\n            // Tickmarks\n            var step = 5;\n            var stepRad = 5 * RAD_FACTOR;\n            ctx.translate(centerX, centerY);\n            ctx.rotate(-HALF_PI);\n            ctx.translate(-centerX, -centerY);\n            var angle;\n            for (angle = -90; angle <= 90; angle += step) {\n                if (angle % 45 === 0 || angle === 0) {\n                    ctx.strokeStyle = pointerColor.medium.getRgbaColor();\n                    ctx.lineWidth = 2;\n                    ctx.beginPath();\n                    ctx.moveTo(imageWidth * 0.5, imageHeight * 0.088785);\n                    ctx.lineTo(imageWidth * 0.5, imageHeight * 0.113);\n                    ctx.closePath();\n                    ctx.stroke();\n                } else if (angle % 15 === 0) {\n                    ctx.strokeStyle = '#FFFFFF';\n                    ctx.lineWidth = 1;\n                    ctx.beginPath();\n                    ctx.moveTo(imageWidth * 0.5, imageHeight * 0.088785);\n                    ctx.lineTo(imageWidth * 0.5, imageHeight * 0.103785);\n                    ctx.closePath();\n                    ctx.stroke();\n                } else {\n                    ctx.strokeStyle = '#FFFFFF';\n                    ctx.lineWidth = 0.5;\n                    ctx.beginPath();\n                    ctx.moveTo(imageWidth * 0.5, imageHeight * 0.088785);\n                    ctx.lineTo(imageWidth * 0.5, imageHeight * 0.093785);\n                    ctx.closePath();\n                    ctx.stroke();\n                }\n                ctx.translate(centerX, centerY);\n                ctx.rotate(stepRad, centerX, centerY);\n                ctx.translate(-centerX, -centerY);\n            }\n\n            ctx.restore();\n        };\n\n        var drawIndicatorImage = function (ctx) {\n            ctx.save();\n\n            var imgWidth = imageWidth * 0.037383;\n            var imgHeight = imageHeight * 0.056074;\n\n            ctx.beginPath();\n            ctx.moveTo(imgWidth * 0.5, 0);\n            ctx.lineTo(0, imgHeight);\n            ctx.lineTo(imgWidth, imgHeight);\n            ctx.closePath();\n\n            ctx.fillStyle = pointerColor.light.getRgbaColor();\n            ctx.fill();\n            ctx.strokeStyle = pointerColor.medium.getRgbaColor();\n            ctx.stroke();\n\n            ctx.restore();\n        };\n\n        // **************   Initialization  ********************\n        // Draw all static painting code to background\n        var init = function () {\n            initialized = true;\n\n            if (frameVisible) {\n                drawRadialFrameImage(backgroundContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n            }\n\n            drawHorizonBackgroundImage(valueContext);\n\n            drawIndicatorImage(indicatorContext);\n\n            drawHorizonForegroundImage(foregroundContext);\n\n            if (foregroundVisible) {\n                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, true, knobType, knobStyle, gaugeType);\n            }\n        };\n\n        var resetBuffers = function () {\n            // Buffer for all static background painting code\n            backgroundBuffer.width = size;\n            backgroundBuffer.height = size;\n            backgroundContext = backgroundBuffer.getContext('2d');\n\n            // Buffer for pointer image painting code\n            valueBuffer.width = size;\n            valueBuffer.height = size * PI;\n            valueContext = valueBuffer.getContext('2d');\n\n            // Buffer for the indicator\n            indicatorBuffer.width = size * 0.037383;\n            indicatorBuffer.height = size * 0.056074;\n            indicatorContext = indicatorBuffer.getContext('2d');\n\n            // Buffer for static foreground painting code\n            foregroundBuffer.width = size;\n            foregroundBuffer.height = size;\n            foregroundContext = foregroundBuffer.getContext('2d');\n        };\n\n        //************************************ Public methods **************************************\n        this.setRoll = function (newRoll) {\n            newRoll = parseFloat(newRoll) % 360;\n            if (roll !== newRoll) {\n                roll = newRoll;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getRoll = function () {\n            return roll;\n        };\n\n        this.setRollAnimated = function (newRoll, callback) {\n            var gauge = this;\n            newRoll = parseFloat(newRoll) % 360;\n            if (roll !== newRoll) {\n\n                if (undefined !== tweenRoll && tweenRoll.isPlaying) {\n                    tweenRoll.stop();\n                }\n\n                tweenRoll = new Tween({}, '', Tween.regularEaseInOut, roll, newRoll, 1);\n\n                tweenRoll.onMotionChanged = function (event) {\n                    roll = event.target._pos;\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tweenRoll.onMotionFinished = callback;\n                }\n\n                tweenRoll.start();\n            }\n            return this;\n        };\n\n        this.setPitch = function (newPitch) {\n            // constrain to range -180..180\n            // normal range -90..90 and -180..-90/90..180 indicate inverted\n            newPitch = ((parseFloat(newPitch) + 180 - pitchOffset) % 360) - 180;\n            //pitch = -(newPitch + pitchOffset) % 180;\n            if (pitch !== newPitch) {\n                pitch = newPitch;\n                if (pitch > 90) {\n                    pitch = 90 - (pitch - 90);\n                    if (!upsidedown) {\n                        this.setRoll(roll - 180);\n                    }\n                    upsidedown = true;\n                } else if (pitch < -90) {\n                    pitch = -90 + (-90 - pitch);\n                    if (!upsidedown) {\n                        this.setRoll(roll + 180);\n                    }\n                    upsidedown = true;\n                } else {\n                    upsidedown = false;\n                }\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getPitch = function () {\n            return pitch;\n        };\n\n        this.setPitchAnimated = function (newPitch, callback) {\n            var gauge = this;\n            newPitch = parseFloat(newPitch);\n            // perform all range checking in setPitch()\n            if (pitch !== newPitch) {\n                if (undefined !== tweenPitch && tweenPitch.isPlaying) {\n                    tweenPitch.stop();\n                }\n                tweenPitch = new Tween({}, '', Tween.regularEaseInOut, pitch, newPitch, 1);\n                tweenPitch.onMotionChanged = function (event) {\n                    pitch = event.target._pos;\n                    if (pitch > 90) {\n                        pitch = 90 - (pitch - 90);\n                        if (!upsidedown) {\n                            this.setRoll(roll - 180);\n                        }\n                        upsidedown = true;\n                    } else if (pitch < -90) {\n                        pitch = -90 + (-90 - pitch);\n                        if (!upsidedown) {\n                            this.setRoll(roll + 180);\n                        }\n                        upsidedown = true;\n                    } else {\n                        upsidedown = false;\n                    }\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                    gauge.setPitch(event.target._pos);\n                };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tweenPitch.onMotionFinished = callback;\n                }\n\n                tweenPitch.start();\n            }\n            return this;\n        };\n\n        this.setPitchOffset = function (newPitchOffset) {\n            pitchOffset = parseFloat(newPitchOffset);\n            this.repaint();\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers();\n            frameDesign = newFrameDesign;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.setForegroundType = function (newForegroundType) {\n            resetBuffers();\n            foregroundType = newForegroundType;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init();\n            }\n\n            mainCtx.save();\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\n            mainCtx.save();\n\n            // Set the clipping area\n            mainCtx.beginPath();\n            mainCtx.arc(centerX, centerY, imageWidth * 0.831775 / 2, 0, TWO_PI, true);\n            mainCtx.closePath();\n            mainCtx.clip();\n\n            // Rotate around roll\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate(-(roll * RAD_FACTOR));\n            mainCtx.translate(-centerX, 0);\n            // Translate about dive\n            mainCtx.translate(0, (pitch * pitchPixel));\n\n            // Draw horizon\n            mainCtx.drawImage(valueBuffer, 0, -valueBuffer.height / 2);\n\n            // Draw the scale and angle indicator\n            mainCtx.translate(0, -(pitch * pitchPixel) - centerY);\n            mainCtx.drawImage(indicatorBuffer, (imageWidth * 0.5 - indicatorBuffer.width / 2), (imageWidth * 0.107476));\n            mainCtx.restore();\n\n            mainCtx.drawImage(foregroundBuffer, 0, 0);\n\n            mainCtx.restore();\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var led = function (canvas, parameters) {\n        parameters = parameters || {};\n        var size = (undefined === parameters.size ? 0 : parameters.size),\n            ledColor = (undefined === parameters.ledColor ? steelseries.LedColor.RED_LED : parameters.ledColor);\n\n        var ledBlinking = false;\n        var ledTimerId = 0;\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (size === 0) {\n            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        var initialized = false;\n\n        // Buffer for led on painting code\n        var ledBufferOn = doc.createElement('canvas');\n        ledBufferOn.width = size;\n        ledBufferOn.height = size;\n        var ledContextOn = ledBufferOn.getContext('2d');\n\n        // Buffer for led off painting code\n        var ledBufferOff = doc.createElement('canvas');\n        ledBufferOff.width = size;\n        ledBufferOff.height = size;\n        var ledContextOff = ledBufferOff.getContext('2d');\n\n        // Buffer for current led painting code\n        var ledBuffer = ledBufferOff;\n\n        var init = function () {\n            initialized = true;\n\n            // Draw LED ON in ledBuffer_ON\n            ledContextOn.clearRect(0, 0, ledContextOn.canvas.width, ledContextOn.canvas.height);\n            ledContextOn.drawImage(createLedImage(size, 1, ledColor), 0, 0);\n\n            // Draw LED ON in ledBuffer_OFF\n            ledContextOff.clearRect(0, 0, ledContextOff.canvas.width, ledContextOff.canvas.height);\n            ledContextOff.drawImage(createLedImage(size, 0, ledColor), 0, 0);\n        };\n\n        this.toggleLed = function () {\n            if (ledBuffer === ledBufferOn) {\n                ledBuffer = ledBufferOff;\n            } else {\n                ledBuffer = ledBufferOn;\n            }\n            repaint();\n            return this;\n        };\n\n        this.setLedColor = function (newColor) {\n            ledColor = newColor;\n            initialized = false;\n            repaint();\n            return this;\n        };\n\n        this.setLedOnOff = function (on) {\n            if (!!on) {\n                ledBuffer = ledBufferOn;\n            } else {\n                ledBuffer = ledBufferOff;\n            }\n            repaint();\n            return this;\n        };\n\n        this.blink = function (blink) {\n            if (!!blink) {\n                if (!ledBlinking) {\n                    ledTimerId = setInterval(this.toggleLed, 1000);\n                    ledBlinking = true;\n                }\n            } else {\n                if (ledBlinking) {\n                    clearInterval(ledTimerId);\n                    ledBlinking = false;\n                    ledBuffer = ledBufferOff;\n                }\n            }\n            return this;\n        };\n\n        var repaint = function () {\n            if (!initialized) {\n                init();\n            }\n\n            mainCtx.save();\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            mainCtx.drawImage(ledBuffer, 0, 0);\n\n            mainCtx.restore();\n        };\n\n        repaint();\n\n        return this;\n    };\n\n    var clock = function (canvas, parameters) {\n        parameters = parameters || {};\n        var size = (undefined === parameters.size ? 0 : parameters.size),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            pointerType = (undefined === parameters.pointerType ? steelseries.PointerType.TYPE1 : parameters.pointerType),\n            pointerColor = (undefined === parameters.pointerColor ? (pointerType === steelseries.PointerType.TYPE1 ? steelseries.ColorDef.GRAY : steelseries.ColorDef.BLACK) : parameters.pointerColor),\n            backgroundColor = (undefined === parameters.backgroundColor ? (pointerType === steelseries.PointerType.TYPE1 ? steelseries.BackgroundColor.ANTHRACITE : steelseries.BackgroundColor.LIGHT_GRAY) : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n            isAutomatic = (undefined === parameters.isAutomatic ? true : parameters.isAutomatic),\n            hour = (undefined === parameters.hour ? 11 : parameters.hour),\n            minute = (undefined === parameters.minute ? 5 : parameters.minute),\n            second = (undefined === parameters.second ? 0 : parameters.second),\n            secondMovesContinuous = (undefined === parameters.secondMovesContinuous ? false : parameters.secondMovesContinuous),\n            timeZoneOffsetHour = (undefined === parameters.timeZoneOffsetHour ? 0 : parameters.timeZoneOffsetHour),\n            timeZoneOffsetMinute = (undefined === parameters.timeZoneOffsetMinute ? 0 : parameters.timeZoneOffsetMinute),\n            secondPointerVisible = (undefined === parameters.secondPointerVisible ? true : parameters.secondPointerVisible);\n\n        // GaugeType specific private variables\n        var objDate = new Date();\n        var minutePointerAngle;\n        var hourPointerAngle;\n        var secondPointerAngle;\n        var tickTimer;\n        var tickInterval = (secondMovesContinuous ? 100 : 1000);\n        tickInterval = (secondPointerVisible ? tickInterval : 100);\n\n        var self = this;\n\n        // Constants\n        var ANGLE_STEP = 6;\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n        // Has a size been specified?\n        if (size === 0) {\n            size = Math.min(mainCtx.canvas.width, mainCtx.canvas.height);\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        var imageWidth = size;\n        var imageHeight = size;\n\n        var centerX = imageWidth / 2;\n        var centerY = imageHeight / 2;\n\n        var initialized = false;\n\n        // Buffer for the frame\n        var frameBuffer = createBuffer(size, size);\n        var frameContext = frameBuffer.getContext('2d');\n\n        // Buffer for static background painting code\n        var backgroundBuffer = createBuffer(size, size);\n        var backgroundContext = backgroundBuffer.getContext('2d');\n\n        // Buffer for hour pointer image painting code\n        var hourBuffer = createBuffer(size, size);\n        var hourContext = hourBuffer.getContext('2d');\n\n        // Buffer for minute pointer image painting code\n        var minuteBuffer = createBuffer(size, size);\n        var minuteContext = minuteBuffer.getContext('2d');\n\n        // Buffer for second pointer image painting code\n        var secondBuffer = createBuffer(size, size);\n        var secondContext = secondBuffer.getContext('2d');\n\n        // Buffer for static foreground painting code\n        var foregroundBuffer = createBuffer(size, size);\n        var foregroundContext = foregroundBuffer.getContext('2d');\n\n        var drawTickmarksImage = function (ctx, ptrType) {\n            var tickAngle;\n            var SMALL_TICK_HEIGHT;\n            var BIG_TICK_HEIGHT;\n            var OUTER_POINT, INNER_POINT;\n            OUTER_POINT = imageWidth * 0.405;\n            ctx.save();\n            ctx.translate(centerX, centerY);\n\n            switch (ptrType.type) {\n            case 'type1':\n                // Draw minutes tickmarks\n                SMALL_TICK_HEIGHT = imageWidth * 0.074766;\n                INNER_POINT = OUTER_POINT - SMALL_TICK_HEIGHT;\n                ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n                ctx.lineWidth = imageWidth * 0.014018;\n\n                for (tickAngle = 0; tickAngle < 360; tickAngle += 30) {\n                    ctx.beginPath();\n                    ctx.moveTo(OUTER_POINT, 0);\n                    ctx.lineTo(INNER_POINT, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                    ctx.rotate(30 * RAD_FACTOR);\n                }\n\n                // Draw hours tickmarks\n                BIG_TICK_HEIGHT = imageWidth * 0.126168;\n                INNER_POINT = OUTER_POINT - BIG_TICK_HEIGHT;\n                ctx.lineWidth = imageWidth * 0.032710;\n\n                for (tickAngle = 0; tickAngle < 360; tickAngle += 90) {\n                    ctx.beginPath();\n                    ctx.moveTo(OUTER_POINT, 0);\n                    ctx.lineTo(INNER_POINT, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                    ctx.rotate(90 * RAD_FACTOR);\n                }\n                break;\n\n            case 'type2':\n            /* falls through */\n            default:\n                // Draw minutes tickmarks\n                SMALL_TICK_HEIGHT = imageWidth * 0.037383;\n                INNER_POINT = OUTER_POINT - SMALL_TICK_HEIGHT;\n                ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n                ctx.lineWidth = imageWidth * 0.009345;\n\n                for (tickAngle = 0; tickAngle < 360; tickAngle += 6) {\n                    ctx.beginPath();\n                    ctx.moveTo(OUTER_POINT, 0);\n                    ctx.lineTo(INNER_POINT, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                    ctx.rotate(6 * RAD_FACTOR);\n                }\n\n                // Draw hours tickmarks\n                BIG_TICK_HEIGHT = imageWidth * 0.084112;\n                INNER_POINT = OUTER_POINT - BIG_TICK_HEIGHT;\n                ctx.lineWidth = imageWidth * 0.028037;\n\n                for (tickAngle = 0; tickAngle < 360; tickAngle += 30) {\n                    ctx.beginPath();\n                    ctx.moveTo(OUTER_POINT, 0);\n                    ctx.lineTo(INNER_POINT, 0);\n                    ctx.closePath();\n                    ctx.stroke();\n                    ctx.rotate(30 * RAD_FACTOR);\n                }\n                break;\n            }\n            ctx.translate(-centerX, -centerY);\n            ctx.restore();\n        };\n\n        var drawHourPointer = function (ctx, ptrType) {\n            ctx.save();\n            var grad;\n\n            switch (ptrType.type) {\n            case 'type2':\n                ctx.beginPath();\n                ctx.lineWidth = imageWidth * 0.046728;\n                ctx.moveTo(centerX, imageWidth * 0.289719);\n                ctx.lineTo(centerX, imageWidth * 0.289719 + imageWidth * 0.224299);\n                ctx.strokeStyle = pointerColor.medium.getRgbaColor();\n                ctx.closePath();\n                ctx.stroke();\n                break;\n\n            case 'type1':\n            /* falls through */\n            default:\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.471962, imageHeight * 0.560747);\n                ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.214953);\n                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.182242);\n                ctx.lineTo(imageWidth * 0.528037, imageHeight * 0.214953);\n                ctx.lineTo(imageWidth * 0.528037, imageHeight * 0.560747);\n                ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.560747);\n                ctx.closePath();\n                grad = ctx.createLinearGradient(imageWidth * 0.471962, imageHeight * 0.560747, imageWidth * 0.528037, imageHeight * 0.214953);\n                grad.addColorStop(1, pointerColor.veryLight.getRgbaColor());\n                grad.addColorStop(0, pointerColor.light.getRgbaColor());\n                ctx.fillStyle = grad;\n                ctx.strokeStyle = pointerColor.light.getRgbaColor();\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            ctx.restore();\n        };\n\n        var drawMinutePointer = function (ctx, ptrType) {\n            ctx.save();\n            var grad;\n\n            switch (ptrType.type) {\n            case 'type2':\n                ctx.beginPath();\n                ctx.lineWidth = imageWidth * 0.032710;\n                ctx.moveTo(centerX, imageWidth * 0.116822);\n                ctx.lineTo(centerX, imageWidth * 0.116822 + imageWidth * 0.387850);\n                ctx.strokeStyle = pointerColor.medium.getRgbaColor();\n                ctx.closePath();\n                ctx.stroke();\n                break;\n\n            case 'type1':\n            /* falls through */\n            default:\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.518691, imageHeight * 0.574766);\n                ctx.lineTo(imageWidth * 0.523364, imageHeight * 0.135514);\n                ctx.lineTo(imageWidth * 0.5, imageHeight * 0.107476);\n                ctx.lineTo(imageWidth * 0.476635, imageHeight * 0.140186);\n                ctx.lineTo(imageWidth * 0.476635, imageHeight * 0.574766);\n                ctx.lineTo(imageWidth * 0.518691, imageHeight * 0.574766);\n                ctx.closePath();\n                grad = ctx.createLinearGradient(imageWidth * 0.518691, imageHeight * 0.574766, imageWidth * 0.476635, imageHeight * 0.140186);\n                grad.addColorStop(1, pointerColor.veryLight.getRgbaColor());\n                grad.addColorStop(0, pointerColor.light.getRgbaColor());\n                ctx.fillStyle = grad;\n                ctx.strokeStyle = pointerColor.light.getRgbaColor();\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            ctx.restore();\n        };\n\n        var drawSecondPointer = function (ctx, ptrType) {\n            ctx.save();\n            var grad;\n\n            switch (ptrType.type) {\n            case 'type2':\n                // top rectangle\n                ctx.lineWidth = imageWidth * 0.009345;\n                ctx.beginPath();\n                ctx.moveTo(centerX, imageWidth * 0.098130);\n                ctx.lineTo(centerX, imageWidth * 0.098130 + imageWidth * 0.126168);\n                ctx.closePath();\n                ctx.stroke();\n                // bottom rectangle\n                ctx.lineWidth = imageWidth * 0.018691;\n                ctx.beginPath();\n                ctx.moveTo(centerX, imageWidth * 0.308411);\n                ctx.lineTo(centerX, imageWidth * 0.308411 + imageWidth * 0.191588);\n                ctx.closePath();\n                ctx.stroke();\n                // circle\n                ctx.lineWidth = imageWidth * 0.016;\n                ctx.beginPath();\n                ctx.arc(centerX, imageWidth * 0.26, imageWidth * 0.085 / 2, 0, TWO_PI);\n                ctx.closePath();\n                ctx.stroke();\n                break;\n\n            case 'type1':\n            /* falls through */\n            default:\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.509345, imageHeight * 0.116822);\n                ctx.lineTo(imageWidth * 0.509345, imageHeight * 0.574766);\n                ctx.lineTo(imageWidth * 0.490654, imageHeight * 0.574766);\n                ctx.lineTo(imageWidth * 0.490654, imageHeight * 0.116822);\n                ctx.lineTo(imageWidth * 0.509345, imageHeight * 0.116822);\n                ctx.closePath();\n                grad = ctx.createLinearGradient(imageWidth * 0.509345, imageHeight * 0.116822, imageWidth * 0.490654, imageHeight * 0.574766);\n                grad.addColorStop(0, steelseries.ColorDef.RED.light.getRgbaColor());\n                grad.addColorStop(0.47, steelseries.ColorDef.RED.medium.getRgbaColor());\n                grad.addColorStop(1, steelseries.ColorDef.RED.dark.getRgbaColor());\n                ctx.fillStyle = grad;\n                ctx.strokeStyle = steelseries.ColorDef.RED.dark.getRgbaColor();\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            ctx.restore();\n        };\n\n        var drawKnob = function (ctx) {\n            var grad;\n\n            // draw the knob\n            ctx.beginPath();\n            ctx.arc(centerX, centerY, imageWidth * 0.045, 0, TWO_PI);\n            ctx.closePath();\n            grad = ctx.createLinearGradient(centerX - imageWidth * 0.045 / 2, centerY - imageWidth * 0.045 / 2, centerX + imageWidth * 0.045 / 2, centerY + imageWidth * 0.045 / 2);\n            grad.addColorStop(0, '#eef0f2');\n            grad.addColorStop(1, '#65696d');\n            ctx.fillStyle = grad;\n            ctx.fill();\n        };\n\n        var drawTopKnob = function (ctx, ptrType) {\n            var grad;\n\n            ctx.save();\n\n            switch (ptrType.type) {\n            case 'type2':\n                // draw knob\n                ctx.fillStyle = '#000000';\n                ctx.beginPath();\n                ctx.arc(centerX, centerY, imageWidth * 0.088785 / 2, 0, TWO_PI);\n                ctx.closePath();\n                ctx.fill();\n                break;\n\n            case 'type1':\n            /* falls through */\n            default:\n                // draw knob\n                grad = ctx.createLinearGradient(centerX - imageWidth * 0.027 / 2, centerY - imageWidth * 0.027 / 2, centerX + imageWidth * 0.027 / 2, centerY + imageWidth * 0.027 / 2);\n                grad.addColorStop(0, '#f3f4f7');\n                grad.addColorStop(0.11, '#f3f5f7');\n                grad.addColorStop(0.12, '#f1f3f5');\n                grad.addColorStop(0.2, '#c0c5cb');\n                grad.addColorStop(0.2, '#bec3c9');\n                grad.addColorStop(1, '#bec3c9');\n                ctx.fillStyle = grad;\n                ctx.beginPath();\n                ctx.arc(centerX, centerY, imageWidth * 0.027, 0, TWO_PI);\n                ctx.closePath();\n                ctx.fill();\n                break;\n            }\n\n            ctx.restore();\n        };\n\n        var calculateAngles = function (hour, minute, second) {\n            secondPointerAngle = second * ANGLE_STEP * RAD_FACTOR;\n            minutePointerAngle = minute * ANGLE_STEP * RAD_FACTOR;\n            hourPointerAngle = (hour + minute / 60) * ANGLE_STEP * 5 * RAD_FACTOR;\n        };\n\n        var tickTock = function () {\n            if (isAutomatic) {\n                objDate = new Date();\n            } else {\n                objDate.setHours(hour);\n                objDate.setMinutes(minute);\n                objDate.setSeconds(second);\n            }\n            // Seconds\n            second = objDate.getSeconds() + (secondMovesContinuous ? objDate.getMilliseconds() / 1000 : 0);\n\n            // Hours\n            if (timeZoneOffsetHour !== 0 && timeZoneOffsetMinute !== 0) {\n                hour = objDate.getUTCHours() + timeZoneOffsetHour;\n            } else {\n                hour = objDate.getHours();\n            }\n            hour = hour % 12;\n\n            // Minutes\n            if (timeZoneOffsetHour !== 0 && timeZoneOffsetMinute !== 0) {\n                minute = objDate.getUTCMinutes() + timeZoneOffsetMinute;\n            } else {\n                minute = objDate.getMinutes();\n            }\n            if (minute > 60) {\n                minute -= 60;\n                hour++;\n            }\n            if (minute < 0) {\n                minute += 60;\n                hour--;\n            }\n            hour = hour % 12;\n            // Calculate angles from current hour and minute values\n            calculateAngles(hour, minute, second);\n\n            if (isAutomatic) {\n                tickTimer = setTimeout(tickTock, tickInterval);\n            }\n\n            self.repaint();\n        };\n\n        // **************   Initialization  ********************\n        // Draw all static painting code to background\n        var init = function (parameters) {\n            parameters = parameters || {};\n            var drawFrame = (undefined === parameters.frame ? false : parameters.frame);\n            var drawBackground = (undefined === parameters.background ? false : parameters.background);\n            var drawPointers = (undefined === parameters.pointers ? false : parameters.pointers);\n            var drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\n            initialized = true;\n\n            if (drawFrame && frameVisible) {\n                drawRadialFrameImage(frameContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n            }\n\n            if (drawBackground && backgroundVisible) {\n                // Create background in background buffer (backgroundBuffer)\n                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\n                // Create custom layer in background buffer (backgroundBuffer)\n                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\n                drawTickmarksImage(backgroundContext, pointerType);\n            }\n\n            if (drawPointers) {\n                drawHourPointer(hourContext, pointerType);\n                drawMinutePointer(minuteContext, pointerType);\n                drawSecondPointer(secondContext, pointerType);\n            }\n\n            if (drawForeground && foregroundVisible) {\n                drawTopKnob(foregroundContext, pointerType);\n                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, false);\n            }\n        };\n\n        var resetBuffers = function (buffers) {\n            buffers = buffers || {};\n            var resetFrame = (undefined === buffers.frame ? false : buffers.frame);\n            var resetBackground = (undefined === buffers.background ? false : buffers.background);\n            var resetPointers = (undefined === buffers.pointers ? false : buffers.pointers);\n            var resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\n            if (resetFrame) {\n                frameBuffer.width = size;\n                frameBuffer.height = size;\n                frameContext = frameBuffer.getContext('2d');\n            }\n\n            if (resetBackground) {\n                backgroundBuffer.width = size;\n                backgroundBuffer.height = size;\n                backgroundContext = backgroundBuffer.getContext('2d');\n            }\n\n            if (resetPointers) {\n                hourBuffer.width = size;\n                hourBuffer.height = size;\n                hourContext = hourBuffer.getContext('2d');\n\n                minuteBuffer.width = size;\n                minuteBuffer.height = size;\n                minuteContext = minuteBuffer.getContext('2d');\n\n                secondBuffer.width = size;\n                secondBuffer.height = size;\n                secondContext = secondBuffer.getContext('2d');\n            }\n\n            if (resetForeground) {\n                foregroundBuffer.width = size;\n                foregroundBuffer.height = size;\n                foregroundContext = foregroundBuffer.getContext('2d');\n            }\n        };\n\n        //************************************ Public methods **************************************\n        this.getAutomatic = function () {\n            return isAutomatic;\n        };\n\n        this.setAutomatic = function (newValue) {\n            newValue = !!newValue;\n            if (isAutomatic && !newValue) {\n                // stop the clock!\n                clearTimeout(tickTimer);\n                isAutomatic = newValue;\n            } else if (!isAutomatic && newValue) {\n                // start the clock\n                isAutomatic = newValue;\n                tickTock();\n            }\n            return this;\n        };\n\n        this.getHour = function () {\n            return hour;\n        };\n\n        this.setHour = function (newValue) {\n            newValue = parseInt(newValue, 10) % 12;\n            if (hour !== newValue) {\n                hour = newValue;\n                calculateAngles(hour, minute, second);\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getMinute = function () {\n            return minute;\n        };\n\n        this.setMinute = function (newValue) {\n            newValue = parseInt(newValue, 10) % 60;\n            if (minute !== newValue) {\n                minute = newValue;\n                calculateAngles(hour, minute, second);\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getSecond = function () {\n            return second;\n        };\n\n        this.setSecond = function (newValue) {\n            second = parseInt(newValue, 10) % 60;\n            if (second !== newValue) {\n                second = newValue;\n                calculateAngles(hour, minute, second);\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getTimeZoneOffsetHour = function () {\n            return timeZoneOffsetHour;\n        };\n\n        this.setTimeZoneOffsetHour = function (newValue) {\n            timeZoneOffsetHour = parseInt(newValue, 10);\n            this.repaint();\n            return this;\n        };\n\n        this.getTimeZoneOffsetMinute = function () {\n            return timeZoneOffsetMinute;\n        };\n\n        this.setTimeZoneOffsetMinute = function (newValue) {\n            timeZoneOffsetMinute = parseInt(newValue, 10);\n            this.repaint();\n            return this;\n        };\n\n        this.getSecondPointerVisible = function () {\n            return secondPointerVisible;\n        };\n\n        this.setSecondPointerVisible = function (newValue) {\n            secondPointerVisible = !!newValue;\n            this.repaint();\n            return this;\n        };\n\n        this.getSecondMovesContinuous = function () {\n            return secondMovesContinuous;\n        };\n\n        this.setSecondMovesContinuous = function (newValue) {\n            secondMovesContinuous = !!newValue;\n            tickInterval = (secondMovesContinuous ? 100 : 1000);\n            tickInterval = (secondPointerVisible ? tickInterval : 100);\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers({frame: true});\n            frameDesign = newFrameDesign;\n            init({frame: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            resetBuffers({ frame: true,\n                           background: true });\n            backgroundColor = newBackgroundColor;\n            init({ frame: true,\n                   background: true });\n            this.repaint();\n            return this;\n        };\n\n        this.setForegroundType = function (newForegroundType) {\n            resetBuffers({foreground: true});\n            foregroundType = newForegroundType;\n            init({foreground: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerType = function (newPointerType) {\n            resetBuffers({ background: true,\n                           foreground: true,\n                           pointers: true });\n            pointerType = newPointerType;\n            if (pointerType.type === 'type1') {\n                pointerColor = steelseries.ColorDef.GRAY;\n                backgroundColor = steelseries.BackgroundColor.ANTHRACITE;\n            } else {\n                pointerColor = steelseries.ColorDef.BLACK;\n                backgroundColor = steelseries.BackgroundColor.LIGHT_GRAY;\n            }\n            init({ background: true,\n                   foreground: true,\n                   pointers: true });\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerColor = function (newPointerColor) {\n            resetBuffers({pointers: true});\n            pointerColor = newPointerColor;\n            init({pointers: true});\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init({frame: true,\n                      background: true,\n                      pointers: true,\n                      foreground: true});\n            }\n\n            //mainCtx.save();\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            // Draw frame\n            if (frameVisible) {\n                mainCtx.drawImage(frameBuffer, 0, 0);\n            }\n\n            // Draw buffered image to visible canvas\n            if (backgroundVisible) {\n                mainCtx.drawImage(backgroundBuffer, 0, 0);\n            }\n\n            // have to draw to a rotated temporary image area so we can translate in\n            // absolute x, y values when drawing to main context\n            var shadowOffset = imageWidth * 0.006;\n\n            // draw hour pointer\n            // Define rotation center\n            mainCtx.save();\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate(hourPointerAngle);\n            mainCtx.translate(-centerX, -centerY);\n            // Set the pointer shadow params\n            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n            mainCtx.shadowBlur = shadowOffset * 2;\n            // Draw the pointer\n            mainCtx.drawImage(hourBuffer, 0, 0);\n\n            // draw minute pointer\n            // Define rotation center\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate(minutePointerAngle - hourPointerAngle);\n            mainCtx.translate(-centerX, -centerY);\n            mainCtx.drawImage(minuteBuffer, 0, 0);\n            mainCtx.restore();\n\n            if (pointerType.type === 'type1') {\n                drawKnob(mainCtx);\n            }\n\n            if (secondPointerVisible) {\n                // draw second pointer\n                // Define rotation center\n                mainCtx.save();\n                mainCtx.translate(centerX, centerY);\n                mainCtx.rotate(secondPointerAngle);\n                mainCtx.translate(-centerX, -centerY);\n                // Set the pointer shadow params\n                mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n                mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n                mainCtx.shadowBlur = shadowOffset * 2;\n                // Draw the pointer\n                mainCtx.drawImage(secondBuffer, 0, 0);\n                mainCtx.restore();\n            }\n\n            // Draw foreground\n            if (foregroundVisible) {\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n        };\n\n        // Visualize the component\n        tickTock();\n\n        return this;\n    };\n\n    var battery = function (canvas, parameters) {\n        parameters = parameters || {};\n        var size = (undefined === parameters.size ? 0 : parameters.size),\n            value = (undefined === parameters.value ? 50 : parameters.value);\n\n        // Get the canvas context and clear it\n        var mainCtx = getCanvasContext(canvas);\n\n        // Has a size been specified?\n        if (size === 0) {\n            size = mainCtx.canvas.width;\n        }\n\n        var imageWidth = size;\n        var imageHeight = Math.ceil(size * 0.45);\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = imageWidth;\n        mainCtx.canvas.height = imageHeight;\n\n        var createBatteryImage = function (ctx, imageWidth, imageHeight, value) {\n            var grad;\n\n            // Background\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.025, imageHeight * 0.055555);\n            ctx.lineTo(imageWidth * 0.9, imageHeight * 0.055555);\n            ctx.lineTo(imageWidth * 0.9, imageHeight * 0.944444);\n            ctx.lineTo(imageWidth * 0.025, imageHeight * 0.944444);\n            ctx.lineTo(imageWidth * 0.025, imageHeight * 0.055555);\n            ctx.closePath();\n            //\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.925, 0);\n            ctx.lineTo(0, 0);\n            ctx.lineTo(0, imageHeight);\n            ctx.lineTo(imageWidth * 0.925, imageHeight);\n            ctx.lineTo(imageWidth * 0.925, imageHeight * 0.722222);\n            ctx.bezierCurveTo(imageWidth * 0.925, imageHeight * 0.722222, imageWidth * 0.975, imageHeight * 0.722222, imageWidth * 0.975, imageHeight * 0.722222);\n            ctx.bezierCurveTo(imageWidth, imageHeight * 0.722222, imageWidth, imageHeight * 0.666666, imageWidth, imageHeight * 0.666666);\n            ctx.bezierCurveTo(imageWidth, imageHeight * 0.666666, imageWidth, imageHeight * 0.333333, imageWidth, imageHeight * 0.333333);\n            ctx.bezierCurveTo(imageWidth, imageHeight * 0.333333, imageWidth, imageHeight * 0.277777, imageWidth * 0.975, imageHeight * 0.277777);\n            ctx.bezierCurveTo(imageWidth * 0.975, imageHeight * 0.277777, imageWidth * 0.925, imageHeight * 0.277777, imageWidth * 0.925, imageHeight * 0.277777);\n            ctx.lineTo(imageWidth * 0.925, 0);\n            ctx.closePath();\n            //\n            grad = ctx.createLinearGradient(0, 0, 0, imageHeight);\n            grad.addColorStop(0, '#ffffff');\n            grad.addColorStop(1, '#7e7e7e');\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            // Main\n            ctx.beginPath();\n            var end = Math.max(imageWidth * 0.875 * (value / 100), Math.ceil(imageWidth * 0.01));\n            ctx.rect(imageWidth * 0.025, imageWidth * 0.025, end, imageHeight * 0.888888);\n            ctx.closePath();\n            var BORDER_FRACTIONS = [0, 0.4, 1];\n            var BORDER_COLORS = [new RgbaColor(177, 25, 2, 1),   // 0xB11902\n                                 new RgbaColor(219, 167, 21, 1), // 0xDBA715\n                                 new RgbaColor(121, 162, 75, 1)  // 0x79A24B\n                                ];\n            var border = new GradientWrapper(0, 100, BORDER_FRACTIONS, BORDER_COLORS);\n            ctx.fillStyle = border.getColorAt(value / 100).getRgbColor();\n            ctx.fill();\n            ctx.beginPath();\n            end = Math.max(end - imageWidth * 0.05, 0);\n            ctx.rect(imageWidth * 0.05, imageWidth * 0.05, end, imageHeight * 0.777777);\n            ctx.closePath();\n            var LIQUID_COLORS_DARK = [new RgbaColor(198, 39, 5, 1),   // 0xC62705\n                                      new RgbaColor(228, 189, 32, 1), // 0xE4BD20\n                                      new RgbaColor(163, 216, 102, 1) // 0xA3D866\n                                    ];\n\n            var LIQUID_COLORS_LIGHT = [new RgbaColor(246, 121, 48, 1),   // 0xF67930\n                                       new RgbaColor(246, 244, 157, 1),  // 0xF6F49D\n                                       new RgbaColor(223, 233, 86, 1)    // 0xDFE956\n                                      ];\n            var LIQUID_GRADIENT_FRACTIONS = [0, 0.4, 1];\n            var liquidDark = new GradientWrapper(0, 100, LIQUID_GRADIENT_FRACTIONS, LIQUID_COLORS_DARK);\n            var liquidLight = new GradientWrapper(0, 100, LIQUID_GRADIENT_FRACTIONS, LIQUID_COLORS_LIGHT);\n            grad = ctx.createLinearGradient(imageWidth * 0.05, 0, imageWidth * 0.875, 0);\n            grad.addColorStop(0, liquidDark.getColorAt(value / 100).getRgbColor());\n            grad.addColorStop(0.5, liquidLight.getColorAt(value / 100).getRgbColor());\n            grad.addColorStop(1, liquidDark.getColorAt(value / 100).getRgbColor());\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            // Foreground\n            ctx.beginPath();\n            ctx.rect(imageWidth * 0.025, imageWidth * 0.025, imageWidth * 0.875, imageHeight * 0.444444);\n            ctx.closePath();\n            grad = ctx.createLinearGradient(imageWidth * 0.025, imageWidth * 0.025, imageWidth * 0.875, imageHeight * 0.444444);\n            grad.addColorStop(0, 'rgba(255, 255, 255, 0)');\n            grad.addColorStop(1, 'rgba(255, 255, 255, 0.8)');\n            ctx.fillStyle = grad;\n            ctx.fill();\n        };\n\n        // **************   Public methods  ********************\n        this.setValue = function (newValue) {\n            newValue = (newValue < 0 ? 0 : (newValue > 100 ? 100 : newValue));\n            if (value !== newValue) {\n                value = newValue;\n                this.repaint();\n            }\n            return this;\n        };\n\n        this.getValue = function () {\n            return value;\n        };\n\n        this.repaint = function () {\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n            createBatteryImage(mainCtx, imageWidth, imageHeight, value);\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var stopwatch = function (canvas, parameters) {\n        parameters = parameters || {};\n        var size = (undefined === parameters.size ? 0 : parameters.size),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            pointerColor = (undefined === parameters.pointerColor ? steelseries.ColorDef.BLACK : parameters.pointerColor),\n            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.LIGHT_GRAY : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n\n            minutePointerAngle = 0,\n            secondPointerAngle = 0,\n            tickTimer,\n            ANGLE_STEP = 6,\n            self = this,\n\n            start = 0,\n            currentMilliSeconds = 0,\n            minutes = 0,\n            seconds = 0,\n            milliSeconds = 0,\n            running = false,\n            lap = false,\n            // Get the canvas context\n            mainCtx = getCanvasContext(canvas),\n\n            imageWidth, imageHeight,\n            centerX, centerY,\n\n            smallPointerSize, smallPointerX_Offset, smallPointerY_Offset,\n\n            initialized = false,\n\n            // Buffer for the frame\n            frameBuffer, frameContext,\n\n            // Buffer for static background painting code\n            backgroundBuffer, backgroundContext,\n\n            // Buffer for small pointer image painting code\n            smallPointerBuffer, smallPointerContext,\n\n            // Buffer for large pointer image painting code\n            largePointerBuffer, largePointerContext,\n\n            // Buffer for static foreground painting code\n            foregroundBuffer, foregroundContext,\n\n            drawTickmarksImage = function (ctx, width, range, text_scale, text_dist_factor, x_offset, y_offset) {\n                var STD_FONT_SIZE = text_scale * width,\n                    STD_FONT = STD_FONT_SIZE + 'px ' + stdFontName,\n                    TEXT_WIDTH = width * 0.15,\n                    THIN_STROKE = 0.5,\n                    MEDIUM_STROKE = 1,\n                    THICK_STROKE = 1.5,\n                    TEXT_DISTANCE = text_dist_factor * width,\n                    MIN_LENGTH = Math.round(0.025 * width),\n                    MED_LENGTH = Math.round(0.035 * width),\n                    MAX_LENGTH = Math.round(0.045 * width),\n                    TEXT_COLOR = backgroundColor.labelColor.getRgbaColor(),\n                    TICK_COLOR = backgroundColor.labelColor.getRgbaColor(),\n                    CENTER = width / 2,\n                    // Create the ticks itself\n                    RADIUS = width * 0.4,\n                    innerPoint, outerPoint, textPoint,\n                    counter = 0,\n                    numberCounter = 0,\n                    tickCounter = 0,\n                    valueCounter, // value for the tickmarks\n                    sinValue = 0,\n                    cosValue = 0,\n                    alpha, // angle for the tickmarks\n                    ALPHA_START = -PI,\n                    ANGLE_STEPSIZE = TWO_PI / (range);\n\n                ctx.width = ctx.height = width;\n                ctx.save();\n                ctx.textAlign = 'center';\n                ctx.textBaseline = 'middle';\n                ctx.font = STD_FONT;\n\n                for (alpha = ALPHA_START, valueCounter = 0; valueCounter <= range + 1; alpha -= ANGLE_STEPSIZE * 0.1, valueCounter += 0.1) {\n                    ctx.lineWidth = THIN_STROKE;\n                    sinValue = Math.sin(alpha);\n                    cosValue = Math.cos(alpha);\n\n                    // tickmark every 2 units\n                    if (counter % 2 === 0) {\n                        //ctx.lineWidth = THIN_STROKE;\n                        innerPoint = [CENTER + (RADIUS - MIN_LENGTH) * sinValue + x_offset, CENTER + (RADIUS - MIN_LENGTH) * cosValue + y_offset];\n                        outerPoint = [CENTER + RADIUS * sinValue + x_offset, CENTER + RADIUS * cosValue + y_offset];\n                        // Draw ticks\n                        ctx.strokeStyle = TICK_COLOR;\n                        ctx.beginPath();\n                        ctx.moveTo(innerPoint[0], innerPoint[1]);\n                        ctx.lineTo(outerPoint[0], outerPoint[1]);\n                        ctx.closePath();\n                        ctx.stroke();\n                    }\n\n                    // Different tickmark every 10 units\n                    if (counter === 10 || counter === 0) {\n                        ctx.fillStyle = TEXT_COLOR;\n                        ctx.lineWidth = MEDIUM_STROKE;\n                        outerPoint = [CENTER + RADIUS * sinValue + x_offset, CENTER + RADIUS * cosValue + y_offset];\n                        textPoint  = [CENTER + (RADIUS - TEXT_DISTANCE) * sinValue + x_offset, CENTER + (RADIUS - TEXT_DISTANCE) * cosValue + y_offset];\n\n                        // Draw text\n                        if (numberCounter === 5) {\n                            if (valueCounter !== range) {\n                                if (Math.round(valueCounter) !== 60) {\n                                    ctx.fillText(Math.round(valueCounter), textPoint[0], textPoint[1], TEXT_WIDTH);\n                                }\n                            }\n                            ctx.lineWidth = THICK_STROKE;\n                            innerPoint = [CENTER + (RADIUS - MAX_LENGTH) * sinValue + x_offset, CENTER + (RADIUS - MAX_LENGTH) * cosValue + y_offset];\n                            numberCounter = 0;\n                        } else {\n                            ctx.lineWidth = MEDIUM_STROKE;\n                            innerPoint = [CENTER + (RADIUS - MED_LENGTH) * sinValue + x_offset, CENTER + (RADIUS - MED_LENGTH) * cosValue + y_offset];\n                        }\n\n                        // Draw ticks\n                        ctx.strokeStyle = TICK_COLOR;\n                        ctx.beginPath();\n                        ctx.moveTo(innerPoint[0], innerPoint[1]);\n                        ctx.lineTo(outerPoint[0], outerPoint[1]);\n                        ctx.closePath();\n                        ctx.stroke();\n\n                        counter = 0;\n                        tickCounter++;\n                        numberCounter++;\n                    }\n                    counter++;\n                }\n                ctx.restore();\n            },\n\n            drawLargePointer = function (ctx) {\n                var grad, radius;\n\n                ctx.save();\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.509345, imageWidth * 0.457943);\n                ctx.lineTo(imageWidth * 0.5, imageWidth * 0.102803);\n                ctx.lineTo(imageWidth * 0.490654, imageWidth * 0.457943);\n                ctx.bezierCurveTo(imageWidth * 0.490654, imageWidth * 0.457943, imageWidth * 0.490654, imageWidth * 0.457943, imageWidth * 0.490654, imageWidth * 0.457943);\n                ctx.bezierCurveTo(imageWidth * 0.471962, imageWidth * 0.462616, imageWidth * 0.457943, imageWidth * 0.481308, imageWidth * 0.457943, imageWidth * 0.5);\n                ctx.bezierCurveTo(imageWidth * 0.457943, imageWidth * 0.518691, imageWidth * 0.471962, imageWidth * 0.537383, imageWidth * 0.490654, imageWidth * 0.542056);\n                ctx.bezierCurveTo(imageWidth * 0.490654, imageWidth * 0.542056, imageWidth * 0.490654, imageWidth * 0.542056, imageWidth * 0.490654, imageWidth * 0.542056);\n                ctx.lineTo(imageWidth * 0.490654, imageWidth * 0.621495);\n                ctx.lineTo(imageWidth * 0.509345, imageWidth * 0.621495);\n                ctx.lineTo(imageWidth * 0.509345, imageWidth * 0.542056);\n                ctx.bezierCurveTo(imageWidth * 0.509345, imageWidth * 0.542056, imageWidth * 0.509345, imageWidth * 0.542056, imageWidth * 0.509345, imageWidth * 0.542056);\n                ctx.bezierCurveTo(imageWidth * 0.528037, imageWidth * 0.537383, imageWidth * 0.542056, imageWidth * 0.518691, imageWidth * 0.542056, imageWidth * 0.5);\n                ctx.bezierCurveTo(imageWidth * 0.542056, imageWidth * 0.481308, imageWidth * 0.528037, imageWidth * 0.462616, imageWidth * 0.509345, imageWidth * 0.457943);\n                ctx.bezierCurveTo(imageWidth * 0.509345, imageWidth * 0.457943, imageWidth * 0.509345, imageWidth * 0.457943, imageWidth * 0.509345, imageWidth * 0.457943);\n                ctx.closePath();\n                grad = ctx.createLinearGradient(0, 0, 0, imageWidth * 0.621495);\n                grad.addColorStop(0, pointerColor.medium.getRgbaColor());\n                grad.addColorStop(0.388888, pointerColor.medium.getRgbaColor());\n                grad.addColorStop(0.5, pointerColor.light.getRgbaColor());\n                grad.addColorStop(0.611111, pointerColor.medium.getRgbaColor());\n                grad.addColorStop(1, pointerColor.medium.getRgbaColor());\n                ctx.fillStyle = grad;\n                ctx.strokeStyle = pointerColor.dark.getRgbaColor();\n                ctx.fill();\n                ctx.stroke();\n                // Draw the rings\n                ctx.beginPath();\n                radius = imageWidth * 0.065420 / 2;\n                ctx.arc(centerX, centerY, radius, 0, TWO_PI);\n                grad = ctx.createLinearGradient(centerX - radius, centerX + radius, 0, centerX + radius);\n                grad.addColorStop(0, '#e6b35c');\n                grad.addColorStop(0.01, '#e6b35c');\n                grad.addColorStop(0.99, '#c48200');\n                grad.addColorStop(1, '#c48200');\n                ctx.fillStyle = grad;\n                ctx.closePath();\n                ctx.fill();\n                ctx.beginPath();\n                radius = imageWidth * 0.046728 / 2;\n                ctx.arc(centerX, centerY, radius, 0, TWO_PI);\n                grad = ctx.createRadialGradient(centerX, centerX, 0, centerX, centerX, radius);\n                grad.addColorStop(0, '#c5c5c5');\n                grad.addColorStop(0.19, '#c5c5c5');\n                grad.addColorStop(0.22, '#000000');\n                grad.addColorStop(0.8, '#000000');\n                grad.addColorStop(0.99, '#707070');\n                grad.addColorStop(1, '#707070');\n                ctx.fillStyle = grad;\n                ctx.closePath();\n                ctx.fill();\n                ctx.restore();\n            },\n\n            drawSmallPointer = function (ctx) {\n                var grad, radius;\n\n                ctx.save();\n                ctx.beginPath();\n                ctx.moveTo(imageWidth * 0.476635, imageWidth * 0.313084);\n                ctx.bezierCurveTo(imageWidth * 0.476635, imageWidth * 0.322429, imageWidth * 0.485981, imageWidth * 0.331775, imageWidth * 0.495327, imageWidth * 0.336448);\n                ctx.bezierCurveTo(imageWidth * 0.495327, imageWidth * 0.336448, imageWidth * 0.495327, imageWidth * 0.350467, imageWidth * 0.495327, imageWidth * 0.350467);\n                ctx.lineTo(imageWidth * 0.504672, imageWidth * 0.350467);\n                ctx.bezierCurveTo(imageWidth * 0.504672, imageWidth * 0.350467, imageWidth * 0.504672, imageWidth * 0.336448, imageWidth * 0.504672, imageWidth * 0.336448);\n                ctx.bezierCurveTo(imageWidth * 0.514018, imageWidth * 0.331775, imageWidth * 0.523364, imageWidth * 0.322429, imageWidth * 0.523364, imageWidth * 0.313084);\n                ctx.bezierCurveTo(imageWidth * 0.523364, imageWidth * 0.303738, imageWidth * 0.514018, imageWidth * 0.294392, imageWidth * 0.504672, imageWidth * 0.289719);\n                ctx.bezierCurveTo(imageWidth * 0.504672, imageWidth * 0.289719, imageWidth * 0.5, imageWidth * 0.200934, imageWidth * 0.5, imageWidth * 0.200934);\n                ctx.bezierCurveTo(imageWidth * 0.5, imageWidth * 0.200934, imageWidth * 0.495327, imageWidth * 0.289719, imageWidth * 0.495327, imageWidth * 0.289719);\n                ctx.bezierCurveTo(imageWidth * 0.485981, imageWidth * 0.294392, imageWidth * 0.476635, imageWidth * 0.303738, imageWidth * 0.476635, imageWidth * 0.313084);\n                ctx.closePath();\n                grad = ctx.createLinearGradient(0, 0, imageWidth, 0);\n                grad.addColorStop(0, pointerColor.medium.getRgbaColor());\n                grad.addColorStop(0.388888, pointerColor.medium.getRgbaColor());\n                grad.addColorStop(0.5, pointerColor.light.getRgbaColor());\n                grad.addColorStop(0.611111, pointerColor.medium.getRgbaColor());\n                grad.addColorStop(1, pointerColor.medium.getRgbaColor());\n                ctx.fillStyle = grad;\n                ctx.strokeStyle = pointerColor.dark.getRgbaColor();\n                ctx.fill();\n                ctx.stroke();\n                // Draw the rings\n                ctx.beginPath();\n                radius = imageWidth * 0.037383 / 2;\n                ctx.arc(centerX, smallPointerY_Offset + smallPointerSize / 2, radius, 0, TWO_PI);\n                ctx.fillStyle = '#C48200';\n                ctx.closePath();\n                ctx.fill();\n                ctx.beginPath();\n                radius = imageWidth * 0.028037 / 2;\n                ctx.arc(centerX, smallPointerY_Offset + smallPointerSize / 2, radius, 0, TWO_PI);\n                ctx.fillStyle = '#999999';\n                ctx.closePath();\n                ctx.fill();\n                ctx.beginPath();\n                radius = imageWidth * 0.018691 / 2;\n                ctx.arc(centerX, smallPointerY_Offset + smallPointerSize / 2, radius, 0, TWO_PI);\n                ctx.fillStyle = '#000000';\n                ctx.closePath();\n                ctx.fill();\n                ctx.restore();\n            },\n\n            calculateAngles = function () {\n                currentMilliSeconds = new Date().getTime() - start;\n                secondPointerAngle = (currentMilliSeconds * ANGLE_STEP / 1000);\n                minutePointerAngle = (secondPointerAngle % 10800) / 30;\n\n                minutes = (currentMilliSeconds / 60000) % 30;\n                seconds = (currentMilliSeconds / 1000) % 60;\n                milliSeconds = (currentMilliSeconds) % 1000;\n            },\n\n            init = function (parameters) {\n                parameters = parameters || {};\n                var drawFrame = (undefined === parameters.frame ? false : parameters.frame),\n                    drawBackground = (undefined === parameters.background ? false : parameters.background),\n                    drawPointers = (undefined === parameters.pointers ? false : parameters.pointers),\n                    drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\n                initialized = true;\n\n                if (drawFrame && frameVisible) {\n                    drawRadialFrameImage(frameContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n                }\n\n                if (drawBackground && backgroundVisible) {\n                    // Create background in background buffer (backgroundBuffer)\n                    drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\n                    // Create custom layer in background buffer (backgroundBuffer)\n                    drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\n                    drawTickmarksImage(backgroundContext, imageWidth, 60, 0.075, 0.1, 0, 0);\n                    drawTickmarksImage(backgroundContext, smallPointerSize, 30, 0.095, 0.13, smallPointerX_Offset, smallPointerY_Offset);\n                }\n                if (drawPointers) {\n                    drawLargePointer(largePointerContext);\n                    drawSmallPointer(smallPointerContext);\n                }\n\n                if (drawForeground && foregroundVisible) {\n                    drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, false);\n                }\n            },\n\n            resetBuffers = function (buffers) {\n                buffers = buffers || {};\n                var resetFrame = (undefined === buffers.frame ? false : buffers.frame),\n                    resetBackground = (undefined === buffers.background ? false : buffers.background),\n                    resetPointers = (undefined === buffers.pointers ? false : buffers.pointers),\n                    resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\n                if (resetFrame) {\n                    frameBuffer.width = size;\n                    frameBuffer.height = size;\n                    frameContext = frameBuffer.getContext('2d');\n                }\n\n                if (resetBackground) {\n                    backgroundBuffer.width = size;\n                    backgroundBuffer.height = size;\n                    backgroundContext = backgroundBuffer.getContext('2d');\n                }\n\n                if (resetPointers) {\n                    smallPointerBuffer.width = size;\n                    smallPointerBuffer.height = size;\n                    smallPointerContext = smallPointerBuffer.getContext('2d');\n\n                    largePointerBuffer.width = size;\n                    largePointerBuffer.height = size;\n                    largePointerContext = largePointerBuffer.getContext('2d');\n                }\n\n                if (resetForeground) {\n                    foregroundBuffer.width = size;\n                    foregroundBuffer.height = size;\n                    foregroundContext = foregroundBuffer.getContext('2d');\n                }\n            },\n\n            tickTock = function () {\n                if (!lap) {\n                    calculateAngles();\n                    self.repaint();\n                }\n                if (running) {\n                    tickTimer = setTimeout(tickTock, 200);\n                }\n\n            };\n\n        //************************************ Public methods **************************************\n        // Returns true if the stopwatch is running\n        this.isRunning = function () {\n            return running;\n        };\n\n        // Starts the stopwatch\n        this.start = function () {\n            if (!running) {\n                running = true;\n                start = new Date().getTime() - currentMilliSeconds;\n                tickTock();\n            }\n            return this;\n        };\n\n        // Stops the stopwatch\n        this.stop = function () {\n            if (running) {\n                running = false;\n                clearTimeout(tickTimer);\n                //calculateAngles();\n            }\n            if (lap) {\n                lap = false;\n                calculateAngles();\n                this.repaint();\n            }\n            return this;\n        };\n\n        // Resets the stopwatch\n        this.reset = function () {\n            if (running) {\n                running = false;\n                lap = false;\n                clearTimeout(tickTimer);\n            }\n            start = new Date().getTime();\n            calculateAngles();\n            this.repaint();\n            return this;\n        };\n\n        // Laptimer, stop/restart stopwatch\n        this.lap = function () {\n            if (running && !lap) {\n                lap = true;\n            } else if (lap) {\n                lap = false;\n            }\n            return this;\n        };\n\n        this.getMeasuredTime = function () {\n            return (minutes + ':' + seconds + ':' + milliSeconds);\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers({frame: true});\n            frameDesign = newFrameDesign;\n            init({frame: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            resetBuffers({ background: true });\n            backgroundColor = newBackgroundColor;\n            init({ background: true });\n            this.repaint();\n            return this;\n        };\n\n        this.setForegroundType = function (newForegroundType) {\n            resetBuffers({foreground: true});\n            foregroundType = newForegroundType;\n            init({foreground: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setPointerColor = function (newPointerColor) {\n            resetBuffers({pointers: true});\n            pointerColor = newPointerColor;\n            init({pointers: true});\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init({frame: true,\n                      background: true,\n                      pointers: true,\n                      foreground: true});\n            }\n\n            mainCtx.clearRect(0, 0, imageWidth, imageHeight);\n\n            // Draw frame\n            if (frameVisible) {\n                mainCtx.drawImage(frameBuffer, 0, 0);\n            }\n\n            // Draw buffered image to visible canvas\n            if (backgroundVisible) {\n                mainCtx.drawImage(backgroundBuffer, 0, 0);\n            }\n\n            // have to draw to a rotated temporary image area so we can translate in\n            // absolute x, y values when drawing to main context\n            var shadowOffset = imageWidth * 0.006;\n\n            var rotationAngle = (minutePointerAngle + (2 * Math.sin(minutePointerAngle * RAD_FACTOR))) * RAD_FACTOR;\n            var secRotationAngle = (secondPointerAngle + (2 * Math.sin(secondPointerAngle * RAD_FACTOR))) * RAD_FACTOR;\n\n            // Draw the minute pointer\n            // Define rotation center\n            mainCtx.save();\n            mainCtx.translate(centerX, smallPointerY_Offset + smallPointerSize / 2);\n            mainCtx.rotate(rotationAngle);\n            mainCtx.translate(-centerX, -(smallPointerY_Offset + smallPointerSize / 2));\n            // Set the pointer shadow params\n            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset / 2;\n            mainCtx.shadowBlur = shadowOffset;\n            // Draw the pointer\n            mainCtx.drawImage(smallPointerBuffer, 0, 0);\n            mainCtx.restore();\n\n            // Draw the second pointer\n            // Define rotation center\n            mainCtx.save();\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate(secRotationAngle);\n            mainCtx.translate(-centerX, -centerY);\n            // Set the pointer shadow params\n            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset / 2;\n            mainCtx.shadowBlur = shadowOffset;\n            // Draw the pointer\n            mainCtx.drawImage(largePointerBuffer, 0, 0);\n            // Undo the translations & shadow settings\n            mainCtx.restore();\n\n            // Draw the foreground\n            if (foregroundVisible) {\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n        };\n\n        // Has a size been specified?\n        size = (size === 0 ? Math.min(mainCtx.canvas.width, mainCtx.canvas.height) : size);\n\n        // Set the size - also clears it\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        imageWidth = size;\n        imageHeight = size;\n\n        centerX = imageWidth / 2;\n        centerY = imageHeight / 2;\n\n        smallPointerSize = 0.285 * imageWidth;\n        smallPointerX_Offset = centerX - smallPointerSize / 2;\n        smallPointerY_Offset = 0.17 * imageWidth;\n\n        // Buffer for the frame\n        frameBuffer = createBuffer(size, size);\n        frameContext = frameBuffer.getContext('2d');\n\n        // Buffer for static background painting code\n        backgroundBuffer = createBuffer(size, size);\n        backgroundContext = backgroundBuffer.getContext('2d');\n\n        // Buffer for small pointer image painting code\n        smallPointerBuffer = createBuffer(size, size);\n        smallPointerContext = smallPointerBuffer.getContext('2d');\n\n        // Buffer for large pointer image painting code\n        largePointerBuffer = createBuffer(size, size);\n        largePointerContext = largePointerBuffer.getContext('2d');\n\n        // Buffer for static foreground painting code\n        foregroundBuffer = createBuffer(size, size);\n        foregroundContext = foregroundBuffer.getContext('2d');\n\n        // Visualize the component\n        start = new Date().getTime();\n        tickTock();\n\n        return this;\n    };\n\n    var altimeter = function (canvas, parameters) {\n        parameters = parameters || {};\n            // parameters\n        var size = (undefined === parameters.size ? 0 : parameters.size),\n            frameDesign = (undefined === parameters.frameDesign ? steelseries.FrameDesign.METAL : parameters.frameDesign),\n            frameVisible = (undefined === parameters.frameVisible ? true : parameters.frameVisible),\n            backgroundColor = (undefined === parameters.backgroundColor ? steelseries.BackgroundColor.DARK_GRAY : parameters.backgroundColor),\n            backgroundVisible = (undefined === parameters.backgroundVisible ? true : parameters.backgroundVisible),\n            knobType = (undefined === parameters.knobType ? steelseries.KnobType.METAL_KNOB : parameters.knobType),\n            knobStyle = (undefined === parameters.knobStyle ? steelseries.KnobStyle.BLACK : parameters.knobStyle),\n            lcdColor = (undefined === parameters.lcdColor ? steelseries.LcdColor.BLACK : parameters.lcdColor),\n            lcdVisible = (undefined === parameters.lcdVisible ? true : parameters.lcdVisible),\n            digitalFont = (undefined === parameters.digitalFont ? false : parameters.digitalFont),\n            foregroundType = (undefined === parameters.foregroundType ? steelseries.ForegroundType.TYPE1 : parameters.foregroundType),\n            foregroundVisible = (undefined === parameters.foregroundVisible ? true : parameters.foregroundVisible),\n            customLayer = (undefined === parameters.customLayer ? null : parameters.customLayer),\n            //\n            minValue = 0, maxValue = 10, value = minValue,\n            value100 = 0, value1000 = 0, value10000 = 0,\n            angleStep100ft, angleStep1000ft, angleStep10000ft,\n            tickLabelPeriod = 1, // Draw value at every 10th tickmark\n            tween,\n            repainting = false,\n            imageWidth, imageHeight,\n            centerX, centerY,\n            stdFont,\n            mainCtx = getCanvasContext(canvas),  // Get the canvas context\n            // Constants\n            TICKMARK_OFFSET = PI,\n            //\n            initialized = false,\n            // **************   Buffer creation  ********************\n            // Buffer for the frame\n            frameBuffer = createBuffer(size, size),\n            frameContext = frameBuffer.getContext('2d'),\n            // Buffer for the background\n            backgroundBuffer = createBuffer(size, size),\n            backgroundContext = backgroundBuffer.getContext('2d'),\n\n            lcdBuffer,\n\n            // Buffer for 10000ft pointer image painting code\n            pointer10000Buffer = createBuffer(size, size),\n            pointer10000Context = pointer10000Buffer.getContext('2d'),\n\n            // Buffer for 1000ft pointer image painting code\n            pointer1000Buffer = createBuffer(size, size),\n            pointer1000Context = pointer1000Buffer.getContext('2d'),\n\n            // Buffer for 100ft pointer image painting code\n            pointer100Buffer = createBuffer(size, size),\n            pointer100Context = pointer100Buffer.getContext('2d'),\n\n            // Buffer for static foreground painting code\n            foregroundBuffer = createBuffer(size, size),\n            foregroundContext = foregroundBuffer.getContext('2d');\n            // End of variables\n\n        // Get the canvas context and clear it\n        mainCtx.save();\n        // Has a size been specified?\n        size = (size === 0 ? Math.min(mainCtx.canvas.width, mainCtx.canvas.height) : size);\n\n        // Set the size\n        mainCtx.canvas.width = size;\n        mainCtx.canvas.height = size;\n\n        imageWidth = size;\n        imageHeight = size;\n\n        centerX = imageWidth / 2;\n        centerY = imageHeight / 2;\n\n        stdFont = Math.floor(imageWidth * 0.09) + 'px ' + stdFontName;\n\n        // **************   Image creation  ********************\n        var drawLcdText = function (value) {\n            mainCtx.save();\n            mainCtx.textAlign = 'right';\n            mainCtx.textBaseline = 'middle';\n            mainCtx.strokeStyle = lcdColor.textColor;\n            mainCtx.fillStyle = lcdColor.textColor;\n\n            if (lcdColor === steelseries.LcdColor.STANDARD || lcdColor === steelseries.LcdColor.STANDARD_GREEN) {\n                mainCtx.shadowColor = 'gray';\n                mainCtx.shadowOffsetX = imageWidth * 0.007;\n                mainCtx.shadowOffsetY = imageWidth * 0.007;\n                mainCtx.shadowBlur = imageWidth * 0.009;\n            }\n            if (digitalFont) {\n                mainCtx.font = Math.floor(imageWidth * 0.075) + 'px ' + lcdFontName;\n            } else {\n                mainCtx.font = Math.floor(imageWidth * 0.075) + 'px ' + stdFontName;\n            }\n            mainCtx.fillText(Math.round(value), (imageWidth + (imageWidth * 0.4)) / 2 - 4, imageWidth * 0.607, imageWidth * 0.4);\n            mainCtx.restore();\n        };\n\n        var drawTickmarksImage = function (ctx, freeAreaAngle, offset, minVal, maxVal, angleStep) {\n            var MEDIUM_STROKE = Math.max(imageWidth * 0.012, 2),\n                THIN_STROKE = Math.max(imageWidth * 0.007, 1.5),\n                TEXT_DISTANCE = imageWidth * 0.13,\n                MED_LENGTH = imageWidth * 0.05,\n                MAX_LENGTH = imageWidth * 0.07,\n                RADIUS = imageWidth * 0.4,\n                counter = 0,\n                tickCounter = 0,\n                sinValue = 0,\n                cosValue = 0,\n                alpha,          // angle for tickmarks\n                valueCounter,   // value for tickmarks\n                ALPHA_START = -offset - (freeAreaAngle / 2);\n\n            ctx.save();\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.font = stdFont;\n            ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n            ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\n            for (alpha = ALPHA_START, valueCounter = 0; valueCounter <= 10; alpha -= angleStep * 0.1, valueCounter += 0.1) {\n                sinValue = Math.sin(alpha);\n                cosValue = Math.cos(alpha);\n\n                // tickmark every 2 units\n                if (counter % 2 === 0) {\n                    ctx.lineWidth = THIN_STROKE;\n                    // Draw ticks\n                    ctx.beginPath();\n                    ctx.moveTo(centerX + (RADIUS - MED_LENGTH) * sinValue, centerY + (RADIUS - MED_LENGTH) * cosValue);\n                    ctx.lineTo(centerX + RADIUS * sinValue, centerY + RADIUS * cosValue);\n                    ctx.closePath();\n                    ctx.stroke();\n                }\n\n                // Different tickmark every 10 units\n                if (counter === 10 || counter === 0) {\n                    ctx.lineWidth = MEDIUM_STROKE;\n\n                    // if gauge is full circle, avoid painting maxValue over minValue\n                    if (freeAreaAngle === 0) {\n                        if (Math.round(valueCounter) !== maxValue) {\n                            ctx.fillText(Math.round(valueCounter).toString(), centerX + (RADIUS - TEXT_DISTANCE) * sinValue, centerY + (RADIUS - TEXT_DISTANCE) * cosValue);\n                        }\n                    }\n                    counter = 0;\n                    tickCounter++;\n\n                    // Draw ticks\n                    ctx.beginPath();\n                    ctx.moveTo(centerX + (RADIUS - MAX_LENGTH) * sinValue, centerY + (RADIUS - MAX_LENGTH) * cosValue);\n                    ctx.lineTo(centerX + RADIUS * sinValue, centerY + RADIUS * cosValue);\n                    ctx.closePath();\n                    ctx.stroke();\n                }\n                counter++;\n            }\n            ctx.restore();\n        };\n\n        var draw100ftPointer = function (ctx, shadow) {\n            var grad;\n\n            if (shadow) {\n                ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n                ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n            } else {\n                grad = ctx.createLinearGradient(0, imageHeight * 0.168224, 0, imageHeight * 0.626168);\n                grad.addColorStop(0, '#ffffff');\n                grad.addColorStop(0.31, '#ffffff');\n                grad.addColorStop(0.3101, '#ffffff');\n                grad.addColorStop(0.32, '#202020');\n                grad.addColorStop(1, '#202020');\n                ctx.fillStyle = grad;\n            }\n\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.518691, imageHeight * 0.471962);\n            ctx.bezierCurveTo(imageWidth * 0.514018, imageHeight * 0.471962, imageWidth * 0.509345, imageHeight * 0.467289, imageWidth * 0.509345, imageHeight * 0.467289);\n            ctx.lineTo(imageWidth * 0.509345, imageHeight * 0.200934);\n            ctx.lineTo(imageWidth * 0.5, imageHeight * 0.168224);\n            ctx.lineTo(imageWidth * 0.490654, imageHeight * 0.200934);\n            ctx.lineTo(imageWidth * 0.490654, imageHeight * 0.467289);\n            ctx.bezierCurveTo(imageWidth * 0.490654, imageHeight * 0.467289, imageWidth * 0.481308, imageHeight * 0.471962, imageWidth * 0.481308, imageHeight * 0.471962);\n            ctx.bezierCurveTo(imageWidth * 0.471962, imageHeight * 0.481308, imageWidth * 0.467289, imageHeight * 0.490654, imageWidth * 0.467289, imageHeight * 0.5);\n            ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.514018, imageWidth * 0.476635, imageHeight * 0.528037, imageWidth * 0.490654, imageHeight * 0.532710);\n            ctx.bezierCurveTo(imageWidth * 0.490654, imageHeight * 0.532710, imageWidth * 0.490654, imageHeight * 0.579439, imageWidth * 0.490654, imageHeight * 0.588785);\n            ctx.bezierCurveTo(imageWidth * 0.485981, imageHeight * 0.593457, imageWidth * 0.481308, imageHeight * 0.598130, imageWidth * 0.481308, imageHeight * 0.607476);\n            ctx.bezierCurveTo(imageWidth * 0.481308, imageHeight * 0.616822, imageWidth * 0.490654, imageHeight * 0.626168, imageWidth * 0.5, imageHeight * 0.626168);\n            ctx.bezierCurveTo(imageWidth * 0.509345, imageHeight * 0.626168, imageWidth * 0.518691, imageHeight * 0.616822, imageWidth * 0.518691, imageHeight * 0.607476);\n            ctx.bezierCurveTo(imageWidth * 0.518691, imageHeight * 0.598130, imageWidth * 0.514018, imageHeight * 0.593457, imageWidth * 0.504672, imageHeight * 0.588785);\n            ctx.bezierCurveTo(imageWidth * 0.504672, imageHeight * 0.579439, imageWidth * 0.504672, imageHeight * 0.532710, imageWidth * 0.509345, imageHeight * 0.532710);\n            ctx.bezierCurveTo(imageWidth * 0.523364, imageHeight * 0.528037, imageWidth * 0.532710, imageHeight * 0.514018, imageWidth * 0.532710, imageHeight * 0.5);\n            ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.490654, imageWidth * 0.528037, imageHeight * 0.481308, imageWidth * 0.518691, imageHeight * 0.471962);\n            ctx.closePath();\n            ctx.fill();\n            ctx.restore();\n        };\n\n        var draw1000ftPointer = function (ctx) {\n            var grad;\n\n            grad = ctx.createLinearGradient(0, imageHeight * 0.401869, 0, imageHeight * 0.616822);\n            grad.addColorStop(0, '#ffffff');\n            grad.addColorStop(0.51, '#ffffff');\n            grad.addColorStop(0.52, '#ffffff');\n            grad.addColorStop(0.5201, '#202020');\n            grad.addColorStop(0.53, '#202020');\n            grad.addColorStop(1, '#202020');\n            ctx.fillStyle = grad;\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.518691, imageHeight * 0.471962);\n            ctx.bezierCurveTo(imageWidth * 0.514018, imageHeight * 0.462616, imageWidth * 0.528037, imageHeight * 0.401869, imageWidth * 0.528037, imageHeight * 0.401869);\n            ctx.lineTo(imageWidth * 0.5, imageHeight * 0.331775);\n            ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.401869);\n            ctx.bezierCurveTo(imageWidth * 0.471962, imageHeight * 0.401869, imageWidth * 0.485981, imageHeight * 0.462616, imageWidth * 0.481308, imageHeight * 0.471962);\n            ctx.bezierCurveTo(imageWidth * 0.471962, imageHeight * 0.481308, imageWidth * 0.467289, imageHeight * 0.490654, imageWidth * 0.467289, imageHeight * 0.5);\n            ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.514018, imageWidth * 0.476635, imageHeight * 0.528037, imageWidth * 0.490654, imageHeight * 0.532710);\n            ctx.bezierCurveTo(imageWidth * 0.490654, imageHeight * 0.532710, imageWidth * 0.462616, imageHeight * 0.574766, imageWidth * 0.462616, imageHeight * 0.593457);\n            ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.616822, imageWidth * 0.5, imageHeight * 0.612149, imageWidth * 0.5, imageHeight * 0.612149);\n            ctx.bezierCurveTo(imageWidth * 0.5, imageHeight * 0.612149, imageWidth * 0.532710, imageHeight * 0.616822, imageWidth * 0.537383, imageHeight * 0.593457);\n            ctx.bezierCurveTo(imageWidth * 0.537383, imageHeight * 0.574766, imageWidth * 0.509345, imageHeight * 0.532710, imageWidth * 0.509345, imageHeight * 0.532710);\n            ctx.bezierCurveTo(imageWidth * 0.523364, imageHeight * 0.528037, imageWidth * 0.532710, imageHeight * 0.514018, imageWidth * 0.532710, imageHeight * 0.5);\n            ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.490654, imageWidth * 0.528037, imageHeight * 0.481308, imageWidth * 0.518691, imageHeight * 0.471962);\n            ctx.closePath();\n            ctx.fill();\n            ctx.restore();\n        };\n\n        var draw10000ftPointer = function (ctx) {\n            ctx.fillStyle = '#ffffff';\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.518691, imageHeight * 0.471962);\n            ctx.bezierCurveTo(imageWidth * 0.514018, imageHeight * 0.471962, imageWidth * 0.514018, imageHeight * 0.467289, imageWidth * 0.514018, imageHeight * 0.467289);\n            ctx.lineTo(imageWidth * 0.514018, imageHeight * 0.317757);\n            ctx.lineTo(imageWidth * 0.504672, imageHeight * 0.303738);\n            ctx.lineTo(imageWidth * 0.504672, imageHeight * 0.182242);\n            ctx.lineTo(imageWidth * 0.532710, imageHeight * 0.116822);\n            ctx.lineTo(imageWidth * 0.462616, imageHeight * 0.116822);\n            ctx.lineTo(imageWidth * 0.495327, imageHeight * 0.182242);\n            ctx.lineTo(imageWidth * 0.495327, imageHeight * 0.299065);\n            ctx.lineTo(imageWidth * 0.485981, imageHeight * 0.317757);\n            ctx.lineTo(imageWidth * 0.485981, imageHeight * 0.467289);\n            ctx.bezierCurveTo(imageWidth * 0.485981, imageHeight * 0.467289, imageWidth * 0.485981, imageHeight * 0.471962, imageWidth * 0.481308, imageHeight * 0.471962);\n            ctx.bezierCurveTo(imageWidth * 0.471962, imageHeight * 0.481308, imageWidth * 0.467289, imageHeight * 0.490654, imageWidth * 0.467289, imageHeight * 0.5);\n            ctx.bezierCurveTo(imageWidth * 0.467289, imageHeight * 0.518691, imageWidth * 0.481308, imageHeight * 0.532710, imageWidth * 0.5, imageHeight * 0.532710);\n            ctx.bezierCurveTo(imageWidth * 0.518691, imageHeight * 0.532710, imageWidth * 0.532710, imageHeight * 0.518691, imageWidth * 0.532710, imageHeight * 0.5);\n            ctx.bezierCurveTo(imageWidth * 0.532710, imageHeight * 0.490654, imageWidth * 0.528037, imageHeight * 0.481308, imageWidth * 0.518691, imageHeight * 0.471962);\n            ctx.closePath();\n            ctx.fill();\n        };\n\n        function calcAngleStep() {\n            angleStep100ft = (TWO_PI) / (maxValue - minValue);\n            angleStep1000ft = angleStep100ft / 10;\n            angleStep10000ft = angleStep1000ft / 10;\n        }\n\n        function calcValues() {\n            value100 = (value % 1000) / 100;\n            value1000 = (value % 10000) / 100;\n            value10000 = (value % 100000) / 100;\n        }\n\n        // **************   Initialization  ********************\n        // Draw all static painting code to background\n        var init = function (parameters) {\n            parameters = parameters || {};\n            // Parameters\n            var drawFrame = (undefined === parameters.frame ? false : parameters.frame),\n                drawBackground = (undefined === parameters.background ? false : parameters.background),\n                drawPointers = (undefined === parameters.pointers ? false : parameters.pointers),\n                drawForeground = (undefined === parameters.foreground ? false : parameters.foreground);\n\n            initialized = true;\n\n            calcAngleStep();\n\n            // Create frame in frame buffer (backgroundBuffer)\n            if (drawFrame && frameVisible) {\n                drawRadialFrameImage(frameContext, frameDesign, centerX, centerY, imageWidth, imageHeight);\n            }\n\n            if (drawBackground && backgroundVisible) {\n                // Create background in background buffer (backgroundBuffer)\n                drawRadialBackgroundImage(backgroundContext, backgroundColor, centerX, centerY, imageWidth, imageHeight);\n\n                // Create custom layer in background buffer (backgroundBuffer)\n                drawRadialCustomImage(backgroundContext, customLayer, centerX, centerY, imageWidth, imageHeight);\n\n                // Create tickmarks in background buffer (backgroundBuffer)\n                drawTickmarksImage(backgroundContext, 0, TICKMARK_OFFSET, 0, 10, angleStep100ft, tickLabelPeriod, 0, true, true, null);\n            }\n\n            // Create lcd background if selected in background buffer (backgroundBuffer)\n            if (drawBackground && lcdVisible) {\n                lcdBuffer = createLcdBackgroundImage(imageWidth * 0.4, imageHeight * 0.09, lcdColor);\n                backgroundContext.drawImage(lcdBuffer, (imageWidth - (imageWidth * 0.4)) / 2, imageHeight * 0.56);\n            }\n\n            if (drawPointers) {\n                // Create 100ft pointer in buffer\n                draw100ftPointer(pointer100Context, false);\n                // Create 1000ft pointer in buffer\n                draw1000ftPointer(pointer1000Context, false);\n                // Create 10000ft pointer in buffer\n                draw10000ftPointer(pointer10000Context, false);\n            }\n\n            if (drawForeground && foregroundVisible) {\n                drawRadialForegroundImage(foregroundContext, foregroundType, imageWidth, imageHeight, true, knobType, knobStyle);\n            }\n        };\n\n        var resetBuffers = function (buffers) {\n            buffers = buffers || {};\n            var resetFrame = (undefined === buffers.frame ? false : buffers.frame),\n                resetBackground = (undefined === buffers.background ? false : buffers.background),\n                resetPointers = (undefined === buffers.pointers ? false : buffers.pointers),\n                resetForeground = (undefined === buffers.foreground ? false : buffers.foreground);\n\n            if (resetFrame) {\n                frameBuffer.width = size;\n                frameBuffer.height = size;\n                frameContext = frameBuffer.getContext('2d');\n            }\n\n            if (resetBackground) {\n                backgroundBuffer.width = size;\n                backgroundBuffer.height = size;\n                backgroundContext = backgroundBuffer.getContext('2d');\n            }\n\n            if (resetPointers) {\n                pointer100Buffer.width = size;\n                pointer100Buffer.height = size;\n                pointer100Context = pointer100Buffer.getContext('2d');\n\n                pointer1000Buffer.width = size;\n                pointer1000Buffer.height = size;\n                pointer1000Context = pointer1000Buffer.getContext('2d');\n\n                pointer10000Buffer.width = size;\n                pointer10000Buffer.height = size;\n                pointer10000Context = pointer10000Buffer.getContext('2d');\n            }\n\n            if (resetForeground) {\n                foregroundBuffer.width = size;\n                foregroundBuffer.height = size;\n                foregroundContext = foregroundBuffer.getContext('2d');\n            }\n        };\n\n        //************************************ Public methods **************************************\n        this.setValue = function (newValue) {\n            value = parseFloat(newValue);\n            this.repaint();\n        };\n\n        this.getValue = function () {\n            return value;\n        };\n\n        this.setValueAnimated = function (newValue, callback) {\n            newValue = parseFloat(newValue);\n            var targetValue = (newValue < minValue ? minValue : newValue),\n                gauge = this,\n                time;\n\n            if (value !== targetValue) {\n                if (undefined !==  tween && tween.isPlaying) {\n                    tween.stop();\n                }\n                // Allow 5 secs per 10,000ft\n                time = Math.max(Math.abs(value - targetValue) / 10000 * 5, 1);\n                tween = new Tween({}, '', Tween.regularEaseInOut, value, targetValue, time);\n                //tween = new Tween(new Object(), '', Tween.strongEaseInOut, value, targetValue, 1);\n                tween.onMotionChanged = function (event) {\n                        value = event.target._pos;\n                        if (!repainting) {\n                            repainting = true;\n                            requestAnimFrame(gauge.repaint);\n                        }\n                    };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tween.onMotionFinished = callback;\n                }\n\n                tween.start();\n            }\n            return this;\n        };\n\n        this.setFrameDesign = function (newFrameDesign) {\n            resetBuffers({frame: true});\n            frameDesign = newFrameDesign;\n            init({frame: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setBackgroundColor = function (newBackgroundColor) {\n            resetBuffers({background: true,\n                          pointer: true       // type2 & 13 depend on background\n                });\n            backgroundColor = newBackgroundColor;\n            init({background: true,   // type2 & 13 depend on background\n                  pointer: true\n                });\n            this.repaint();\n            return this;\n        };\n\n        this.setForegroundType = function (newForegroundType) {\n            resetBuffers({foreground: true});\n            foregroundType = newForegroundType;\n            init({foreground: true});\n            this.repaint();\n            return this;\n        };\n\n        this.setLcdColor = function (newLcdColor) {\n            lcdColor = newLcdColor;\n            resetBuffers({background: true});\n            init({background: true});\n            this.repaint();\n            return this;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init({frame: true,\n                      background: true,\n                      led: true,\n                      pointers: true,\n                      foreground: true});\n            }\n\n            //mainCtx.save();\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            // Draw frame\n            if (frameVisible) {\n                mainCtx.drawImage(frameBuffer, 0, 0);\n            }\n\n            // Draw buffered image to visible canvas\n            mainCtx.drawImage(backgroundBuffer, 0, 0);\n\n            // Draw lcd display\n            if (lcdVisible) {\n                drawLcdText(value);\n            }\n\n            // re-calculate the spearate pointer values\n            calcValues();\n\n            var shadowOffset = imageWidth * 0.006 * 0.5;\n\n            mainCtx.save();\n            //Draw 10000ft pointer\n            // Define rotation center\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate((value10000 - minValue) * angleStep10000ft);\n            mainCtx.translate(-centerX, -centerY);\n            // Set the pointer shadow params\n            mainCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n            mainCtx.shadowBlur = shadowOffset * 2;\n            // Draw the pointer\n            mainCtx.drawImage(pointer10000Buffer, 0, 0);\n\n            shadowOffset = imageWidth * 0.006 * 0.75;\n            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\n            //Draw 1000ft pointer\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate((value1000 - minValue) * angleStep1000ft - (value10000 - minValue) * angleStep10000ft);\n            mainCtx.translate(-centerX, -centerY);\n            mainCtx.drawImage(pointer1000Buffer, 0, 0);\n\n            shadowOffset = imageWidth * 0.006;\n            mainCtx.shadowOffsetX = mainCtx.shadowOffsetY = shadowOffset;\n\n            //Draw 100ft pointer\n            mainCtx.translate(centerX, centerY);\n            mainCtx.rotate((value100 - minValue) * angleStep100ft - (value1000 - minValue) * angleStep1000ft);\n            mainCtx.translate(-centerX, -centerY);\n            mainCtx.drawImage(pointer100Buffer, 0, 0);\n            mainCtx.restore();\n\n            //Draw the foregound\n            if (foregroundVisible) {\n                mainCtx.drawImage(foregroundBuffer, 0, 0);\n            }\n\n            repainting = false;\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var trafficlight = function (canvas, parameters) {\n        parameters = parameters || {};\n        var width = (undefined === parameters.width ? 0 : parameters.width),\n            height = (undefined === parameters.height ? 0 : parameters.height),\n            //\n            mainCtx = getCanvasContext(canvas),\n            prefHeight, imageWidth, imageHeight,\n            redOn = false,\n            yellowOn = false,\n            greenOn = false,\n            initialized = false,\n            housingBuffer = doc.createElement('canvas'),\n            housingCtx = housingBuffer.getContext('2d'),\n            lightGreenBuffer = doc.createElement('canvas'),\n            lightGreenCtx = lightGreenBuffer.getContext('2d'),\n            greenOnBuffer = doc.createElement('canvas'),\n            greenOnCtx = greenOnBuffer.getContext('2d'),\n            greenOffBuffer = doc.createElement('canvas'),\n            greenOffCtx = greenOffBuffer.getContext('2d'),\n            lightYellowBuffer = doc.createElement('canvas'),\n            lightYellowCtx = lightYellowBuffer.getContext('2d'),\n            yellowOnBuffer = doc.createElement('canvas'),\n            yellowOnCtx = yellowOnBuffer.getContext('2d'),\n            yellowOffBuffer = doc.createElement('canvas'),\n            yellowOffCtx = yellowOffBuffer.getContext('2d'),\n            lightRedBuffer = doc.createElement('canvas'),\n            lightRedCtx = lightRedBuffer.getContext('2d'),\n            redOnBuffer = doc.createElement('canvas'),\n            redOnCtx = redOnBuffer.getContext('2d'),\n            redOffBuffer = doc.createElement('canvas'),\n            redOffCtx = redOffBuffer.getContext('2d');\n            // End of variables\n\n        // Has a size been specified?\n        if (width === 0) {\n            width = mainCtx.canvas.width;\n        }\n        if (height === 0) {\n            height = mainCtx.canvas.height;\n        }\n\n        // Set the size - also clears the canvas\n        mainCtx.canvas.width = width;\n        mainCtx.canvas.height = height;\n\n        prefHeight = width < (height * 0.352517) ? (width * 2.836734) : height;\n        imageWidth = prefHeight * 0.352517;\n        imageHeight = prefHeight;\n\n        housingBuffer.width = imageWidth;\n        housingBuffer.height = imageHeight;\n\n        lightGreenBuffer.width = imageWidth;\n        lightGreenBuffer.height = imageHeight;\n\n        greenOnBuffer.width = imageWidth;\n        greenOnBuffer.height = imageHeight;\n\n        greenOffBuffer.width = imageWidth;\n        greenOffBuffer.height = imageHeight;\n\n        lightYellowBuffer.width = imageWidth;\n        lightYellowBuffer.height = imageHeight;\n\n        yellowOnBuffer.width = imageWidth;\n        yellowOnBuffer.height = imageHeight;\n\n        yellowOffBuffer.width = imageWidth;\n        yellowOffBuffer.height = imageHeight;\n\n        lightRedBuffer.width = imageWidth;\n        lightRedBuffer.height = imageHeight;\n\n        redOnBuffer.width = imageWidth;\n        redOnBuffer.height = imageHeight;\n\n        redOffBuffer.width = imageWidth;\n        redOffBuffer.height = imageHeight;\n\n        var drawHousing = function (ctx) {\n            var housingFill, housingFrontFill;\n\n            ctx.save();\n\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0.107142 * imageWidth, 0);\n            ctx.lineTo(imageWidth - 0.107142 * imageWidth, 0);\n            ctx.quadraticCurveTo(imageWidth, 0, imageWidth, 0.107142 * imageWidth);\n            ctx.lineTo(imageWidth, imageHeight - 0.107142 * imageWidth);\n            ctx.quadraticCurveTo(imageWidth, imageHeight, imageWidth - 0.107142 * imageWidth, imageHeight);\n            ctx.lineTo(0.107142 * imageWidth, imageHeight);\n            ctx.quadraticCurveTo(0, imageHeight, 0, imageHeight - 0.107142 * imageWidth);\n            ctx.lineTo(0, 0.107142 * imageWidth);\n            ctx.quadraticCurveTo(0, 0, 0.107142 * imageWidth, imageHeight);\n            ctx.closePath();\n            housingFill = ctx.createLinearGradient(0.040816 * imageWidth, 0.007194 * imageHeight, 0.952101 * imageWidth, 0.995882 * imageHeight);\n            housingFill.addColorStop(0, 'rgb(152, 152, 154)');\n            housingFill.addColorStop(0.01, 'rgb(152, 152, 154)');\n            housingFill.addColorStop(0.09, '#333333');\n            housingFill.addColorStop(0.24, 'rgb(152, 152, 154)');\n            housingFill.addColorStop(0.55, 'rgb(31, 31, 31)');\n            housingFill.addColorStop(0.78, '#363636');\n            housingFill.addColorStop(0.98, '#000000');\n            housingFill.addColorStop(1, '#000000');\n            ctx.fillStyle = housingFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0.030612 * imageWidth + 0.084183 * imageWidth, 0.010791 * imageHeight);\n            ctx.lineTo(0.030612 * imageWidth + 0.938775 * imageWidth - 0.084183 * imageWidth, 0.010791 * imageHeight);\n            ctx.quadraticCurveTo(0.030612 * imageWidth + 0.938775 * imageWidth, 0.010791 * imageHeight, 0.030612 * imageWidth + 0.938775 * imageWidth, 0.010791 * imageHeight + 0.084183 * imageWidth);\n            ctx.lineTo(0.030612 * imageWidth + 0.938775 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight - 0.084183 * imageWidth);\n            ctx.quadraticCurveTo(0.030612 * imageWidth + 0.938775 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight, 0.030612 * imageWidth + 0.938775 * imageWidth - 0.084183 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight);\n            ctx.lineTo(0.030612 * imageWidth + 0.084183 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight);\n            ctx.quadraticCurveTo(0.030612 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight, 0.030612 * imageWidth, 0.010791 * imageHeight + 0.978417 * imageHeight - 0.084183 * imageWidth);\n            ctx.lineTo(0.030612 * imageWidth, 0.010791 * imageHeight + 0.084183 * imageWidth);\n            ctx.quadraticCurveTo(0.030612 * imageWidth, 0.010791 * imageHeight, 0.030612 * imageWidth + 0.084183 * imageWidth, 0.010791 * imageHeight);\n            ctx.closePath();\n            housingFrontFill = ctx.createLinearGradient(-0.132653 * imageWidth, -0.053956 * imageHeight, 2.061408 * imageWidth, 0.667293 * imageHeight);\n            housingFrontFill.addColorStop(0, '#000000');\n            housingFrontFill.addColorStop(0.01, '#000000');\n            housingFrontFill.addColorStop(0.16, '#373735');\n            housingFrontFill.addColorStop(0.31, '#000000');\n            housingFrontFill.addColorStop(0.44, '#303030');\n            housingFrontFill.addColorStop(0.65, '#000000');\n            housingFrontFill.addColorStop(0.87, '#363636');\n            housingFrontFill.addColorStop(0.98, '#000000');\n            housingFrontFill.addColorStop(1, '#000000');\n            ctx.fillStyle = housingFrontFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.restore();\n        };\n\n        var drawLightGreen = function (ctx) {\n            var lightGreenFrameFill, lightGreenInnerFill, lightGreenEffectFill, lightGreenInnerShadowFill;\n\n            ctx.save();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.805755 * imageHeight, 0.397959 * imageWidth, 0, TWO_PI, false);\n            lightGreenFrameFill = ctx.createLinearGradient(0, 0.665467 * imageHeight, 0, 0.946043 * imageHeight);\n            lightGreenFrameFill.addColorStop(0, '#ffffff');\n            lightGreenFrameFill.addColorStop(0.05, 'rgb(204, 204, 204)');\n            lightGreenFrameFill.addColorStop(0.1, 'rgb(153, 153, 153)');\n            lightGreenFrameFill.addColorStop(0.17, '#666666');\n            lightGreenFrameFill.addColorStop(0.27, '#333333');\n            lightGreenFrameFill.addColorStop(1, '#010101');\n            ctx.fillStyle = lightGreenFrameFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.scale(1.083333, 1);\n            ctx.beginPath();\n            ctx.arc(0.461538 * imageWidth, 0.816546 * imageHeight, 0.367346 * imageWidth, 0, TWO_PI, false);\n            lightGreenInnerFill = ctx.createLinearGradient(0, 0.687050 * imageHeight, 0, 0.946043 * imageHeight);\n            lightGreenInnerFill.addColorStop(0, '#000000');\n            lightGreenInnerFill.addColorStop(0.35, '#040404');\n            lightGreenInnerFill.addColorStop(0.66, '#000000');\n            lightGreenInnerFill.addColorStop(1, '#010101');\n            ctx.fillStyle = lightGreenInnerFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.809352 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n            lightGreenEffectFill = ctx.createRadialGradient(0.5 * imageWidth, 0.809352 * imageHeight, 0, 0.5 * imageWidth, 0.809352 * imageHeight, 0.362244 * imageWidth);\n            lightGreenEffectFill.addColorStop(0, '#000000');\n            lightGreenEffectFill.addColorStop(0.88, '#000000');\n            lightGreenEffectFill.addColorStop(0.95, 'rgb(94, 94, 94)');\n            lightGreenEffectFill.addColorStop(1, '#010101');\n            ctx.fillStyle = lightGreenEffectFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.809352 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n            lightGreenInnerShadowFill = ctx.createLinearGradient(0, 0.687050 * imageHeight, 0, 0.917266 * imageHeight);\n            lightGreenInnerShadowFill.addColorStop(0, '#000000');\n            lightGreenInnerShadowFill.addColorStop(1, 'rgba(1, 1, 1, 0)');\n            ctx.fillStyle = lightGreenInnerShadowFill;\n            ctx.fill();\n            ctx.restore();\n            ctx.restore();\n        };\n\n        var drawGreenOn = function (ctx) {\n            var greenOnFill, greenOnGlowFill;\n\n            ctx.save();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n            greenOnFill = ctx.createRadialGradient(0.5 * imageWidth, 0.809352 * imageHeight, 0, 0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth);\n            greenOnFill.addColorStop(0, 'rgb(85, 185, 123)');\n            greenOnFill.addColorStop(1, 'rgb(0, 31, 0)');\n            ctx.fillStyle = greenOnFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0, 0.812949 * imageHeight);\n            ctx.bezierCurveTo(0, 0.910071 * imageHeight, 0.224489 * imageWidth, 0.989208 * imageHeight, 0.5 * imageWidth, 0.989208 * imageHeight);\n            ctx.bezierCurveTo(0.775510 * imageWidth, 0.989208 * imageHeight, imageWidth, 0.910071 * imageHeight, imageWidth, 0.809352 * imageHeight);\n            ctx.bezierCurveTo(0.908163 * imageWidth, 0.751798 * imageHeight, 0.704081 * imageWidth, 0.687050 * imageHeight, 0.5 * imageWidth, 0.687050 * imageHeight);\n            ctx.bezierCurveTo(0.285714 * imageWidth, 0.687050 * imageHeight, 0.081632 * imageWidth, 0.751798 * imageHeight, 0, 0.812949 * imageHeight);\n            ctx.closePath();\n            greenOnGlowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.809352 * imageHeight, 0, 0.5 * imageWidth, 0.809352 * imageHeight, 0.515306 * imageWidth);\n            greenOnGlowFill.addColorStop(0, 'rgb(65, 187, 126)');\n            greenOnGlowFill.addColorStop(1, 'rgba(4, 37, 8, 0)');\n            ctx.fillStyle = greenOnGlowFill;\n            ctx.fill();\n            ctx.restore();\n            ctx.restore();\n        };\n\n        var drawGreenOff = function (ctx) {\n            var greenOffFill, greenOffInnerShadowFill;\n\n            ctx.save();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n            greenOffFill = ctx.createRadialGradient(0.5 * imageWidth, 0.809352 * imageHeight, 0, 0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth);\n            greenOffFill.addColorStop(0, 'rgba(0, 255, 0, 0.25)');\n            greenOffFill.addColorStop(1, 'rgba(0, 255, 0, 0.05)');\n            ctx.fillStyle = greenOffFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n            greenOffInnerShadowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.809352 * imageHeight, 0, 0.5 * imageWidth, 0.809352 * imageHeight, 0.326530 * imageWidth);\n            greenOffInnerShadowFill.addColorStop(0, 'rgba(1, 1, 1, 0)');\n            greenOffInnerShadowFill.addColorStop(0.55, 'rgba(0, 0, 0, 0)');\n            greenOffInnerShadowFill.addColorStop(0.5501, 'rgba(0, 0, 0, 0)');\n            greenOffInnerShadowFill.addColorStop(0.78, 'rgba(0, 0, 0, 0.12)');\n            greenOffInnerShadowFill.addColorStop(0.79, 'rgba(0, 0, 0, 0.12)');\n            greenOffInnerShadowFill.addColorStop(1, 'rgba(0, 0, 0, 0.5)');\n            ctx.fillStyle = greenOffInnerShadowFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.fillStyle = ctx.createPattern(hatchBuffer, 'repeat');\n            ctx.fill();\n\n            ctx.restore();\n        };\n\n        var drawLightYellow = function (ctx) {\n            var lightYellowFrameFill, lightYellowInnerFill, lightYellowEffectFill, lightYellowInnerShadowFill;\n\n            ctx.save();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.496402 * imageHeight, 0.397959 * imageWidth, 0, TWO_PI, false);\n            lightYellowFrameFill = ctx.createLinearGradient(0, 0.356115 * imageHeight, 0, 0.636690 * imageHeight);\n            lightYellowFrameFill.addColorStop(0, '#ffffff');\n            lightYellowFrameFill.addColorStop(0.05, 'rgb(204, 204, 204)');\n            lightYellowFrameFill.addColorStop(0.1, 'rgb(153, 153, 153)');\n            lightYellowFrameFill.addColorStop(0.17, '#666666');\n            lightYellowFrameFill.addColorStop(0.27, '#333333');\n            lightYellowFrameFill.addColorStop(1, '#010101');\n            ctx.fillStyle = lightYellowFrameFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.scale(1.083333, 1);\n            ctx.beginPath();\n            ctx.arc(0.461538 * imageWidth, 0.507194 * imageHeight, 0.367346 * imageWidth, 0, TWO_PI, false);\n            lightYellowInnerFill = ctx.createLinearGradient(0, 0.377697 * imageHeight, 0, 0.636690 * imageHeight);\n            lightYellowInnerFill.addColorStop(0, '#000000');\n            lightYellowInnerFill.addColorStop(0.35, '#040404');\n            lightYellowInnerFill.addColorStop(0.66, '#000000');\n            lightYellowInnerFill.addColorStop(1, '#010101');\n            ctx.fillStyle = lightYellowInnerFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n            lightYellowEffectFill = ctx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageHeight, 0.362244 * imageWidth);\n            lightYellowEffectFill.addColorStop(0, '#000000');\n            lightYellowEffectFill.addColorStop(0.88, '#000000');\n            lightYellowEffectFill.addColorStop(0.95, '#5e5e5e');\n            lightYellowEffectFill.addColorStop(1, '#010101');\n            ctx.fillStyle = lightYellowEffectFill;\n            ctx.fill();\n            ctx.restore();\n\n            //lIGHT_YELLOW_4_E_INNER_SHADOW_3_4\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n            lightYellowInnerShadowFill = ctx.createLinearGradient(0, 0.377697 * imageHeight, 0, 0.607913 * imageHeight);\n            lightYellowInnerShadowFill.addColorStop(0, '#000000');\n            lightYellowInnerShadowFill.addColorStop(1, 'rgba(1, 1, 1, 0)');\n            ctx.fillStyle = lightYellowInnerShadowFill;\n            ctx.fill();\n            ctx.restore();\n            ctx.restore();\n        };\n\n        var drawYellowOn = function (ctx) {\n            var yellowOnFill, yellowOnGlowFill;\n\n            ctx.save();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n            yellowOnFill = ctx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth);\n            yellowOnFill.addColorStop(0, '#fed434');\n            yellowOnFill.addColorStop(1, '#82330c');\n            ctx.fillStyle = yellowOnFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0, 0.503597 * imageHeight);\n            ctx.bezierCurveTo(0, 0.600719 * imageHeight, 0.224489 * imageWidth, 0.679856 * imageHeight, 0.5 * imageWidth, 0.679856 * imageHeight);\n            ctx.bezierCurveTo(0.775510 * imageWidth, 0.679856 * imageHeight, imageWidth, 0.600719 * imageHeight, imageWidth, 0.5 * imageHeight);\n            ctx.bezierCurveTo(0.908163 * imageWidth, 0.442446 * imageHeight, 0.704081 * imageWidth, 0.377697 * imageHeight, 0.5 * imageWidth, 0.377697 * imageHeight);\n            ctx.bezierCurveTo(0.285714 * imageWidth, 0.377697 * imageHeight, 0.081632 * imageWidth, 0.442446 * imageHeight, 0, 0.503597 * imageHeight);\n            ctx.closePath();\n            yellowOnGlowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageHeight, 0.515306 * imageWidth);\n            yellowOnGlowFill.addColorStop(0, '#fed434');\n            yellowOnGlowFill.addColorStop(1, 'rgba(130, 51, 12, 0)');\n            ctx.fillStyle = yellowOnGlowFill;\n            ctx.fill();\n            ctx.restore();\n            ctx.restore();\n        };\n\n        var drawYellowOff = function (ctx) {\n            var yellowOffFill, yellowOffInnerShadowFill;\n\n            ctx.save();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n            yellowOffFill = ctx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth);\n            yellowOffFill.addColorStop(0, 'rgba(255, 255, 0, 0.25)');\n            yellowOffFill.addColorStop(1, 'rgba(255, 255, 0, 0.05)');\n            ctx.fillStyle = yellowOffFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n            yellowOffInnerShadowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageHeight, 0.326530 * imageWidth);\n            yellowOffInnerShadowFill.addColorStop(0, 'rgba(1, 1, 1, 0)');\n            yellowOffInnerShadowFill.addColorStop(0.55, 'rgba(0, 0, 0, 0)');\n            yellowOffInnerShadowFill.addColorStop(0.5501, 'rgba(0, 0, 0, 0)');\n            yellowOffInnerShadowFill.addColorStop(0.78, 'rgba(0, 0, 0, 0.12)');\n            yellowOffInnerShadowFill.addColorStop(0.79, 'rgba(0, 0, 0, 0.13)');\n            yellowOffInnerShadowFill.addColorStop(1, 'rgba(0, 0, 0, 0.5)');\n            ctx.fillStyle = yellowOffInnerShadowFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.fillStyle = ctx.createPattern(hatchBuffer, 'repeat');\n            ctx.fill();\n\n            ctx.restore();\n        };\n\n        var drawLightRed = function (ctx) {\n            var lightRedFrameFill, lightRedInnerFill, lightRedEffectFill, lightRedInnerShadowFill;\n\n            ctx.save();\n\n            //lIGHT_RED_7_E_FRAME_0_1\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.187050 * imageHeight, 0.397959 * imageWidth, 0, TWO_PI, false);\n            lightRedFrameFill = ctx.createLinearGradient((0.5 * imageWidth), (0.046762 * imageHeight), ((0.500000) * imageWidth), ((0.327338) * imageHeight));\n            lightRedFrameFill.addColorStop(0, '#ffffff');\n            lightRedFrameFill.addColorStop(0.05, '#cccccc');\n            lightRedFrameFill.addColorStop(0.1, '#999999');\n            lightRedFrameFill.addColorStop(0.17, '#666666');\n            lightRedFrameFill.addColorStop(0.27, '#333333');\n            lightRedFrameFill.addColorStop(1, '#010101');\n            ctx.fillStyle = lightRedFrameFill;\n            ctx.fill();\n            ctx.restore();\n\n            //lIGHT_RED_7_E_INNER_CLIP_1_2\n            ctx.save();\n            ctx.scale(1.083333, 1);\n            ctx.beginPath();\n            ctx.arc(0.461538 * imageWidth, 0.197841 * imageHeight, 0.367346 * imageWidth, 0, TWO_PI, false);\n            lightRedInnerFill = ctx.createLinearGradient((0.5 * imageWidth), (0.068345 * imageHeight), ((0.500000) * imageWidth), ((0.327338) * imageHeight));\n            lightRedInnerFill.addColorStop(0, '#000000');\n            lightRedInnerFill.addColorStop(0.35, '#040404');\n            lightRedInnerFill.addColorStop(0.66, '#000000');\n            lightRedInnerFill.addColorStop(1, '#010101');\n            ctx.fillStyle = lightRedInnerFill;\n            ctx.fill();\n            ctx.restore();\n\n            //lIGHT_RED_7_E_LIGHT_EFFECT_2_3\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.190647 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n            lightRedEffectFill = ctx.createRadialGradient((0.5) * imageWidth, ((0.190647) * imageHeight), 0, ((0.5) * imageWidth), ((0.190647) * imageHeight), 0.362244 * imageWidth);\n            lightRedEffectFill.addColorStop(0, '#000000');\n            lightRedEffectFill.addColorStop(0.88, '#000000');\n            lightRedEffectFill.addColorStop(0.95, '#5e5e5e');\n            lightRedEffectFill.addColorStop(1, '#010101');\n            ctx.fillStyle = lightRedEffectFill;\n            ctx.fill();\n            ctx.restore();\n\n            //lIGHT_RED_7_E_INNER_SHADOW_3_4\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.190647 * imageHeight, 0.357142 * imageWidth, 0, TWO_PI, false);\n            lightRedInnerShadowFill = ctx.createLinearGradient((0.5 * imageWidth), (0.068345 * imageHeight), ((0.500000) * imageWidth), ((0.298561) * imageHeight));\n            lightRedInnerShadowFill.addColorStop(0, '#000000');\n            lightRedInnerShadowFill.addColorStop(1, 'rgba(1, 1, 1, 0)');\n            ctx.fillStyle = lightRedInnerShadowFill;\n            ctx.fill();\n            ctx.restore();\n            ctx.restore();\n        };\n\n        var drawRedOn = function (ctx) {\n            var redOnFill, redOnGlowFill;\n\n            ctx.save();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n            redOnFill = ctx.createRadialGradient(0.5 * imageWidth, 0.190647 * imageHeight, 0, 0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth);\n            redOnFill.addColorStop(0, '#ff0000');\n            redOnFill.addColorStop(1, '#410004');\n            ctx.fillStyle = redOnFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0, 0.194244 * imageHeight);\n            ctx.bezierCurveTo(0, 0.291366 * imageHeight, 0.224489 * imageWidth, 0.370503 * imageHeight, 0.5 * imageWidth, 0.370503 * imageHeight);\n            ctx.bezierCurveTo(0.775510 * imageWidth, 0.370503 * imageHeight, imageWidth, 0.291366 * imageHeight, imageWidth, 0.190647 * imageHeight);\n            ctx.bezierCurveTo(0.908163 * imageWidth, 0.133093 * imageHeight, 0.704081 * imageWidth, 0.068345 * imageHeight, 0.5 * imageWidth, 0.068345 * imageHeight);\n            ctx.bezierCurveTo(0.285714 * imageWidth, 0.068345 * imageHeight, 0.081632 * imageWidth, 0.133093 * imageHeight, 0, 0.194244 * imageHeight);\n            ctx.closePath();\n            redOnGlowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.190647 * imageHeight, 0, 0.5 * imageWidth, 0.190647 * imageHeight, 0.515306 * imageWidth);\n            redOnGlowFill.addColorStop(0, '#ff0000');\n            redOnGlowFill.addColorStop(1, 'rgba(118, 5, 1, 0)');\n            ctx.fillStyle = redOnGlowFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.restore();\n        };\n\n        var drawRedOff = function (ctx) {\n            var redOffFill, redOffInnerShadowFill;\n\n            ctx.save();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n            redOffFill = ctx.createRadialGradient(0.5 * imageWidth, 0.190647 * imageHeight, 0, 0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth);\n            redOffFill.addColorStop(0, 'rgba(255, 0, 0, 0.25)');\n            redOffFill.addColorStop(1, 'rgba(255, 0, 0, 0.05)');\n            ctx.fillStyle = redOffFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.save();\n            ctx.scale(1, 1);\n            ctx.beginPath();\n            ctx.arc(0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth, 0, TWO_PI, false);\n            redOffInnerShadowFill = ctx.createRadialGradient(0.5 * imageWidth, 0.190647 * imageHeight, 0, 0.5 * imageWidth, 0.190647 * imageHeight, 0.326530 * imageWidth);\n            redOffInnerShadowFill.addColorStop(0, 'rgba(1, 1, 1, 0)');\n            redOffInnerShadowFill.addColorStop(0.55, 'rgba(0, 0, 0, 0)');\n            redOffInnerShadowFill.addColorStop(0.5501, 'rgba(0, 0, 0, 0)');\n            redOffInnerShadowFill.addColorStop(0.78, 'rgba(0, 0, 0, 0.12)');\n            redOffInnerShadowFill.addColorStop(0.79, 'rgba(0, 0, 0, 0.13)');\n            redOffInnerShadowFill.addColorStop(1, 'rgba(0, 0, 0, 0.5)');\n            ctx.fillStyle = redOffInnerShadowFill;\n            ctx.fill();\n            ctx.restore();\n\n            ctx.fillStyle = ctx.createPattern(hatchBuffer, 'repeat');\n            ctx.fill();\n\n            ctx.restore();\n        };\n\n        function drawToBuffer(width, height, drawFunction) {\n            var buffer = doc.createElement('canvas');\n            buffer.width = width;\n            buffer.height = height;\n            drawFunction(buffer.getContext('2d'));\n            return buffer;\n        }\n\n        var hatchBuffer = drawToBuffer(2, 2, function (ctx) {\n            ctx.save();\n            ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\n            ctx.beginPath();\n            ctx.lineTo(0, 0, 1, 0);\n            ctx.lineTo(0, 1, 0, 1);\n            ctx.stroke();\n            ctx.restore();\n        });\n\n        var init = function () {\n            initialized = true;\n\n            drawHousing(housingCtx);\n            drawLightGreen(lightGreenCtx);\n            drawGreenOn(greenOnCtx);\n            drawGreenOff(greenOffCtx);\n            drawLightYellow(lightYellowCtx);\n            drawYellowOn(yellowOnCtx);\n            drawYellowOff(yellowOffCtx);\n            drawLightRed(lightRedCtx);\n            drawRedOn(redOnCtx);\n            drawRedOff(redOffCtx);\n        };\n\n        // **************   P U B L I C   M E T H O D S   ********************************\n        this.setRedOn = function (on) {\n            redOn = !!on;\n            this.repaint();\n        };\n\n        this.isRedOn = function () {\n            return redOn;\n        };\n\n        this.setYellowOn = function (on) {\n            yellowOn = !!on;\n            this.repaint();\n        };\n\n        this.isYellowOn = function () {\n            return yellowOn;\n        };\n\n        this.setGreenOn = function (on) {\n            greenOn = !!on;\n            this.repaint();\n        };\n\n        this.isGreenOn = function () {\n            return greenOn;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init();\n            }\n\n            mainCtx.save();\n            mainCtx.clearRect(0, 0, mainCtx.canvas.width, mainCtx.canvas.height);\n\n            // housing\n            mainCtx.drawImage(housingBuffer, 0, 0);\n\n            // Green light\n            mainCtx.drawImage(lightGreenBuffer, 0, 0);\n\n            if (greenOn) {\n                mainCtx.drawImage(greenOnBuffer, 0, 0);\n            }\n\n            mainCtx.drawImage(greenOffBuffer, 0, 0);\n\n            // Yellow light\n            mainCtx.drawImage(lightYellowBuffer, 0, 0);\n\n            if (yellowOn) {\n                mainCtx.drawImage(yellowOnBuffer, 0, 0);\n            }\n\n            mainCtx.drawImage(yellowOffBuffer, 0, 0);\n\n            // Red light\n            mainCtx.drawImage(lightRedBuffer, 0, 0);\n\n            if (redOn) {\n                mainCtx.drawImage(redOnBuffer, 0, 0);\n            }\n\n            mainCtx.drawImage(redOffBuffer, 0, 0);\n            mainCtx.restore();\n        };\n\n        // Visualize the component\n        this.repaint();\n\n        return this;\n    };\n\n    var lightbulb = function (canvas, parameters) {\n        parameters = parameters || {};\n        var mainCtx,\n            // parameters\n            width = (undefined === parameters.width ? 0 : parameters.width),\n            height = (undefined === parameters.height ? 0 : parameters.height),\n            glowColor = (undefined === parameters.glowColor ? '#ffff00' : parameters.glowColor),\n            //\n            size, imageWidth, imageHeight,\n            initialized = false,\n            lightOn = false,\n            alpha = 1,\n            offBuffer = doc.createElement('canvas'),\n            offCtx = offBuffer.getContext('2d'),\n            onBuffer = doc.createElement('canvas'),\n            onCtx = onBuffer.getContext('2d'),\n            bulbBuffer = doc.createElement('canvas'),\n            bulbCtx = bulbBuffer.getContext('2d');\n            // End of variables\n\n        // Get the canvas context and clear it\n        mainCtx = document.getElementById(canvas).getContext('2d');\n\n        // Has a size been specified?\n        if (width === 0) {\n            width = mainCtx.canvas.width;\n        }\n        if (height === 0) {\n            height = mainCtx.canvas.height;\n        }\n\n        // Get the size\n        mainCtx.canvas.width = width;\n        mainCtx.canvas.height = height;\n        size = width < height ? width : height;\n        imageWidth = size;\n        imageHeight = size;\n\n        function drawToBuffer(width, height, drawFunction) {\n            var buffer = doc.createElement('canvas');\n            buffer.width = width;\n            buffer.height = height;\n            drawFunction(buffer.getContext('2d'));\n            return buffer;\n        }\n\n        var getColorValues = function (color) {\n            var colorData,\n                lookupBuffer = drawToBuffer(1, 1, function (ctx) {\n                    ctx.fillStyle = color;\n                    ctx.beginPath();\n                    ctx.rect(0, 0, 1, 1);\n                    ctx.fill();\n                });\n\n            colorData = lookupBuffer.getContext('2d').getImageData(0, 0, 2, 2).data;\n            return [colorData[0], colorData[1], colorData[2]];\n        };\n\n        offBuffer.width = imageWidth;\n        offBuffer.height = imageHeight;\n\n        onBuffer.width = imageWidth;\n        onBuffer.height = imageHeight;\n\n        bulbBuffer.width = imageWidth;\n        bulbBuffer.height = imageHeight;\n\n        var drawOff = function (ctx) {\n            var glassOffFill;\n\n            ctx.save();\n\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0.289473 * imageWidth, 0.438596 * imageHeight);\n            ctx.bezierCurveTo(0.289473 * imageWidth, 0.561403 * imageHeight, 0.385964 * imageWidth, 0.605263 * imageHeight, 0.385964 * imageWidth, 0.745614 * imageHeight);\n            ctx.bezierCurveTo(0.385964 * imageWidth, 0.745614 * imageHeight, 0.587719 * imageWidth, 0.745614 * imageHeight, 0.587719 * imageWidth, 0.745614 * imageHeight);\n            ctx.bezierCurveTo(0.587719 * imageWidth, 0.605263 * imageHeight, 0.692982 * imageWidth, 0.561403 * imageHeight, 0.692982 * imageWidth, 0.438596 * imageHeight);\n            ctx.bezierCurveTo(0.692982 * imageWidth, 0.324561 * imageHeight, 0.605263 * imageWidth, 0.228070 * imageHeight, 0.5 * imageWidth, 0.228070 * imageHeight);\n            ctx.bezierCurveTo(0.385964 * imageWidth, 0.228070 * imageHeight, 0.289473 * imageWidth, 0.324561 * imageHeight, 0.289473 * imageWidth, 0.438596 * imageHeight);\n            ctx.closePath();\n            glassOffFill = ctx.createLinearGradient(0, 0.289473 * imageHeight, 0, 0.701754 * imageHeight);\n            glassOffFill.addColorStop(0, '#eeeeee');\n            glassOffFill.addColorStop(0.99, '#999999');\n            glassOffFill.addColorStop(1, '#999999');\n            ctx.fillStyle = glassOffFill;\n            ctx.fill();\n            ctx.lineCap = 'butt';\n            ctx.lineJoin = 'round';\n            ctx.lineWidth = 0.008771 * imageWidth;\n            ctx.strokeStyle = '#cccccc';\n            ctx.stroke();\n            ctx.restore();\n            ctx.restore();\n        };\n\n        var drawOn = function (ctx) {\n            var glassOnFill,\n                data = getColorValues(glowColor),\n                red = data[0],\n                green = data[1],\n                blue = data[2],\n                hsl = rgbToHsl(red, green, blue);\n\n            ctx.save();\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0.289473 * imageWidth, 0.438596 * imageHeight);\n            ctx.bezierCurveTo(0.289473 * imageWidth, 0.561403 * imageHeight, 0.385964 * imageWidth, 0.605263 * imageHeight, 0.385964 * imageWidth, 0.745614 * imageHeight);\n            ctx.bezierCurveTo(0.385964 * imageWidth, 0.745614 * imageHeight, 0.587719 * imageWidth, 0.745614 * imageHeight, 0.587719 * imageWidth, 0.745614 * imageHeight);\n            ctx.bezierCurveTo(0.587719 * imageWidth, 0.605263 * imageHeight, 0.692982 * imageWidth, 0.561403 * imageHeight, 0.692982 * imageWidth, 0.438596 * imageHeight);\n            ctx.bezierCurveTo(0.692982 * imageWidth, 0.324561 * imageHeight, 0.605263 * imageWidth, 0.228070 * imageHeight, 0.5 * imageWidth, 0.228070 * imageHeight);\n            ctx.bezierCurveTo(0.385964 * imageWidth, 0.228070 * imageHeight, 0.289473 * imageWidth, 0.324561 * imageHeight, 0.289473 * imageWidth, 0.438596 * imageHeight);\n            ctx.closePath();\n\n            glassOnFill = ctx.createLinearGradient(0, 0.289473 * imageHeight, 0, 0.701754 * imageHeight);\n\n            if (red === green && green === blue) {\n                glassOnFill.addColorStop(0, 'hsl(0, 60%, 0%)');\n                glassOnFill.addColorStop(1, 'hsl(0, 40%, 0%)');\n            } else {\n                glassOnFill.addColorStop(0, 'hsl(' + hsl[0] * 255 + ', ' + hsl[1] * 100 + '%, 70%)');\n                glassOnFill.addColorStop(1, 'hsl(' + hsl[0] * 255 + ', ' + hsl[1] * 100 + '%, 80%)');\n            }\n            ctx.fillStyle = glassOnFill;\n\n            // sets shadow properties\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 0;\n            ctx.shadowBlur = 30;\n            ctx.shadowColor = glowColor;\n\n            ctx.fill();\n\n            ctx.lineCap = 'butt';\n            ctx.lineJoin = 'round';\n            ctx.lineWidth = 0.008771 * imageWidth;\n            ctx.strokeStyle = 'rgba(' + red + ', ' + green + ', ' + blue + ', 0.4)';\n            ctx.stroke();\n\n            ctx.restore();\n\n            ctx.restore();\n        };\n\n        var drawBulb = function (ctx) {\n            var highlight, winding, winding1, contactPlate;\n\n            ctx.save();\n\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0.350877 * imageWidth, 0.333333 * imageHeight);\n            ctx.bezierCurveTo(0.350877 * imageWidth, 0.280701 * imageHeight, 0.412280 * imageWidth, 0.236842 * imageHeight, 0.5 * imageWidth, 0.236842 * imageHeight);\n            ctx.bezierCurveTo(0.578947 * imageWidth, 0.236842 * imageHeight, 0.640350 * imageWidth, 0.280701 * imageHeight, 0.640350 * imageWidth, 0.333333 * imageHeight);\n            ctx.bezierCurveTo(0.640350 * imageWidth, 0.385964 * imageHeight, 0.578947 * imageWidth, 0.429824 * imageHeight, 0.5 * imageWidth, 0.429824 * imageHeight);\n            ctx.bezierCurveTo(0.412280 * imageWidth, 0.429824 * imageHeight, 0.350877 * imageWidth, 0.385964 * imageHeight, 0.350877 * imageWidth, 0.333333 * imageHeight);\n            ctx.closePath();\n            highlight = ctx.createLinearGradient(0, 0.245614 * imageHeight, 0, 0.429824 * imageHeight);\n            highlight.addColorStop(0, '#ffffff');\n            highlight.addColorStop(0.99, 'rgba(255, 255, 255, 0)');\n            highlight.addColorStop(1, 'rgba(255, 255, 255, 0)');\n            ctx.fillStyle = highlight;\n            ctx.fill();\n            ctx.restore();\n\n            //winding\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0.377192 * imageWidth, 0.745614 * imageHeight);\n            ctx.bezierCurveTo(0.377192 * imageWidth, 0.745614 * imageHeight, 0.429824 * imageWidth, 0.728070 * imageHeight, 0.491228 * imageWidth, 0.728070 * imageHeight);\n            ctx.bezierCurveTo(0.561403 * imageWidth, 0.728070 * imageHeight, 0.605263 * imageWidth, 0.736842 * imageHeight, 0.605263 * imageWidth, 0.736842 * imageHeight);\n            ctx.lineTo(0.605263 * imageWidth, 0.763157 * imageHeight);\n            ctx.lineTo(0.596491 * imageWidth, 0.780701 * imageHeight);\n            ctx.lineTo(0.605263 * imageWidth, 0.798245 * imageHeight);\n            ctx.lineTo(0.596491 * imageWidth, 0.815789 * imageHeight);\n            ctx.lineTo(0.605263 * imageWidth, 0.833333 * imageHeight);\n            ctx.lineTo(0.596491 * imageWidth, 0.850877 * imageHeight);\n            ctx.lineTo(0.605263 * imageWidth, 0.868421 * imageHeight);\n            ctx.lineTo(0.596491 * imageWidth, 0.885964 * imageHeight);\n            ctx.lineTo(0.605263 * imageWidth, 0.894736 * imageHeight);\n            ctx.bezierCurveTo(0.605263 * imageWidth, 0.894736 * imageHeight, 0.570175 * imageWidth, 0.956140 * imageHeight, 0.535087 * imageWidth, 0.991228 * imageHeight);\n            ctx.bezierCurveTo(0.526315 * imageWidth, 0.991228 * imageHeight, 0.517543 * imageWidth, imageHeight, 0.5 * imageWidth, imageHeight);\n            ctx.bezierCurveTo(0.482456 * imageWidth, imageHeight, 0.473684 * imageWidth, imageHeight, 0.464912 * imageWidth, 0.991228 * imageHeight);\n            ctx.bezierCurveTo(0.421052 * imageWidth, 0.947368 * imageHeight, 0.394736 * imageWidth, 0.903508 * imageHeight, 0.394736 * imageWidth, 0.903508 * imageHeight);\n            ctx.lineTo(0.394736 * imageWidth, 0.894736 * imageHeight);\n            ctx.lineTo(0.385964 * imageWidth, 0.885964 * imageHeight);\n            ctx.lineTo(0.394736 * imageWidth, 0.868421 * imageHeight);\n            ctx.lineTo(0.385964 * imageWidth, 0.850877 * imageHeight);\n            ctx.lineTo(0.394736 * imageWidth, 0.833333 * imageHeight);\n            ctx.lineTo(0.385964 * imageWidth, 0.815789 * imageHeight);\n            ctx.lineTo(0.394736 * imageWidth, 0.798245 * imageHeight);\n            ctx.lineTo(0.377192 * imageWidth, 0.789473 * imageHeight);\n            ctx.lineTo(0.394736 * imageWidth, 0.771929 * imageHeight);\n            ctx.lineTo(0.377192 * imageWidth, 0.763157 * imageHeight);\n            ctx.lineTo(0.377192 * imageWidth, 0.745614 * imageHeight);\n            ctx.closePath();\n            winding = ctx.createLinearGradient(0.473684 * imageWidth, 0.728070 * imageHeight, 0.484702 * imageWidth, 0.938307 * imageHeight);\n            winding.addColorStop(0, '#333333');\n            winding.addColorStop(0.04, '#d9dad6');\n            winding.addColorStop(0.19, '#e4e5e0');\n            winding.addColorStop(0.24, '#979996');\n            winding.addColorStop(0.31, '#fbffff');\n            winding.addColorStop(0.4, '#818584');\n            winding.addColorStop(0.48, '#f5f7f4');\n            winding.addColorStop(0.56, '#959794');\n            winding.addColorStop(0.64, '#f2f2f0');\n            winding.addColorStop(0.7, '#828783');\n            winding.addColorStop(0.78, '#fcfcfc');\n            winding.addColorStop(1, '#666666');\n            ctx.fillStyle = winding;\n            ctx.fill();\n            ctx.restore();\n\n            // winding\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0.377192 * imageWidth, 0.745614 * imageHeight);\n            ctx.bezierCurveTo(0.377192 * imageWidth, 0.745614 * imageHeight, 0.429824 * imageWidth, 0.728070 * imageHeight, 0.491228 * imageWidth, 0.728070 * imageHeight);\n            ctx.bezierCurveTo(0.561403 * imageWidth, 0.728070 * imageHeight, 0.605263 * imageWidth, 0.736842 * imageHeight, 0.605263 * imageWidth, 0.736842 * imageHeight);\n            ctx.lineTo(0.605263 * imageWidth, 0.763157 * imageHeight);\n            ctx.lineTo(0.596491 * imageWidth, 0.780701 * imageHeight);\n            ctx.lineTo(0.605263 * imageWidth, 0.798245 * imageHeight);\n            ctx.lineTo(0.596491 * imageWidth, 0.815789 * imageHeight);\n            ctx.lineTo(0.605263 * imageWidth, 0.833333 * imageHeight);\n            ctx.lineTo(0.596491 * imageWidth, 0.850877 * imageHeight);\n            ctx.lineTo(0.605263 * imageWidth, 0.868421 * imageHeight);\n            ctx.lineTo(0.596491 * imageWidth, 0.885964 * imageHeight);\n            ctx.lineTo(0.605263 * imageWidth, 0.894736 * imageHeight);\n            ctx.bezierCurveTo(0.605263 * imageWidth, 0.894736 * imageHeight, 0.570175 * imageWidth, 0.956140 * imageHeight, 0.535087 * imageWidth, 0.991228 * imageHeight);\n            ctx.bezierCurveTo(0.526315 * imageWidth, 0.991228 * imageHeight, 0.517543 * imageWidth, imageHeight, 0.5 * imageWidth, imageHeight);\n            ctx.bezierCurveTo(0.482456 * imageWidth, imageHeight, 0.473684 * imageWidth, imageHeight, 0.464912 * imageWidth, 0.991228 * imageHeight);\n            ctx.bezierCurveTo(0.421052 * imageWidth, 0.947368 * imageHeight, 0.394736 * imageWidth, 0.903508 * imageHeight, 0.394736 * imageWidth, 0.903508 * imageHeight);\n            ctx.lineTo(0.394736 * imageWidth, 0.894736 * imageHeight);\n            ctx.lineTo(0.385964 * imageWidth, 0.885964 * imageHeight);\n            ctx.lineTo(0.394736 * imageWidth, 0.868421 * imageHeight);\n            ctx.lineTo(0.385964 * imageWidth, 0.850877 * imageHeight);\n            ctx.lineTo(0.394736 * imageWidth, 0.833333 * imageHeight);\n            ctx.lineTo(0.385964 * imageWidth, 0.815789 * imageHeight);\n            ctx.lineTo(0.394736 * imageWidth, 0.798245 * imageHeight);\n            ctx.lineTo(0.377192 * imageWidth, 0.789473 * imageHeight);\n            ctx.lineTo(0.394736 * imageWidth, 0.771929 * imageHeight);\n            ctx.lineTo(0.377192 * imageWidth, 0.763157 * imageHeight);\n            ctx.lineTo(0.377192 * imageWidth, 0.745614 * imageHeight);\n            ctx.closePath();\n            winding1 = ctx.createLinearGradient(0.377192 * imageWidth, 0.789473 * imageHeight, 0.605263 * imageWidth, 0.789473 * imageHeight);\n            winding1.addColorStop(0, 'rgba(0, 0, 0, 0.4)');\n            winding1.addColorStop(0.15, 'rgba(0, 0, 0, 0.32)');\n            winding1.addColorStop(0.85, 'rgba(0, 0, 0, 0.33)');\n            winding1.addColorStop(1, 'rgba(0, 0, 0, 0.4)');\n            ctx.fillStyle = winding1;\n            ctx.fill();\n            ctx.restore();\n\n            // contact plate\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(0.421052 * imageWidth, 0.947368 * imageHeight);\n            ctx.bezierCurveTo(0.438596 * imageWidth, 0.956140 * imageHeight, 0.447368 * imageWidth, 0.973684 * imageHeight, 0.464912 * imageWidth, 0.991228 * imageHeight);\n            ctx.bezierCurveTo(0.473684 * imageWidth, imageHeight, 0.482456 * imageWidth, imageHeight, 0.5 * imageWidth, imageHeight);\n            ctx.bezierCurveTo(0.517543 * imageWidth, imageHeight, 0.526315 * imageWidth, 0.991228 * imageHeight, 0.535087 * imageWidth, 0.991228 * imageHeight);\n            ctx.bezierCurveTo(0.543859 * imageWidth, 0.982456 * imageHeight, 0.561403 * imageWidth, 0.956140 * imageHeight, 0.578947 * imageWidth, 0.947368 * imageHeight);\n            ctx.bezierCurveTo(0.552631 * imageWidth, 0.938596 * imageHeight, 0.526315 * imageWidth, 0.938596 * imageHeight, 0.5 * imageWidth, 0.938596 * imageHeight);\n            ctx.bezierCurveTo(0.473684 * imageWidth, 0.938596 * imageHeight, 0.447368 * imageWidth, 0.938596 * imageHeight, 0.421052 * imageWidth, 0.947368 * imageHeight);\n            ctx.closePath();\n            contactPlate = ctx.createLinearGradient(0, 0.938596 * imageHeight, 0, imageHeight);\n            contactPlate.addColorStop(0, '#050a06');\n            contactPlate.addColorStop(0.61, '#070602');\n            contactPlate.addColorStop(0.71, '#999288');\n            contactPlate.addColorStop(0.83, '#010101');\n            contactPlate.addColorStop(1, '#000000');\n            ctx.fillStyle = contactPlate;\n            ctx.fill();\n            ctx.restore();\n            ctx.restore();\n        };\n\n        var clearCanvas = function (ctx) {\n            // Store the current transformation matrix\n            ctx.save();\n\n            // Use the identity matrix while clearing the canvas\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n            // Restore the transform\n            ctx.restore();\n        };\n\n        var init = function () {\n            initialized = true;\n            drawOff(offCtx);\n            drawOn(onCtx);\n            drawBulb(bulbCtx);\n        };\n\n        // **************   P U B L I C   M E T H O D S   ********************************\n        this.setOn = function (on) {\n            lightOn = !!on;\n            this.repaint();\n            return this;\n        };\n\n        this.isOn = function () {\n            return lightOn;\n        };\n\n        this.setAlpha = function (a) {\n            alpha = a;\n            this.repaint();\n            return this;\n        };\n\n        this.getAlpha = function () {\n            return alpha;\n        };\n\n        this.setGlowColor = function (color) {\n            glowColor = color;\n            init();\n            this.repaint();\n            return this;\n        };\n\n        this.getGlowColor = function () {\n            return glowColor;\n        };\n\n        // Component visualization\n        this.repaint = function () {\n            if (!initialized) {\n                init();\n            }\n\n            clearCanvas(mainCtx);\n\n            mainCtx.save();\n\n            mainCtx.drawImage(offBuffer, 0, 0);\n\n            mainCtx.globalAlpha = alpha;\n            if (lightOn) {\n                mainCtx.drawImage(onBuffer, 0, 0);\n            }\n            mainCtx.globalAlpha = 1;\n            mainCtx.drawImage(bulbBuffer, 0, 0);\n            mainCtx.restore();\n        };\n\n        this.repaint();\n\n        return this;\n    };\n\n    var odometer = function (canvas, parameters) {\n        parameters = parameters || {};\n\n        // parameters\n        var _context = (undefined === parameters._context ? null : parameters._context),  // If component used internally by steelseries\n            height = (undefined === parameters.height ? 0 : parameters.height),\n            digits = (undefined === parameters.digits ? 6 : parameters.digits),\n            decimals = (undefined === parameters.decimals ? 1 : parameters.decimals),\n            decimalBackColor = (undefined === parameters.decimalBackColor ? '#F0F0F0' : parameters.decimalBackColor),\n            decimalForeColor = (undefined === parameters.decimalForeColor ? '#F01010' : parameters.decimalForeColor),\n            font = (undefined === parameters.font ? 'sans-serif' : parameters.font),\n            value = (undefined === parameters.value ? 0 : parameters.value),\n            valueBackColor = (undefined === parameters.valueBackColor ? '#050505' : parameters.valueBackColor),\n            valueForeColor = (undefined === parameters.valueForeColor ? '#F8F8F8' : parameters.valueForeColor),\n            wobbleFactor = (undefined === parameters.wobbleFactor ? 0.07 : parameters.wobbleFactor),\n            //\n            initialized = false,\n            tween, ctx,\n            repainting = false,\n            digitHeight, digitWidth, stdFont,\n            width, columnHeight, verticalSpace, zeroOffset,\n            wobble = [],\n            //buffers\n            backgroundBuffer, backgroundContext,\n            foregroundBuffer, foregroundContext,\n            digitBuffer, digitContext,\n            decimalBuffer, decimalContext;\n            // End of variables\n\n        // Get the canvas context and clear it\n        if (_context) {\n            ctx = _context;\n        } else {\n            ctx = getCanvasContext(canvas);\n        }\n\n        // Has a height been specified?\n        if (height === 0) {\n            height = ctx.canvas.height;\n        }\n\n        // Cannot display negative values yet\n        if (value < 0) {\n            value = 0;\n        }\n\n        digitHeight = Math.floor(height * 0.85);\n        stdFont = '600 ' + digitHeight + 'px ' + font;\n\n        digitWidth = Math.floor(height * 0.68);\n        width = digitWidth * (digits + decimals);\n        columnHeight = digitHeight * 11;\n        verticalSpace = columnHeight / 12;\n        zeroOffset = verticalSpace * 0.81;\n\n        // Resize and clear the main context\n        ctx.canvas.width = width;\n        ctx.canvas.height = height;\n\n        // Create buffers\n        backgroundBuffer = createBuffer(width, height);\n        backgroundContext = backgroundBuffer.getContext('2d');\n\n        foregroundBuffer = createBuffer(width, height);\n        foregroundContext = foregroundBuffer.getContext('2d');\n\n        digitBuffer = createBuffer(digitWidth, columnHeight * 1.1);\n        digitContext = digitBuffer.getContext('2d');\n\n        decimalBuffer = createBuffer(digitWidth, columnHeight * 1.1);\n        decimalContext = decimalBuffer.getContext('2d');\n\n        function init() {\n            var grad, i;\n\n            initialized = true;\n\n            // Create the foreground\n            foregroundContext.rect(0, 0, width, height);\n            grad = foregroundContext.createLinearGradient(0, 0, 0, height);\n            grad.addColorStop(0, 'rgba(0, 0, 0, 1)');\n            grad.addColorStop(0.1, 'rgba(0, 0, 0, 0.4)');\n            grad.addColorStop(0.33, 'rgba(255, 255, 255, 0.45)');\n            grad.addColorStop(0.46, 'rgba(255, 255, 255, 0)');\n            grad.addColorStop(0.9, 'rgba(0, 0, 0, 0.4)');\n            grad.addColorStop(1, 'rgba(0, 0, 0, 1)');\n            foregroundContext.fillStyle = grad;\n            foregroundContext.fill();\n\n            // Create a digit column\n            // background\n            digitContext.rect(0, 0, digitWidth, columnHeight * 1.1);\n            digitContext.fillStyle = valueBackColor;\n            digitContext.fill();\n            // edges\n            digitContext.strokeStyle = '#f0f0f0';\n            digitContext.lineWidth = '1px'; //height * 0.1 + 'px';\n            digitContext.moveTo(0, 0);\n            digitContext.lineTo(0, columnHeight * 1.1);\n            digitContext.stroke();\n            digitContext.strokeStyle = '#202020';\n            digitContext.moveTo(digitWidth, 0);\n            digitContext.lineTo(digitWidth, columnHeight * 1.1);\n            digitContext.stroke();\n            // numerals\n            digitContext.textAlign = 'center';\n            digitContext.textBaseline = 'middle';\n            digitContext.font = stdFont;\n            digitContext.fillStyle = valueForeColor;\n            // put the digits 901234567890 vertically into the buffer\n            for (i = 9; i < 21; i++) {\n                digitContext.fillText(i % 10, digitWidth * 0.5, verticalSpace * (i - 9) + verticalSpace / 2);\n            }\n\n            // Create a decimal column\n            if (decimals > 0) {\n                // background\n                decimalContext.rect(0, 0, digitWidth, columnHeight * 1.1);\n                decimalContext.fillStyle = decimalBackColor;\n                decimalContext.fill();\n                // edges\n                decimalContext.strokeStyle = '#f0f0f0';\n                decimalContext.lineWidth = '1px'; //height * 0.1 + 'px';\n                decimalContext.moveTo(0, 0);\n                decimalContext.lineTo(0, columnHeight * 1.1);\n                decimalContext.stroke();\n                decimalContext.strokeStyle = '#202020';\n                decimalContext.moveTo(digitWidth, 0);\n                decimalContext.lineTo(digitWidth, columnHeight * 1.1);\n                decimalContext.stroke();\n                // numerals\n                decimalContext.textAlign = 'center';\n                decimalContext.textBaseline = 'middle';\n                decimalContext.font = stdFont;\n                decimalContext.fillStyle = decimalForeColor;\n                // put the digits 901234567890 vertically into the buffer\n                for (i = 9; i < 21; i++) {\n                    decimalContext.fillText(i % 10, digitWidth * 0.5, verticalSpace * (i - 9) + verticalSpace / 2);\n                }\n            }\n            // wobble factors\n            for (i = 0; i < (digits + decimals); i++) {\n                wobble[i] = Math.random() * wobbleFactor * height - wobbleFactor * height / 2;\n            }\n\n        }\n\n        function drawDigits() {\n            var pos = 1,\n            val = value, i, num, numb, frac, prevNum;\n\n            // do not use Math.pow() - rounding errors!\n            for (i = 0; i < decimals; i++) {\n                val *= 10;\n            }\n\n            numb = Math.floor(val);\n            frac = val - numb;\n            numb = String(numb);\n            prevNum = 9;\n\n            for (i = 0; i < decimals + digits; i++) {\n                num = +numb.substring(numb.length - i - 1, numb.length - i) || 0;\n                if (prevNum !== 9) {\n                    frac = 0;\n                }\n                if (i < decimals) {\n                    backgroundContext.drawImage(decimalBuffer, width - digitWidth * pos, -(verticalSpace * (num + frac) + zeroOffset + wobble[i]));\n                } else {\n                    backgroundContext.drawImage(digitBuffer, width - digitWidth * pos, -(verticalSpace * (num + frac) + zeroOffset + wobble[i]));\n                }\n                pos++;\n                prevNum = num;\n            }\n        }\n\n        this.setValueAnimated = function (newVal, callback) {\n            var gauge = this;\n            newVal = parseFloat(newVal);\n\n            if (newVal < 0) {\n                newVal = 0;\n            }\n            if (value !== newVal) {\n                if (undefined !== tween && tween.isPlaying) {\n                    tween.stop();\n                }\n\n                tween = new Tween({}, '', Tween.strongEaseOut, value, newVal, 2);\n                tween.onMotionChanged = function (event) {\n                    value = event.target._pos;\n                    if (!repainting) {\n                        repainting = true;\n                        requestAnimFrame(gauge.repaint);\n                    }\n                };\n\n                // do we have a callback function to process?\n                if (callback && typeof(callback) === \"function\") {\n                    tween.onMotionFinished = callback;\n                }\n\n                tween.start();\n            }\n            this.repaint();\n            return this;\n        };\n\n        this.setValue = function (newVal) {\n            value = parseFloat(newVal);\n            if (value < 0) {\n                value = 0;\n            }\n            this.repaint();\n            return this;\n        };\n\n        this.getValue = function () {\n            return value;\n        };\n\n        this.repaint = function () {\n            if (!initialized) {\n                init();\n            }\n\n            // draw digits\n            drawDigits();\n\n            // draw the foreground\n            backgroundContext.drawImage(foregroundBuffer, 0, 0);\n\n            // paint back to the main context\n            ctx.drawImage(backgroundBuffer, 0, 0);\n\n            repainting = false;\n        };\n\n        this.repaint();\n    };\n\n    //************************************  I M A G E   -   F U N C T I O N S  *****************************************\n\n    var drawRoseImage = function (ctx, centerX, centerY, imageWidth, imageHeight, backgroundColor) {\n        var fill = true,\n            i, grad,\n            symbolColor = backgroundColor.symbolColor.getRgbaColor();\n\n        ctx.save();\n        ctx.lineWidth = 1;\n        ctx.fillStyle = symbolColor;\n        ctx.strokeStyle = symbolColor;\n        ctx.translate(centerX, centerY);\n        // broken ring\n        for (i = 0; i < 360; i += 15) {\n            fill = !fill;\n\n            ctx.beginPath();\n            ctx.arc(0, 0, imageWidth * 0.26, i * RAD_FACTOR, (i + 15) * RAD_FACTOR, false);\n            ctx.arc(0, 0, imageWidth * 0.23, (i + 15) * RAD_FACTOR, i * RAD_FACTOR, true);\n            ctx.closePath();\n            if (fill) {\n                ctx.fill();\n            }\n            ctx.stroke();\n        }\n\n        ctx.translate(-centerX, -centerY);\n\n/*\n        // PATH1_2\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.560747, imageHeight * 0.584112);\n        ctx.lineTo(imageWidth * 0.640186, imageHeight * 0.644859);\n        ctx.lineTo(imageWidth * 0.584112, imageHeight * 0.560747);\n        ctx.lineTo(imageWidth * 0.560747, imageHeight * 0.584112);\n        ctx.closePath();\n        ctx.fillStyle = fillColorPath;\n        ctx.fill();\n        ctx.stroke();\n\n        // PATH2_2\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.411214, imageHeight * 0.560747);\n        ctx.lineTo(imageWidth * 0.355140, imageHeight * 0.644859);\n        ctx.lineTo(imageWidth * 0.439252, imageHeight * 0.588785);\n        ctx.lineTo(imageWidth * 0.411214, imageHeight * 0.560747);\n        ctx.closePath();\n        ctx.fillStyle = fillColorPath;\n        ctx.fill();\n        ctx.stroke();\n\n        // PATH3_2\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.584112, imageHeight * 0.443925);\n        ctx.lineTo(imageWidth * 0.640186, imageHeight * 0.359813);\n        ctx.lineTo(imageWidth * 0.560747, imageHeight * 0.420560);\n        ctx.lineTo(imageWidth * 0.584112, imageHeight * 0.443925);\n        ctx.closePath();\n        ctx.fillStyle = fillColorPath;\n        ctx.fill();\n        ctx.stroke();\n\n        // PATH4_2\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.439252, imageHeight * 0.415887);\n        ctx.lineTo(imageWidth * 0.355140, imageHeight * 0.359813);\n        ctx.lineTo(imageWidth * 0.415887, imageHeight * 0.439252);\n        ctx.lineTo(imageWidth * 0.439252, imageHeight * 0.415887);\n        ctx.closePath();\n        ctx.fillStyle = fillColorPath;\n        ctx.fill();\n        ctx.stroke();\n\n        // PATH5_2\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.523364, imageHeight * 0.397196);\n        ctx.lineTo(imageWidth * 0.5, imageHeight * 0.196261);\n        ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.397196);\n        ctx.lineTo(imageWidth * 0.523364, imageHeight * 0.397196);\n        ctx.closePath();\n        var PATH5_2_GRADIENT = ctx.createLinearGradient(0.476635 * imageWidth, 0, 0.518691 * imageWidth, 0);\n        PATH5_2_GRADIENT.addColorStop(0, 'rgb(222, 223, 218)');\n        PATH5_2_GRADIENT.addColorStop(0.48, 'rgb(222, 223, 218)');\n        PATH5_2_GRADIENT.addColorStop(0.49, backgroundColor.symbolColor.getRgbaColor());\n        PATH5_2_GRADIENT.addColorStop(1, backgroundColor.symbolColor.getRgbaColor());\n        ctx.fillStyle = PATH5_2_GRADIENT;\n        ctx.fill();\n        ctx.stroke();\n\n        // PATH6_2\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.471962, imageHeight * 0.607476);\n        ctx.lineTo(imageWidth * 0.5, imageHeight * 0.813084);\n        ctx.lineTo(imageWidth * 0.523364, imageHeight * 0.607476);\n        ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.607476);\n        ctx.closePath();\n        var PATH6_2_GRADIENT = ctx.createLinearGradient(0.518691 * imageWidth, 0, (0.518691 + -0.037383) * imageWidth, 0);\n        PATH6_2_GRADIENT.addColorStop(0, 'rgb(222, 223, 218)');\n        PATH6_2_GRADIENT.addColorStop(0.56, 'rgb(222, 223, 218)');\n        PATH6_2_GRADIENT.addColorStop(0.5601, backgroundColor.symbolColor.getRgbaColor());\n        PATH6_2_GRADIENT.addColorStop(1, backgroundColor.symbolColor.getRgbaColor());\n        ctx.fillStyle = PATH6_2_GRADIENT;\n        ctx.lineWidth = 1;\n        ctx.lineCap = 'square';\n        ctx.lineJoin = 'miter';\n        ctx.strokeStyle = backgroundColor.symbolColor.getRgbaColor();\n        ctx.fill();\n        ctx.stroke();\n\n        // PATH7_2\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.602803, imageHeight * 0.528037);\n        ctx.lineTo(imageWidth * 0.803738, imageHeight * 0.5);\n        ctx.lineTo(imageWidth * 0.602803, imageHeight * 0.476635);\n        ctx.lineTo(imageWidth * 0.602803, imageHeight * 0.528037);\n        ctx.closePath();\n        var PATH7_2_GRADIENT = ctx.createLinearGradient(0, 0.485981 * imageHeight, 0, 0.514018 * imageHeight);\n        PATH7_2_GRADIENT.addColorStop(0, 'rgb(222, 223, 218)');\n        PATH7_2_GRADIENT.addColorStop(0.48, 'rgb(222, 223, 218)');\n        PATH7_2_GRADIENT.addColorStop(0.49, backgroundColor.symbolColor.getRgbaColor());\n        PATH7_2_GRADIENT.addColorStop(1, backgroundColor.symbolColor.getRgbaColor());\n        ctx.fillStyle = PATH7_2_GRADIENT;\n        ctx.fill();\n        ctx.stroke();\n\n        // PATH8_2\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.392523, imageHeight * 0.476635);\n        ctx.lineTo(imageWidth * 0.191588, imageHeight * 0.5);\n        ctx.lineTo(imageWidth * 0.392523, imageHeight * 0.528037);\n        ctx.lineTo(imageWidth * 0.392523, imageHeight * 0.476635);\n        ctx.closePath();\n        var PATH8_2_GRADIENT = ctx.createLinearGradient(0, 0.528037 * imageHeight, 0, 0.485981 * imageHeight);\n        PATH8_2_GRADIENT.addColorStop(0, 'rgb(222, 223, 218)');\n        PATH8_2_GRADIENT.addColorStop(0.52, 'rgb(222, 223, 218)');\n        PATH8_2_GRADIENT.addColorStop(0.53, backgroundColor.symbolColor.getRgbaColor());\n        PATH8_2_GRADIENT.addColorStop(1, backgroundColor.symbolColor.getRgbaColor());\n        ctx.fillStyle = PATH8_2_GRADIENT;\n        ctx.fill();\n        ctx.stroke();\n\n        // PATH9_2\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.406542, imageHeight * 0.504672);\n        ctx.bezierCurveTo(imageWidth * 0.406542, imageHeight * 0.453271, imageWidth * 0.448598, imageHeight * 0.411214, imageWidth * 0.5, imageHeight * 0.411214);\n        ctx.bezierCurveTo(imageWidth * 0.546728, imageHeight * 0.411214, imageWidth * 0.588785, imageHeight * 0.453271, imageWidth * 0.588785, imageHeight * 0.504672);\n        ctx.bezierCurveTo(imageWidth * 0.588785, imageHeight * 0.551401, imageWidth * 0.546728, imageHeight * 0.593457, imageWidth * 0.5, imageHeight * 0.593457);\n        ctx.bezierCurveTo(imageWidth * 0.448598, imageHeight * 0.593457, imageWidth * 0.406542, imageHeight * 0.551401, imageWidth * 0.406542, imageHeight * 0.504672);\n        ctx.closePath();\n        ctx.moveTo(imageWidth * 0.387850, imageHeight * 0.504672);\n        ctx.bezierCurveTo(imageWidth * 0.387850, imageHeight * 0.560747, imageWidth * 0.439252, imageHeight * 0.612149, imageWidth * 0.5, imageHeight * 0.612149);\n        ctx.bezierCurveTo(imageWidth * 0.556074, imageHeight * 0.612149, imageWidth * 0.607476, imageHeight * 0.560747, imageWidth * 0.607476, imageHeight * 0.504672);\n        ctx.bezierCurveTo(imageWidth * 0.607476, imageHeight * 0.443925, imageWidth * 0.556074, imageHeight * 0.392523, imageWidth * 0.5, imageHeight * 0.392523);\n        ctx.bezierCurveTo(imageWidth * 0.439252, imageHeight * 0.392523, imageWidth * 0.387850, imageHeight * 0.443925, imageWidth * 0.387850, imageHeight * 0.504672);\n        ctx.closePath();\n        ctx.fillStyle = fillColorPath;\n        ctx.lineWidth = 1;\n        ctx.lineCap = 'square';\n        ctx.lineJoin = 'miter';\n        ctx.strokeStyle = backgroundColor.symbolColor.getRgbaColor();\n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n*/\n        // Replacement code, not quite the same but much smaller!\n\n        for (i = 0; 360 >= i; i += 90) {\n            // Small pointers\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.560747, imageHeight * 0.584112);\n            ctx.lineTo(imageWidth * 0.640186, imageHeight * 0.644859);\n            ctx.lineTo(imageWidth * 0.584112, imageHeight * 0.560747);\n            ctx.lineTo(imageWidth * 0.560747, imageHeight * 0.584112);\n            ctx.closePath();\n            ctx.fillStyle = symbolColor;\n            ctx.fill();\n            ctx.stroke();\n            // Large pointers\n            ctx.beginPath();\n            ctx.moveTo(imageWidth * 0.523364, imageHeight * 0.397196);\n            ctx.lineTo(imageWidth * 0.5, imageHeight * 0.196261);\n            ctx.lineTo(imageWidth * 0.471962, imageHeight * 0.397196);\n            ctx.lineTo(imageWidth * 0.523364, imageHeight * 0.397196);\n            ctx.closePath();\n            grad = ctx.createLinearGradient(0.476635 * imageWidth, 0, 0.518691 * imageWidth, 0);\n            grad.addColorStop(0, 'rgb(222, 223, 218)');\n            grad.addColorStop(0.48, 'rgb(222, 223, 218)');\n            grad.addColorStop(0.49, symbolColor);\n            grad.addColorStop(1, symbolColor);\n            ctx.fillStyle = grad;\n            ctx.fill();\n            ctx.stroke();\n            ctx.translate(centerX, centerY);\n            ctx.rotate(i * RAD_FACTOR);\n            ctx.translate(-centerX, -centerY);\n        }\n\n        // Central ring\n        ctx.beginPath();\n        ctx.translate(centerX, centerY);\n        ctx.arc(0, 0, imageWidth * 0.1, 0, TWO_PI, false);\n        ctx.lineWidth = imageWidth * 0.022;\n        ctx.stroke();\n        ctx.translate(-centerX, -centerY);\n\n        ctx.restore();\n\n    };\n\n    var drawPointerImage = function (ctx, size, ptrType, ptrColor, lblColor) {\n        var ptrBuffer, ptrCtx,\n            grad, radius,\n            cacheKey = size.toString() + ptrType.type + ptrColor.light.getHexColor() + ptrColor.medium.getHexColor();\n\n        // check if we have already created and cached this buffer, if not create it\n        if (!drawPointerImage.cache[cacheKey]) {\n            // create a pointer buffer\n            ptrBuffer = createBuffer(size, size);\n            ptrCtx = ptrBuffer.getContext('2d');\n\n            switch (ptrType.type) {\n            case 'type2':\n                grad = ptrCtx.createLinearGradient(0, size * 0.471962, 0, size * 0.130841);\n                grad.addColorStop(0, lblColor.getRgbaColor());\n                grad.addColorStop(0.36, lblColor.getRgbaColor());\n                grad.addColorStop(0.361, ptrColor.light.getRgbaColor());\n                grad.addColorStop(1, ptrColor.light.getRgbaColor());\n                ptrCtx.fillStyle = grad;\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.518691, size * 0.471962);\n                ptrCtx.lineTo(size * 0.509345, size * 0.462616);\n                ptrCtx.lineTo(size * 0.509345, size * 0.341121);\n                ptrCtx.lineTo(size * 0.504672, size * 0.130841);\n                ptrCtx.lineTo(size * 0.495327, size * 0.130841);\n                ptrCtx.lineTo(size * 0.490654, size * 0.341121);\n                ptrCtx.lineTo(size * 0.490654, size * 0.462616);\n                ptrCtx.lineTo(size * 0.481308, size * 0.471962);\n                ptrCtx.closePath();\n                ptrCtx.fill();\n                break;\n\n            case 'type3':\n                ptrCtx.beginPath();\n                ptrCtx.rect(size * 0.495327, size * 0.130841, size * 0.009345, size * 0.373831);\n                ptrCtx.closePath();\n                ptrCtx.fillStyle = ptrColor.light.getRgbaColor();\n                ptrCtx.fill();\n                break;\n\n            case 'type4':\n                grad = ptrCtx.createLinearGradient(0.467289 * size, 0, 0.528036 * size, 0);\n                grad.addColorStop(0, ptrColor.dark.getRgbaColor());\n                grad.addColorStop(0.51, ptrColor.dark.getRgbaColor());\n                grad.addColorStop(0.52, ptrColor.light.getRgbaColor());\n                grad.addColorStop(1, ptrColor.light.getRgbaColor());\n                ptrCtx.fillStyle = grad;\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.5, size * 0.126168);\n                ptrCtx.lineTo(size * 0.514018, size * 0.135514);\n                ptrCtx.lineTo(size * 0.532710, size * 0.5);\n                ptrCtx.lineTo(size * 0.523364, size * 0.602803);\n                ptrCtx.lineTo(size * 0.476635, size * 0.602803);\n                ptrCtx.lineTo(size * 0.467289, size * 0.5);\n                ptrCtx.lineTo(size * 0.485981, size * 0.135514);\n                ptrCtx.lineTo(size * 0.5, size * 0.126168);\n                ptrCtx.closePath();\n                ptrCtx.fill();\n                break;\n\n            case 'type5':\n                grad = ptrCtx.createLinearGradient(0.471962 * size, 0, 0.528036 * size, 0);\n                grad.addColorStop(0, ptrColor.light.getRgbaColor());\n                grad.addColorStop(0.5, ptrColor.light.getRgbaColor());\n                grad.addColorStop(0.5, ptrColor.medium.getRgbaColor());\n                grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n                ptrCtx.fillStyle = grad;\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.5, size * 0.495327);\n                ptrCtx.lineTo(size * 0.528037, size * 0.495327);\n                ptrCtx.lineTo(size * 0.5, size * 0.149532);\n                ptrCtx.lineTo(size * 0.471962, size * 0.495327);\n                ptrCtx.lineTo(size * 0.5, size * 0.495327);\n                ptrCtx.closePath();\n                ptrCtx.fill();\n\n                ptrCtx.lineWidth = 1;\n                ptrCtx.lineCap = 'square';\n                ptrCtx.lineJoin = 'miter';\n                ptrCtx.strokeStyle = ptrColor.dark.getRgbaColor();\n                ptrCtx.stroke();\n                break;\n\n            case 'type6':\n                ptrCtx.fillStyle = ptrColor.medium.getRgbaColor();\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.481308, size * 0.485981);\n                ptrCtx.lineTo(size * 0.481308, size * 0.392523);\n                ptrCtx.lineTo(size * 0.485981, size * 0.317757);\n                ptrCtx.lineTo(size * 0.495327, size * 0.130841);\n                ptrCtx.lineTo(size * 0.504672, size * 0.130841);\n                ptrCtx.lineTo(size * 0.514018, size * 0.317757);\n                ptrCtx.lineTo(size * 0.518691, size * 0.387850);\n                ptrCtx.lineTo(size * 0.518691, size * 0.485981);\n                ptrCtx.lineTo(size * 0.504672, size * 0.485981);\n                ptrCtx.lineTo(size * 0.504672, size * 0.387850);\n                ptrCtx.lineTo(size * 0.5, size * 0.317757);\n                ptrCtx.lineTo(size * 0.495327, size * 0.392523);\n                ptrCtx.lineTo(size * 0.495327, size * 0.485981);\n                ptrCtx.lineTo(size * 0.481308, size * 0.485981);\n                ptrCtx.closePath();\n                ptrCtx.fill();\n                break;\n\n            case 'type7':\n                grad = ptrCtx.createLinearGradient(0.481308 * size, 0, 0.518691 * size, 0);\n                grad.addColorStop(0, ptrColor.dark.getRgbaColor());\n                grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n                ptrCtx.fillStyle = grad;\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.490654, size * 0.130841);\n                ptrCtx.lineTo(size * 0.481308, size * 0.5);\n                ptrCtx.lineTo(size * 0.518691, size * 0.5);\n                ptrCtx.lineTo(size * 0.504672, size * 0.130841);\n                ptrCtx.lineTo(size * 0.490654, size * 0.130841);\n                ptrCtx.closePath();\n                ptrCtx.fill();\n                break;\n\n            case 'type8':\n                grad = ptrCtx.createLinearGradient(0.471962 * size, 0, 0.528036 * size, 0);\n                grad.addColorStop(0, ptrColor.light.getRgbaColor());\n                grad.addColorStop(0.5, ptrColor.light.getRgbaColor());\n                grad.addColorStop(0.5, ptrColor.medium.getRgbaColor());\n                grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n                ptrCtx.fillStyle = grad;\n                ptrCtx.strokeStyle = ptrColor.dark.getRgbaColor();\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.5, size * 0.532710);\n                ptrCtx.lineTo(size * 0.532710, size * 0.5);\n                ptrCtx.bezierCurveTo(size * 0.532710, size * 0.5, size * 0.509345, size * 0.457943, size * 0.5, size * 0.149532);\n                ptrCtx.bezierCurveTo(size * 0.490654, size * 0.457943, size * 0.467289, size * 0.5, size * 0.467289, size * 0.5);\n                ptrCtx.lineTo(size * 0.5, size * 0.532710);\n                ptrCtx.closePath();\n                ptrCtx.fill();\n                ptrCtx.stroke();\n                break;\n\n            case 'type9':\n                grad = ptrCtx.createLinearGradient(0.471962 * size, 0, 0.528036 * size, 0);\n                grad.addColorStop(0, 'rgb(50, 50, 50)');\n                grad.addColorStop(0.5, '#666666');\n                grad.addColorStop(1, 'rgb(50, 50, 50)');\n                ptrCtx.fillStyle = grad;\n                ptrCtx.strokeStyle = '#2E2E2E';\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.495327, size * 0.233644);\n                ptrCtx.lineTo(size * 0.504672, size * 0.233644);\n                ptrCtx.lineTo(size * 0.514018, size * 0.439252);\n                ptrCtx.lineTo(size * 0.485981, size * 0.439252);\n                ptrCtx.lineTo(size * 0.495327, size * 0.233644);\n                ptrCtx.closePath();\n                ptrCtx.moveTo(size * 0.490654, size * 0.130841);\n                ptrCtx.lineTo(size * 0.471962, size * 0.471962);\n                ptrCtx.lineTo(size * 0.471962, size * 0.528037);\n                ptrCtx.bezierCurveTo(size * 0.471962, size * 0.528037, size * 0.476635, size * 0.602803, size * 0.476635, size * 0.602803);\n                ptrCtx.bezierCurveTo(size * 0.476635, size * 0.607476, size * 0.481308, size * 0.607476, size * 0.5, size * 0.607476);\n                ptrCtx.bezierCurveTo(size * 0.518691, size * 0.607476, size * 0.523364, size * 0.607476, size * 0.523364, size * 0.602803);\n                ptrCtx.bezierCurveTo(size * 0.523364, size * 0.602803, size * 0.528037, size * 0.528037, size * 0.528037, size * 0.528037);\n                ptrCtx.lineTo(size * 0.528037, size * 0.471962);\n                ptrCtx.lineTo(size * 0.509345, size * 0.130841);\n                ptrCtx.lineTo(size * 0.490654, size * 0.130841);\n                ptrCtx.closePath();\n                ptrCtx.fill();\n\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.495327, size * 0.219626);\n                ptrCtx.lineTo(size * 0.504672, size * 0.219626);\n                ptrCtx.lineTo(size * 0.504672, size * 0.135514);\n                ptrCtx.lineTo(size * 0.495327, size * 0.135514);\n                ptrCtx.lineTo(size * 0.495327, size * 0.219626);\n                ptrCtx.closePath();\n\n                ptrCtx.fillStyle = ptrColor.medium.getRgbaColor();\n                ptrCtx.fill();\n                break;\n\n            case 'type10':\n                // POINTER_TYPE10\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.5, size * 0.149532);\n                ptrCtx.bezierCurveTo(size * 0.5, size * 0.149532, size * 0.443925, size * 0.490654, size * 0.443925, size * 0.5);\n                ptrCtx.bezierCurveTo(size * 0.443925, size * 0.532710, size * 0.467289, size * 0.556074, size * 0.5, size * 0.556074);\n                ptrCtx.bezierCurveTo(size * 0.532710, size * 0.556074, size * 0.556074, size * 0.532710, size * 0.556074, size * 0.5);\n                ptrCtx.bezierCurveTo(size * 0.556074, size * 0.490654, size * 0.5, size * 0.149532, size * 0.5, size * 0.149532);\n                ptrCtx.closePath();\n                grad = ptrCtx.createLinearGradient(0.471962 * size, 0, 0.528036 * size, 0);\n                grad.addColorStop(0, ptrColor.light.getRgbaColor());\n                grad.addColorStop(0.5, ptrColor.light.getRgbaColor());\n                grad.addColorStop(0.5, ptrColor.medium.getRgbaColor());\n                grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n                ptrCtx.fillStyle = grad;\n                ptrCtx.strokeStyle = ptrColor.medium.getRgbaColor();\n                ptrCtx.lineWidth = 1;\n                ptrCtx.lineCap = 'square';\n                ptrCtx.lineJoin = 'miter';\n                ptrCtx.fill();\n                ptrCtx.stroke();\n                break;\n\n            case 'type11':\n                // POINTER_TYPE11\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(0.5 * size, 0.168224 * size);\n                ptrCtx.lineTo(0.485981 * size, 0.5 * size);\n                ptrCtx.bezierCurveTo(0.485981 * size, 0.5 * size, 0.481308 * size, 0.584112 * size, 0.5 * size, 0.584112 * size);\n                ptrCtx.bezierCurveTo(0.514018 * size, 0.584112 * size, 0.509345 * size, 0.5 * size, 0.509345 * size, 0.5 * size);\n                ptrCtx.lineTo(0.5 * size, 0.168224 * size);\n                ptrCtx.closePath();\n                grad = ptrCtx.createLinearGradient(0, 0.168224 * size, 0, 0.584112 * size);\n                grad.addColorStop(0, ptrColor.medium.getRgbaColor());\n                grad.addColorStop(1, ptrColor.dark.getRgbaColor());\n                ptrCtx.fillStyle = grad;\n                ptrCtx.strokeStyle = ptrColor.dark.getRgbaColor();\n                ptrCtx.fill();\n                ptrCtx.stroke();\n                break;\n\n            case 'type12':\n                // POINTER_TYPE12\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(0.5 * size, 0.168224 * size);\n                ptrCtx.lineTo(0.485981 * size, 0.5 * size);\n                ptrCtx.lineTo(0.5 * size, 0.504672 * size);\n                ptrCtx.lineTo(0.509345 * size, 0.5 * size);\n                ptrCtx.lineTo(0.5 * size, 0.168224 * size);\n                ptrCtx.closePath();\n                grad = ptrCtx.createLinearGradient(0, 0.168224 * size, 0, 0.504672 * size);\n                grad.addColorStop(0, ptrColor.medium.getRgbaColor());\n                grad.addColorStop(1, ptrColor.dark.getRgbaColor());\n                ptrCtx.fillStyle = grad;\n                ptrCtx.strokeStyle = ptrColor.dark.getRgbaColor();\n                ptrCtx.fill();\n                ptrCtx.stroke();\n                break;\n\n            case 'type13':\n                // POINTER_TYPE13\n            case 'type14':\n                // POINTER_TYPE14 (same shape as 13)\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(0.485981 * size, 0.168224 * size);\n                ptrCtx.lineTo(0.5 * size, 0.130841 * size);\n                ptrCtx.lineTo(0.509345 * size, 0.168224 * size);\n                ptrCtx.lineTo(0.509345 * size, 0.509345 * size);\n                ptrCtx.lineTo(0.485981 * size, 0.509345 * size);\n                ptrCtx.lineTo(0.485981 * size, 0.168224 * size);\n                ptrCtx.closePath();\n                if (ptrType.type === 'type13') {\n                    // TYPE13\n                    grad = ptrCtx.createLinearGradient(0, 0.5 * size, 0, 0.130841 * size);\n                    grad.addColorStop(0, lblColor.getRgbaColor());\n                    grad.addColorStop(0.85, lblColor.getRgbaColor());\n                    grad.addColorStop(0.85, ptrColor.medium.getRgbaColor());\n                    grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n                    ptrCtx.fillStyle = grad;\n                } else {\n                    // TYPE14\n                    grad = ptrCtx.createLinearGradient(0.485981 * size, 0, 0.509345 * size, 0);\n                    grad.addColorStop(0, ptrColor.veryDark.getRgbaColor());\n                    grad.addColorStop(0.5, ptrColor.light.getRgbaColor());\n                    grad.addColorStop(1, ptrColor.veryDark.getRgbaColor());\n                    ptrCtx.fillStyle = grad;\n                }\n                ptrCtx.fill();\n                break;\n\n            case 'type15':\n                // POINTER TYPE15 - Classic with crescent\n            case 'type16':\n                // POINTER TYPE16 - Classic without crescent\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.509345, size * 0.457943);\n                ptrCtx.lineTo(size * 0.5015, size * 0.13);\n                ptrCtx.lineTo(size * 0.4985, size * 0.13);\n                ptrCtx.lineTo(size * 0.490654, size * 0.457943);\n                ptrCtx.bezierCurveTo(size * 0.490654, size * 0.457943, size * 0.490654, size * 0.457943, size * 0.490654, size * 0.457943);\n                ptrCtx.bezierCurveTo(size * 0.471962, size * 0.462616, size * 0.457943, size * 0.481308, size * 0.457943, size * 0.5);\n                ptrCtx.bezierCurveTo(size * 0.457943, size * 0.518691, size * 0.471962, size * 0.537383, size * 0.490654, size * 0.542056);\n                ptrCtx.bezierCurveTo(size * 0.490654, size * 0.542056, size * 0.490654, size * 0.542056, size * 0.490654, size * 0.542056);\n                if (ptrType.type === 'type15') {\n                    ptrCtx.lineTo(size * 0.490654, size * 0.57);\n                    ptrCtx.bezierCurveTo(size * 0.46, size * 0.58, size * 0.46, size * 0.62, size * 0.490654, size * 0.63);\n                    ptrCtx.bezierCurveTo(size * 0.47, size * 0.62, size * 0.48, size * 0.59, size * 0.5, size * 0.59);\n                    ptrCtx.bezierCurveTo(size * 0.53, size * 0.59, size * 0.52, size * 0.62, size * 0.509345, size * 0.63);\n                    ptrCtx.bezierCurveTo(size * 0.54, size * 0.62, size * 0.54, size * 0.58, size * 0.509345, size * 0.57);\n                    ptrCtx.lineTo(size * 0.509345, size * 0.57);\n                } else {\n                    ptrCtx.lineTo(size * 0.490654, size * 0.621495);\n                    ptrCtx.lineTo(size * 0.509345, size * 0.621495);\n                }\n                ptrCtx.lineTo(size * 0.509345, size * 0.542056);\n                ptrCtx.bezierCurveTo(size * 0.509345, size * 0.542056, size * 0.509345, size * 0.542056, size * 0.509345, size * 0.542056);\n                ptrCtx.bezierCurveTo(size * 0.528037, size * 0.537383, size * 0.542056, size * 0.518691, size * 0.542056, size * 0.5);\n                ptrCtx.bezierCurveTo(size * 0.542056, size * 0.481308, size * 0.528037, size * 0.462616, size * 0.509345, size * 0.457943);\n                ptrCtx.bezierCurveTo(size * 0.509345, size * 0.457943, size * 0.509345, size * 0.457943, size * 0.509345, size * 0.457943);\n                ptrCtx.closePath();\n                if (ptrType.type === 'type15') {\n                    grad = ptrCtx.createLinearGradient(0, 0, 0, size * 0.63);\n                } else {\n                    grad = ptrCtx.createLinearGradient(0, 0, 0, size * 0.621495);\n                }\n                grad.addColorStop(0, ptrColor.medium.getRgbaColor());\n                grad.addColorStop(0.388888, ptrColor.medium.getRgbaColor());\n                grad.addColorStop(0.5, ptrColor.light.getRgbaColor());\n                grad.addColorStop(0.611111, ptrColor.medium.getRgbaColor());\n                grad.addColorStop(1, ptrColor.medium.getRgbaColor());\n                ptrCtx.fillStyle = grad;\n                ptrCtx.strokeStyle = ptrColor.dark.getRgbaColor();\n                ptrCtx.fill();\n                ptrCtx.stroke();\n                // Draw the rings\n                ptrCtx.beginPath();\n                radius = size * 0.065420 / 2;\n                ptrCtx.arc(size * 0.5, size * 0.5, radius, 0, TWO_PI);\n                grad = ptrCtx.createLinearGradient(size * 0.5 - radius, size * 0.5 + radius, 0, size * 0.5 + radius);\n                grad.addColorStop(0, '#e6b35c');\n                grad.addColorStop(0.01, '#e6b35c');\n                grad.addColorStop(0.99, '#c48200');\n                grad.addColorStop(1, '#c48200');\n                ptrCtx.fillStyle = grad;\n                ptrCtx.closePath();\n                ptrCtx.fill();\n                ptrCtx.beginPath();\n                radius = size * 0.046728 / 2;\n                ptrCtx.arc(size * 0.5, size * 0.5, radius, 0, TWO_PI);\n                grad = ptrCtx.createRadialGradient(size * 0.5, size * 0.5, 0, size * 0.5, size * 0.5, radius);\n                grad.addColorStop(0, '#c5c5c5');\n                grad.addColorStop(0.19, '#c5c5c5');\n                grad.addColorStop(0.22, '#000000');\n                grad.addColorStop(0.8, '#000000');\n                grad.addColorStop(0.99, '#707070');\n                grad.addColorStop(1, '#707070');\n                ptrCtx.fillStyle = grad;\n                ptrCtx.closePath();\n                ptrCtx.fill();\n                break;\n\n            case 'type1':\n            /* falls through */\n            default:\n                grad = ptrCtx.createLinearGradient(0, size * 0.471962, 0, size * 0.130841);\n                grad.addColorStop(0, ptrColor.veryDark.getRgbaColor());\n                grad.addColorStop(0.3, ptrColor.medium.getRgbaColor());\n                grad.addColorStop(0.59, ptrColor.medium.getRgbaColor());\n                grad.addColorStop(1, ptrColor.veryDark.getRgbaColor());\n                ptrCtx.fillStyle = grad;\n                ptrCtx.beginPath();\n                ptrCtx.moveTo(size * 0.518691, size * 0.471962);\n                ptrCtx.bezierCurveTo(size * 0.514018, size * 0.457943, size * 0.509345, size * 0.415887, size * 0.509345, size * 0.401869);\n                ptrCtx.bezierCurveTo(size * 0.504672, size * 0.383177, size * 0.5, size * 0.130841, size * 0.5, size * 0.130841);\n                ptrCtx.bezierCurveTo(size * 0.5, size * 0.130841, size * 0.490654, size * 0.383177, size * 0.490654, size * 0.397196);\n                ptrCtx.bezierCurveTo(size * 0.490654, size * 0.415887, size * 0.485981, size * 0.457943, size * 0.481308, size * 0.471962);\n                ptrCtx.bezierCurveTo(size * 0.471962, size * 0.481308, size * 0.467289, size * 0.490654, size * 0.467289, size * 0.5);\n                ptrCtx.bezierCurveTo(size * 0.467289, size * 0.518691, size * 0.481308, size * 0.532710, size * 0.5, size * 0.532710);\n                ptrCtx.bezierCurveTo(size * 0.518691, size * 0.532710, size * 0.532710, size * 0.518691, size * 0.532710, size * 0.5);\n                ptrCtx.bezierCurveTo(size * 0.532710, size * 0.490654, size * 0.528037, size * 0.481308, size * 0.518691, size * 0.471962);\n                ptrCtx.closePath();\n                ptrCtx.fill();\n                break;\n            }\n            // cache buffer\n            drawPointerImage.cache[cacheKey] = ptrBuffer;\n        }\n        ctx.drawImage(drawPointerImage.cache[cacheKey], 0, 0);\n        return this;\n    };\n    drawPointerImage.cache = {};\n\n    var drawRadialFrameImage = function (ctx, frameDesign, centerX, centerY, imageWidth, imageHeight) {\n        var radFBuffer, radFCtx,\n            grad, outerX, innerX, fractions, colors,\n            cacheKey = imageWidth.toString() + imageHeight + frameDesign.design;\n\n        // check if we have already created and cached this buffer, if not create it\n        if (!drawRadialFrameImage.cache[cacheKey]) {\n            // Setup buffer\n            radFBuffer = createBuffer(imageWidth, imageHeight);\n            radFCtx = radFBuffer.getContext('2d');\n\n            // outer gray frame\n            radFCtx.fillStyle = '#848484';\n            radFCtx.strokeStyle = 'rgba(132, 132, 132, 0.5)';\n            radFCtx.beginPath();\n            radFCtx.arc(centerX, centerY, imageWidth / 2, 0, TWO_PI, true);\n            radFCtx.closePath();\n            radFCtx.fill();\n            radFCtx.stroke();\n\n            radFCtx.beginPath();\n            radFCtx.arc(centerX, centerY, imageWidth * 0.990654 / 2, 0, TWO_PI, true);\n            radFCtx.closePath();\n\n            // main gradient frame\n            switch (frameDesign.design) {\n            case 'metal':\n                grad = radFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n                grad.addColorStop(0, '#fefefe');\n                grad.addColorStop(0.07, 'rgb(210, 210, 210)');\n                grad.addColorStop(0.12, 'rgb(179, 179, 179)');\n                grad.addColorStop(1, 'rgb(213, 213, 213)');\n                radFCtx.fillStyle = grad;\n                radFCtx.fill();\n                break;\n\n            case 'brass':\n                grad = radFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n                grad.addColorStop(0, 'rgb(249, 243, 155)');\n                grad.addColorStop(0.05, 'rgb(246, 226, 101)');\n                grad.addColorStop(0.10, 'rgb(240, 225, 132)');\n                grad.addColorStop(0.50, 'rgb(90, 57, 22)');\n                grad.addColorStop(0.90, 'rgb(249, 237, 139)');\n                grad.addColorStop(0.95, 'rgb(243, 226, 108)');\n                grad.addColorStop(1, 'rgb(202, 182, 113)');\n                radFCtx.fillStyle = grad;\n                radFCtx.fill();\n                break;\n\n            case 'steel':\n                grad = radFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n                grad.addColorStop(0, 'rgb(231, 237, 237)');\n                grad.addColorStop(0.05, 'rgb(189, 199, 198)');\n                grad.addColorStop(0.10, 'rgb(192, 201, 200)');\n                grad.addColorStop(0.50, 'rgb(23, 31, 33)');\n                grad.addColorStop(0.90, 'rgb(196, 205, 204)');\n                grad.addColorStop(0.95, 'rgb(194, 204, 203)');\n                grad.addColorStop(1, 'rgb(189, 201, 199)');\n                radFCtx.fillStyle = grad;\n                radFCtx.fill();\n                break;\n\n            case 'gold':\n                grad = radFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n                grad.addColorStop(0, 'rgb(255, 255, 207)');\n                grad.addColorStop(0.15, 'rgb(255, 237, 96)');\n                grad.addColorStop(0.22, 'rgb(254, 199, 57)');\n                grad.addColorStop(0.3, 'rgb(255, 249, 203)');\n                grad.addColorStop(0.38, 'rgb(255, 199, 64)');\n                grad.addColorStop(0.44, 'rgb(252, 194, 60)');\n                grad.addColorStop(0.51, 'rgb(255, 204, 59)');\n                grad.addColorStop(0.6, 'rgb(213, 134, 29)');\n                grad.addColorStop(0.68, 'rgb(255, 201, 56)');\n                grad.addColorStop(0.75, 'rgb(212, 135, 29)');\n                grad.addColorStop(1, 'rgb(247, 238, 101)');\n                radFCtx.fillStyle = grad;\n                radFCtx.fill();\n                break;\n\n            case 'anthracite':\n                grad = radFCtx.createLinearGradient(0, 0.004672 * imageHeight, 0, 0.995326 * imageHeight);\n                grad.addColorStop(0, 'rgb(118, 117, 135)');\n                grad.addColorStop(0.06, 'rgb(74, 74, 82)');\n                grad.addColorStop(0.12, 'rgb(50, 50, 54)');\n                grad.addColorStop(1, 'rgb(79, 79, 87)');\n                radFCtx.fillStyle = grad;\n                radFCtx.fill();\n                break;\n\n            case 'tiltedGray':\n                grad = radFCtx.createLinearGradient(0.233644 * imageWidth, 0.084112 * imageHeight, 0.81258 * imageWidth, 0.910919 * imageHeight);\n                grad.addColorStop(0, '#ffffff');\n                grad.addColorStop(0.07, 'rgb(210, 210, 210)');\n                grad.addColorStop(0.16, 'rgb(179, 179, 179)');\n                grad.addColorStop(0.33, '#ffffff');\n                grad.addColorStop(0.55, '#c5c5c5');\n                grad.addColorStop(0.79, '#ffffff');\n                grad.addColorStop(1, '#666666');\n                radFCtx.fillStyle = grad;\n                radFCtx.fill();\n                break;\n\n            case 'tiltedBlack':\n                grad = radFCtx.createLinearGradient(0.228971 * imageWidth, 0.079439 * imageHeight, 0.802547 * imageWidth, 0.898591 * imageHeight);\n                grad.addColorStop(0, '#666666');\n                grad.addColorStop(0.21, '#000000');\n                grad.addColorStop(0.47, '#666666');\n                grad.addColorStop(0.99, '#000000');\n                grad.addColorStop(1, '#000000');\n                radFCtx.fillStyle = grad;\n                radFCtx.fill();\n                break;\n\n            case 'glossyMetal':\n                grad = radFCtx.createRadialGradient(0.5 * imageWidth, 0.5 * imageHeight, 0, 0.5 * imageWidth, 0.5 * imageWidth, 0.5 * imageWidth);\n                grad.addColorStop(0, 'rgb(207, 207, 207)');\n                grad.addColorStop(0.96, 'rgb(205, 204, 205)');\n                grad.addColorStop(1, 'rgb(244, 244, 244)');\n                radFCtx.fillStyle = grad;\n                radFCtx.fill();\n                radFCtx.beginPath();\n                radFCtx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.973962 * imageWidth / 2, 0, TWO_PI);\n                radFCtx.closePath();\n                grad = radFCtx.createLinearGradient(0, imageHeight - 0.971962 * imageHeight, 0, 0.971962 * imageHeight);\n                grad.addColorStop(0, 'rgb(249, 249, 249)');\n                grad.addColorStop(0.23, 'rgb(200, 195, 191)');\n                grad.addColorStop(0.36, '#ffffff');\n                grad.addColorStop(0.59, 'rgb(29, 29, 29)');\n                grad.addColorStop(0.76, 'rgb(200, 194, 192)');\n                grad.addColorStop(1, 'rgb(209, 209, 209)');\n                radFCtx.fillStyle = grad;\n                radFCtx.fill();\n\n                radFCtx.beginPath();\n                radFCtx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.869158 * imageWidth / 2, 0, TWO_PI);\n                radFCtx.closePath();\n                radFCtx.fillStyle = '#f6f6f6';\n                radFCtx.fill();\n\n                radFCtx.beginPath();\n                radFCtx.arc(0.5 * imageWidth, 0.5 * imageHeight, 0.85 * imageWidth / 2, 0, TWO_PI);\n                radFCtx.closePath();\n                radFCtx.fillStyle = '#333333';\n                radFCtx.fill();\n                break;\n\n            case 'blackMetal':\n                fractions = [0,\n                             0.125,\n                             0.347222,\n                             0.5,\n                             0.680555,\n                             0.875,\n                             1];\n\n                colors = [ new RgbaColor(254, 254, 254, 1),\n                           new RgbaColor(0, 0, 0, 1),\n                           new RgbaColor(153, 153, 153, 1),\n                           new RgbaColor(0, 0, 0, 1),\n                           new RgbaColor(153, 153, 153, 1),\n                           new RgbaColor(0, 0, 0, 1),\n                           new RgbaColor(254, 254, 254, 1)];\n\n                radFCtx.save();\n                radFCtx.arc(centerX, centerY, imageWidth * 0.990654 / 2, 0, TWO_PI, true);\n                radFCtx.clip();\n                outerX = imageWidth * 0.495327;\n                innerX = imageWidth * 0.420560;\n                grad = new ConicalGradient(fractions, colors);\n                grad.fillCircle(radFCtx, centerX, centerY, innerX, outerX);\n                // fade outer edge\n                radFCtx.strokeStyle = '#848484';\n                radFCtx.strokeStyle = 'rgba(132, 132, 132, 0.8)';\n                radFCtx.beginPath();\n                radFCtx.lineWidth = imageWidth / 90;\n                radFCtx.arc(centerX, centerY, imageWidth / 2, 0, TWO_PI, true);\n                radFCtx.closePath();\n                radFCtx.stroke();\n                radFCtx.restore();\n                break;\n\n            case 'shinyMetal':\n                fractions = [0,\n                             0.125,\n                             0.25,\n                             0.347222,\n                             0.5,\n                             0.652777,\n                             0.75,\n                             0.875,\n                             1];\n\n                colors = [ new RgbaColor(254, 254, 254, 1),\n                           new RgbaColor(210, 210, 210, 1),\n                           new RgbaColor(179, 179, 179, 1),\n                           new RgbaColor(238, 238, 238, 1),\n                           new RgbaColor(160, 160, 160, 1),\n                           new RgbaColor(238, 238, 238, 1),\n                           new RgbaColor(179, 179, 179, 1),\n                           new RgbaColor(210, 210, 210, 1),\n                           new RgbaColor(254, 254, 254, 1)];\n\n                radFCtx.save();\n                radFCtx.arc(centerX, centerY, imageWidth * 0.990654 / 2, 0, TWO_PI, true);\n                radFCtx.clip();\n                outerX = imageWidth * 0.495327;\n                innerX = imageWidth * 0.420560;\n                grad = new ConicalGradient(fractions, colors);\n                grad.fillCircle(radFCtx, centerX, centerY, innerX, outerX);\n                // fade outer edge\n                radFCtx.strokeStyle = '#848484';\n                radFCtx.strokeStyle = 'rgba(132, 132, 132, 0.8)';\n                radFCtx.beginPath();\n                radFCtx.lineWidth = imageWidth / 90;\n                radFCtx.arc(centerX, centerY, imageWidth / 2, 0, TWO_PI, true);\n                radFCtx.closePath();\n                radFCtx.stroke();\n                radFCtx.restore();\n                break;\n\n            case 'chrome':\n                fractions = [0,\n                             0.09,\n                             0.12,\n                             0.16,\n                             0.25,\n                             0.29,\n                             0.33,\n                             0.38,\n                             0.48,\n                             0.52,\n                             0.63,\n                             0.68,\n                             0.8,\n                             0.83,\n                             0.87,\n                             0.97,\n                             1];\n\n                colors = [ new RgbaColor(255, 255, 255, 1),\n                           new RgbaColor(255, 255, 255, 1),\n                           new RgbaColor(136, 136, 138, 1),\n                           new RgbaColor(164, 185, 190, 1),\n                           new RgbaColor(158, 179, 182, 1),\n                           new RgbaColor(112, 112, 112, 1),\n                           new RgbaColor(221, 227, 227, 1),\n                           new RgbaColor(155, 176, 179, 1),\n                           new RgbaColor(156, 176, 177, 1),\n                           new RgbaColor(254, 255, 255, 1),\n                           new RgbaColor(255, 255, 255, 1),\n                           new RgbaColor(156, 180, 180, 1),\n                           new RgbaColor(198, 209, 211, 1),\n                           new RgbaColor(246, 248, 247, 1),\n                           new RgbaColor(204, 216, 216, 1),\n                           new RgbaColor(164, 188, 190, 1),\n                           new RgbaColor(255, 255, 255, 1)];\n\n                radFCtx.save();\n                radFCtx.arc(centerX, centerY, imageWidth * 0.990654 / 2, 0, TWO_PI, true);\n                radFCtx.clip();\n                outerX = imageWidth * 0.495327;\n                innerX = imageWidth * 0.420560;\n                grad = new ConicalGradient(fractions, colors);\n                grad.fillCircle(radFCtx, centerX, centerY, innerX, outerX);\n                // fade outer edge\n                radFCtx.strokeStyle = '#848484';\n                radFCtx.strokeStyle = 'rgba(132, 132, 132, 0.8)';\n                radFCtx.beginPath();\n                radFCtx.lineWidth = imageWidth / 90;\n                radFCtx.arc(centerX, centerY, imageWidth / 2, 0, TWO_PI, true);\n                radFCtx.closePath();\n                radFCtx.stroke();\n                radFCtx.restore();\n\n                break;\n            }\n\n            // inner bright frame\n            radFCtx.fillStyle = 'rgb(191, 191, 191)';\n            radFCtx.beginPath();\n            radFCtx.arc(centerX, centerY, imageWidth * 0.841121 / 2, 0, TWO_PI, true);\n            radFCtx.closePath();\n            radFCtx.fill();\n\n            // clip out center so it is transparent if the background is not visible\n            radFCtx.globalCompositeOperation = 'destination-out';\n            // Background ellipse\n            radFCtx.beginPath();\n            radFCtx.arc(centerX, centerY, imageWidth * 0.83 / 2, 0, TWO_PI, true);\n            radFCtx.closePath();\n            radFCtx.fill();\n\n            // cache the buffer\n            drawRadialFrameImage.cache[cacheKey] = radFBuffer;\n        }\n        ctx.drawImage(drawRadialFrameImage.cache[cacheKey], 0, 0);\n        return this;\n    };\n    drawRadialFrameImage.cache = {};\n\n    var drawLinearFrameImage = function (ctx, frameDesign, imageWidth, imageHeight, vertical) {\n        var frameWidth,\n            linFBuffer, linFCtx,\n            OUTER_FRAME_CORNER_RADIUS,\n            FRAME_MAIN_CORNER_RADIUS,\n            SUBTRACT_CORNER_RADIUS,\n            grad,\n            fractions = [],\n            colors = [],\n            cacheKey = imageWidth.toString() + imageHeight + frameDesign.design + vertical;\n\n        // check if we have already created and cached this buffer, if not create it\n        if (!drawLinearFrameImage.cache[cacheKey]) {\n            frameWidth = Math.sqrt(imageWidth * imageWidth + imageHeight * imageHeight) * 0.04;\n            frameWidth = Math.min(frameWidth, (vertical ? imageWidth : imageHeight) * 0.1);\n\n            // Setup buffer\n            linFBuffer = createBuffer(imageWidth, imageHeight);\n            linFCtx = linFBuffer.getContext('2d');\n\n            // Calculate corner radii\n            if (vertical) {\n                OUTER_FRAME_CORNER_RADIUS = imageWidth * 0.05;\n                FRAME_MAIN_CORNER_RADIUS = OUTER_FRAME_CORNER_RADIUS - 1;\n                SUBTRACT_CORNER_RADIUS = imageWidth * 0.028571;\n            } else {\n                OUTER_FRAME_CORNER_RADIUS = imageHeight * 0.05;\n                FRAME_MAIN_CORNER_RADIUS = OUTER_FRAME_CORNER_RADIUS - 1;\n                SUBTRACT_CORNER_RADIUS = imageHeight * 0.028571;\n            }\n\n            roundedRectangle(linFCtx, 0, 0, imageWidth, imageHeight, OUTER_FRAME_CORNER_RADIUS);\n            linFCtx.fillStyle = '#838383';\n            linFCtx.fill();\n\n            roundedRectangle(linFCtx, 1, 1, imageWidth - 2, imageHeight - 2, FRAME_MAIN_CORNER_RADIUS);\n\n            // main gradient frame\n            switch (frameDesign.design) {\n            case 'metal':\n                grad = linFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n                grad.addColorStop(0, '#fefefe');\n                grad.addColorStop(0.07, 'rgb(210, 210, 210)');\n                grad.addColorStop(0.12, 'rgb(179, 179, 179)');\n                grad.addColorStop(1, 'rgb(213, 213, 213)');\n                linFCtx.fillStyle = grad;\n                linFCtx.fill();\n                break;\n\n            case 'brass':\n                grad = linFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n                grad.addColorStop(0, 'rgb(249, 243, 155)');\n                grad.addColorStop(0.05, 'rgb(246, 226, 101)');\n                grad.addColorStop(0.10, 'rgb(240, 225, 132)');\n                grad.addColorStop(0.50, 'rgb(90, 57, 22)');\n                grad.addColorStop(0.90, 'rgb(249, 237, 139)');\n                grad.addColorStop(0.95, 'rgb(243, 226, 108)');\n                grad.addColorStop(1, 'rgb(202, 182, 113)');\n                linFCtx.fillStyle = grad;\n                linFCtx.fill();\n                break;\n\n            case 'steel':\n                grad = linFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n                grad.addColorStop(0, 'rgb(231, 237, 237)');\n                grad.addColorStop(0.05, 'rgb(189, 199, 198)');\n                grad.addColorStop(0.10, 'rgb(192, 201, 200)');\n                grad.addColorStop(0.50, 'rgb(23, 31, 33)');\n                grad.addColorStop(0.90, 'rgb(196, 205, 204)');\n                grad.addColorStop(0.95, 'rgb(194, 204, 203)');\n                grad.addColorStop(1, 'rgb(189, 201, 199)');\n                linFCtx.fillStyle = grad;\n                linFCtx.fill();\n                break;\n\n            case 'gold':\n                grad = linFCtx.createLinearGradient(0, imageWidth * 0.004672, 0, imageHeight * 0.990654);\n                grad.addColorStop(0, 'rgb(255, 255, 207)');\n                grad.addColorStop(0.15, 'rgb(255, 237, 96)');\n                grad.addColorStop(0.22, 'rgb(254, 199, 57)');\n                grad.addColorStop(0.3, 'rgb(255, 249, 203)');\n                grad.addColorStop(0.38, 'rgb(255, 199, 64)');\n                grad.addColorStop(0.44, 'rgb(252, 194, 60)');\n                grad.addColorStop(0.51, 'rgb(255, 204, 59)');\n                grad.addColorStop(0.6, 'rgb(213, 134, 29)');\n                grad.addColorStop(0.68, 'rgb(255, 201, 56)');\n                grad.addColorStop(0.75, 'rgb(212, 135, 29)');\n                grad.addColorStop(1, 'rgb(247, 238, 101)');\n                linFCtx.fillStyle = grad;\n                linFCtx.fill();\n                break;\n\n            case 'anthracite':\n                grad = linFCtx.createLinearGradient(0, 0.004672 * imageHeight, 0, 0.995326 * imageHeight);\n                grad.addColorStop(0, 'rgb(118, 117, 135)');\n                grad.addColorStop(0.06, 'rgb(74, 74, 82)');\n                grad.addColorStop(0.12, 'rgb(50, 50, 54)');\n                grad.addColorStop(1, 'rgb(79, 79, 87)');\n                linFCtx.fillStyle = grad;\n                linFCtx.fill();\n                break;\n\n            case 'tiltedGray':\n                grad = linFCtx.createLinearGradient(0.233644 * imageWidth, 0.084112 * imageHeight, 0.81258 * imageWidth, 0.910919 * imageHeight);\n                grad.addColorStop(0, '#ffffff');\n                grad.addColorStop(0.07, 'rgb(210, 210, 210)');\n                grad.addColorStop(0.16, 'rgb(179, 179, 179)');\n                grad.addColorStop(0.33, '#ffffff');\n                grad.addColorStop(0.55, '#c5c5c5');\n                grad.addColorStop(0.79, '#ffffff');\n                grad.addColorStop(1, '#666666');\n                linFCtx.fillStyle = grad;\n                linFCtx.fill();\n                break;\n\n            case 'tiltedBlack':\n                grad = linFCtx.createLinearGradient(0.228971 * imageWidth, 0.079439 * imageHeight, 0.802547 * imageWidth, 0.898591 * imageHeight);\n                grad.addColorStop(0, '#666666');\n                grad.addColorStop(0.21, '#000000');\n                grad.addColorStop(0.47, '#666666');\n                grad.addColorStop(0.99, '#000000');\n                grad.addColorStop(1, '#000000');\n                linFCtx.fillStyle = grad;\n                linFCtx.fill();\n                break;\n\n            case 'glossyMetal':\n                // The smaller side is important for the contour gradient\n    // Java version uses a contour gradient for the outer frame rim\n    // but this is only 1 pixel wide, so a plain color fill is essentially\n    // the same.\n    /*\n                var frameMainFractions4 = [\n                                            0,\n                                            (imageWidth >= imageHeight ? 32 / imageHeight : 32 / imageWidth) * 0.04,\n                                            1\n                                            ];\n                var frameMainColors4 = [\n                                        new RgbaColor(244, 244, 244, 1),\n                                        new RgbaColor(207, 207, 207, 1),\n                                        new RgbaColor(207, 207, 207, 1)\n                                        ];\n                var frameMainGradient4 = new contourGradient(linFCtx, 0, 0, imageWidth,  imageHeight, frameMainFractions4, frameMainColors4);\n                // Outer frame rim\n                roundedRectangle(linFCtx, 1, 1, imageWidth-2, imageHeight-2, OUTER_FRAME_CORNER_RADIUS);\n                linFCtx.clip();\n                frameMainGradient4.paintContext();\n    */\n                // Outer frame rim\n    //                roundedRectangle(linFCtx, 1, 1, imageWidth-2, imageHeight-2, OUTER_FRAME_CORNER_RADIUS);\n    //                linFCtx.clip();\n    //                linFCtx.fillStyle = '#cfcfcf';\n    //                linFCtx.fill();\n\n                // Main frame\n    //                roundedRectangle(linFCtx, 2, 2, imageWidth - 4, imageHeight - 4, FRAME_MAIN_CORNER_RADIUS);\n    //                linFCtx.clip();\n                roundedRectangle(linFCtx, 1, 1, imageWidth - 2, imageHeight - 2, OUTER_FRAME_CORNER_RADIUS);\n                linFCtx.clip();\n                grad = linFCtx.createLinearGradient(0, 1, 0, imageHeight - 2);\n    // The fractions from the Java version of linear gauge\n    /*\n                grad.addColorStop(0, 'rgb(249, 249, 249)');\n                grad.addColorStop(0.1, 'rgb(200, 195, 191)');\n                grad.addColorStop(0.26, '#ffffff');\n                grad.addColorStop(0.73, 'rgb(29, 29, 29)');\n                grad.addColorStop(1, 'rgb(209, 209, 209)');\n    */\n    // Modified fractions from the radial gauge - looks better imho\n                grad.addColorStop(0, 'rgb(249, 249, 249)');\n                grad.addColorStop(0.2, 'rgb(200, 195, 191)');\n                grad.addColorStop(0.3, '#ffffff');\n                grad.addColorStop(0.6, 'rgb(29, 29, 29)');\n                grad.addColorStop(0.8, 'rgb(200, 194, 192)');\n                grad.addColorStop(1, 'rgb(209, 209, 209)');\n                linFCtx.fillStyle = grad;\n                linFCtx.fill();\n\n                // Inner frame bright\n                roundedRectangle(linFCtx, frameWidth - 2, frameWidth - 2, imageWidth - (frameWidth - 2) * 2, imageHeight - (frameWidth - 2) * 2, SUBTRACT_CORNER_RADIUS);\n                linFCtx.clip();\n                linFCtx.fillStyle = '#f6f6f6';\n                linFCtx.fill();\n\n                // Inner frame dark\n                roundedRectangle(linFCtx, frameWidth - 1, frameWidth - 1, imageWidth - (frameWidth - 1) * 2, imageHeight - (frameWidth - 1) * 2, SUBTRACT_CORNER_RADIUS);\n                linFCtx.clip();\n                linFCtx.fillStyle = '#333333';\n                linFCtx.fill();\n                break;\n\n            case 'blackMetal':\n                fractions = [0,\n                             0.125,\n                             0.347222,\n                             0.5,\n                             0.680555,\n                             0.875,\n                             1];\n\n                colors = [ new RgbaColor('#FFFFFF'),\n                           new RgbaColor('#000000'),\n                           new RgbaColor('#999999'),\n                           new RgbaColor('#000000'),\n                           new RgbaColor('#999999'),\n                           new RgbaColor('#000000'),\n                           new RgbaColor('#FFFFFF')];\n                // Set the clip\n                linFCtx.beginPath();\n                roundedRectangle(linFCtx, 1, 1, imageWidth - 2, imageHeight - 2, OUTER_FRAME_CORNER_RADIUS);\n                linFCtx.closePath();\n                linFCtx.clip();\n                grad = new ConicalGradient(fractions, colors);\n                grad.fillRect(linFCtx, imageWidth / 2, imageHeight / 2, imageWidth, imageHeight, frameWidth, frameWidth);\n                break;\n\n            case 'shinyMetal':\n                fractions = [0,\n                             0.125,\n                             0.25,\n                             0.347222,\n                             0.5,\n                             0.652777,\n                             0.75,\n                             0.875,\n                             1];\n\n                colors = [ new RgbaColor('#FFFFFF'),\n                           new RgbaColor('#D2D2D2'),\n                           new RgbaColor('#B3B3B3'),\n                           new RgbaColor('#EEEEEE'),\n                           new RgbaColor('#A0A0A0'),\n                           new RgbaColor('#EEEEEE'),\n                           new RgbaColor('#B3B3B3'),\n                           new RgbaColor('#D2D2D2'),\n                           new RgbaColor('#FFFFFF')];\n                // Set the clip\n                linFCtx.beginPath();\n                roundedRectangle(linFCtx, 1, 1, imageWidth - 2, imageHeight - 2, OUTER_FRAME_CORNER_RADIUS);\n                linFCtx.closePath();\n                linFCtx.clip();\n                grad = new ConicalGradient(fractions, colors);\n                grad.fillRect(linFCtx, imageWidth / 2, imageHeight / 2, imageWidth, imageHeight, frameWidth, frameWidth);\n                break;\n\n            case 'chrome':\n                fractions = [0,\n                             0.09,\n                             0.12,\n                             0.16,\n                             0.25,\n                             0.29,\n                             0.33,\n                             0.38,\n                             0.48,\n                             0.52,\n                             0.63,\n                             0.68,\n                             0.8,\n                             0.83,\n                             0.87,\n                             0.97,\n                             1];\n\n                colors = [ new RgbaColor('#FFFFFF'),\n                           new RgbaColor('#FFFFFF'),\n                           new RgbaColor('#888890'),\n                           new RgbaColor('#A4B9BE'),\n                           new RgbaColor('#9EB3B6'),\n                           new RgbaColor('#707070'),\n                           new RgbaColor('#DDE3E3'),\n                           new RgbaColor('#9BB0B3'),\n                           new RgbaColor('#9CB0B1'),\n                           new RgbaColor('#FEFFFF'),\n                           new RgbaColor('#FFFFFF'),\n                           new RgbaColor('#9CB4B4'),\n                           new RgbaColor('#C6D1D3'),\n                           new RgbaColor('#F6F8F7'),\n                           new RgbaColor('#CCD8D8'),\n                           new RgbaColor('#A4BCBE'),\n                           new RgbaColor('#FFFFFF')];\n                // Set the clip\n                linFCtx.beginPath();\n                roundedRectangle(linFCtx, 1, 1, imageWidth - 2, imageHeight - 2, OUTER_FRAME_CORNER_RADIUS);\n                linFCtx.closePath();\n                linFCtx.clip();\n                grad = new ConicalGradient(fractions, colors);\n                grad.fillRect(linFCtx, imageWidth / 2, imageHeight / 2, imageWidth, imageHeight, frameWidth, frameWidth);\n                break;\n            }\n\n            roundedRectangle(linFCtx, frameWidth - 1, frameWidth - 1, imageWidth - (frameWidth - 1) * 2, imageHeight - (frameWidth - 1) * 2, SUBTRACT_CORNER_RADIUS - 1);\n            linFCtx.fillStyle = 'rgb(192, 192, 192)';\n\n            // clip out the center of the frame for transparent backgrounds\n            linFCtx.globalCompositeOperation = 'destination-out';\n            roundedRectangle(linFCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n            linFCtx.fill();\n\n            // cache the buffer\n            drawLinearFrameImage.cache[cacheKey] = linFBuffer;\n        }\n        ctx.drawImage(drawLinearFrameImage.cache[cacheKey], 0, 0);\n        return this;\n    };\n    drawLinearFrameImage.cache = {};\n\n    var drawRadialBackgroundImage = function (ctx, backgroundColor, centerX, centerY, imageWidth, imageHeight) {\n        var radBBuffer, radBCtx,\n            grad, fractions, colors,\n            backgroundOffsetX = imageWidth * 0.831775 / 2,\n            mono, textureColor, texture,\n            radius, turnRadius, stepSize,\n            end, i,\n            cacheKey = imageWidth.toString() + imageHeight + backgroundColor.name;\n\n        // check if we have already created and cached this buffer, if not create it\n        if (!drawRadialBackgroundImage.cache[cacheKey]) {\n            // Setup buffer\n            radBBuffer = createBuffer(imageWidth, imageHeight);\n            radBCtx = radBBuffer.getContext('2d');\n\n            // Background ellipse\n            radBCtx.beginPath();\n            radBCtx.arc(centerX, centerY, backgroundOffsetX, 0, TWO_PI, true);\n            radBCtx.closePath();\n\n            // If the backgroundColor is a texture fill it with the texture instead of the gradient\n            if (backgroundColor.name === 'CARBON' || backgroundColor.name === 'PUNCHED_SHEET' ||\n                backgroundColor.name === 'BRUSHED_METAL' || backgroundColor.name === 'BRUSHED_STAINLESS') {\n\n                if (backgroundColor.name === 'CARBON') {\n                    radBCtx.fillStyle = radBCtx.createPattern(carbonBuffer, 'repeat');\n                    radBCtx.fill();\n                }\n\n                if (backgroundColor.name === 'PUNCHED_SHEET') {\n                    radBCtx.fillStyle = radBCtx.createPattern(punchedSheetBuffer, 'repeat');\n                    radBCtx.fill();\n                }\n\n                // Add another inner shadow to make the look more realistic\n                grad = radBCtx.createLinearGradient(backgroundOffsetX, 0, imageWidth - backgroundOffsetX, 0);\n                grad.addColorStop(0, 'rgba(0, 0, 0, 0.25)');\n                grad.addColorStop(0.5, 'rgba(0, 0, 0, 0)');\n                grad.addColorStop(1, 'rgba(0, 0, 0, 0.25)');\n                radBCtx.fillStyle = grad;\n                radBCtx.beginPath();\n                radBCtx.arc(centerX, centerY, backgroundOffsetX, 0, TWO_PI, true);\n                radBCtx.closePath();\n                radBCtx.fill();\n\n                if (backgroundColor.name === 'BRUSHED_METAL' || backgroundColor.name === 'BRUSHED_STAINLESS') {\n                    mono = (backgroundColor.name === 'BRUSHED_METAL' ? true : false);\n                    textureColor = parseInt(backgroundColor.gradientStop.getHexColor().substr(-6), 16);\n                    texture = brushedMetalTexture(textureColor, 5, 0.1, mono, 0.5);\n                    radBCtx.fillStyle = radBCtx.createPattern(texture.fill(0, 0, imageWidth, imageHeight), 'no-repeat');\n                    radBCtx.fill();\n                }\n            } else if (backgroundColor.name === 'STAINLESS' || backgroundColor.name === 'TURNED') {\n                // Define the fractions of the conical gradient paint\n                fractions = [0,\n                             0.03,\n                             0.10,\n                             0.14,\n                             0.24,\n                             0.33,\n                             0.38,\n                             0.5,\n                             0.62,\n                             0.67,\n                             0.76,\n                             0.81,\n                             0.85,\n                             0.97,\n                             1];\n\n                // Define the colors of the conical gradient paint\n                colors = [new RgbaColor('#FDFDFD'),\n                          new RgbaColor('#FDFDFD'),\n                          new RgbaColor('#B2B2B4'),\n                          new RgbaColor('#ACACAE'),\n                          new RgbaColor('#FDFDFD'),\n                          new RgbaColor('#8E8E8E'),\n                          new RgbaColor('#8E8E8E'),\n                          new RgbaColor('#FDFDFD'),\n                          new RgbaColor('#8E8E8E'),\n                          new RgbaColor('#8E8E8E'),\n                          new RgbaColor('#FDFDFD'),\n                          new RgbaColor('#ACACAE'),\n                          new RgbaColor('#B2B2B4'),\n                          new RgbaColor('#FDFDFD'),\n                          new RgbaColor('#FDFDFD')];\n\n                grad = new ConicalGradient(fractions, colors);\n                grad.fillCircle(radBCtx, centerX, centerY, 0, backgroundOffsetX);\n\n                if (backgroundColor.name === 'TURNED') {\n                    // Define the turning radius\n                    radius = backgroundOffsetX;\n                    turnRadius = radius * 0.55;\n                    // Step size proporational to radius\n                    stepSize = RAD_FACTOR * (500 / radius);\n                    // Save before we start\n                    radBCtx.save();\n                    // restrict the turnings to the desired area\n                    radBCtx.beginPath();\n                    radBCtx.arc(centerX, centerY, radius, 0, TWO_PI);\n                    radBCtx.closePath();\n                    radBCtx.clip();\n                    // set the style for the turnings\n                    radBCtx.lineWidth = 0.5;\n                    end = TWO_PI - stepSize * 0.3;\n                    // Step the engine round'n'round\n                    for (i = 0 ; i < end; i += stepSize) {\n                        // draw a 'turn'\n                        radBCtx.strokeStyle = 'rgba(240, 240, 255, 0.25)';\n                        radBCtx.beginPath();\n                        radBCtx.arc(centerX + turnRadius, centerY, turnRadius, 0, TWO_PI);\n                        radBCtx.stroke();\n                        // rotate the 'piece' a fraction to draw 'shadow'\n                        radBCtx.translate(centerX, centerY);\n                        radBCtx.rotate(stepSize * 0.3);\n                        radBCtx.translate(-centerX, -centerY);\n                        // draw a 'turn'\n                        radBCtx.strokeStyle = 'rgba(25, 10, 10, 0.1)';\n                        radBCtx.beginPath();\n                        radBCtx.arc(centerX + turnRadius, centerY, turnRadius, 0, TWO_PI);\n                        radBCtx.stroke();\n                        // now rotate on to the next 'scribe' position minus the 'fraction'\n                        radBCtx.translate(centerX, centerY);\n                        radBCtx.rotate(stepSize - stepSize * 0.3);\n                        radBCtx.translate(-centerX, -centerY);\n                    }\n                    // Restore canvas now we are done\n                    radBCtx.restore();\n                }\n            } else {\n                grad = radBCtx.createLinearGradient(0, imageWidth * 0.084112, 0, backgroundOffsetX * 2);\n                grad.addColorStop(0, backgroundColor.gradientStart.getRgbaColor());\n                grad.addColorStop(0.4, backgroundColor.gradientFraction.getRgbaColor());\n                grad.addColorStop(1, backgroundColor.gradientStop.getRgbaColor());\n                radBCtx.fillStyle = grad;\n                radBCtx.fill();\n            }\n            // Inner shadow\n            grad = radBCtx.createRadialGradient(centerX, centerY, 0, centerX, centerY, backgroundOffsetX);\n            grad.addColorStop(0, 'rgba(0, 0, 0, 0)');\n            grad.addColorStop(0.7, 'rgba(0, 0, 0, 0)');\n            grad.addColorStop(0.71, 'rgba(0, 0, 0, 0)');\n            grad.addColorStop(0.86, 'rgba(0, 0, 0, 0.03)');\n            grad.addColorStop(0.92, 'rgba(0, 0, 0, 0.07)');\n            grad.addColorStop(0.97, 'rgba(0, 0, 0, 0.15)');\n            grad.addColorStop(1, 'rgba(0, 0, 0, 0.3)');\n            radBCtx.fillStyle = grad;\n\n            radBCtx.beginPath();\n            radBCtx.arc(centerX, centerY, backgroundOffsetX, 0, TWO_PI, true);\n            radBCtx.closePath();\n            radBCtx.fill();\n\n            // cache the buffer\n            drawRadialBackgroundImage.cache[cacheKey] = radBBuffer;\n        }\n        ctx.drawImage(drawRadialBackgroundImage.cache[cacheKey], 0, 0);\n        return this;\n    };\n    drawRadialBackgroundImage.cache = {};\n\n    var drawRadialCustomImage = function (ctx, img, centerX, centerY, imageWidth, imageHeight) {\n        var drawWidth = imageWidth * 0.831775,\n            drawHeight = imageHeight * 0.831775,\n            x = (imageWidth - drawWidth) / 2,\n            y = (imageHeight - drawHeight) / 2;\n\n        if (img !== null && img.height > 0 && img.width > 0) {\n            ctx.save();\n            // Set the clipping area\n            ctx.beginPath();\n            ctx.arc(centerX, centerY, imageWidth * 0.831775 / 2, 0, TWO_PI, true);\n            ctx.clip();\n            // Add the image\n            ctx.drawImage(img, x, y, drawWidth, drawHeight);\n            ctx.restore();\n        }\n        return this;\n    };\n\n    var drawLinearBackgroundImage = function (ctx, backgroundColor, imageWidth, imageHeight, vertical) {\n        var i, end, grad, fractions, colors,\n            frameWidth,\n            linBBuffer, linBCtx, linBColor,\n            radius,\n            turnRadius, centerX, centerY, stepSize,\n            mono, textureColor, texture,\n            cacheKey = imageWidth.toString() + imageHeight + vertical + backgroundColor.name;\n\n        // check if we have already created and cached this buffer, if not create it\n        if (!drawLinearBackgroundImage.cache[cacheKey]) {\n            frameWidth = Math.sqrt(imageWidth * imageWidth + imageHeight * imageHeight) * 0.04;\n            frameWidth = Math.min(frameWidth, (vertical ? imageWidth : imageHeight) * 0.1);\n\n            // Setup buffer\n            linBBuffer = createBuffer(imageWidth, imageHeight);\n            linBCtx = linBBuffer.getContext('2d');\n            linBColor = backgroundColor;\n\n            roundedRectangle(linBCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n\n            // If the backgroundColor is a texture fill it with the texture instead of the gradient\n            if (backgroundColor.name === 'CARBON' || backgroundColor.name === 'PUNCHED_SHEET' ||\n                backgroundColor.name === 'STAINLESS' || backgroundColor.name === 'BRUSHED_METAL' ||\n                backgroundColor.name === 'BRUSHED_STAINLESS' || backgroundColor.name === 'TURNED') {\n                if (backgroundColor.name === 'CARBON') {\n                    linBCtx.fillStyle = linBCtx.createPattern(carbonBuffer, 'repeat');\n                    linBCtx.fill();\n                }\n\n                if (backgroundColor.name === 'PUNCHED_SHEET') {\n                    linBCtx.fillStyle = linBCtx.createPattern(punchedSheetBuffer, 'repeat');\n                    linBCtx.fill();\n                }\n\n                if (backgroundColor.name === 'STAINLESS' || backgroundColor.name === 'TURNED') {\n                    // Define the fraction of the conical gradient paint\n                    fractions = [0,\n                                 0.03,\n                                 0.10,\n                                 0.14,\n                                 0.24,\n                                 0.33,\n                                 0.38,\n                                 0.5,\n                                 0.62,\n                                 0.67,\n                                 0.76,\n                                 0.81,\n                                 0.85,\n                                 0.97,\n                                 1];\n\n                    // Define the colors of the conical gradient paint\n                    colors = [new RgbaColor('#FDFDFD'),\n                              new RgbaColor('#FDFDFD'),\n                              new RgbaColor('#B2B2B4'),\n                              new RgbaColor('#ACACAE'),\n                              new RgbaColor('#FDFDFD'),\n                              new RgbaColor('#8E8E8E'),\n                              new RgbaColor('#8E8E8E'),\n                              new RgbaColor('#FDFDFD'),\n                              new RgbaColor('#8E8E8E'),\n                              new RgbaColor('#8E8E8E'),\n                              new RgbaColor('#FDFDFD'),\n                              new RgbaColor('#ACACAE'),\n                              new RgbaColor('#B2B2B4'),\n                              new RgbaColor('#FDFDFD'),\n                              new RgbaColor('#FDFDFD')];\n                    grad = new ConicalGradient(fractions, colors);\n                    // Set a clip as we will be drawing outside the required area\n                    roundedRectangle(linBCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n                    linBCtx.clip();\n                    grad.fillRect(linBCtx, imageWidth / 2, imageHeight / 2, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, imageWidth / 2, imageHeight / 2);\n                    // Add an additional inner shadow to fade out brightness at the top\n                    grad = linBCtx.createLinearGradient(0, frameWidth, 0, imageHeight - frameWidth * 2);\n                    grad.addColorStop(0, 'rgba(0, 0, 0, 0.25)');\n                    grad.addColorStop(0.1, 'rgba(0, 0, 0, 0.05)');\n                    grad.addColorStop(1, 'rgba(0, 0, 0, 0)');\n                    linBCtx.fillStyle = grad;\n                    roundedRectangle(linBCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n                    linBCtx.fill();\n                    linBCtx.restore();\n\n                    if (backgroundColor.name === 'TURNED') {\n                        // Define the turning radius\n                        radius = Math.sqrt((imageWidth - frameWidth * 2) * (imageWidth - frameWidth * 2) + (imageHeight - frameWidth * 2) * (imageHeight - frameWidth * 2)) / 2;\n                        turnRadius = radius * 0.55;\n                        centerX = imageWidth / 2;\n                        centerY = imageHeight / 2;\n                        // Step size proporational to radius\n                        stepSize = TWO_PI / 360 * (400 / radius);\n\n                        // Save before we start\n                        linBCtx.save();\n\n                        // Set a clip as we will be drawing outside the required area\n                        linBCtx.beginPath();\n                        roundedRectangle(linBCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n                        linBCtx.clip();\n\n                        // set the style for the turnings\n                        linBCtx.lineWidth = 0.5;\n                        end = TWO_PI - stepSize * 0.3;\n                        // Step the engine round'n'round\n                        for (i = 0; i < end; i += stepSize) {\n                            // draw a 'turn'\n                            linBCtx.strokeStyle = 'rgba(240, 240, 255, 0.25)';\n                            linBCtx.beginPath();\n                            linBCtx.arc(centerX + turnRadius, centerY, turnRadius, 0, TWO_PI);\n                            linBCtx.stroke();\n                            // rotate the 'piece'\n                            linBCtx.translate(centerX, centerY);\n                            linBCtx.rotate(stepSize * 0.3);\n                            linBCtx.translate(-centerX, -centerY);\n                            // draw a 'turn'\n                            linBCtx.strokeStyle = 'rgba(25, 10, 10, 0.1)';\n                            linBCtx.beginPath();\n                            linBCtx.arc(centerX + turnRadius, centerY, turnRadius, 0, TWO_PI);\n                            linBCtx.stroke();\n                            linBCtx.translate(centerX, centerY);\n                            linBCtx.rotate(-stepSize * 0.3);\n                            linBCtx.translate(-centerX, -centerY);\n\n                            // rotate the 'piece'\n                            linBCtx.translate(centerX, centerY);\n                            linBCtx.rotate(stepSize);\n                            linBCtx.translate(-centerX, -centerY);\n                        }\n                        // Restore canvas now we are done\n                        linBCtx.restore();\n                    }\n                }\n                // Add an additional inner shadow to make the look more realistic\n                grad = linBCtx.createLinearGradient(frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2);\n                grad.addColorStop(0, 'rgba(0, 0, 0, 0.25)');\n                grad.addColorStop(0.5, 'rgba(0, 0, 0, 0)');\n                grad.addColorStop(1, 'rgba(0, 0, 0, 0.25)');\n                linBCtx.fillStyle = grad;\n                roundedRectangle(linBCtx, frameWidth, frameWidth, imageWidth - frameWidth * 2, imageHeight - frameWidth * 2, 4);\n                linBCtx.fill();\n\n                if (backgroundColor.name === 'BRUSHED_METAL' || backgroundColor.name === 'BRUSHED_STAINLESS') {\n                    mono = (backgroundColor.name === 'BRUSHED_METAL' ? true : false);\n                    textureColor = parseInt(backgroundColor.gradientStop.getHexColor().substr(-6), 16);\n                    texture = brushedMetalTexture(textureColor, 5, 0.1, mono, 0.5);\n                    linBCtx.fillStyle = linBCtx.createPattern(texture.fill(0, 0, imageWidth, imageHeight), 'no-repeat');\n                    linBCtx.fill();\n                }\n            } else {\n                grad = linBCtx.createLinearGradient(0, frameWidth, 0, imageHeight - frameWidth * 2);\n                grad.addColorStop(0, backgroundColor.gradientStart.getRgbaColor());\n                grad.addColorStop(0.4, backgroundColor.gradientFraction.getRgbaColor());\n                grad.addColorStop(1, backgroundColor.gradientStop.getRgbaColor());\n                linBCtx.fillStyle = grad;\n                linBCtx.fill();\n            }\n            // Add a simple inner shadow\n            colors = [ 'rgba(0, 0, 0, 0.3)',\n                       'rgba(0, 0, 0, 0.15)',\n                       'rgba(0, 0, 0, 0.07)',\n                       'rgba(0, 0, 0, 0.03)',\n                       'rgba(0, 0, 0, 0)',\n                       'rgba(0, 0, 0, 0)',\n                       'rgba(0, 0, 0, 0)'\n                     ];\n\n            for (i = 0 ; i < 7 ; i++) {\n                roundedRectangle(linBCtx, frameWidth + i, frameWidth + i, imageWidth - frameWidth * 2 - (2 * i), imageHeight - frameWidth * 2 - (2 * i), 4);\n                linBCtx.strokeStyle = colors[i];\n                linBCtx.stroke();\n            }\n            // cache the buffer\n            drawLinearBackgroundImage.cache[cacheKey] = linBBuffer;\n        }\n        ctx.drawImage(drawLinearBackgroundImage.cache[cacheKey], 0, 0);\n        return this;\n    };\n    drawLinearBackgroundImage.cache = {};\n\n    var drawRadialForegroundImage = function (ctx, foregroundType, imageWidth, imageHeight, withCenterKnob, knob, style, gaugeType, orientation) {\n        var radFgBuffer, radFgCtx,\n            knobSize = Math.ceil(imageHeight * 0.084112),\n            knobX = imageWidth * 0.5 - knobSize / 2,\n            knobY = imageHeight * 0.5 - knobSize / 2,\n            shadowOffset = imageWidth * 0.008,\n            gradHighlight, gradHighlight2,\n            cacheKey = foregroundType.type + imageWidth + imageHeight + withCenterKnob + (knob !== undefined ? knob.type : '-') +\n                       (style !== undefined ? style.style : '-') + (orientation !== undefined ? orientation.type : '-');\n\n        // check if we have already created and cached this buffer, if so return it and exit\n        if (!drawRadialForegroundImage.cache[cacheKey]) {\n            // Setup buffer\n            radFgBuffer = createBuffer(imageWidth, imageHeight);\n            radFgCtx = radFgBuffer.getContext('2d');\n\n            // center post\n            if (withCenterKnob) {\n                // Set the pointer shadow params\n                radFgCtx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n                radFgCtx.shadowOffsetX = radFgCtx.shadowOffsetY = shadowOffset;\n                radFgCtx.shadowBlur = shadowOffset * 2;\n\n                if (gaugeType === steelseries.GaugeType.TYPE5) {\n                    if (steelseries.Orientation.WEST === orientation) {\n                        knobX = imageWidth * 0.733644 - knobSize / 2;\n                        radFgCtx.drawImage(createKnobImage(knobSize, knob, style), knobX, knobY);\n                    } else if (steelseries.Orientation.EAST === orientation) {\n                        knobX = imageWidth * (1 - 0.733644) - knobSize / 2;\n                        radFgCtx.drawImage(createKnobImage(knobSize, knob, style), knobX, knobY);\n                    } else {\n                        knobY = imageHeight * 0.733644 - knobSize / 2;\n                        radFgCtx.drawImage(createKnobImage(knobSize, knob, style), knobX, imageHeight * 0.6857);\n                    }\n                } else {\n                    radFgCtx.drawImage(createKnobImage(knobSize, knob, style), knobX, knobY);\n                }\n                // Undo shadow drawing\n                radFgCtx.shadowOffsetX = radFgCtx.shadowOffsetY = 0;\n                radFgCtx.shadowBlur = 0;\n            }\n\n            // highlight\n            switch (foregroundType.type) {\n            case 'type2':\n                radFgCtx.beginPath();\n                radFgCtx.moveTo(imageWidth * 0.135514, imageHeight * 0.696261);\n                radFgCtx.bezierCurveTo(imageWidth * 0.214953, imageHeight * 0.588785, imageWidth * 0.317757, imageHeight * 0.5, imageWidth * 0.462616, imageHeight * 0.425233);\n                radFgCtx.bezierCurveTo(imageWidth * 0.612149, imageHeight * 0.345794, imageWidth * 0.733644, imageHeight * 0.317757, imageWidth * 0.873831, imageHeight * 0.322429);\n                radFgCtx.bezierCurveTo(imageWidth * 0.766355, imageHeight * 0.112149, imageWidth * 0.528037, imageHeight * 0.023364, imageWidth * 0.313084, imageHeight * 0.130841);\n                radFgCtx.bezierCurveTo(imageWidth * 0.098130, imageHeight * 0.238317, imageWidth * 0.028037, imageHeight * 0.485981, imageWidth * 0.135514, imageHeight * 0.696261);\n                radFgCtx.closePath();\n                gradHighlight = radFgCtx.createLinearGradient(0.313084 * imageWidth, 0.135514 * imageHeight, 0.495528 * imageWidth, 0.493582 * imageHeight);\n                gradHighlight.addColorStop(0, 'rgba(255, 255, 255, 0.275)');\n                gradHighlight.addColorStop(1, 'rgba(255, 255, 255, 0.015)');\n                break;\n\n            case 'type3':\n                radFgCtx.beginPath();\n                radFgCtx.moveTo(imageWidth * 0.084112, imageHeight * 0.509345);\n                radFgCtx.bezierCurveTo(imageWidth * 0.210280, imageHeight * 0.556074, imageWidth * 0.462616, imageHeight * 0.560747, imageWidth * 0.5, imageHeight * 0.560747);\n                radFgCtx.bezierCurveTo(imageWidth * 0.537383, imageHeight * 0.560747, imageWidth * 0.794392, imageHeight * 0.560747, imageWidth * 0.915887, imageHeight * 0.509345);\n                radFgCtx.bezierCurveTo(imageWidth * 0.915887, imageHeight * 0.275700, imageWidth * 0.738317, imageHeight * 0.084112, imageWidth * 0.5, imageHeight * 0.084112);\n                radFgCtx.bezierCurveTo(imageWidth * 0.261682, imageHeight * 0.084112, imageWidth * 0.084112, imageHeight * 0.275700, imageWidth * 0.084112, imageHeight * 0.509345);\n                radFgCtx.closePath();\n                gradHighlight = radFgCtx.createLinearGradient(0, 0.093457 * imageHeight, 0, 0.556073 * imageHeight);\n                gradHighlight.addColorStop(0, 'rgba(255, 255, 255, 0.275)');\n                gradHighlight.addColorStop(1, 'rgba(255, 255, 255, 0.015)');\n                break;\n\n            case 'type4':\n                radFgCtx.beginPath();\n                radFgCtx.moveTo(imageWidth * 0.677570, imageHeight * 0.242990);\n                radFgCtx.bezierCurveTo(imageWidth * 0.771028, imageHeight * 0.308411, imageWidth * 0.822429, imageHeight * 0.411214, imageWidth * 0.813084, imageHeight * 0.528037);\n                radFgCtx.bezierCurveTo(imageWidth * 0.799065, imageHeight * 0.654205, imageWidth * 0.719626, imageHeight * 0.757009, imageWidth * 0.593457, imageHeight * 0.799065);\n                radFgCtx.bezierCurveTo(imageWidth * 0.485981, imageHeight * 0.831775, imageWidth * 0.369158, imageHeight * 0.808411, imageWidth * 0.285046, imageHeight * 0.728971);\n                radFgCtx.bezierCurveTo(imageWidth * 0.275700, imageHeight * 0.719626, imageWidth * 0.252336, imageHeight * 0.714953, imageWidth * 0.233644, imageHeight * 0.728971);\n                radFgCtx.bezierCurveTo(imageWidth * 0.214953, imageHeight * 0.747663, imageWidth * 0.219626, imageHeight * 0.771028, imageWidth * 0.228971, imageHeight * 0.775700);\n                radFgCtx.bezierCurveTo(imageWidth * 0.331775, imageHeight * 0.878504, imageWidth * 0.476635, imageHeight * 0.915887, imageWidth * 0.616822, imageHeight * 0.869158);\n                radFgCtx.bezierCurveTo(imageWidth * 0.771028, imageHeight * 0.822429, imageWidth * 0.873831, imageHeight * 0.691588, imageWidth * 0.887850, imageHeight * 0.532710);\n                radFgCtx.bezierCurveTo(imageWidth * 0.897196, imageHeight * 0.387850, imageWidth * 0.836448, imageHeight * 0.257009, imageWidth * 0.719626, imageHeight * 0.182242);\n                radFgCtx.bezierCurveTo(imageWidth * 0.705607, imageHeight * 0.172897, imageWidth * 0.682242, imageHeight * 0.163551, imageWidth * 0.663551, imageHeight * 0.186915);\n                radFgCtx.bezierCurveTo(imageWidth * 0.654205, imageHeight * 0.205607, imageWidth * 0.668224, imageHeight * 0.238317, imageWidth * 0.677570, imageHeight * 0.242990);\n                radFgCtx.closePath();\n                gradHighlight = radFgCtx.createRadialGradient((0.5) * imageWidth, ((0.5) * imageHeight), 0, ((0.5) * imageWidth), ((0.5) * imageHeight), 0.387850 * imageWidth);\n                gradHighlight.addColorStop(0, 'rgba(255, 255, 255, 0)');\n                gradHighlight.addColorStop(0.82, 'rgba(255, 255, 255, 0)');\n                gradHighlight.addColorStop(0.83, 'rgba(255, 255, 255, 0)');\n                gradHighlight.addColorStop(1, 'rgba(255, 255, 255, 0.15)');\n\n                radFgCtx.beginPath();\n                radFgCtx.moveTo(imageWidth * 0.261682, imageHeight * 0.224299);\n                radFgCtx.bezierCurveTo(imageWidth * 0.285046, imageHeight * 0.238317, imageWidth * 0.252336, imageHeight * 0.285046, imageWidth * 0.242990, imageHeight * 0.317757);\n                radFgCtx.bezierCurveTo(imageWidth * 0.242990, imageHeight * 0.350467, imageWidth * 0.271028, imageHeight * 0.383177, imageWidth * 0.271028, imageHeight * 0.397196);\n                radFgCtx.bezierCurveTo(imageWidth * 0.275700, imageHeight * 0.415887, imageWidth * 0.261682, imageHeight * 0.457943, imageWidth * 0.238317, imageHeight * 0.509345);\n                radFgCtx.bezierCurveTo(imageWidth * 0.224299, imageHeight * 0.542056, imageWidth * 0.177570, imageHeight * 0.612149, imageWidth * 0.158878, imageHeight * 0.612149);\n                radFgCtx.bezierCurveTo(imageWidth * 0.144859, imageHeight * 0.612149, imageWidth * 0.088785, imageHeight * 0.546728, imageWidth * 0.130841, imageHeight * 0.369158);\n                radFgCtx.bezierCurveTo(imageWidth * 0.140186, imageHeight * 0.336448, imageWidth * 0.214953, imageHeight * 0.200934, imageWidth * 0.261682, imageHeight * 0.224299);\n                radFgCtx.closePath();\n                gradHighlight2 = radFgCtx.createLinearGradient(0.130841 * imageWidth, 0.369158 * imageHeight, 0.273839 * imageWidth, 0.412877 * imageHeight);\n                gradHighlight2.addColorStop(0, 'rgba(255, 255, 255, 0.275)');\n                gradHighlight2.addColorStop(1, 'rgba(255, 255, 255, 0.015)');\n                radFgCtx.fillStyle = gradHighlight2;\n                radFgCtx.fill();\n                break;\n\n            case 'type5':\n                radFgCtx.beginPath();\n                radFgCtx.moveTo(imageWidth * 0.084112, imageHeight * 0.5);\n                radFgCtx.bezierCurveTo(imageWidth * 0.084112, imageHeight * 0.271028, imageWidth * 0.271028, imageHeight * 0.084112, imageWidth * 0.5, imageHeight * 0.084112);\n                radFgCtx.bezierCurveTo(imageWidth * 0.700934, imageHeight * 0.084112, imageWidth * 0.864485, imageHeight * 0.224299, imageWidth * 0.906542, imageHeight * 0.411214);\n                radFgCtx.bezierCurveTo(imageWidth * 0.911214, imageHeight * 0.439252, imageWidth * 0.911214, imageHeight * 0.518691, imageWidth * 0.845794, imageHeight * 0.537383);\n                radFgCtx.bezierCurveTo(imageWidth * 0.794392, imageHeight * 0.546728, imageWidth * 0.551401, imageHeight * 0.411214, imageWidth * 0.392523, imageHeight * 0.457943);\n                radFgCtx.bezierCurveTo(imageWidth * 0.168224, imageHeight * 0.509345, imageWidth * 0.135514, imageHeight * 0.775700, imageWidth * 0.093457, imageHeight * 0.593457);\n                radFgCtx.bezierCurveTo(imageWidth * 0.088785, imageHeight * 0.560747, imageWidth * 0.084112, imageHeight * 0.532710, imageWidth * 0.084112, imageHeight * 0.5);\n                radFgCtx.closePath();\n                gradHighlight = radFgCtx.createLinearGradient(0, 0.084112 * imageHeight, 0, 0.644859 * imageHeight);\n                gradHighlight.addColorStop(0, 'rgba(255, 255, 255, 0.275)');\n                gradHighlight.addColorStop(1, 'rgba(255, 255, 255, 0.015)');\n                break;\n\n            case 'type1':\n            /* falls through */\n            default:\n                radFgCtx.beginPath();\n                radFgCtx.moveTo(imageWidth * 0.084112, imageHeight * 0.509345);\n                radFgCtx.bezierCurveTo(imageWidth * 0.205607, imageHeight * 0.448598, imageWidth * 0.336448, imageHeight * 0.415887, imageWidth * 0.5, imageHeight * 0.415887);\n                radFgCtx.bezierCurveTo(imageWidth * 0.672897, imageHeight * 0.415887, imageWidth * 0.789719, imageHeight * 0.443925, imageWidth * 0.915887, imageHeight * 0.509345);\n                radFgCtx.bezierCurveTo(imageWidth * 0.915887, imageHeight * 0.275700, imageWidth * 0.738317, imageHeight * 0.084112, imageWidth * 0.5, imageHeight * 0.084112);\n                radFgCtx.bezierCurveTo(imageWidth * 0.261682, imageHeight * 0.084112, imageWidth * 0.084112, imageHeight * 0.275700, imageWidth * 0.084112, imageHeight * 0.509345);\n                radFgCtx.closePath();\n                gradHighlight = radFgCtx.createLinearGradient(0, 0.088785 * imageHeight, 0, 0.490654 * imageHeight);\n                gradHighlight.addColorStop(0, 'rgba(255, 255, 255, 0.275)');\n                gradHighlight.addColorStop(1, 'rgba(255, 255, 255, 0.015)');\n                break;\n            }\n            radFgCtx.fillStyle = gradHighlight;\n            radFgCtx.fill();\n\n            // cache the buffer\n            drawRadialForegroundImage.cache[cacheKey] = radFgBuffer;\n        }\n        ctx.drawImage(drawRadialForegroundImage.cache[cacheKey], 0, 0);\n        return this;\n    };\n    drawRadialForegroundImage.cache = {};\n\n    var drawLinearForegroundImage = function (ctx, imageWidth, imageHeight, vertical) {\n        var linFgBuffer, linFgCtx,\n            foregroundGradient,\n            frameWidth, fgOffset, fgOffset2,\n            cacheKey = imageWidth.toString() + imageHeight + vertical;\n\n        // check if we have already created and cached this buffer, if not create it\n        if (!drawLinearForegroundImage.cache[cacheKey]) {\n            // Setup buffer\n            linFgBuffer = createBuffer(imageWidth, imageHeight);\n            linFgCtx = linFgBuffer.getContext('2d');\n\n            frameWidth = Math.sqrt(imageWidth * imageWidth + imageHeight * imageHeight) * 0.04;\n            frameWidth = Math.min(frameWidth, (vertical ? imageWidth : imageHeight) * 0.1);\n            fgOffset = frameWidth * 1.3;\n            fgOffset2 = fgOffset * 1.33;\n\n            linFgCtx.beginPath();\n            linFgCtx.moveTo(fgOffset, imageHeight - fgOffset);\n            linFgCtx.lineTo(imageWidth - fgOffset, imageHeight - fgOffset);\n            linFgCtx.bezierCurveTo(imageWidth - fgOffset, imageHeight - fgOffset, imageWidth - fgOffset2, imageHeight * 0.7, imageWidth - fgOffset2, imageHeight * 0.5);\n            linFgCtx.bezierCurveTo(imageWidth - fgOffset2, fgOffset2, imageWidth - fgOffset, fgOffset, imageWidth - frameWidth, fgOffset);\n            linFgCtx.lineTo(fgOffset, fgOffset);\n            linFgCtx.bezierCurveTo(fgOffset, fgOffset, fgOffset2, imageHeight * 0.285714, fgOffset2, imageHeight * 0.5);\n            linFgCtx.bezierCurveTo(fgOffset2, imageHeight * 0.7, fgOffset, imageHeight - fgOffset, frameWidth, imageHeight - fgOffset);\n            linFgCtx.closePath();\n\n            foregroundGradient = linFgCtx.createLinearGradient(0, (imageHeight - frameWidth), 0, frameWidth);\n            foregroundGradient.addColorStop(0, 'rgba(255, 255, 255, 0)');\n            foregroundGradient.addColorStop(0.06, 'rgba(255, 255, 255, 0)');\n            foregroundGradient.addColorStop(0.07, 'rgba(255, 255, 255, 0)');\n            foregroundGradient.addColorStop(0.12, 'rgba(255, 255, 255, 0)');\n            foregroundGradient.addColorStop(0.17, 'rgba(255, 255, 255, 0.013546)');\n            foregroundGradient.addColorStop(0.1701, 'rgba(255, 255, 255, 0)');\n            foregroundGradient.addColorStop(0.79, 'rgba(255, 255, 255, 0)');\n            foregroundGradient.addColorStop(0.8, 'rgba(255, 255, 255, 0)');\n            foregroundGradient.addColorStop(0.84, 'rgba(255, 255, 255, 0.082217)');\n            foregroundGradient.addColorStop(0.93, 'rgba(255, 255, 255, 0.288702)');\n            foregroundGradient.addColorStop(0.94, 'rgba(255, 255, 255, 0.298039)');\n            foregroundGradient.addColorStop(0.96, 'rgba(255, 255, 255, 0.119213)');\n            foregroundGradient.addColorStop(0.97, 'rgba(255, 255, 255, 0)');\n            foregroundGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n            linFgCtx.fillStyle = foregroundGradient;\n            linFgCtx.fill();\n\n            // cache the buffer\n            drawLinearForegroundImage.cache[cacheKey] = linFgBuffer;\n        }\n        ctx.drawImage(drawLinearForegroundImage.cache[cacheKey], 0, 0);\n        return this;\n    };\n    drawLinearForegroundImage.cache = {};\n\n    var createKnobImage = function (size, knob, style) {\n        var knobBuffer, knobCtx,\n            maxPostCenterX = size / 2,\n            maxPostCenterY = size / 2,\n            grad,\n            cacheKey = size.toString() + knob.type + style.style;\n\n        // check if we have already created and cached this buffer, if not create it\n        if (!createKnobImage.cache[cacheKey]) {\n            knobBuffer = createBuffer(size * 1.18889, size * 1.18889);\n            knobCtx = knobBuffer.getContext('2d');\n\n            switch (knob.type) {\n            case 'metalKnob':\n                // METALKNOB_FRAME\n                knobCtx.beginPath();\n                knobCtx.moveTo(0, size * 0.5);\n                knobCtx.bezierCurveTo(0, size * 0.222222, size * 0.222222, 0, size * 0.5, 0);\n                knobCtx.bezierCurveTo(size * 0.777777, 0, size, size * 0.222222, size, size * 0.5);\n                knobCtx.bezierCurveTo(size, size * 0.777777, size * 0.777777, size, size * 0.5, size);\n                knobCtx.bezierCurveTo(size * 0.222222, size, 0, size * 0.777777, 0, size * 0.5);\n                knobCtx.closePath();\n                grad = knobCtx.createLinearGradient(0, 0, 0, size);\n                grad.addColorStop(0, 'rgb(92, 95, 101)');\n                grad.addColorStop(0.47, 'rgb(46, 49, 53)');\n                grad.addColorStop(1, 'rgb(22, 23, 26)');\n                knobCtx.fillStyle = grad;\n                knobCtx.fill();\n\n                // METALKNOB_MAIN\n                knobCtx.beginPath();\n                knobCtx.moveTo(size * 0.055555, size * 0.5);\n                knobCtx.bezierCurveTo(size * 0.055555, size * 0.277777, size * 0.277777, size * 0.055555, size * 0.5, size * 0.055555);\n                knobCtx.bezierCurveTo(size * 0.722222, size * 0.055555, size * 0.944444, size * 0.277777, size * 0.944444, size * 0.5);\n                knobCtx.bezierCurveTo(size * 0.944444, size * 0.722222, size * 0.722222, size * 0.944444, size * 0.5, size * 0.944444);\n                knobCtx.bezierCurveTo(size * 0.277777, size * 0.944444, size * 0.055555, size * 0.722222, size * 0.055555, size * 0.5);\n                knobCtx.closePath();\n                grad = knobCtx.createLinearGradient(0, 0.055555 * size, 0, 0.944443 * size);\n                switch (style.style) {\n                case 'black':\n                    grad.addColorStop(0, 'rgb(43, 42, 47)');\n                    grad.addColorStop(1, 'rgb(26, 27, 32)');\n                    break;\n\n                case 'brass':\n                    grad.addColorStop(0, 'rgb(150, 110, 54)');\n                    grad.addColorStop(1, 'rgb(124, 95, 61)');\n                    break;\n\n                case 'silver':\n                /* falls through */\n                default:\n                    grad.addColorStop(0, 'rgb(204, 204, 204)');\n                    grad.addColorStop(1, 'rgb(87, 92, 98)');\n                    break;\n                }\n                knobCtx.fillStyle = grad;\n                knobCtx.fill();\n\n                // METALKNOB_LOWERHL\n                knobCtx.beginPath();\n                knobCtx.moveTo(size * 0.777777, size * 0.833333);\n                knobCtx.bezierCurveTo(size * 0.722222, size * 0.722222, size * 0.611111, size * 0.666666, size * 0.5, size * 0.666666);\n                knobCtx.bezierCurveTo(size * 0.388888, size * 0.666666, size * 0.277777, size * 0.722222, size * 0.222222, size * 0.833333);\n                knobCtx.bezierCurveTo(size * 0.277777, size * 0.888888, size * 0.388888, size * 0.944444, size * 0.5, size * 0.944444);\n                knobCtx.bezierCurveTo(size * 0.611111, size * 0.944444, size * 0.722222, size * 0.888888, size * 0.777777, size * 0.833333);\n                knobCtx.closePath();\n                grad = knobCtx.createRadialGradient((0.555555) * size, ((0.944444) * size), 0, ((0.555555) * size), ((0.944444) * size), 0.388888 * size);\n                grad.addColorStop(0, 'rgba(255, 255, 255, 0.6)');\n                grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\n                knobCtx.fillStyle = grad;\n                knobCtx.fill();\n\n                // METALKNOB_UPPERHL\n                knobCtx.beginPath();\n                knobCtx.moveTo(size * 0.944444, size * 0.277777);\n                knobCtx.bezierCurveTo(size * 0.833333, size * 0.111111, size * 0.666666, 0, size * 0.5, 0);\n                knobCtx.bezierCurveTo(size * 0.333333, 0, size * 0.166666, size * 0.111111, size * 0.055555, size * 0.277777);\n                knobCtx.bezierCurveTo(size * 0.166666, size * 0.333333, size * 0.333333, size * 0.388888, size * 0.5, size * 0.388888);\n                knobCtx.bezierCurveTo(size * 0.666666, size * 0.388888, size * 0.833333, size * 0.333333, size * 0.944444, size * 0.277777);\n                knobCtx.closePath();\n                grad = knobCtx.createRadialGradient(0.5 * size, 0, 0, ((0.5) * size), 0, 0.583333 * size);\n                grad.addColorStop(0, 'rgba(255, 255, 255, 0.749019)');\n                grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\n                knobCtx.fillStyle = grad;\n                knobCtx.fill();\n\n                // METALKNOB_INNERFRAME\n                knobCtx.beginPath();\n                knobCtx.moveTo(size * 0.277777, size * 0.555555);\n                knobCtx.bezierCurveTo(size * 0.277777, size * 0.388888, size * 0.388888, size * 0.277777, size * 0.5, size * 0.277777);\n                knobCtx.bezierCurveTo(size * 0.611111, size * 0.277777, size * 0.777777, size * 0.388888, size * 0.777777, size * 0.555555);\n                knobCtx.bezierCurveTo(size * 0.777777, size * 0.666666, size * 0.611111, size * 0.777777, size * 0.5, size * 0.777777);\n                knobCtx.bezierCurveTo(size * 0.388888, size * 0.777777, size * 0.277777, size * 0.666666, size * 0.277777, size * 0.555555);\n                knobCtx.closePath();\n                grad = knobCtx.createLinearGradient(0, 0.277777 * size, 0, 0.722221 * size);\n                grad.addColorStop(0, '#000000');\n                grad.addColorStop(1, 'rgb(204, 204, 204)');\n                knobCtx.fillStyle = grad;\n                knobCtx.fill();\n\n                // METALKNOB_INNERBACKGROUND\n                knobCtx.beginPath();\n                knobCtx.moveTo(size * 0.333333, size * 0.555555);\n                knobCtx.bezierCurveTo(size * 0.333333, size * 0.444444, size * 0.388888, size * 0.333333, size * 0.5, size * 0.333333);\n                knobCtx.bezierCurveTo(size * 0.611111, size * 0.333333, size * 0.722222, size * 0.444444, size * 0.722222, size * 0.555555);\n                knobCtx.bezierCurveTo(size * 0.722222, size * 0.611111, size * 0.611111, size * 0.722222, size * 0.5, size * 0.722222);\n                knobCtx.bezierCurveTo(size * 0.388888, size * 0.722222, size * 0.333333, size * 0.611111, size * 0.333333, size * 0.555555);\n                knobCtx.closePath();\n                grad = knobCtx.createLinearGradient(0, 0.333333 * size, 0, 0.666666 * size);\n                grad.addColorStop(0, 'rgb(10, 9, 1)');\n                grad.addColorStop(1, 'rgb(42, 41, 37)');\n                knobCtx.fillStyle = grad;\n                knobCtx.fill();\n                break;\n\n            case 'standardKnob':\n                grad = knobCtx.createLinearGradient(0, 0, 0, size);\n                grad.addColorStop(0, 'rgb(180, 180, 180)');\n                grad.addColorStop(0.46, 'rgb(63, 63, 63)');\n                grad.addColorStop(1, 'rgb(40, 40, 40)');\n                knobCtx.fillStyle = grad;\n                knobCtx.beginPath();\n                knobCtx.arc(maxPostCenterX, maxPostCenterY, size / 2, 0, TWO_PI, true);\n                knobCtx.closePath();\n                knobCtx.fill();\n                grad = knobCtx.createLinearGradient(0, size - size * 0.77, 0, size - size * 0.77 + size * 0.77);\n                switch (style.style) {\n                case 'black':\n                    grad.addColorStop(0, 'rgb(191, 191, 191)');\n                    grad.addColorStop(0.5, 'rgb(45, 44, 49)');\n                    grad.addColorStop(1, 'rgb(125, 126, 128)');\n                    break;\n\n                case 'brass':\n                    grad.addColorStop(0, 'rgb(223, 208, 174)');\n                    grad.addColorStop(0.5, 'rgb(123, 95, 63)');\n                    grad.addColorStop(1, 'rgb(207, 190, 157)');\n                    break;\n\n                case 'silver':\n                /* falls through */\n                default:\n                    grad.addColorStop(0, 'rgb(215, 215, 215)');\n                    grad.addColorStop(0.5, 'rgb(116, 116, 116)');\n                    grad.addColorStop(1, 'rgb(215, 215, 215)');\n                    break;\n                }\n                knobCtx.fillStyle = grad;\n                knobCtx.beginPath();\n                knobCtx.arc(maxPostCenterX, maxPostCenterY, size * 0.77 / 2, 0, TWO_PI, true);\n                knobCtx.closePath();\n                knobCtx.fill();\n\n                grad = knobCtx.createRadialGradient(maxPostCenterX, maxPostCenterY, 0, maxPostCenterX, maxPostCenterY, size * 0.77 / 2);\n                grad.addColorStop(0, 'rgba(0, 0, 0, 0)');\n                grad.addColorStop(0.75, 'rgba(0, 0, 0, 0)');\n                grad.addColorStop(0.76, 'rgba(0, 0, 0, 0.01)');\n                grad.addColorStop(1, 'rgba(0, 0, 0, 0.2)');\n                knobCtx.fillStyle = grad;\n                knobCtx.beginPath();\n                knobCtx.arc(maxPostCenterX, maxPostCenterY, size * 0.77 / 2, 0, TWO_PI, true);\n                knobCtx.closePath();\n                knobCtx.fill();\n                break;\n            }\n\n            // cache the buffer\n            createKnobImage.cache[cacheKey] = knobBuffer;\n        }\n        return createKnobImage.cache[cacheKey];\n    };\n    createKnobImage.cache = {};\n\n    var createLedImage = function (size, state, ledColor) {\n        var ledBuffer, ledCtx,\n            ledCenterX = size / 2,\n            ledCenterY = size / 2,\n            grad,\n            cacheKey = size.toString() + state + ledColor.outerColor_ON;\n\n        // check if we have already created and cached this buffer, if not create it\n        if (!createLedImage.cache[cacheKey]) {\n            ledBuffer = createBuffer(size, size);\n            ledCtx = ledBuffer.getContext('2d');\n\n            switch (state) {\n            case 0: // LED OFF\n                // OFF Gradient\n                grad = ledCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, size * 0.5 / 2);\n                grad.addColorStop(0, ledColor.innerColor1_OFF);\n                grad.addColorStop(0.2, ledColor.innerColor2_OFF);\n                grad.addColorStop(1, ledColor.outerColor_OFF);\n                ledCtx.fillStyle = grad;\n\n                ledCtx.beginPath();\n                ledCtx.arc(ledCenterX, ledCenterY, size * 0.5 / 2, 0, TWO_PI, true);\n                ledCtx.closePath();\n                ledCtx.fill();\n\n                // InnerShadow\n                grad = ledCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, size * 0.5 / 2);\n                grad.addColorStop(0, 'rgba(0, 0, 0, 0)');\n                grad.addColorStop(0.8, 'rgba(0, 0, 0, 0)');\n                grad.addColorStop(1, 'rgba(0, 0, 0, 0.4)');\n                ledCtx.fillStyle = grad;\n\n                ledCtx.beginPath();\n                ledCtx.arc(ledCenterX, ledCenterY, size * 0.5 / 2, 0, TWO_PI, true);\n                ledCtx.closePath();\n                ledCtx.fill();\n\n                // LightReflex\n                grad = ledCtx.createLinearGradient(0, 0.35 * size, 0, 0.35 * size + 0.15 * size);\n                grad.addColorStop(0, 'rgba(255, 255, 255, 0.4)');\n                grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\n                ledCtx.fillStyle = grad;\n\n                ledCtx.beginPath();\n                ledCtx.arc(ledCenterX, 0.35 * size + 0.2 * size / 2, size * 0.2, 0, TWO_PI, true);\n                ledCtx.closePath();\n                ledCtx.fill();\n                break;\n\n            case 1: // LED ON\n                // ON Gradient\n                grad = ledCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, size * 0.5 / 2);\n                grad.addColorStop(0, ledColor.innerColor1_ON);\n                grad.addColorStop(0.2, ledColor.innerColor2_ON);\n                grad.addColorStop(1, ledColor.outerColor_ON);\n                ledCtx.fillStyle = grad;\n\n                ledCtx.beginPath();\n                ledCtx.arc(ledCenterX, ledCenterY, size * 0.5 / 2, 0, TWO_PI, true);\n                ledCtx.closePath();\n                ledCtx.fill();\n\n                // InnerShadow\n                grad = ledCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, size * 0.5 / 2);\n                grad.addColorStop(0, 'rgba(0, 0, 0, 0)');\n                grad.addColorStop(0.8, 'rgba(0, 0, 0, 0)');\n                grad.addColorStop(1, 'rgba(0, 0, 0, 0.4)');\n                ledCtx.fillStyle = grad;\n\n                ledCtx.beginPath();\n                ledCtx.arc(ledCenterX, ledCenterY, size * 0.5 / 2, 0, TWO_PI, true);\n                ledCtx.closePath();\n                ledCtx.fill();\n\n                // LightReflex\n                grad = ledCtx.createLinearGradient(0, 0.35 * size, 0, 0.35 * size + 0.15 * size);\n                grad.addColorStop(0, 'rgba(255, 255, 255, 0.4)');\n                grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\n                ledCtx.fillStyle = grad;\n\n                ledCtx.beginPath();\n                ledCtx.arc(ledCenterX, 0.35 * size + 0.2 * size / 2, size * 0.2, 0, TWO_PI, true);\n                ledCtx.closePath();\n                ledCtx.fill();\n\n                // Corona\n                grad = ledCtx.createRadialGradient(ledCenterX, ledCenterY, 0, ledCenterX, ledCenterY, size / 2);\n                grad.addColorStop(0, setAlpha(ledColor.coronaColor, 0).color);\n                grad.addColorStop(0.6, setAlpha(ledColor.coronaColor, 0.4).color);\n                grad.addColorStop(0.7, setAlpha(ledColor.coronaColor, 0.25).color);\n                grad.addColorStop(0.8, setAlpha(ledColor.coronaColor, 0.15).color);\n                grad.addColorStop(0.85, setAlpha(ledColor.coronaColor, 0.05).color);\n                grad.addColorStop(1, setAlpha(ledColor.coronaColor, 0).color);\n                ledCtx.fillStyle = grad;\n\n                ledCtx.beginPath();\n                ledCtx.arc(ledCenterX, ledCenterY, size / 2, 0, TWO_PI, true);\n                ledCtx.closePath();\n                ledCtx.fill();\n                break;\n            }\n            // cache the buffer\n            createLedImage.cache[cacheKey] = ledBuffer;\n        }\n        return createLedImage.cache[cacheKey];\n    };\n    createLedImage.cache = {};\n\n    var createLcdBackgroundImage = function (width, height, lcdColor) {\n        var lcdBuffer, lcdCtx,\n            xB = 0,\n            yB = 0,\n            wB = width,\n            hB = height,\n            rB = Math.min(width, height) * 0.095,\n            grad,\n            xF = 1,\n            yF = 1,\n            wF = width - 2,\n            hF = height - 2,\n            rF = rB - 1,\n            cacheKey = width.toString() + height + JSON.stringify(lcdColor);\n\n        // check if we have already created and cached this buffer, if not create it\n        if (!createLcdBackgroundImage.cache[cacheKey]) {\n            lcdBuffer = createBuffer(width, height);\n            lcdCtx = lcdBuffer.getContext('2d');\n            // background\n            grad = lcdCtx.createLinearGradient(0, yB, 0, yB + hB);\n            grad.addColorStop(0, '#4c4c4c');\n            grad.addColorStop(0.08, '#666666');\n            grad.addColorStop(0.92, '#666666');\n            grad.addColorStop(1, '#e6e6e6');\n            lcdCtx.fillStyle = grad;\n            roundedRectangle(lcdCtx, xB, yB, wB, hB, rB);\n            lcdCtx.fill();\n\n            // foreground\n            grad = lcdCtx.createLinearGradient(0, yF, 0, yF + hF);\n            grad.addColorStop(0, lcdColor.gradientStartColor);\n            grad.addColorStop(0.03, lcdColor.gradientFraction1Color);\n            grad.addColorStop(0.49, lcdColor.gradientFraction2Color);\n            grad.addColorStop(0.5, lcdColor.gradientFraction3Color);\n            grad.addColorStop(1, lcdColor.gradientStopColor);\n            lcdCtx.fillStyle = grad;\n            roundedRectangle(lcdCtx, xF, yF, wF, hF, rF);\n            lcdCtx.fill();\n            // cache the buffer\n            createLcdBackgroundImage.cache[cacheKey] = lcdBuffer;\n        }\n        return createLcdBackgroundImage.cache[cacheKey];\n    };\n    createLcdBackgroundImage.cache = {};\n\n    var createMeasuredValueImage = function (size, indicatorColor, radial, vertical) {\n        var indicatorBuffer, indicatorCtx,\n            cacheKey = size.toString() + indicatorColor + radial + vertical;\n\n        // check if we have already created and cached this buffer, if so return it and exit\n        if (!createMeasuredValueImage.cache[cacheKey]) {\n            indicatorBuffer = doc.createElement('canvas');\n            indicatorCtx = indicatorBuffer.getContext('2d');\n            indicatorBuffer.width = size;\n            indicatorBuffer.height = size;\n            indicatorCtx.fillStyle = indicatorColor;\n            if (radial) {\n                indicatorCtx.beginPath();\n                indicatorCtx.moveTo(size * 0.5, size);\n                indicatorCtx.lineTo(0, 0);\n                indicatorCtx.lineTo(size, 0);\n                indicatorCtx.closePath();\n                indicatorCtx.fill();\n            } else {\n                if (vertical) {\n                    indicatorCtx.beginPath();\n                    indicatorCtx.moveTo(size, size * 0.5);\n                    indicatorCtx.lineTo(0, 0);\n                    indicatorCtx.lineTo(0, size);\n                    indicatorCtx.closePath();\n                    indicatorCtx.fill();\n                } else {\n                    indicatorCtx.beginPath();\n                    indicatorCtx.moveTo(size * 0.5, 0);\n                    indicatorCtx.lineTo(size, size);\n                    indicatorCtx.lineTo(0, size);\n                    indicatorCtx.closePath();\n                    indicatorCtx.fill();\n                }\n            }\n            // cache the buffer\n            createMeasuredValueImage.cache[cacheKey] = indicatorBuffer;\n        }\n        return createMeasuredValueImage.cache[cacheKey];\n    };\n    createMeasuredValueImage.cache = {};\n\n    var createTrendIndicator = function (width, onSection, colors) {\n        var height = width * 2,\n            trendBuffer, trendCtx,\n            fill,\n            cacheKey = onSection.state + width + JSON.stringify(colors),\n\n            drawUpArrow = function () {\n                // draw up arrow (red)\n                var ledColor = colors[0];\n\n                if (onSection.state === 'up') {\n                    fill = trendCtx.createRadialGradient(0.5 * width, 0.2 * height, 0, 0.5 * width, 0.2 * height, 0.5 * width);\n                    fill.addColorStop(0, ledColor.innerColor1_ON);\n                    fill.addColorStop(0.2, ledColor.innerColor2_ON);\n                    fill.addColorStop(1, ledColor.outerColor_ON);\n                } else {\n                    fill = trendCtx.createLinearGradient(0, 0, 0, 0.5 * height);\n                    fill.addColorStop(0, '#323232');\n                    fill.addColorStop(1, '#5c5c5c');\n                }\n                trendCtx.fillStyle = fill;\n                trendCtx.beginPath();\n                trendCtx.moveTo(0.5 * width, 0);\n                trendCtx.lineTo(width, 0.2 * height);\n                trendCtx.lineTo(0.752 * width, 0.2 * height);\n                trendCtx.lineTo(0.752 * width, 0.37 * height);\n                trendCtx.lineTo(0.252 * width, 0.37 * height);\n                trendCtx.lineTo(0.252 * width, 0.2 * height);\n                trendCtx.lineTo(0, 0.2 * height);\n                trendCtx.closePath();\n                trendCtx.fill();\n                if (onSection.state !== 'up') {\n                    // Inner shadow\n                    trendCtx.strokeStyle = 'rgba(0, 0, 0, 0.4)';\n                    trendCtx.beginPath();\n                    trendCtx.moveTo(0, 0.2 * height);\n                    trendCtx.lineTo(0.5 * width, 0);\n                    trendCtx.lineTo(width, 0.2 * height);\n                    trendCtx.moveTo(0.252 * width, 0.2 * height);\n                    trendCtx.lineTo(0.252 * width, 0.37 * height);\n                    trendCtx.stroke();\n                    // Inner highlight\n                    trendCtx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n                    trendCtx.beginPath();\n                    trendCtx.moveTo(0.252 * width, 0.37 * height);\n                    trendCtx.lineTo(0.752 * width, 0.37 * height);\n                    trendCtx.lineTo(0.752 * width, 0.2 * height);\n                    trendCtx.lineTo(width, 0.2 * height);\n                    trendCtx.stroke();\n                } else {\n                    // draw halo\n                    fill = trendCtx.createRadialGradient(0.5 * width, 0.2 * height, 0, 0.5 * width, 0.2 * height, 0.7 * width);\n                    fill.addColorStop(0, setAlpha(ledColor.coronaColor, 0).color);\n                    fill.addColorStop(0.5, setAlpha(ledColor.coronaColor, 0.3).color);\n                    fill.addColorStop(0.7, setAlpha(ledColor.coronaColor, 0.2).color);\n                    fill.addColorStop(0.8, setAlpha(ledColor.coronaColor, 0.1).color);\n                    fill.addColorStop(0.85, setAlpha(ledColor.coronaColor, 0.05).color);\n                    fill.addColorStop(1, setAlpha(ledColor.coronaColor, 0).color);\n                    trendCtx.fillStyle = fill;\n\n                    trendCtx.beginPath();\n                    trendCtx.arc(0.5 * width, 0.2 * height, 0.7 * width, 0, TWO_PI, true);\n                    trendCtx.closePath();\n                    trendCtx.fill();\n                }\n            },\n\n            drawEquals = function () {\n                // draw equal symbol\n                var ledColor = colors[1];\n\n                trendCtx.beginPath();\n                if (onSection.state === 'steady') {\n                    fill = ledColor.outerColor_ON;\n                    trendCtx.fillStyle = fill;\n                    trendCtx.rect(0.128 * width, 0.41 * height, 0.744 * width, 0.074 * height);\n                    trendCtx.rect(0.128 * width, 0.516 * height, 0.744 * width, 0.074 * height);\n                    trendCtx.closePath();\n                    trendCtx.fill();\n                } else {\n                    fill = trendCtx.createLinearGradient(0, 0.41 * height, 0, 0.41 * height + 0.074 * height);\n                    fill.addColorStop(0, '#323232');\n                    fill.addColorStop(1, '#5c5c5c');\n                    trendCtx.fillStyle = fill;\n                    trendCtx.rect(0.128 * width, 0.41 * height, 0.744 * width, 0.074 * height);\n                    trendCtx.closePath();\n                    trendCtx.fill();\n                    fill = trendCtx.createLinearGradient(0, 0.516 * height, 0, 0.516 * height + 0.074 * height);\n                    fill.addColorStop(0, '#323232');\n                    fill.addColorStop(1, '#5c5c5c');\n                    trendCtx.fillStyle = fill;\n                    trendCtx.rect(0.128 * width, 0.516 * height, 0.744 * width, 0.074 * height);\n                    trendCtx.closePath();\n                    trendCtx.fill();\n                }\n                if (onSection.state !== 'steady') {\n                    // inner shadow\n                    trendCtx.strokeStyle = 'rgba(0, 0, 0, 0.4)';\n                    trendCtx.beginPath();\n                    trendCtx.moveTo(0.128 * width, 0.41 * height + 0.074 * height);\n                    trendCtx.lineTo(0.128 * width, 0.41 * height);\n                    trendCtx.lineTo(0.128 * width + 0.744 * width, 0.41 * height);\n                    trendCtx.stroke();\n                    trendCtx.beginPath();\n                    trendCtx.moveTo(0.128 * width, 0.516 * height + 0.074 * height);\n                    trendCtx.lineTo(0.128 * width, 0.516 * height);\n                    trendCtx.lineTo(0.128 * width + 0.744 * width, 0.516 * height);\n                    trendCtx.stroke();\n                    // inner highlight\n                    trendCtx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n                    trendCtx.beginPath();\n                    trendCtx.moveTo(0.128 * width + 0.744 * width, 0.41 * height);\n                    trendCtx.lineTo(0.128 * width + 0.744 * width, 0.41 * height + 0.074 * height);\n                    trendCtx.lineTo(0.128 * width, 0.41 * height + 0.074 * height);\n                    trendCtx.stroke();\n                    trendCtx.beginPath();\n                    trendCtx.moveTo(0.128 * width + 0.744 * width, 0.516 * height);\n                    trendCtx.lineTo(0.128 * width + 0.744 * width, 0.516 * height + 0.074 * height);\n                    trendCtx.lineTo(0.128 * width, 0.516 * height + 0.074 * height);\n                    trendCtx.stroke();\n                } else {\n                    // draw halo\n                    fill = trendCtx.createRadialGradient(0.5 * width, 0.5 * height, 0, 0.5 * width, 0.5 * height, 0.7 * width);\n                    fill.addColorStop(0, setAlpha(ledColor.coronaColor, 0).color);\n                    fill.addColorStop(0.5, setAlpha(ledColor.coronaColor, 0.3).color);\n                    fill.addColorStop(0.7, setAlpha(ledColor.coronaColor, 0.2).color);\n                    fill.addColorStop(0.8, setAlpha(ledColor.coronaColor, 0.1).color);\n                    fill.addColorStop(0.85, setAlpha(ledColor.coronaColor, 0.05).color);\n                    fill.addColorStop(1, setAlpha(ledColor.coronaColor, 0).color);\n                    trendCtx.fillStyle = fill;\n                    trendCtx.beginPath();\n                    trendCtx.arc(0.5 * width, 0.5 * height, 0.7 * width, 0, TWO_PI, true);\n                    trendCtx.closePath();\n                    trendCtx.fill();\n                }\n            },\n\n            drawDownArrow = function () {\n                // draw down arrow\n                var ledColor = colors[2];\n                if (onSection.state === 'down') {\n                    fill = trendCtx.createRadialGradient(0.5 * width, 0.8 * height, 0, 0.5 * width, 0.8 * height, 0.5 * width);\n                    fill.addColorStop(0, ledColor.innerColor1_ON);\n                    fill.addColorStop(0.2, ledColor.innerColor2_ON);\n                    fill.addColorStop(1, ledColor.outerColor_ON);\n                } else {\n                    fill = trendCtx.createLinearGradient(0, 0.63 * height, 0, height);\n                    fill.addColorStop(0, '#323232');\n                    fill.addColorStop(1, '#5c5c5c');\n                }\n                trendCtx.beginPath();\n                trendCtx.fillStyle = fill;\n                trendCtx.moveTo(0.5 * width, height);\n                trendCtx.lineTo(width, 0.8 * height);\n                trendCtx.lineTo(0.725 * width, 0.8 * height);\n                trendCtx.lineTo(0.725 * width, 0.63 * height);\n                trendCtx.lineTo(0.252 * width, 0.63 * height);\n                trendCtx.lineTo(0.252 * width, 0.8 * height);\n                trendCtx.lineTo(0, 0.8 * height);\n                trendCtx.closePath();\n                trendCtx.fill();\n                if (onSection.state !== 'down') {\n                    // Inner shadow\n                    trendCtx.strokeStyle = 'rgba(0, 0, 0, 0.4)';\n                    trendCtx.beginPath();\n                    trendCtx.moveTo(0, 0.8 * height);\n                    trendCtx.lineTo(0.252 * width, 0.8 * height);\n                    trendCtx.moveTo(0.252 * width, 0.63 * height);\n                    trendCtx.lineTo(0.752 * width, 0.63 * height);\n                    trendCtx.stroke();\n                    trendCtx.beginPath();\n                    trendCtx.moveTo(0.752 * width, 0.8 * height);\n                    trendCtx.lineTo(width, 0.8 * height);\n                    trendCtx.stroke();\n                    // Inner highlight\n                    trendCtx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n                    trendCtx.beginPath();\n                    trendCtx.moveTo(0, 0.8 * height);\n                    trendCtx.lineTo(0.5 * width, height);\n                    trendCtx.lineTo(width, 0.8 * height);\n                    trendCtx.stroke();\n                    trendCtx.beginPath();\n                    trendCtx.moveTo(0.752 * width, 0.8 * height);\n                    trendCtx.lineTo(0.752 * width, 0.63 * height);\n                    trendCtx.stroke();\n                } else {\n                    // draw halo\n                    fill = trendCtx.createRadialGradient(0.5 * width, 0.8 * height, 0, 0.5 * width, 0.8 * height, 0.7 * width);\n                    fill.addColorStop(0, setAlpha(ledColor.coronaColor, 0).color);\n                    fill.addColorStop(0.5, setAlpha(ledColor.coronaColor, 0.3).color);\n                    fill.addColorStop(0.7, setAlpha(ledColor.coronaColor, 0.2).color);\n                    fill.addColorStop(0.8, setAlpha(ledColor.coronaColor, 0.1).color);\n                    fill.addColorStop(0.85, setAlpha(ledColor.coronaColor, 0.05).color);\n                    fill.addColorStop(1, setAlpha(ledColor.coronaColor, 0).color);\n                    trendCtx.fillStyle = fill;\n                    trendCtx.beginPath();\n                    trendCtx.arc(0.5 * width, 0.8 * height, 0.7 * width, 0, TWO_PI, true);\n                    trendCtx.closePath();\n                    trendCtx.fill();\n                }\n            };\n\n        // Check if we have already cached this indicator, if not create it\n        if (!createTrendIndicator.cache[cacheKey]) {\n            // create oversized buffer for the glow\n            trendBuffer = createBuffer(width * 2, width * 4);\n            trendCtx = trendBuffer.getContext('2d');\n            trendCtx.translate(width * 0.5, width * 0.5);\n            // Must draw the active section last so the 'glow' is on top\n            switch (onSection.state) {\n            case 'up':\n                drawDownArrow();\n                drawEquals();\n                drawUpArrow();\n                break;\n            case 'steady':\n                drawDownArrow();\n                drawUpArrow();\n                drawEquals();\n                break;\n            case 'down':\n            /* falls through */\n            default:\n                drawUpArrow();\n                drawEquals();\n                drawDownArrow();\n                break;\n            }\n            // cache the buffer\n            createTrendIndicator.cache[cacheKey] = trendBuffer;\n        }\n        return createTrendIndicator.cache[cacheKey];\n    };\n    createTrendIndicator.cache = {};\n\n    var drawTitleImage = function (ctx, imageWidth, imageHeight, titleString, unitString, backgroundColor, vertical, radial, altPos, gaugeType) {\n        gaugeType = (undefined === gaugeType ? gaugeType = steelseries.GaugeType.TYPE1 : gaugeType);\n        ctx.save();\n        ctx.textAlign = (radial ? 'center' : 'left');\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = backgroundColor.labelColor.getRgbaColor();\n        ctx.fillStyle = backgroundColor.labelColor.getRgbaColor();\n\n        if (radial) {\n            ctx.font = 0.046728 * imageWidth + 'px ' + stdFontName;\n            ctx.fillText(titleString, imageWidth / 2, imageHeight * 0.3, imageWidth * 0.3);\n            ctx.fillText(unitString, imageWidth / 2, imageHeight * 0.38, imageWidth * 0.3);\n        } else {\n            // linear\n            if (vertical) {\n                ctx.font = 0.1 * imageWidth + 'px ' + stdFontName;\n                ctx.save();\n                ctx.translate(0.671428 * imageWidth, 0.1375 * imageHeight);\n                ctx.rotate(1.570796);\n                ctx.fillText(titleString, 0, 0);\n                ctx.translate(-0.671428 * imageWidth, -0.1375 * imageHeight);\n                ctx.restore();\n                ctx.font = 0.071428 * imageWidth + 'px ' + stdFontName;\n                if (altPos) {\n                    // LCD visible\n                    if (gaugeType.type === 'type2') {\n                        ctx.textAlign = 'right';\n                        ctx.fillText(unitString, 0.36 * imageWidth, imageHeight * 0.79, imageWidth * 0.25);\n                    } else {\n                        ctx.fillText(unitString, 0.63 * imageWidth, imageHeight * 0.85, imageWidth * 0.2);\n                    }\n                } else {\n                    // LCD hidden\n                    ctx.textAlign = 'center';\n                    if (gaugeType.type === 'type2') {\n                        ctx.fillText(unitString, imageWidth / 2, imageHeight * 0.92, imageWidth * 0.2);\n                    } else {\n                        ctx.fillText(unitString, imageWidth / 2, imageHeight * 0.89, imageWidth * 0.2);\n                    }\n                }\n            } else { //linear horizontal\n                ctx.font = 0.035 * imageWidth + 'px ' + stdFontName;\n                ctx.fillText(titleString, imageWidth * 0.15, imageHeight * 0.25, imageWidth * 0.3);\n                ctx.font = 0.025 * imageWidth + 'px ' + stdFontName;\n                ctx.fillText(unitString, imageWidth * 0.0625, imageHeight * 0.7, imageWidth * 0.07);\n            }\n        }\n        ctx.restore();\n    };\n\n    //*****************************************   T E X T U R E S   ****************************************************\n    var carbonBuffer = drawToBuffer(12, 12, function (ctx) {\n            var imageWidth = ctx.canvas.width,\n                imageHeight = ctx.canvas.height,\n                offsetX = 0,\n                offsetY = 0,\n                grad;\n\n            ctx.save();\n\n            // RULB\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(0, 0, imageWidth * 0.5, imageHeight * 0.5);\n            ctx.closePath();\n            ctx.restore();\n\n            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.5 * imageHeight + offsetY * imageHeight);\n            grad.addColorStop(0, 'rgb(35, 35, 35)');\n            grad.addColorStop(1, 'rgb(23, 23, 23)');\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            // RULF\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(imageWidth * 0.083333, 0, imageWidth * 0.333333, imageHeight * 0.416666);\n            ctx.closePath();\n            ctx.restore();\n            offsetX = 0.083333;\n            offsetY = 0;\n            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.416666 * imageHeight + offsetY * imageHeight);\n            grad.addColorStop(0, 'rgb(38, 38, 38)');\n            grad.addColorStop(1, 'rgb(30, 30, 30)');\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            // RLRB\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(imageWidth * 0.5, imageHeight * 0.5, imageWidth * 0.5, imageHeight * 0.5);\n            ctx.closePath();\n            ctx.restore();\n            offsetX = 0.5;\n            offsetY = 0.5;\n            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.5 * imageHeight + offsetY * imageHeight);\n            grad.addColorStop(0, 'rgb(35, 35, 35)');\n            grad.addColorStop(1, 'rgb(23, 23, 23)');\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            // RLRF\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(imageWidth * 0.583333, imageHeight * 0.5, imageWidth * 0.333333, imageHeight * 0.416666);\n            ctx.closePath();\n            ctx.restore();\n            offsetX = 0.583333;\n            offsetY = 0.5;\n            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.416666 * imageHeight + offsetY * imageHeight);\n            grad.addColorStop(0, 'rgb(38, 38, 38)');\n            grad.addColorStop(1, 'rgb(30, 30, 30)');\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            // RURB\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(imageWidth * 0.5, 0, imageWidth * 0.5, imageHeight * 0.5);\n            ctx.closePath();\n            ctx.restore();\n            offsetX = 0.5;\n            offsetY = 0;\n            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.5 * imageHeight + offsetY * imageHeight);\n            grad.addColorStop(0, '#303030');\n            grad.addColorStop(1, 'rgb(40, 40, 40)');\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            // RURF\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(imageWidth * 0.583333, imageHeight * 0.083333, imageWidth * 0.333333, imageHeight * 0.416666);\n            ctx.closePath();\n            ctx.restore();\n            offsetX = 0.583333;\n            offsetY = 0.083333;\n            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.416666 * imageHeight + offsetY * imageHeight);\n            grad.addColorStop(0, 'rgb(53, 53, 53)');\n            grad.addColorStop(1, 'rgb(45, 45, 45)');\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            // RLLB\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(0, imageHeight * 0.5, imageWidth * 0.5, imageHeight * 0.5);\n            ctx.closePath();\n            ctx.restore();\n            offsetX = 0;\n            offsetY = 0.5;\n            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.5 * imageHeight + offsetY * imageHeight);\n            grad.addColorStop(0, '#303030');\n            grad.addColorStop(1, '#282828');\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            // RLLF\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(imageWidth * 0.083333, imageHeight * 0.583333, imageWidth * 0.333333, imageHeight * 0.416666);\n            ctx.closePath();\n            ctx.restore();\n            offsetX = 0.083333;\n            offsetY = 0.583333;\n            grad = ctx.createLinearGradient(0, offsetY * imageHeight, 0, 0.416666 * imageHeight + offsetY * imageHeight);\n            grad.addColorStop(0, '#353535');\n            grad.addColorStop(1, '#2d2d2d');\n            ctx.fillStyle = grad;\n            ctx.fill();\n\n            ctx.restore();\n        });\n\n    var punchedSheetBuffer = drawToBuffer(15, 15, function (ctx) {\n        var imageWidth = ctx.canvas.width,\n            imageHeight = ctx.canvas.height,\n            grad;\n\n        ctx.save();\n\n        // BACK\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(0, 0, imageWidth, imageHeight);\n        ctx.closePath();\n        ctx.restore();\n        ctx.fillStyle = '#1D2123';\n        ctx.fill();\n\n        // ULB\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, imageHeight * 0.266666);\n        ctx.bezierCurveTo(0, imageHeight * 0.4, imageWidth * 0.066666, imageHeight * 0.466666, imageWidth * 0.2, imageHeight * 0.466666);\n        ctx.bezierCurveTo(imageWidth * 0.333333, imageHeight * 0.466666, imageWidth * 0.4, imageHeight * 0.4, imageWidth * 0.4, imageHeight * 0.266666);\n        ctx.bezierCurveTo(imageWidth * 0.4, imageHeight * 0.133333, imageWidth * 0.333333, imageHeight * 0.066666, imageWidth * 0.2, imageHeight * 0.066666);\n        ctx.bezierCurveTo(imageWidth * 0.066666, imageHeight * 0.066666, 0, imageHeight * 0.133333, 0, imageHeight * 0.266666);\n        ctx.closePath();\n        grad = ctx.createLinearGradient(0, 0.066666 * imageHeight, 0, 0.466666 * imageHeight);\n        grad.addColorStop(0, '#000000');\n        grad.addColorStop(1, '#444444');\n        ctx.fillStyle = grad;\n        ctx.fill();\n\n        // ULF\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, imageHeight * 0.2);\n        ctx.bezierCurveTo(0, imageHeight * 0.333333, imageWidth * 0.066666, imageHeight * 0.4, imageWidth * 0.2, imageHeight * 0.4);\n        ctx.bezierCurveTo(imageWidth * 0.333333, imageHeight * 0.4, imageWidth * 0.4, imageHeight * 0.333333, imageWidth * 0.4, imageHeight * 0.2);\n        ctx.bezierCurveTo(imageWidth * 0.4, imageHeight * 0.066666, imageWidth * 0.333333, 0, imageWidth * 0.2, 0);\n        ctx.bezierCurveTo(imageWidth * 0.066666, 0, 0, imageHeight * 0.066666, 0, imageHeight * 0.2);\n        ctx.closePath();\n        ctx.fillStyle = '#050506';\n        ctx.fill();\n\n        // LRB\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.466666, imageHeight * 0.733333);\n        ctx.bezierCurveTo(imageWidth * 0.466666, imageHeight * 0.866666, imageWidth * 0.533333, imageHeight * 0.933333, imageWidth * 0.666666, imageHeight * 0.933333);\n        ctx.bezierCurveTo(imageWidth * 0.8, imageHeight * 0.933333, imageWidth * 0.866666, imageHeight * 0.866666, imageWidth * 0.866666, imageHeight * 0.733333);\n        ctx.bezierCurveTo(imageWidth * 0.866666, imageHeight * 0.6, imageWidth * 0.8, imageHeight * 0.533333, imageWidth * 0.666666, imageHeight * 0.533333);\n        ctx.bezierCurveTo(imageWidth * 0.533333, imageHeight * 0.533333, imageWidth * 0.466666, imageHeight * 0.6, imageWidth * 0.466666, imageHeight * 0.733333);\n        ctx.closePath();\n        grad = ctx.createLinearGradient(0, 0.533333 * imageHeight, 0, 0.933333 * imageHeight);\n        grad.addColorStop(0, '#000000');\n        grad.addColorStop(1, '#444444');\n        ctx.fillStyle = grad;\n        ctx.fill();\n\n        // LRF\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(imageWidth * 0.466666, imageHeight * 0.666666);\n        ctx.bezierCurveTo(imageWidth * 0.466666, imageHeight * 0.8, imageWidth * 0.533333, imageHeight * 0.866666, imageWidth * 0.666666, imageHeight * 0.866666);\n        ctx.bezierCurveTo(imageWidth * 0.8, imageHeight * 0.866666, imageWidth * 0.866666, imageHeight * 0.8, imageWidth * 0.866666, imageHeight * 0.666666);\n        ctx.bezierCurveTo(imageWidth * 0.866666, imageHeight * 0.533333, imageWidth * 0.8, imageHeight * 0.466666, imageWidth * 0.666666, imageHeight * 0.466666);\n        ctx.bezierCurveTo(imageWidth * 0.533333, imageHeight * 0.466666, imageWidth * 0.466666, imageHeight * 0.533333, imageWidth * 0.466666, imageHeight * 0.666666);\n        ctx.closePath();\n        ctx.fillStyle = '#050506';\n        ctx.fill();\n\n        ctx.restore();\n    });\n\n    var brushedMetalTexture = function (color, radius, amount, monochrome, shine) {\n\n        this.fill = function (startX, startY, endX, endY) {\n            var i, x, y,                        // loop counters\n                sinArr,\n                width, height,\n                outCanvas, outCanvasContext,    // output canvas\n                inPixels, outPixels,            // pixel arrays\n                //alpha = color & 0xff000000;\n                alpha = 255,\n                red = (color >> 16) & 0xff,\n                green = (color >> 8) & 0xff,\n                blue = color & 0xff,\n                n = 0,\n                variation = 255 * amount,\n                totR, totG, totB,\n                indx, tr, tg, tb, f;\n\n            startX = Math.floor(startX);\n            startY = Math.floor(startY);\n            endX = Math.ceil(endX);\n            endY = Math.ceil(endY);\n\n            width = endX - startX;\n            height = endY - startY;\n\n            // Create output canvas\n            outCanvas = createBuffer(width, height);\n            outCanvasContext = outCanvas.getContext('2d');\n\n            // Create pixel arrays\n            inPixels = outCanvasContext.createImageData(width, height);\n            outPixels = outCanvasContext.createImageData(width, height);\n\n            // Precreate sin() values\n            if (shine !== 0) {\n                sinArr = [];\n                for (i = 0; i < width; i++) {\n                    sinArr[i] = (255 * shine * Math.sin(i / width * PI)) | 0;\n                }\n            }\n\n            for (y = 0; y < height; y++) {\n                // The pixel array is addressed as 4 elements per pixel [r,g,b,a]\n                if (radius !== 0) {\n                    totR = totG = totB = 0;\n                }\n                for (x = 0; x < width; x ++) {\n                    indx = (y * width * 4) + (x * 4);\n                    tr = red;\n                    tg = green;\n                    tb = blue;\n                    if (shine !== 0) {\n                        f = sinArr[x];\n                        tr += f;\n                        tg += f;\n                        tb += f;\n                    }\n\n                    if (monochrome) {\n                        n = ((2 * Math.random() - 1) * variation) | 0;\n                        inPixels.data[indx]   = clamp(tr + n);\n                        inPixels.data[indx + 1] = clamp(tg + n);\n                        inPixels.data[indx + 2] = clamp(tb + n);\n                        inPixels.data[indx + 3] = alpha;\n                    } else {\n                        inPixels.data[indx]   = random(tr, variation);\n                        inPixels.data[indx + 1] = random(tg, variation);\n                        inPixels.data[indx + 2] = random(tb, variation);\n                        inPixels.data[indx + 3] = alpha;\n                    }\n                }\n            }\n\n            if (radius > 0) {\n                horizontalBlur(inPixels, outPixels, width, height, radius, alpha);\n                outCanvasContext.putImageData(outPixels, startX, startY);\n            } else {\n                outCanvasContext.putImageData(inPixels, startX, startY);\n            }\n            return outCanvas;\n        };\n\n        function random(x, vari) {\n            x += ((2 * Math.random() - 1) * vari) | 0;\n            return (x < 0 ? 0 : (x > 255 ? 255 : x));\n        }\n\n        function clamp(C) {\n            return (C < 0 ? 0 : (C > 255 ? 255 : C));\n        }\n\n        function horizontalBlur(inPix, outPix, width, height, radius, alpha) {\n            var x, y,       // loop counters\n                i, mul, indx,\n                totR, totG, totB;\n\n            if (radius >= width) {\n                radius = width - 1;\n            }\n            mul = 1 / (radius * 2 + 1);\n            indx = 0;\n            for (y = 0; y < height; y++) {\n                totR = totG = totB = 0;\n                for (x = 0; x < radius ; x++) {\n                    i = (indx + x) * 4;\n                    totR += inPix.data[i];\n                    totG += inPix.data[i + 1];\n                    totB += inPix.data[i + 2];\n                }\n                for (x = 0; x < width; x++) {\n                    if (x > radius) {\n                        i = (indx - radius - 1) * 4;\n                        totR -= inPix.data[i];\n                        totG -= inPix.data[i + 1];\n                        totB -= inPix.data[i + 2];\n                    }\n                    if (x + radius < width) {\n                        i = (indx + radius) * 4;\n                        totR += inPix.data[i];\n                        totG += inPix.data[i + 1];\n                        totB += inPix.data[i + 2];\n                    }\n                    i = indx * 4;\n                    outPix.data[i] = (totR * mul) | 0;\n                    outPix.data[i + 1] = (totG * mul) | 0;\n                    outPix.data[i + 2] = (totB * mul) | 0;\n                    outPix.data[i + 3] = alpha;\n                    indx++;\n                }\n            }\n        }\n\n        return this;\n    };\n\n    //********************************************   T O O L S   *******************************************************\n    var RgbaColor = function (r, g, b, a) {\n        var red, green, blue, alpha;\n\n        if (arguments.length === 1) {\n            // hexadecimal input #112233\n            b = parseInt(r.substr(5, 2), 16);\n            g = parseInt(r.substr(3, 2), 16);\n            r = parseInt(r.substr(1, 2), 16);\n            a = 1;\n        } else if (arguments.length === 3) {\n            a = 1;\n        }\n\n        function validateColors() {\n            red = range(r, 255);\n            green = range(g, 255);\n            blue = range(b, 255);\n            alpha = range(a, 1);\n        }\n\n        validateColors();\n\n        this.getRed = function () {\n            return red;\n        };\n\n        this.setRed = function (r) {\n            red = range(r, 255);\n        };\n\n        this.getGreen = function () {\n            return green;\n        };\n\n        this.setGreen = function (g) {\n            green = range(g, 255);\n        };\n\n        this.getBlue = function () {\n            return blue;\n        };\n\n        this.setBlue = function (b) {\n            blue = range(b, 255);\n        };\n\n        this.getAlpha = function () {\n            return alpha;\n        };\n\n        this.setAlpha = function (a) {\n            alpha = range(a, 1);\n        };\n\n        this.getRgbaColor = function () {\n            return 'rgba(' + red + ', ' + green + ', ' + blue + ', ' + alpha + ')';\n        };\n\n        this.getRgbColor = function () {\n            return 'rgb(' + red + ', ' + green + ', ' + blue + ')';\n        };\n\n        this.getHexColor = function () {\n            return '#' + red.toString(16) + green.toString(16) + blue.toString(16);\n        };\n    };\n\n    var ConicalGradient = function (fractions, colors) {\n        var limit = fractions.length - 1,\n            i;\n\n        // Pre-multipy fractions array into range -PI to PI\n        for (i = 0; i <= limit; i++) {\n            fractions[i] = TWO_PI * fractions[i] - PI;\n        }\n\n        this.fillCircle = function (ctx, centerX, centerY, innerX, outerX) {\n            var angle,\n                radius = Math.ceil(outerX),\n                diameter = radius * 2,\n                pixels, alpha,\n                x, y, dx, dy, dy2, distance,\n                indx, pixColor,\n                buffer, bufferCtx;\n\n// Original Version using rotated lines\n/*\n            ctx.save();\n            ctx.lineWidth = 1.5;\n            ctx.translate(centerX, centerY);\n            ctx.rotate(rotationOffset);\n            ctx.translate(-centerX, -centerY);\n            for (i = 0, size = fractions.length - 1; i < size; i++) {\n                startAngle = TWO_PI * fractions[i];\n                stopAngle = TWO_PI * fractions[i + 1];\n                range = stopAngle - startAngle;\n                startColor = colors[i];\n                stopColor = colors[i + 1];\n                for (angle = startAngle; angle < stopAngle; angle += angleStep) {\n                    ctx.beginPath();\n                    ctx.fillStyle = getColorFromFraction(startColor, stopColor, range, (angle - startAngle)).getRgbaColor();\n                    ctx.strokeStyle = ctx.fillStyle;\n                    if (innerX > 0) {\n                        ctx.arc(centerX, centerY, innerX, angle + angleStep, angle, true);\n                    } else {\n                        ctx.moveTo(centerX, centerY);\n                    }\n                    ctx.arc(centerX, centerY, outerX, angle, angle + angleStep);\n                    ctx.fill();\n                    ctx.stroke();\n                }\n            }\n*/\n// End - Original Version\n\n            // Create pixel array\n            pixels = ctx.createImageData(diameter, diameter);\n            alpha = 255;\n\n            for (y = 0; y < diameter; y++) {\n                dy = radius - y;\n                dy2 = dy * dy;\n                for (x = 0; x < diameter; x++) {\n                    dx = x - radius;\n                    distance = Math.sqrt((dx * dx) + dy2);\n                    if (distance <= radius && distance >= innerX) { // pixels are transparent by default, so only paint the ones we need\n                        angle = Math.atan2(dx, dy);\n                        for (i = 0; i < limit; i++) {\n                            if (angle >= fractions[i] && angle < fractions[i + 1]) {\n                                pixColor = getColorFromFraction(colors[i], colors[i + 1], fractions[i + 1] - fractions[i], angle - fractions[i], true);\n                            }\n                        }\n                        // The pixel array is addressed as 4 elements per pixel [r,g,b,a]\n                        indx = ((diameter - y) * diameter * 4) + (x * 4);  // plot is 180 rotated from orginal method, so apply a simple invert (diameter - y)\n                        pixels.data[indx]     = pixColor[0];\n                        pixels.data[indx + 1] = pixColor[1];\n                        pixels.data[indx + 2] = pixColor[2];\n                        pixels.data[indx + 3] = alpha;\n                    }\n                }\n            }\n\n            // Create a new buffer to apply the raw data so we can rotate it\n            buffer = createBuffer(diameter, diameter);\n            bufferCtx = buffer.getContext('2d');\n            bufferCtx.putImageData(pixels, 0, 0);\n            // Apply the image buffer\n            ctx.drawImage(buffer, centerX - radius, centerY - radius);\n        };\n\n        this.fillRect = function (ctx, centerX, centerY, width, height, thicknessX, thicknessY) {\n            var angle,\n                width2,\n                height2,\n                pixels, alpha,\n                x, y, dx, dy,\n                indx,\n                pixColor,\n                buffer, bufferCtx;\n\n            width = Math.ceil(width);\n            height = Math.ceil(height);\n            width2 = width / 2;\n            height2 = height / 2;\n            thicknessX = Math.ceil(thicknessX);\n            thicknessY = Math.ceil(thicknessY);\n\n            // Create pixel array\n            pixels = ctx.createImageData(width, height);\n            alpha = 255;\n\n            for (y = 0; y < height; y++) {\n                dy = height2 - y;\n                for (x = 0; x < width; x++) {\n                    if (y > thicknessY && y < height - thicknessY) {\n                        // we are in the range where we only draw the sides\n                        if (x > thicknessX && x < width - thicknessX) {\n                            // we are in the empty 'middle', jump to the next edge\n                            x = width - thicknessX;\n                        }\n                    }\n                    dx = x - width2;\n                    angle = Math.atan2(dx, dy);\n                    for (i = 0; i < limit; i++) {\n                        if (angle >= fractions[i] && angle < fractions[i + 1]) {\n                            pixColor = getColorFromFraction(colors[i], colors[i + 1], fractions[i + 1] - fractions[i], angle - fractions[i], true);\n                        }\n                    }\n                    // The pixel array is addressed as 4 elements per pixel [r,g,b,a]\n                    indx = ((height - y) * width * 4) + (x * 4); // plot is 180 rotated from orginal method, so apply a simple invert (height - y)\n                    pixels.data[indx]     = pixColor[0];\n                    pixels.data[indx + 1] = pixColor[0];\n                    pixels.data[indx + 2] = pixColor[0];\n                    pixels.data[indx + 3] = alpha;\n                }\n            }\n            // Create a new buffer to apply the raw data so we can clip it when drawing to canvas\n            buffer = createBuffer(width, height);\n            bufferCtx = buffer.getContext('2d');\n            bufferCtx.putImageData(pixels, 0, 0);\n\n            // draw the buffer back to the canvas\n            ctx.drawImage(buffer, centerX - width2, centerY - height2);\n        };\n\n    };\n\n    var GradientWrapper = function (start, end, fractions, colors) {\n\n        this.getColorAt = function (fraction) {\n            var lowerLimit = 0,\n                lowerIndex = 0,\n                upperLimit = 1,\n                upperIndex = 1,\n                i,\n                interpolationFraction;\n\n            fraction = (fraction < 0 ? 0 : (fraction > 1 ? 1 : fraction));\n\n            for (i = 0; i < fractions.length; i++) {\n                if (fractions[i] < fraction && lowerLimit < fractions[i]) {\n                    lowerLimit = fractions[i];\n                    lowerIndex = i;\n                }\n                if (fractions[i] === fraction) {\n                    return colors[i];\n                }\n                if (fractions[i] > fraction && upperLimit >= fractions[i]) {\n                    upperLimit = fractions[i];\n                    upperIndex = i;\n                }\n            }\n            interpolationFraction = (fraction - lowerLimit) / (upperLimit - lowerLimit);\n            return getColorFromFraction(colors[lowerIndex], colors[upperIndex], 1, interpolationFraction);\n        };\n\n        this.getStart = function () {\n            return start;\n        };\n\n        this.getEnd = function () {\n            return end;\n        };\n    };\n\n    function setAlpha(hex, alpha) {\n        var hexColor = ('#' === hex.charAt(0)) ? hex.substring(1, 7) : hex,\n            red = parseInt((hexColor).substring(0, 2), 16),\n            green = parseInt((hexColor).substring(2, 4), 16),\n            blue = parseInt((hexColor).substring(4, 6), 16);\n\n        this.color = 'rgba(' + red + ',' + green + ',' + blue + ',' + alpha + ')';\n\n        return this;\n    }\n\n    function getColorFromFraction(sourceColor, destinationColor, range, fraction, returnRawData) {\n        var INT_TO_FLOAT = 1 / 255,\n            sourceRed = sourceColor.getRed(),\n            sourceGreen = sourceColor.getGreen(),\n            sourceBlue = sourceColor.getBlue(),\n            sourceAlpha = sourceColor.getAlpha(),\n\n            deltaRed = destinationColor.getRed() - sourceRed,\n            deltaGreen = destinationColor.getGreen() - sourceGreen,\n            deltaBlue = destinationColor.getBlue() - sourceBlue,\n            deltaAlpha = destinationColor.getAlpha() * INT_TO_FLOAT - sourceAlpha * INT_TO_FLOAT,\n\n            fractionRed = deltaRed / range * fraction,\n            fractionGreen = deltaGreen / range * fraction,\n            fractionBlue = deltaBlue / range * fraction,\n            fractionAlpha = deltaAlpha / range * fraction;\n\n        returnRawData = returnRawData || false;\n        if (returnRawData) {\n            return [(sourceRed + fractionRed).toFixed(0), (sourceGreen + fractionGreen).toFixed(0), (sourceBlue + fractionBlue).toFixed(0), sourceAlpha + fractionAlpha];\n        } else {\n            return new RgbaColor((sourceRed + fractionRed).toFixed(0), (sourceGreen + fractionGreen).toFixed(0), (sourceBlue + fractionBlue).toFixed(0), sourceAlpha + fractionAlpha);\n        }\n    }\n\n    function section(start, stop, color) {\n        return {start : start,\n                stop : stop,\n                color : color};\n    }\n\n    Math.log10 = function (value) {\n        return (Math.log(value) / Math.LN10);\n    };\n\n    function calcNiceNumber(range, round) {\n        var exponent = Math.floor(Math.log10(range)),   // exponent of range\n            fraction = range / Math.pow(10, exponent),  // fractional part of range\n            niceFraction;                               // nice, rounded fraction\n\n        if (round) {\n            if (1.5 > fraction) {\n                niceFraction = 1;\n            } else if (3 > fraction) {\n                niceFraction = 2;\n            } else if (7 > fraction) {\n                niceFraction = 5;\n            } else {\n                niceFraction = 10;\n            }\n        } else {\n            if (1 >= fraction) {\n                niceFraction = 1;\n            } else if (2 >= fraction) {\n                niceFraction = 2;\n            } else if (5 >= fraction) {\n                niceFraction = 5;\n            } else {\n                niceFraction = 10;\n            }\n        }\n        return niceFraction * Math.pow(10, exponent);\n    }\n\n    function roundedRectangle(ctx, x, y, w, h, radius) {\n        var r = x + w,\n            b = y + h;\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(r - radius, y);\n        ctx.quadraticCurveTo(r, y, r, y + radius);\n        ctx.lineTo(r, y + h - radius);\n        ctx.quadraticCurveTo(r, b, r - radius, b);\n        ctx.lineTo(x + radius, b);\n        ctx.quadraticCurveTo(x, b, x, b - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.stroke();\n    }\n\n    function createBuffer(width, height) {\n        var buffer = doc.createElement('canvas');\n        buffer.width = width;\n        buffer.height = height;\n        return buffer;\n    }\n\n    function drawToBuffer(width, height, drawFunction) {\n        var buffer = doc.createElement('canvas');\n        buffer.width = width;\n        buffer.height = height;\n        drawFunction(buffer.getContext('2d'));\n        return buffer;\n    }\n\n    function getColorValues(color) {\n        var colorData,\n            lookupBuffer = drawToBuffer(1, 1, function (ctx) {\n                ctx.fillStyle = color;\n                ctx.beginPath();\n                ctx.rect(0, 0, 1, 1);\n                ctx.fill();\n            });\n        colorData = lookupBuffer.getContext('2d').getImageData(0, 0, 2, 2).data;\n\n        /*\n        for (var i = 0; i < data.length; i += 4) {\n            var red = data[i];       // red\n            var green = data[i + 1]; // green\n            var blue = data[i + 2];  // blue\n            //var alpha = data[i + 3]; // alpha\n            console.log(red + ', ' + green + ', ' + blue);\n        }\n        */\n\n        return [colorData[0], colorData[1], colorData[2], colorData[3]];\n    }\n\n    function customColorDef(color) {\n        var VERY_DARK,\n            DARK,\n            LIGHT,\n            LIGHTER,\n            VERY_LIGHT,\n            values = getColorValues(color),\n            rgbaCol = new RgbaColor(values[0], values[1], values[2], values[3]);\n\n        VERY_DARK = darker(rgbaCol, 0.32);\n        DARK = darker(rgbaCol, 0.62);\n        LIGHT = lighter(rgbaCol, 0.84);\n        LIGHTER = lighter(rgbaCol, 0.94);\n        VERY_LIGHT = lighter(rgbaCol, 1);\n\n        return new ColorDef(VERY_DARK, DARK, rgbaCol, LIGHT, LIGHTER, VERY_LIGHT);\n    }\n\n    function rgbToHsl(red, green, blue) {\n        var min, max, hue, saturation, lightness, delta;\n\n        red /= 255;\n        green /= 255;\n        blue /= 255;\n\n        max = Math.max(red, green, blue);\n        min = Math.min(red, green, blue);\n        lightness = (max + min) / 2;\n\n        if (max === min) {\n            hue = saturation = 0; // achromatic\n        } else {\n            delta = max - min;\n            saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n            switch (max) {\n            case red:\n                hue = (green - blue) / delta + (green < blue ? 6 : 0);\n                break;\n            case green:\n                hue = (blue - red) / delta + 2;\n                break;\n            case blue:\n                hue = (red - green) / delta + 4;\n                break;\n            }\n            hue /= 6;\n        }\n        return [hue, saturation, lightness];\n    }\n\n/* These functions are not currently used\n    function hslToRgb(hue, saturation, lightness) {\n        var red, green, blue, p, q;\n\n        function hue2rgb(p, q, t) {\n            if (t < 0) {\n                t += 1;\n            }\n            if (t > 1) {\n                t -= 1;\n            }\n            if (t < 1 / 6) {\n                return p + (q - p) * 6 * t;\n            }\n            if (t < 1 / 2) {\n                return q;\n            }\n            if (t < 2 / 3) {\n                return p + (q - p) * (2 / 3 - t) * 6;\n            }\n            return p;\n        }\n\n        if (saturation === 0) {\n            red = green = blue = lightness; // achromatic\n        } else {\n            q = (lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation);\n            p = 2 * lightness - q;\n            red = hue2rgb(p, q, hue + 1 / 3);\n            green = hue2rgb(p, q, hue);\n            blue = hue2rgb(p, q, hue - 1 / 3);\n        }\n\n        return [Math.floor(red * 255), Math.floor(green * 255), Math.floor(blue * 255)];\n    }\n\n    function hsbToHsl(hue, saturation, brightness) {\n        var lightness = (brightness - saturation) / 2;\n        lightness = range(lightness, 1);\n        return [hue, saturation, lightness];\n    }\n\n    function hslToHsb(hue, saturation, lightness) {\n        var brightness = (lightness * 2) + saturation;\n        return [hue, saturation, brightness];\n    }\n*/\n\n    function hsbToRgb(hue, saturation, brightness) {\n        var r, g, b,\n            i = Math.floor(hue * 6),\n            f = hue * 6 - i,\n            p = brightness * (1 - saturation),\n            q = brightness * (1 - f * saturation),\n            t = brightness * (1 - (1 - f) * saturation);\n\n        switch (i % 6) {\n        case 0:\n            r = brightness;\n            g = t;\n            b = p;\n            break;\n        case 1:\n            r = q;\n            g = brightness;\n            b = p;\n            break;\n        case 2:\n            r = p;\n            g = brightness;\n            b = t;\n            break;\n        case 3:\n            r = p;\n            g = q;\n            b = brightness;\n            break;\n        case 4:\n            r = t;\n            g = p;\n            b = brightness;\n            break;\n        case 5:\n            r = brightness;\n            g = p;\n            b = q;\n            break;\n        }\n\n        return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n    }\n\n    function rgbToHsb(r, g, b) {\n        var min, max, hue, saturation, brightness, delta;\n\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        max = Math.max(r, g, b);\n        min = Math.min(r, g, b);\n        brightness = max;\n        delta = max - min;\n        saturation = max === 0 ? 0 : delta / max;\n\n        if (max === min) {\n            hue = 0; // achromatic\n        } else {\n            switch (max) {\n            case r:\n                hue = (g - b) / delta + (g < b ? 6 : 0);\n                break;\n            case g:\n                hue = (b - r) / delta + 2;\n                break;\n            case b:\n                hue = (r - g) / delta + 4;\n                break;\n            }\n            hue /= 6;\n        }\n        return [hue, saturation, brightness];\n    }\n\n    function range(value, limit) {\n        return (value < 0 ? 0 : (value > limit ? limit : value));\n    }\n\n    function darker(color, fraction) {\n        var red = Math.floor(color.getRed() * (1 - fraction)),\n            green = Math.floor(color.getGreen() * (1 - fraction)),\n            blue = Math.floor(color.getBlue() * (1 - fraction));\n\n        red = range(red, 255);\n        green = range(green, 255);\n        blue = range(blue, 255);\n\n        return new RgbaColor(red, green, blue, color.getAlpha());\n    }\n\n    function lighter(color, fraction) {\n        var red = Math.round(color.getRed() * (1 + fraction)),\n            green = Math.round(color.getGreen() * (1 + fraction)),\n            blue = Math.round(color.getBlue() * (1 + fraction));\n\n        red = range(red, 255);\n        green = range(green, 255);\n        blue = range(blue, 255);\n\n        return new RgbaColor(red, green, blue, color.getAlpha());\n    }\n\n    function wrap(value, lower, upper) {\n        var distance, times;\n        if (upper <= lower) {\n            throw 'Rotary bounds are of negative or zero size';\n        }\n\n        distance = upper - lower;\n        times = Math.floor((value - lower) / distance);\n\n        return value - (times * distance);\n    }\n\n    function getShortestAngle(from, to) {\n        return wrap((to - from), -180, 180);\n    }\n\n    // shim layer\n    var requestAnimFrame = (function () {\n        return  window.requestAnimationFrame   ||\n            window.webkitRequestAnimationFrame ||\n            window.mozRequestAnimationFrame    ||\n            window.oRequestAnimationFrame      ||\n            window.msRequestAnimationFrame     ||\n            function (callback) {\n                window.setTimeout(callback, 1000 / 16);\n            };\n    }());\n\n    function getCanvasContext(elementOrId) {\n        var element = (typeof elementOrId === 'string' || elementOrId instanceof String) ?\n            doc.getElementById(elementOrId) : elementOrId;\n        return element.getContext('2d');\n    }\n\n/*\n    function blur(ctx, width, height, radius) {\n    // This function is too CPU expensive\n    // leave disabled for now :(\n\n        // Cheap'n'cheerful blur filter, just applies horizontal and vertical blurs\n        // Only works for square canvas's at present\n\n        var j, x, y,      // loop counters\n            i,\n            end,\n            totR, totG, totB, totA,\n            // Create a temporary buffer\n            tempBuffer = createBuffer(width, height),\n            tempCtx = tempBuffer.getContext('2d'),\n            // pixel data\n            inPix, outPix,\n            mul,\n            indx;\n\n        ctx.save();\n\n        for (j = 0; j < 2; j++) {\n            // Get access to the pixel data\n            inPix = ctx.getImageData(0, 0, (j === 0 ? width : height), (j === 0 ? height : width));\n            outPix = ctx.createImageData((j === 0 ? width : height), (j === 0 ? height : width));\n\n            if (j === 0) { // Horizontal blur\n                if (radius >= width) {\n                    radius = width - 1;\n                }\n            } else { // Vertical blur\n                if (radius >= height) {\n                    radius = height - 1;\n                }\n            }\n            mul = 1 / (radius * 2 + 1);\n            indx = 0;\n            for (y = 0, end = (j === 0 ? height : width); y < end; y++) {\n                totR = totG = totB = totA = 0;\n                for (x = 0; x < radius ; x++) {\n                    i = (indx + x) * 4;\n                    totR += inPix.data[i];\n                    totG += inPix.data[i + 1];\n                    totB += inPix.data[i + 2];\n                    totA += inPix.data[i + 3];\n                }\n                for (x = 0; x < (j === 0 ? width : height); x++) {\n                    if (x > radius) {\n                        i = (indx - radius - 1) * 4;\n                        totR -= inPix.data[i];\n                        totG -= inPix.data[i + 1];\n                        totB -= inPix.data[i + 2];\n                        totA -= inPix.data[i + 3];\n                    }\n                    if (x + radius < width) {\n                        i = (indx + radius) * 4;\n                        totR += inPix.data[i];\n                        totG += inPix.data[i + 1];\n                        totB += inPix.data[i + 2];\n                        totA += inPix.data[i + 3];\n                    }\n                    i = indx * 4;\n                    outPix.data[i] = (totR * mul) | 0;\n                    outPix.data[i + 1] = (totG * mul) | 0;\n                    outPix.data[i + 2] = (totB * mul) | 0;\n                    outPix.data[i + 3] = (totA * mul) | 0;\n                    indx++;\n                }\n            }\n            // Write the output pixel data back to the temp buffer\n            tempCtx.clearRect(0, 0, width, height);\n            tempCtx.putImageData(outPix, 0, 0);\n            if (j === 0) {\n                // Clear the input canvas\n                ctx.clearRect(0, 0, width, height);\n                // Rotate image by 90 degrees\n                ctx.translate(width / 2, height / 2);\n                ctx.rotate(HALF_PI);\n                ctx.translate(-width / 2, -height / 2);\n                // Write the buffer back\n                ctx.drawImage(tempBuffer, 0, 0);\n            }\n        }\n        ctx.translate(width / 2, height / 2);\n        ctx.rotate(-PI);\n        ctx.translate(-width / 2, -height / 2);\n        // Clear the input canvas\n        ctx.clearRect(0, 0, width, height);\n        ctx.drawImage(tempBuffer, 0, 0);\n        ctx.restore();\n\n    }\n*/\n    //****************************************   C O N S T A N T S   ***************************************************\n    var BackgroundColorDef;\n    (function () {\n        BackgroundColorDef = function (gradientStart, gradientFraction, gradientStop, labelColor, symbolColor, name) {\n            this.gradientStart = gradientStart;\n            this.gradientFraction = gradientFraction;\n            this.gradientStop = gradientStop;\n            this.labelColor = labelColor;\n            this.symbolColor = symbolColor;\n            this.name = name;\n        };\n    }());\n\n    var LcdColorDef;\n    (function () {\n        LcdColorDef = function (gradientStartColor, gradientFraction1Color, gradientFraction2Color, gradientFraction3Color, gradientStopColor, textColor) {\n            this.gradientStartColor = gradientStartColor;\n            this.gradientFraction1Color = gradientFraction1Color;\n            this.gradientFraction2Color = gradientFraction2Color;\n            this.gradientFraction3Color = gradientFraction3Color;\n            this.gradientStopColor = gradientStopColor;\n            this.textColor = textColor;\n        };\n    }());\n\n    var ColorDef;\n    (function () {\n        ColorDef = function (veryDark, dark, medium, light, lighter, veryLight) {\n            this.veryDark = veryDark;\n            this.dark = dark;\n            this.medium = medium;\n            this.light = light;\n            this.lighter = lighter;\n            this.veryLight = veryLight;\n        };\n    }());\n\n    var LedColorDef;\n    (function () {\n        LedColorDef = function (innerColor1_ON, innerColor2_ON, outerColor_ON, coronaColor, innerColor1_OFF, innerColor2_OFF, outerColor_OFF) {\n            this.innerColor1_ON = innerColor1_ON;\n            this.innerColor2_ON = innerColor2_ON;\n            this.outerColor_ON = outerColor_ON;\n            this.coronaColor = coronaColor;\n            this.innerColor1_OFF = innerColor1_OFF;\n            this.innerColor2_OFF = innerColor2_OFF;\n            this.outerColor_OFF = outerColor_OFF;\n        };\n    }());\n\n    var GaugeTypeDef;\n    (function () {\n        GaugeTypeDef = function (type) {\n            this.type = type;\n        };\n    }());\n\n    var OrientationDef;\n    (function () {\n        OrientationDef = function (type) {\n            this.type = type;\n        };\n    }());\n\n    var KnobTypeDef;\n    (function () {\n        KnobTypeDef = function (type) {\n            this.type = type;\n        };\n    }());\n\n    var KnobStyleDef;\n    (function () {\n        KnobStyleDef = function (style) {\n            this.style = style;\n        };\n    }());\n\n    var FrameDesignDef;\n    (function () {\n        FrameDesignDef = function (design) {\n            this.design = design;\n        };\n    }());\n\n    var PointerTypeDef;\n    (function () {\n        PointerTypeDef = function (type) {\n            this.type = type;\n        };\n    }());\n\n    var ForegroundTypeDef;\n    (function () {\n        ForegroundTypeDef = function (type) {\n            this.type = type;\n        };\n    }());\n\n    var LabelNumberFormatDef;\n    (function () {\n        LabelNumberFormatDef = function (format) {\n            this.format = format;\n        };\n    }());\n\n    var TickLabelOrientationDef;\n    (function () {\n        TickLabelOrientationDef = function (type) {\n            this.type = type;\n        };\n    }());\n\n    var TrendStateDef;\n    (function () {\n        TrendStateDef = function (state) {\n            this.state = state;\n        };\n    }());\n\n    //*************************   I m p l e m e n t a t i o n s   o f   d e f i n i t i o n s   ************************\n    var backgroundColor = {\n        DARK_GRAY: new BackgroundColorDef(new RgbaColor(0, 0, 0, 1), new RgbaColor(51, 51, 51, 1), new RgbaColor(153, 153, 153, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(180, 180, 180, 1), 'DARK_GRAY'),\n        SATIN_GRAY: new BackgroundColorDef(new RgbaColor(45, 57, 57, 1), new RgbaColor(45, 57, 57, 1), new RgbaColor(45, 57, 57, 1), new RgbaColor(167, 184, 180, 1), new RgbaColor(137, 154, 150, 1), 'SATIN_GRAY'),\n        LIGHT_GRAY: new BackgroundColorDef(new RgbaColor(130, 130, 130, 1), new RgbaColor(181, 181, 181, 1), new RgbaColor(253, 253, 253, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'LIGHT_GRAY'),\n        WHITE: new BackgroundColorDef(new RgbaColor(255, 255, 255, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'WHITE'),\n        BLACK: new BackgroundColorDef(new RgbaColor(0, 0, 0, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(150, 150, 150, 1), 'BLACK'),\n        BEIGE: new BackgroundColorDef(new RgbaColor(178, 172, 150, 1), new RgbaColor(204, 205, 184, 1), new RgbaColor(231, 231, 214, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'BEIGE'),\n        BROWN: new BackgroundColorDef(new RgbaColor(245, 225, 193, 1), new RgbaColor(245, 225, 193, 1), new RgbaColor(255, 250, 240, 1), new RgbaColor(109, 73, 47, 1), new RgbaColor(89, 53, 27, 1), 'BROWN'),\n        RED: new BackgroundColorDef(new RgbaColor(198, 93, 95, 1), new RgbaColor(212, 132, 134, 1), new RgbaColor(242, 218, 218, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(90, 0, 0, 1), 'RED'),\n        GREEN: new BackgroundColorDef(new RgbaColor(65, 120, 40, 1), new RgbaColor(129, 171, 95, 1), new RgbaColor(218, 237, 202, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(0, 90, 0, 1), 'GREEN'),\n        BLUE: new BackgroundColorDef(new RgbaColor(45, 83, 122, 1), new RgbaColor(115, 144, 170, 1), new RgbaColor(227, 234, 238, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(0, 0, 90, 1), 'BLUE'),\n        ANTHRACITE: new BackgroundColorDef(new RgbaColor(50, 50, 54, 1), new RgbaColor(47, 47, 51, 1), new RgbaColor(69, 69, 74, 1), new RgbaColor(250, 250, 250, 1), new RgbaColor(180, 180, 180, 1), 'ANTHRACITE'),\n        MUD: new BackgroundColorDef(new RgbaColor(80, 86, 82, 1), new RgbaColor(70, 76, 72, 1), new RgbaColor(57, 62, 58, 1), new RgbaColor(255, 255, 240, 1), new RgbaColor(225, 225, 210, 1), 'MUD'),\n        PUNCHED_SHEET: new BackgroundColorDef(new RgbaColor(50, 50, 54, 1), new RgbaColor(47, 47, 51, 1), new RgbaColor(69, 69, 74, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(180, 180, 180, 1), 'PUNCHED_SHEET'),\n        CARBON: new BackgroundColorDef(new RgbaColor(50, 50, 54, 1), new RgbaColor(47, 47, 51, 1), new RgbaColor(69, 69, 74, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(180, 180, 180, 1), 'CARBON'),\n        STAINLESS: new BackgroundColorDef(new RgbaColor(130, 130, 130, 1), new RgbaColor(181, 181, 181, 1), new RgbaColor(253, 253, 253, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'STAINLESS'),\n        BRUSHED_METAL: new BackgroundColorDef(new RgbaColor(50, 50, 54, 1), new RgbaColor(47, 47, 51, 1), new RgbaColor(69, 69, 74, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'BRUSHED_METAL'),\n        BRUSHED_STAINLESS: new BackgroundColorDef(new RgbaColor(50, 50, 54, 1), new RgbaColor(47, 47, 51, 1), new RgbaColor(110, 110, 112, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'BRUSHED_STAINLESS'),\n        TURNED: new BackgroundColorDef(new RgbaColor(130, 130, 130, 1), new RgbaColor(181, 181, 181, 1), new RgbaColor(253, 253, 253, 1), new RgbaColor(0, 0, 0, 1), new RgbaColor(80, 80, 80, 1), 'TURNED')\n    };\n\n    var lcdColor = {\n        BEIGE: new LcdColorDef('#c8c8b1', 'rgb(241, 237, 207)', 'rgb(234, 230, 194)', 'rgb(225, 220, 183)', 'rgb(237, 232, 191)', '#000000'),\n        BLUE: new LcdColorDef('#ffffff', 'rgb(231, 246, 255)', 'rgb(170, 224, 255)', 'rgb(136, 212, 255)', 'rgb(192, 232, 255)', '#124564'),\n        ORANGE: new LcdColorDef('#ffffff', 'rgb(255, 245, 225)', 'rgb(255, 217, 147)', 'rgb(255, 201, 104)', 'rgb(255, 227, 173)', '#503700'),\n        RED: new LcdColorDef('#ffffff', 'rgb(255, 225, 225)', 'rgb(253, 152, 152)', 'rgb(252, 114, 115)', 'rgb(254, 178, 178)', '#4f0c0e'),\n        YELLOW: new LcdColorDef('#ffffff', 'rgb(245, 255, 186)', 'rgb(210, 255, 0)', 'rgb(158, 205, 0)', 'rgb(210, 255, 0)', '#405300'),\n        WHITE: new LcdColorDef('#ffffff', '#ffffff', 'rgb(241, 246, 242)', 'rgb(229, 239, 244)', '#ffffff', '#000000'),\n        GRAY: new LcdColorDef('#414141', 'rgb(117, 117, 117)', 'rgb(87, 87, 87)', '#414141', 'rgb(81, 81, 81)', '#ffffff'),\n        BLACK: new LcdColorDef('#414141', '#666666', '#333333', '#000000', '#333333', '#cccccc'),\n        GREEN: new LcdColorDef('rgb(33, 67, 67)', 'rgb(33, 67, 67)', 'rgb(29, 58, 58)', 'rgb(28, 57, 57)', 'rgb(23, 46, 46)', 'rgba(0, 185, 165, 255)'),\n        BLUE2: new LcdColorDef('rgb(0, 68, 103)', 'rgb(8, 109, 165)', 'rgb(0, 72, 117)', 'rgb(0, 72, 117)', 'rgb(0, 68, 103)', 'rgb(111, 182, 228)'),\n        BLUE_BLACK: new LcdColorDef('rgb(22, 125, 212)', 'rgb(3, 162, 254)', 'rgb(3, 162, 254)', 'rgb(3, 162, 254)', 'rgb(11, 172, 244)', '#000000'),\n        BLUE_DARKBLUE: new LcdColorDef('rgb(18, 33, 88)', 'rgb(18, 33, 88)', 'rgb(19, 30, 90)', 'rgb(17, 31, 94)', 'rgb(21, 25, 90)', 'rgb(23, 99, 221)'),\n        BLUE_GRAY: new LcdColorDef('rgb(135, 174, 255)', 'rgb(101, 159, 255)', 'rgb(44, 93, 255)', 'rgb(27, 65, 254)', 'rgb(12, 50, 255)', '#b2b4ed'),\n        STANDARD: new LcdColorDef('rgb(131, 133, 119)', 'rgb(176, 183, 167)', 'rgb(165, 174, 153)', 'rgb(166, 175, 156)', 'rgb(175, 184, 165)', 'rgb(35, 42, 52)'),\n        STANDARD_GREEN: new LcdColorDef('#ffffff', 'rgb(219, 230, 220)', 'rgb(179, 194, 178)', 'rgb(153, 176, 151)', 'rgb(114, 138, 109)', '#080C06'),\n        BLUE_BLUE: new LcdColorDef('rgb(100, 168, 253)', 'rgb(100, 168, 253)', 'rgb(95, 160, 250)', 'rgb(80, 144, 252)', 'rgb(74, 134, 255)', '#002cbb'),\n        RED_DARKRED: new LcdColorDef('rgb(72, 36, 50)', 'rgb(185, 111, 110)', 'rgb(148, 66, 72)', 'rgb(83, 19, 20)', 'rgb(7, 6, 14)', '#FE8B92'),\n        DARKBLUE: new LcdColorDef('rgb(14, 24, 31)', 'rgb(46, 105, 144)', 'rgb(19, 64, 96)', 'rgb(6, 20, 29)', 'rgb(8, 9, 10)', '#3DB3FF'),\n        LILA: new LcdColorDef('rgb(175, 164, 255)', 'rgb(188, 168, 253)', 'rgb(176, 159, 255)', 'rgb(174, 147, 252)', 'rgb(168, 136, 233)', '#076148'),\n        BLACKRED: new LcdColorDef('rgb(8, 12, 11)', 'rgb(10, 11, 13)', 'rgb(11, 10, 15)', 'rgb(7, 13, 9)', 'rgb(9, 13, 14)', '#B50026'),\n        DARKGREEN: new LcdColorDef('rgb(25, 85, 0)', 'rgb(47, 154, 0)', 'rgb(30, 101, 0)', 'rgb(30, 101, 0)', 'rgb(25, 85, 0)', '#233123'),\n        AMBER: new LcdColorDef('rgb(182, 71, 0)', 'rgb(236, 155, 25)', 'rgb(212, 93, 5)', 'rgb(212, 93, 5)', 'rgb(182, 71, 0)', '#593A0A'),\n        LIGHTBLUE: new LcdColorDef('rgb(125, 146, 184)', 'rgb(197, 212, 231)', 'rgb(138, 155, 194)', 'rgb(138, 155, 194)', 'rgb(125, 146, 184)', '#090051'),\n        SECTIONS: new LcdColorDef('#b2b2b2', '#ffffff', '#c4c4c4', '#c4c4c4', '#b2b2b2', '#000000')\n    };\n\n    var color = {\n        RED: new ColorDef(new RgbaColor(82, 0, 0, 1), new RgbaColor(158, 0, 19, 1), new RgbaColor(213, 0, 25, 1), new RgbaColor(240, 82, 88, 1), new RgbaColor(255, 171, 173, 1), new RgbaColor(255, 217, 218, 1)),\n        GREEN: new ColorDef(new RgbaColor(8, 54, 4, 1), new RgbaColor(0, 107, 14, 1), new RgbaColor(15, 148, 0, 1), new RgbaColor(121, 186, 37, 1), new RgbaColor(190, 231, 141, 1), new RgbaColor(234, 247, 218, 1)),\n        BLUE: new ColorDef(new RgbaColor(0, 11, 68, 1), new RgbaColor(0, 73, 135, 1), new RgbaColor(0, 108, 201, 1), new RgbaColor(0, 141, 242, 1), new RgbaColor(122, 200, 255, 1), new RgbaColor(204, 236, 255, 1)),\n        ORANGE: new ColorDef(new RgbaColor(118, 83, 30, 1), new RgbaColor(215, 67, 0, 1), new RgbaColor(240, 117, 0, 1), new RgbaColor(255, 166, 0, 1), new RgbaColor(255, 255, 128, 1), new RgbaColor(255, 247, 194, 1)),\n        YELLOW: new ColorDef(new RgbaColor(41, 41, 0, 1), new RgbaColor(102, 102, 0, 1), new RgbaColor(177, 165, 0, 1), new RgbaColor(255, 242, 0, 1), new RgbaColor(255, 250, 153, 1), new RgbaColor(255, 252, 204, 1)),\n        CYAN: new ColorDef(new RgbaColor(15, 109, 109, 1), new RgbaColor(0, 109, 144, 1), new RgbaColor(0, 144, 191, 1), new RgbaColor(0, 174, 239, 1), new RgbaColor(153, 223, 249, 1), new RgbaColor(204, 239, 252, 1)),\n        MAGENTA: new ColorDef(new RgbaColor(98, 0, 114, 1), new RgbaColor(128, 24, 72, 1), new RgbaColor(191, 36, 107, 1), new RgbaColor(255, 48, 143, 1), new RgbaColor(255, 172, 210, 1), new RgbaColor(255, 214, 23, 1)),\n        WHITE: new ColorDef(new RgbaColor(210, 210, 210, 1), new RgbaColor(220, 220, 220, 1), new RgbaColor(235, 235, 235, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(255, 255, 255, 1), new RgbaColor(255, 255, 255, 1)),\n        GRAY: new ColorDef(new RgbaColor(25, 25, 25, 1), new RgbaColor(51, 51, 51, 1), new RgbaColor(76, 76, 76, 1), new RgbaColor(128, 128, 128, 1), new RgbaColor(204, 204, 204, 1), new RgbaColor(243, 243, 243, 1)),\n        BLACK: new ColorDef(new RgbaColor(0, 0, 0, 1), new RgbaColor(5, 5, 5, 1), new RgbaColor(10, 10, 10, 1), new RgbaColor(15, 15, 15, 1), new RgbaColor(20, 20, 20, 1), new RgbaColor(25, 25, 25, 1)),\n        RAITH: new ColorDef(new RgbaColor(0, 32, 65, 1), new RgbaColor(0, 65, 125, 1), new RgbaColor(0, 106, 172, 1), new RgbaColor(130, 180, 214, 1), new RgbaColor(148, 203, 242, 1), new RgbaColor(191, 229, 255, 1)),\n        GREEN_LCD: new ColorDef(new RgbaColor(0, 55, 45, 1), new RgbaColor(15, 109, 93, 1), new RgbaColor(0, 185, 165, 1), new RgbaColor(48, 255, 204, 1), new RgbaColor(153, 255, 227, 1), new RgbaColor(204, 255, 241, 1)),\n        JUG_GREEN: new ColorDef(new RgbaColor(0, 56, 0, 1), new RgbaColor(32, 69, 36, 1), new RgbaColor(50, 161, 0, 1), new RgbaColor(129, 206, 0, 1), new RgbaColor(190, 231, 141, 1), new RgbaColor(234, 247, 218, 1))\n    };\n\n    var ledColor = {\n        RED_LED: new LedColorDef('#FF9A89', '#FF9A89', '#FF3300', '#FF8D70', '#7E1C00', '#7E1C00', '#641B00'),\n        GREEN_LED: new LedColorDef('#9AFF89', '#9AFF89', '#59FF2A', '#A5FF00', '#1C7E00', '#1C7E00', '#1B6400'),\n        BLUE_LED: new LedColorDef('#899AFF', '#899AFF', '#0033FF', '#708DFF', '#001C7E', '#001C7E', '#001B64'),\n        ORANGE_LED: new LedColorDef('#FEA23F', '#FEA23F', '#FD6C00', '#FD6C00', '#592800', '#592800', '#421F00'),\n        YELLOW_LED: new LedColorDef('#FFFF62', '#FFFF62', '#FFFF00', '#FFFF00', '#6B6D00', '#6B6D00', '#515300'),\n        CYAN_LED: new LedColorDef('#00FFFF', '#00FFFF', '#1BC3C3', '#00FFFF', '#083B3B', '#083B3B', '#052727'),\n        MAGENTA_LED: new LedColorDef('#D300FF', '#D300FF', '#8600CB', '#C300FF', '#38004B', '#38004B', '#280035')\n    };\n\n    var gaugeType = {\n        TYPE1: new GaugeTypeDef('type1'),\n        TYPE2: new GaugeTypeDef('type2'),\n        TYPE3: new GaugeTypeDef('type3'),\n        TYPE4: new GaugeTypeDef('type4'),\n        TYPE5: new GaugeTypeDef('type5')\n    };\n\n    var orientation = {\n        NORTH: new OrientationDef('north'),\n        SOUTH: new OrientationDef('south'),\n        EAST: new OrientationDef('east'),\n        WEST: new OrientationDef('west')\n    };\n\n    var knobType = {\n        STANDARD_KNOB: new KnobTypeDef('standardKnob'),\n        METAL_KNOB: new KnobTypeDef('metalKnob')\n    };\n\n    var knobStyle = {\n        BLACK: new KnobStyleDef('black'),\n        BRASS: new KnobStyleDef('brass'),\n        SILVER: new KnobStyleDef('silver')\n    };\n\n    var frameDesign = {\n        BLACK_METAL: new FrameDesignDef('blackMetal'),\n        METAL: new FrameDesignDef('metal'),\n        SHINY_METAL: new FrameDesignDef('shinyMetal'),\n        BRASS: new FrameDesignDef('brass'),\n        STEEL: new FrameDesignDef('steel'),\n        CHROME: new FrameDesignDef('chrome'),\n        GOLD: new FrameDesignDef('gold'),\n        ANTHRACITE: new FrameDesignDef('anthracite'),\n        TILTED_GRAY: new FrameDesignDef('tiltedGray'),\n        TILTED_BLACK: new FrameDesignDef('tiltedBlack'),\n        GLOSSY_METAL: new FrameDesignDef('glossyMetal')\n    };\n\n    var pointerType = {\n        TYPE1: new PointerTypeDef('type1'),\n        TYPE2: new PointerTypeDef('type2'),\n        TYPE3: new PointerTypeDef('type3'),\n        TYPE4: new PointerTypeDef('type4'),\n        TYPE5: new PointerTypeDef('type5'),\n        TYPE6: new PointerTypeDef('type6'),\n        TYPE7: new PointerTypeDef('type7'),\n        TYPE8: new PointerTypeDef('type8'),\n        TYPE9: new PointerTypeDef('type9'),\n        TYPE10: new PointerTypeDef('type10'),\n        TYPE11: new PointerTypeDef('type11'),\n        TYPE12: new PointerTypeDef('type12'),\n        TYPE13: new PointerTypeDef('type13'),\n        TYPE14: new PointerTypeDef('type14'),\n        TYPE15: new PointerTypeDef('type15'),\n        TYPE16: new PointerTypeDef('type16')\n    };\n\n    var foregroundType = {\n        TYPE1: new ForegroundTypeDef('type1'),\n        TYPE2: new ForegroundTypeDef('type2'),\n        TYPE3: new ForegroundTypeDef('type3'),\n        TYPE4: new ForegroundTypeDef('type4'),\n        TYPE5: new ForegroundTypeDef('type5')\n    };\n\n    var labelNumberFormat = {\n        STANDARD: new LabelNumberFormatDef('standard'),\n        FRACTIONAL: new LabelNumberFormatDef('fractional'),\n        SCIENTIFIC: new LabelNumberFormatDef('scientific')\n    };\n\n    var tickLabelOrientation = {\n        NORMAL: new TickLabelOrientationDef('normal'),\n        HORIZONTAL: new TickLabelOrientationDef('horizontal'),\n        TANGENT: new TickLabelOrientationDef('tangent')\n    };\n\n    var trendState = {\n        UP: new TrendStateDef('up'),\n        STEADY: new TrendStateDef('steady'),\n        DOWN: new TrendStateDef('down'),\n        OFF: new TrendStateDef('off')\n    };\n\n    //**********************************   E X P O R T   F U N C T I O N S   *******************************************\n    return {\n        // Components EXTERNAL : INTERNAL\n        Radial : radial,\n        RadialBargraph : radialBargraph,\n        RadialVertical : radialVertical,\n        Linear: linear,\n        LinearBargraph: linearBargraph,\n        DisplaySingle: displaySingle,\n        DisplayMulti: displayMulti,\n        Level : level,\n        Compass : compass,\n        WindDirection : windDirection,\n        Horizon : horizon,\n        Led : led,\n        Clock : clock,\n        Battery : battery,\n        StopWatch : stopwatch,\n        Altimeter : altimeter,\n        TrafficLight: trafficlight,\n        LightBulb: lightbulb,\n        Odometer: odometer,\n\n        // Images\n        drawFrame : drawRadialFrameImage,\n        drawBackground : drawRadialBackgroundImage,\n        drawForeground : drawRadialForegroundImage,\n\n        // Tools\n        rgbaColor :  RgbaColor,\n        ConicalGradient : ConicalGradient,\n        setAlpha : setAlpha,\n        getColorFromFraction : getColorFromFraction,\n        gradientWrapper : GradientWrapper,\n\n        // Constants\n        BackgroundColor : backgroundColor,\n        LcdColor : lcdColor,\n        ColorDef : color,\n        LedColor : ledColor,\n        GaugeType : gaugeType,\n        Orientation: orientation,\n        FrameDesign : frameDesign,\n        PointerType : pointerType,\n        ForegroundType : foregroundType,\n        KnobType : knobType,\n        KnobStyle: knobStyle,\n        LabelNumberFormat: labelNumberFormat,\n        TickLabelOrientation: tickLabelOrientation,\n        TrendState: trendState,\n\n        // Other\n        Section : section\n    };\n}());\nmodule.exports = steelseries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/steelseries.js\n// module id = 114\n// module chunks = 0","var map = {\n\t\"./index\": 44,\n\t\"./index.js\": 44\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 115;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@signalk/client/dist ^\\.\\/.*$\n// module id = 115\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise) {\nvar SomePromiseArray = Promise._SomePromiseArray;\nfunction any(promises) {\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(1);\n    ret.setUnwrap();\n    ret.init();\n    return promise;\n}\n\nPromise.any = function (promises) {\n    return any(promises);\n};\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/any.js\n// module id = 116\n// module chunks = 0","\"use strict\";\nvar firstLineError;\ntry {throw new Error(); } catch (e) {firstLineError = e;}\nvar schedule = require(\"./schedule\");\nvar Queue = require(\"./queue\");\nvar util = require(\"./util\");\n\nfunction Async() {\n    this._customScheduler = false;\n    this._isTickUsed = false;\n    this._lateQueue = new Queue(16);\n    this._normalQueue = new Queue(16);\n    this._haveDrainedQueues = false;\n    this._trampolineEnabled = true;\n    var self = this;\n    this.drainQueues = function () {\n        self._drainQueues();\n    };\n    this._schedule = schedule;\n}\n\nAsync.prototype.setScheduler = function(fn) {\n    var prev = this._schedule;\n    this._schedule = fn;\n    this._customScheduler = true;\n    return prev;\n};\n\nAsync.prototype.hasCustomScheduler = function() {\n    return this._customScheduler;\n};\n\nAsync.prototype.enableTrampoline = function() {\n    this._trampolineEnabled = true;\n};\n\nAsync.prototype.disableTrampolineIfNecessary = function() {\n    if (util.hasDevTools) {\n        this._trampolineEnabled = false;\n    }\n};\n\nAsync.prototype.haveItemsQueued = function () {\n    return this._isTickUsed || this._haveDrainedQueues;\n};\n\n\nAsync.prototype.fatalError = function(e, isNode) {\n    if (isNode) {\n        process.stderr.write(\"Fatal \" + (e instanceof Error ? e.stack : e) +\n            \"\\n\");\n        process.exit(2);\n    } else {\n        this.throwLater(e);\n    }\n};\n\nAsync.prototype.throwLater = function(fn, arg) {\n    if (arguments.length === 1) {\n        arg = fn;\n        fn = function () { throw arg; };\n    }\n    if (typeof setTimeout !== \"undefined\") {\n        setTimeout(function() {\n            fn(arg);\n        }, 0);\n    } else try {\n        this._schedule(function() {\n            fn(arg);\n        });\n    } catch (e) {\n        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n};\n\nfunction AsyncInvokeLater(fn, receiver, arg) {\n    this._lateQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncInvoke(fn, receiver, arg) {\n    this._normalQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncSettlePromises(promise) {\n    this._normalQueue._pushOne(promise);\n    this._queueTick();\n}\n\nif (!util.hasDevTools) {\n    Async.prototype.invokeLater = AsyncInvokeLater;\n    Async.prototype.invoke = AsyncInvoke;\n    Async.prototype.settlePromises = AsyncSettlePromises;\n} else {\n    Async.prototype.invokeLater = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvokeLater.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                setTimeout(function() {\n                    fn.call(receiver, arg);\n                }, 100);\n            });\n        }\n    };\n\n    Async.prototype.invoke = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvoke.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                fn.call(receiver, arg);\n            });\n        }\n    };\n\n    Async.prototype.settlePromises = function(promise) {\n        if (this._trampolineEnabled) {\n            AsyncSettlePromises.call(this, promise);\n        } else {\n            this._schedule(function() {\n                promise._settlePromises();\n            });\n        }\n    };\n}\n\nAsync.prototype._drainQueue = function(queue) {\n    while (queue.length() > 0) {\n        var fn = queue.shift();\n        if (typeof fn !== \"function\") {\n            fn._settlePromises();\n            continue;\n        }\n        var receiver = queue.shift();\n        var arg = queue.shift();\n        fn.call(receiver, arg);\n    }\n};\n\nAsync.prototype._drainQueues = function () {\n    this._drainQueue(this._normalQueue);\n    this._reset();\n    this._haveDrainedQueues = true;\n    this._drainQueue(this._lateQueue);\n};\n\nAsync.prototype._queueTick = function () {\n    if (!this._isTickUsed) {\n        this._isTickUsed = true;\n        this._schedule(this.drainQueues);\n    }\n};\n\nAsync.prototype._reset = function () {\n    this._isTickUsed = false;\n};\n\nmodule.exports = Async;\nmodule.exports.firstLineError = firstLineError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/async.js\n// module id = 117\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {\nvar calledBind = false;\nvar rejectThis = function(_, e) {\n    this._reject(e);\n};\n\nvar targetRejected = function(e, context) {\n    context.promiseRejectionQueued = true;\n    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);\n};\n\nvar bindingResolved = function(thisArg, context) {\n    if (((this._bitField & 50397184) === 0)) {\n        this._resolveCallback(context.target);\n    }\n};\n\nvar bindingRejected = function(e, context) {\n    if (!context.promiseRejectionQueued) this._reject(e);\n};\n\nPromise.prototype.bind = function (thisArg) {\n    if (!calledBind) {\n        calledBind = true;\n        Promise.prototype._propagateFrom = debug.propagateFromFunction();\n        Promise.prototype._boundValue = debug.boundValueFunction();\n    }\n    var maybePromise = tryConvertToPromise(thisArg);\n    var ret = new Promise(INTERNAL);\n    ret._propagateFrom(this, 1);\n    var target = this._target();\n    ret._setBoundTo(maybePromise);\n    if (maybePromise instanceof Promise) {\n        var context = {\n            promiseRejectionQueued: false,\n            promise: ret,\n            target: target,\n            bindingPromise: maybePromise\n        };\n        target._then(INTERNAL, targetRejected, undefined, ret, context);\n        maybePromise._then(\n            bindingResolved, bindingRejected, undefined, ret, context);\n        ret._setOnCancel(maybePromise);\n    } else {\n        ret._resolveCallback(target);\n    }\n    return ret;\n};\n\nPromise.prototype._setBoundTo = function (obj) {\n    if (obj !== undefined) {\n        this._bitField = this._bitField | 2097152;\n        this._boundTo = obj;\n    } else {\n        this._bitField = this._bitField & (~2097152);\n    }\n};\n\nPromise.prototype._isBound = function () {\n    return (this._bitField & 2097152) === 2097152;\n};\n\nPromise.bind = function (thisArg, value) {\n    return Promise.resolve(value).bind(thisArg);\n};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/bind.js\n// module id = 118\n// module chunks = 0","\"use strict\";\nvar old;\nif (typeof Promise !== \"undefined\") old = Promise;\nfunction noConflict() {\n    try { if (Promise === bluebird) Promise = old; }\n    catch (e) {}\n    return bluebird;\n}\nvar bluebird = require(\"./promise\")();\nbluebird.noConflict = noConflict;\nmodule.exports = bluebird;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/bluebird.js\n// module id = 119\n// module chunks = 0","\"use strict\";\nvar cr = Object.create;\nif (cr) {\n    var callerCache = cr(null);\n    var getterCache = cr(null);\n    callerCache[\" size\"] = getterCache[\" size\"] = 0;\n}\n\nmodule.exports = function(Promise) {\nvar util = require(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar isIdentifier = util.isIdentifier;\n\nvar getMethodCaller;\nvar getGetter;\nif (!false) {\nvar makeMethodCaller = function (methodName) {\n    return new Function(\"ensureMethod\", \"                                    \\n\\\n        return function(obj) {                                               \\n\\\n            'use strict'                                                     \\n\\\n            var len = this.length;                                           \\n\\\n            ensureMethod(obj, 'methodName');                                 \\n\\\n            switch(len) {                                                    \\n\\\n                case 1: return obj.methodName(this[0]);                      \\n\\\n                case 2: return obj.methodName(this[0], this[1]);             \\n\\\n                case 3: return obj.methodName(this[0], this[1], this[2]);    \\n\\\n                case 0: return obj.methodName();                             \\n\\\n                default:                                                     \\n\\\n                    return obj.methodName.apply(obj, this);                  \\n\\\n            }                                                                \\n\\\n        };                                                                   \\n\\\n        \".replace(/methodName/g, methodName))(ensureMethod);\n};\n\nvar makeGetter = function (propertyName) {\n    return new Function(\"obj\", \"                                             \\n\\\n        'use strict';                                                        \\n\\\n        return obj.propertyName;                                             \\n\\\n        \".replace(\"propertyName\", propertyName));\n};\n\nvar getCompiled = function(name, compiler, cache) {\n    var ret = cache[name];\n    if (typeof ret !== \"function\") {\n        if (!isIdentifier(name)) {\n            return null;\n        }\n        ret = compiler(name);\n        cache[name] = ret;\n        cache[\" size\"]++;\n        if (cache[\" size\"] > 512) {\n            var keys = Object.keys(cache);\n            for (var i = 0; i < 256; ++i) delete cache[keys[i]];\n            cache[\" size\"] = keys.length - 256;\n        }\n    }\n    return ret;\n};\n\ngetMethodCaller = function(name) {\n    return getCompiled(name, makeMethodCaller, callerCache);\n};\n\ngetGetter = function(name) {\n    return getCompiled(name, makeGetter, getterCache);\n};\n}\n\nfunction ensureMethod(obj, methodName) {\n    var fn;\n    if (obj != null) fn = obj[methodName];\n    if (typeof fn !== \"function\") {\n        var message = \"Object \" + util.classString(obj) + \" has no method '\" +\n            util.toString(methodName) + \"'\";\n        throw new Promise.TypeError(message);\n    }\n    return fn;\n}\n\nfunction caller(obj) {\n    var methodName = this.pop();\n    var fn = ensureMethod(obj, methodName);\n    return fn.apply(obj, this);\n}\nPromise.prototype.call = function (methodName) {\n    var $_len = arguments.length;var args = new Array(Math.max($_len - 1, 0)); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];};\n    if (!false) {\n        if (canEvaluate) {\n            var maybeCaller = getMethodCaller(methodName);\n            if (maybeCaller !== null) {\n                return this._then(\n                    maybeCaller, undefined, undefined, args, undefined);\n            }\n        }\n    }\n    args.push(methodName);\n    return this._then(caller, undefined, undefined, args, undefined);\n};\n\nfunction namedGetter(obj) {\n    return obj[this];\n}\nfunction indexedGetter(obj) {\n    var index = +this;\n    if (index < 0) index = Math.max(0, index + obj.length);\n    return obj[index];\n}\nPromise.prototype.get = function (propertyName) {\n    var isIndex = (typeof propertyName === \"number\");\n    var getter;\n    if (!isIndex) {\n        if (canEvaluate) {\n            var maybeGetter = getGetter(propertyName);\n            getter = maybeGetter !== null ? maybeGetter : namedGetter;\n        } else {\n            getter = namedGetter;\n        }\n    } else {\n        getter = indexedGetter;\n    }\n    return this._then(getter, undefined, undefined, propertyName, undefined);\n};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/call_get.js\n// module id = 120\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise, PromiseArray, apiRejection, debug) {\nvar util = require(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nPromise.prototype[\"break\"] = Promise.prototype.cancel = function() {\n    if (!debug.cancellation()) return this._warn(\"cancellation is disabled\");\n\n    var promise = this;\n    var child = promise;\n    while (promise._isCancellable()) {\n        if (!promise._cancelBy(child)) {\n            if (child._isFollowing()) {\n                child._followee().cancel();\n            } else {\n                child._cancelBranched();\n            }\n            break;\n        }\n\n        var parent = promise._cancellationParent;\n        if (parent == null || !parent._isCancellable()) {\n            if (promise._isFollowing()) {\n                promise._followee().cancel();\n            } else {\n                promise._cancelBranched();\n            }\n            break;\n        } else {\n            if (promise._isFollowing()) promise._followee().cancel();\n            promise._setWillBeCancelled();\n            child = promise;\n            promise = parent;\n        }\n    }\n};\n\nPromise.prototype._branchHasCancelled = function() {\n    this._branchesRemainingToCancel--;\n};\n\nPromise.prototype._enoughBranchesHaveCancelled = function() {\n    return this._branchesRemainingToCancel === undefined ||\n           this._branchesRemainingToCancel <= 0;\n};\n\nPromise.prototype._cancelBy = function(canceller) {\n    if (canceller === this) {\n        this._branchesRemainingToCancel = 0;\n        this._invokeOnCancel();\n        return true;\n    } else {\n        this._branchHasCancelled();\n        if (this._enoughBranchesHaveCancelled()) {\n            this._invokeOnCancel();\n            return true;\n        }\n    }\n    return false;\n};\n\nPromise.prototype._cancelBranched = function() {\n    if (this._enoughBranchesHaveCancelled()) {\n        this._cancel();\n    }\n};\n\nPromise.prototype._cancel = function() {\n    if (!this._isCancellable()) return;\n    this._setCancelled();\n    async.invoke(this._cancelPromises, this, undefined);\n};\n\nPromise.prototype._cancelPromises = function() {\n    if (this._length() > 0) this._settlePromises();\n};\n\nPromise.prototype._unsetOnCancel = function() {\n    this._onCancelField = undefined;\n};\n\nPromise.prototype._isCancellable = function() {\n    return this.isPending() && !this._isCancelled();\n};\n\nPromise.prototype.isCancellable = function() {\n    return this.isPending() && !this.isCancelled();\n};\n\nPromise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {\n    if (util.isArray(onCancelCallback)) {\n        for (var i = 0; i < onCancelCallback.length; ++i) {\n            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);\n        }\n    } else if (onCancelCallback !== undefined) {\n        if (typeof onCancelCallback === \"function\") {\n            if (!internalOnly) {\n                var e = tryCatch(onCancelCallback).call(this._boundValue());\n                if (e === errorObj) {\n                    this._attachExtraTrace(e.e);\n                    async.throwLater(e.e);\n                }\n            }\n        } else {\n            onCancelCallback._resultCancelled(this);\n        }\n    }\n};\n\nPromise.prototype._invokeOnCancel = function() {\n    var onCancelCallback = this._onCancel();\n    this._unsetOnCancel();\n    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);\n};\n\nPromise.prototype._invokeInternalOnCancel = function() {\n    if (this._isCancellable()) {\n        this._doInvokeOnCancel(this._onCancel(), true);\n        this._unsetOnCancel();\n    }\n};\n\nPromise.prototype._resultCancelled = function() {\n    this.cancel();\n};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/cancel.js\n// module id = 121\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise) {\nvar longStackTraces = false;\nvar contextStack = [];\n\nPromise.prototype._promiseCreated = function() {};\nPromise.prototype._pushContext = function() {};\nPromise.prototype._popContext = function() {return null;};\nPromise._peekContext = Promise.prototype._peekContext = function() {};\n\nfunction Context() {\n    this._trace = new Context.CapturedTrace(peekContext());\n}\nContext.prototype._pushContext = function () {\n    if (this._trace !== undefined) {\n        this._trace._promiseCreated = null;\n        contextStack.push(this._trace);\n    }\n};\n\nContext.prototype._popContext = function () {\n    if (this._trace !== undefined) {\n        var trace = contextStack.pop();\n        var ret = trace._promiseCreated;\n        trace._promiseCreated = null;\n        return ret;\n    }\n    return null;\n};\n\nfunction createContext() {\n    if (longStackTraces) return new Context();\n}\n\nfunction peekContext() {\n    var lastIndex = contextStack.length - 1;\n    if (lastIndex >= 0) {\n        return contextStack[lastIndex];\n    }\n    return undefined;\n}\nContext.CapturedTrace = null;\nContext.create = createContext;\nContext.deactivateLongStackTraces = function() {};\nContext.activateLongStackTraces = function() {\n    var Promise_pushContext = Promise.prototype._pushContext;\n    var Promise_popContext = Promise.prototype._popContext;\n    var Promise_PeekContext = Promise._peekContext;\n    var Promise_peekContext = Promise.prototype._peekContext;\n    var Promise_promiseCreated = Promise.prototype._promiseCreated;\n    Context.deactivateLongStackTraces = function() {\n        Promise.prototype._pushContext = Promise_pushContext;\n        Promise.prototype._popContext = Promise_popContext;\n        Promise._peekContext = Promise_PeekContext;\n        Promise.prototype._peekContext = Promise_peekContext;\n        Promise.prototype._promiseCreated = Promise_promiseCreated;\n        longStackTraces = false;\n    };\n    longStackTraces = true;\n    Promise.prototype._pushContext = Context.prototype._pushContext;\n    Promise.prototype._popContext = Context.prototype._popContext;\n    Promise._peekContext = Promise.prototype._peekContext = peekContext;\n    Promise.prototype._promiseCreated = function() {\n        var ctx = this._peekContext();\n        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;\n    };\n};\nreturn Context;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/context.js\n// module id = 122\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise, Context) {\nvar getDomain = Promise._getDomain;\nvar async = Promise._async;\nvar Warning = require(\"./errors\").Warning;\nvar util = require(\"./util\");\nvar canAttachTrace = util.canAttachTrace;\nvar unhandledRejectionHandled;\nvar possiblyUnhandledRejection;\nvar bluebirdFramePattern =\n    /[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](release|debug|instrumented)/;\nvar nodeFramePattern = /\\((?:timers\\.js):\\d+:\\d+\\)/;\nvar parseLinePattern = /[\\/<\\(](.+?):(\\d+):(\\d+)\\)?\\s*$/;\nvar stackFramePattern = null;\nvar formatStack = null;\nvar indentStackFrames = false;\nvar printWarning;\nvar debugging = !!(util.env(\"BLUEBIRD_DEBUG\") != 0 &&\n                        (false ||\n                         util.env(\"BLUEBIRD_DEBUG\") ||\n                         util.env(\"NODE_ENV\") === \"development\"));\n\nvar warnings = !!(util.env(\"BLUEBIRD_WARNINGS\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_WARNINGS\")));\n\nvar longStackTraces = !!(util.env(\"BLUEBIRD_LONG_STACK_TRACES\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_LONG_STACK_TRACES\")));\n\nvar wForgottenReturn = util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\") != 0 &&\n    (warnings || !!util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\"));\n\nPromise.prototype.suppressUnhandledRejections = function() {\n    var target = this._target();\n    target._bitField = ((target._bitField & (~1048576)) |\n                      524288);\n};\n\nPromise.prototype._ensurePossibleRejectionHandled = function () {\n    if ((this._bitField & 524288) !== 0) return;\n    this._setRejectionIsUnhandled();\n    async.invokeLater(this._notifyUnhandledRejection, this, undefined);\n};\n\nPromise.prototype._notifyUnhandledRejectionIsHandled = function () {\n    fireRejectionEvent(\"rejectionHandled\",\n                                  unhandledRejectionHandled, undefined, this);\n};\n\nPromise.prototype._setReturnedNonUndefined = function() {\n    this._bitField = this._bitField | 268435456;\n};\n\nPromise.prototype._returnedNonUndefined = function() {\n    return (this._bitField & 268435456) !== 0;\n};\n\nPromise.prototype._notifyUnhandledRejection = function () {\n    if (this._isRejectionUnhandled()) {\n        var reason = this._settledValue();\n        this._setUnhandledRejectionIsNotified();\n        fireRejectionEvent(\"unhandledRejection\",\n                                      possiblyUnhandledRejection, reason, this);\n    }\n};\n\nPromise.prototype._setUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField | 262144;\n};\n\nPromise.prototype._unsetUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField & (~262144);\n};\n\nPromise.prototype._isUnhandledRejectionNotified = function () {\n    return (this._bitField & 262144) > 0;\n};\n\nPromise.prototype._setRejectionIsUnhandled = function () {\n    this._bitField = this._bitField | 1048576;\n};\n\nPromise.prototype._unsetRejectionIsUnhandled = function () {\n    this._bitField = this._bitField & (~1048576);\n    if (this._isUnhandledRejectionNotified()) {\n        this._unsetUnhandledRejectionIsNotified();\n        this._notifyUnhandledRejectionIsHandled();\n    }\n};\n\nPromise.prototype._isRejectionUnhandled = function () {\n    return (this._bitField & 1048576) > 0;\n};\n\nPromise.prototype._warn = function(message, shouldUseOwnTrace, promise) {\n    return warn(message, shouldUseOwnTrace, promise || this);\n};\n\nPromise.onPossiblyUnhandledRejection = function (fn) {\n    var domain = getDomain();\n    possiblyUnhandledRejection =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nPromise.onUnhandledRejectionHandled = function (fn) {\n    var domain = getDomain();\n    unhandledRejectionHandled =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nvar disableLongStackTraces = function() {};\nPromise.longStackTraces = function () {\n    if (async.haveItemsQueued() && !config.longStackTraces) {\n        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (!config.longStackTraces && longStackTracesIsSupported()) {\n        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;\n        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;\n        config.longStackTraces = true;\n        disableLongStackTraces = function() {\n            if (async.haveItemsQueued() && !config.longStackTraces) {\n                throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n            }\n            Promise.prototype._captureStackTrace = Promise_captureStackTrace;\n            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;\n            Context.deactivateLongStackTraces();\n            async.enableTrampoline();\n            config.longStackTraces = false;\n        };\n        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;\n        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;\n        Context.activateLongStackTraces();\n        async.disableTrampolineIfNecessary();\n    }\n};\n\nPromise.hasLongStackTraces = function () {\n    return config.longStackTraces && longStackTracesIsSupported();\n};\n\nvar fireDomEvent = (function() {\n    try {\n        if (typeof CustomEvent === \"function\") {\n            var event = new CustomEvent(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new CustomEvent(name.toLowerCase(), {\n                    detail: event,\n                    cancelable: true\n                });\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else if (typeof Event === \"function\") {\n            var event = new Event(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new Event(name.toLowerCase(), {\n                    cancelable: true\n                });\n                domEvent.detail = event;\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else {\n            var event = document.createEvent(\"CustomEvent\");\n            event.initCustomEvent(\"testingtheevent\", false, true, {});\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = document.createEvent(\"CustomEvent\");\n                domEvent.initCustomEvent(name.toLowerCase(), false, true,\n                    event);\n                return !util.global.dispatchEvent(domEvent);\n            };\n        }\n    } catch (e) {}\n    return function() {\n        return false;\n    };\n})();\n\nvar fireGlobalEvent = (function() {\n    if (util.isNode) {\n        return function() {\n            return process.emit.apply(process, arguments);\n        };\n    } else {\n        if (!util.global) {\n            return function() {\n                return false;\n            };\n        }\n        return function(name) {\n            var methodName = \"on\" + name.toLowerCase();\n            var method = util.global[methodName];\n            if (!method) return false;\n            method.apply(util.global, [].slice.call(arguments, 1));\n            return true;\n        };\n    }\n})();\n\nfunction generatePromiseLifecycleEventObject(name, promise) {\n    return {promise: promise};\n}\n\nvar eventToObjectGenerator = {\n    promiseCreated: generatePromiseLifecycleEventObject,\n    promiseFulfilled: generatePromiseLifecycleEventObject,\n    promiseRejected: generatePromiseLifecycleEventObject,\n    promiseResolved: generatePromiseLifecycleEventObject,\n    promiseCancelled: generatePromiseLifecycleEventObject,\n    promiseChained: function(name, promise, child) {\n        return {promise: promise, child: child};\n    },\n    warning: function(name, warning) {\n        return {warning: warning};\n    },\n    unhandledRejection: function (name, reason, promise) {\n        return {reason: reason, promise: promise};\n    },\n    rejectionHandled: generatePromiseLifecycleEventObject\n};\n\nvar activeFireEvent = function (name) {\n    var globalEventFired = false;\n    try {\n        globalEventFired = fireGlobalEvent.apply(null, arguments);\n    } catch (e) {\n        async.throwLater(e);\n        globalEventFired = true;\n    }\n\n    var domEventFired = false;\n    try {\n        domEventFired = fireDomEvent(name,\n                    eventToObjectGenerator[name].apply(null, arguments));\n    } catch (e) {\n        async.throwLater(e);\n        domEventFired = true;\n    }\n\n    return domEventFired || globalEventFired;\n};\n\nPromise.config = function(opts) {\n    opts = Object(opts);\n    if (\"longStackTraces\" in opts) {\n        if (opts.longStackTraces) {\n            Promise.longStackTraces();\n        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {\n            disableLongStackTraces();\n        }\n    }\n    if (\"warnings\" in opts) {\n        var warningsOption = opts.warnings;\n        config.warnings = !!warningsOption;\n        wForgottenReturn = config.warnings;\n\n        if (util.isObject(warningsOption)) {\n            if (\"wForgottenReturn\" in warningsOption) {\n                wForgottenReturn = !!warningsOption.wForgottenReturn;\n            }\n        }\n    }\n    if (\"cancellation\" in opts && opts.cancellation && !config.cancellation) {\n        if (async.haveItemsQueued()) {\n            throw new Error(\n                \"cannot enable cancellation after promises are in use\");\n        }\n        Promise.prototype._clearCancellationData =\n            cancellationClearCancellationData;\n        Promise.prototype._propagateFrom = cancellationPropagateFrom;\n        Promise.prototype._onCancel = cancellationOnCancel;\n        Promise.prototype._setOnCancel = cancellationSetOnCancel;\n        Promise.prototype._attachCancellationCallback =\n            cancellationAttachCancellationCallback;\n        Promise.prototype._execute = cancellationExecute;\n        propagateFromFunction = cancellationPropagateFrom;\n        config.cancellation = true;\n    }\n    if (\"monitoring\" in opts) {\n        if (opts.monitoring && !config.monitoring) {\n            config.monitoring = true;\n            Promise.prototype._fireEvent = activeFireEvent;\n        } else if (!opts.monitoring && config.monitoring) {\n            config.monitoring = false;\n            Promise.prototype._fireEvent = defaultFireEvent;\n        }\n    }\n    return Promise;\n};\n\nfunction defaultFireEvent() { return false; }\n\nPromise.prototype._fireEvent = defaultFireEvent;\nPromise.prototype._execute = function(executor, resolve, reject) {\n    try {\n        executor(resolve, reject);\n    } catch (e) {\n        return e;\n    }\n};\nPromise.prototype._onCancel = function () {};\nPromise.prototype._setOnCancel = function (handler) { ; };\nPromise.prototype._attachCancellationCallback = function(onCancel) {\n    ;\n};\nPromise.prototype._captureStackTrace = function () {};\nPromise.prototype._attachExtraTrace = function () {};\nPromise.prototype._clearCancellationData = function() {};\nPromise.prototype._propagateFrom = function (parent, flags) {\n    ;\n    ;\n};\n\nfunction cancellationExecute(executor, resolve, reject) {\n    var promise = this;\n    try {\n        executor(resolve, reject, function(onCancel) {\n            if (typeof onCancel !== \"function\") {\n                throw new TypeError(\"onCancel must be a function, got: \" +\n                                    util.toString(onCancel));\n            }\n            promise._attachCancellationCallback(onCancel);\n        });\n    } catch (e) {\n        return e;\n    }\n}\n\nfunction cancellationAttachCancellationCallback(onCancel) {\n    if (!this._isCancellable()) return this;\n\n    var previousOnCancel = this._onCancel();\n    if (previousOnCancel !== undefined) {\n        if (util.isArray(previousOnCancel)) {\n            previousOnCancel.push(onCancel);\n        } else {\n            this._setOnCancel([previousOnCancel, onCancel]);\n        }\n    } else {\n        this._setOnCancel(onCancel);\n    }\n}\n\nfunction cancellationOnCancel() {\n    return this._onCancelField;\n}\n\nfunction cancellationSetOnCancel(onCancel) {\n    this._onCancelField = onCancel;\n}\n\nfunction cancellationClearCancellationData() {\n    this._cancellationParent = undefined;\n    this._onCancelField = undefined;\n}\n\nfunction cancellationPropagateFrom(parent, flags) {\n    if ((flags & 1) !== 0) {\n        this._cancellationParent = parent;\n        var branchesRemainingToCancel = parent._branchesRemainingToCancel;\n        if (branchesRemainingToCancel === undefined) {\n            branchesRemainingToCancel = 0;\n        }\n        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;\n    }\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\n\nfunction bindingPropagateFrom(parent, flags) {\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\nvar propagateFromFunction = bindingPropagateFrom;\n\nfunction boundValueFunction() {\n    var ret = this._boundTo;\n    if (ret !== undefined) {\n        if (ret instanceof Promise) {\n            if (ret.isFulfilled()) {\n                return ret.value();\n            } else {\n                return undefined;\n            }\n        }\n    }\n    return ret;\n}\n\nfunction longStackTracesCaptureStackTrace() {\n    this._trace = new CapturedTrace(this._peekContext());\n}\n\nfunction longStackTracesAttachExtraTrace(error, ignoreSelf) {\n    if (canAttachTrace(error)) {\n        var trace = this._trace;\n        if (trace !== undefined) {\n            if (ignoreSelf) trace = trace._parent;\n        }\n        if (trace !== undefined) {\n            trace.attachExtraTrace(error);\n        } else if (!error.__stackCleaned__) {\n            var parsed = parseStackAndMessage(error);\n            util.notEnumerableProp(error, \"stack\",\n                parsed.message + \"\\n\" + parsed.stack.join(\"\\n\"));\n            util.notEnumerableProp(error, \"__stackCleaned__\", true);\n        }\n    }\n}\n\nfunction checkForgottenReturns(returnValue, promiseCreated, name, promise,\n                               parent) {\n    if (returnValue === undefined && promiseCreated !== null &&\n        wForgottenReturn) {\n        if (parent !== undefined && parent._returnedNonUndefined()) return;\n        if ((promise._bitField & 65535) === 0) return;\n\n        if (name) name = name + \" \";\n        var handlerLine = \"\";\n        var creatorLine = \"\";\n        if (promiseCreated._trace) {\n            var traceLines = promiseCreated._trace.stack.split(\"\\n\");\n            var stack = cleanStack(traceLines);\n            for (var i = stack.length - 1; i >= 0; --i) {\n                var line = stack[i];\n                if (!nodeFramePattern.test(line)) {\n                    var lineMatches = line.match(parseLinePattern);\n                    if (lineMatches) {\n                        handlerLine  = \"at \" + lineMatches[1] +\n                            \":\" + lineMatches[2] + \":\" + lineMatches[3] + \" \";\n                    }\n                    break;\n                }\n            }\n\n            if (stack.length > 0) {\n                var firstUserLine = stack[0];\n                for (var i = 0; i < traceLines.length; ++i) {\n\n                    if (traceLines[i] === firstUserLine) {\n                        if (i > 0) {\n                            creatorLine = \"\\n\" + traceLines[i - 1];\n                        }\n                        break;\n                    }\n                }\n\n            }\n        }\n        var msg = \"a promise was created in a \" + name +\n            \"handler \" + handlerLine + \"but was not returned from it, \" +\n            \"see http://goo.gl/rRqMUw\" +\n            creatorLine;\n        promise._warn(msg, true, promiseCreated);\n    }\n}\n\nfunction deprecated(name, replacement) {\n    var message = name +\n        \" is deprecated and will be removed in a future version.\";\n    if (replacement) message += \" Use \" + replacement + \" instead.\";\n    return warn(message);\n}\n\nfunction warn(message, shouldUseOwnTrace, promise) {\n    if (!config.warnings) return;\n    var warning = new Warning(message);\n    var ctx;\n    if (shouldUseOwnTrace) {\n        promise._attachExtraTrace(warning);\n    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {\n        ctx.attachExtraTrace(warning);\n    } else {\n        var parsed = parseStackAndMessage(warning);\n        warning.stack = parsed.message + \"\\n\" + parsed.stack.join(\"\\n\");\n    }\n\n    if (!activeFireEvent(\"warning\", warning)) {\n        formatAndLogError(warning, \"\", true);\n    }\n}\n\nfunction reconstructStack(message, stacks) {\n    for (var i = 0; i < stacks.length - 1; ++i) {\n        stacks[i].push(\"From previous event:\");\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    if (i < stacks.length) {\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    return message + \"\\n\" + stacks.join(\"\\n\");\n}\n\nfunction removeDuplicateOrEmptyJumps(stacks) {\n    for (var i = 0; i < stacks.length; ++i) {\n        if (stacks[i].length === 0 ||\n            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {\n            stacks.splice(i, 1);\n            i--;\n        }\n    }\n}\n\nfunction removeCommonRoots(stacks) {\n    var current = stacks[0];\n    for (var i = 1; i < stacks.length; ++i) {\n        var prev = stacks[i];\n        var currentLastIndex = current.length - 1;\n        var currentLastLine = current[currentLastIndex];\n        var commonRootMeetPoint = -1;\n\n        for (var j = prev.length - 1; j >= 0; --j) {\n            if (prev[j] === currentLastLine) {\n                commonRootMeetPoint = j;\n                break;\n            }\n        }\n\n        for (var j = commonRootMeetPoint; j >= 0; --j) {\n            var line = prev[j];\n            if (current[currentLastIndex] === line) {\n                current.pop();\n                currentLastIndex--;\n            } else {\n                break;\n            }\n        }\n        current = prev;\n    }\n}\n\nfunction cleanStack(stack) {\n    var ret = [];\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        var isTraceLine = \"    (No stack trace)\" === line ||\n            stackFramePattern.test(line);\n        var isInternalFrame = isTraceLine && shouldIgnore(line);\n        if (isTraceLine && !isInternalFrame) {\n            if (indentStackFrames && line.charAt(0) !== \" \") {\n                line = \"    \" + line;\n            }\n            ret.push(line);\n        }\n    }\n    return ret;\n}\n\nfunction stackFramesAsArray(error) {\n    var stack = error.stack.replace(/\\s+$/g, \"\").split(\"\\n\");\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        if (\"    (No stack trace)\" === line || stackFramePattern.test(line)) {\n            break;\n        }\n    }\n    if (i > 0 && error.name != \"SyntaxError\") {\n        stack = stack.slice(i);\n    }\n    return stack;\n}\n\nfunction parseStackAndMessage(error) {\n    var stack = error.stack;\n    var message = error.toString();\n    stack = typeof stack === \"string\" && stack.length > 0\n                ? stackFramesAsArray(error) : [\"    (No stack trace)\"];\n    return {\n        message: message,\n        stack: error.name == \"SyntaxError\" ? stack : cleanStack(stack)\n    };\n}\n\nfunction formatAndLogError(error, title, isSoft) {\n    if (typeof console !== \"undefined\") {\n        var message;\n        if (util.isObject(error)) {\n            var stack = error.stack;\n            message = title + formatStack(stack, error);\n        } else {\n            message = title + String(error);\n        }\n        if (typeof printWarning === \"function\") {\n            printWarning(message, isSoft);\n        } else if (typeof console.log === \"function\" ||\n            typeof console.log === \"object\") {\n            console.log(message);\n        }\n    }\n}\n\nfunction fireRejectionEvent(name, localHandler, reason, promise) {\n    var localEventFired = false;\n    try {\n        if (typeof localHandler === \"function\") {\n            localEventFired = true;\n            if (name === \"rejectionHandled\") {\n                localHandler(promise);\n            } else {\n                localHandler(reason, promise);\n            }\n        }\n    } catch (e) {\n        async.throwLater(e);\n    }\n\n    if (name === \"unhandledRejection\") {\n        if (!activeFireEvent(name, reason, promise) && !localEventFired) {\n            formatAndLogError(reason, \"Unhandled rejection \");\n        }\n    } else {\n        activeFireEvent(name, promise);\n    }\n}\n\nfunction formatNonError(obj) {\n    var str;\n    if (typeof obj === \"function\") {\n        str = \"[function \" +\n            (obj.name || \"anonymous\") +\n            \"]\";\n    } else {\n        str = obj && typeof obj.toString === \"function\"\n            ? obj.toString() : util.toString(obj);\n        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n        if (ruselessToString.test(str)) {\n            try {\n                var newStr = JSON.stringify(obj);\n                str = newStr;\n            }\n            catch(e) {\n\n            }\n        }\n        if (str.length === 0) {\n            str = \"(empty array)\";\n        }\n    }\n    return (\"(<\" + snip(str) + \">, no stack trace)\");\n}\n\nfunction snip(str) {\n    var maxChars = 41;\n    if (str.length < maxChars) {\n        return str;\n    }\n    return str.substr(0, maxChars - 3) + \"...\";\n}\n\nfunction longStackTracesIsSupported() {\n    return typeof captureStackTrace === \"function\";\n}\n\nvar shouldIgnore = function() { return false; };\nvar parseLineInfoRegex = /[\\/<\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;\nfunction parseLineInfo(line) {\n    var matches = line.match(parseLineInfoRegex);\n    if (matches) {\n        return {\n            fileName: matches[1],\n            line: parseInt(matches[2], 10)\n        };\n    }\n}\n\nfunction setBounds(firstLineError, lastLineError) {\n    if (!longStackTracesIsSupported()) return;\n    var firstStackLines = firstLineError.stack.split(\"\\n\");\n    var lastStackLines = lastLineError.stack.split(\"\\n\");\n    var firstIndex = -1;\n    var lastIndex = -1;\n    var firstFileName;\n    var lastFileName;\n    for (var i = 0; i < firstStackLines.length; ++i) {\n        var result = parseLineInfo(firstStackLines[i]);\n        if (result) {\n            firstFileName = result.fileName;\n            firstIndex = result.line;\n            break;\n        }\n    }\n    for (var i = 0; i < lastStackLines.length; ++i) {\n        var result = parseLineInfo(lastStackLines[i]);\n        if (result) {\n            lastFileName = result.fileName;\n            lastIndex = result.line;\n            break;\n        }\n    }\n    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||\n        firstFileName !== lastFileName || firstIndex >= lastIndex) {\n        return;\n    }\n\n    shouldIgnore = function(line) {\n        if (bluebirdFramePattern.test(line)) return true;\n        var info = parseLineInfo(line);\n        if (info) {\n            if (info.fileName === firstFileName &&\n                (firstIndex <= info.line && info.line <= lastIndex)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n\nfunction CapturedTrace(parent) {\n    this._parent = parent;\n    this._promisesCreated = 0;\n    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);\n    captureStackTrace(this, CapturedTrace);\n    if (length > 32) this.uncycle();\n}\nutil.inherits(CapturedTrace, Error);\nContext.CapturedTrace = CapturedTrace;\n\nCapturedTrace.prototype.uncycle = function() {\n    var length = this._length;\n    if (length < 2) return;\n    var nodes = [];\n    var stackToIndex = {};\n\n    for (var i = 0, node = this; node !== undefined; ++i) {\n        nodes.push(node);\n        node = node._parent;\n    }\n    length = this._length = i;\n    for (var i = length - 1; i >= 0; --i) {\n        var stack = nodes[i].stack;\n        if (stackToIndex[stack] === undefined) {\n            stackToIndex[stack] = i;\n        }\n    }\n    for (var i = 0; i < length; ++i) {\n        var currentStack = nodes[i].stack;\n        var index = stackToIndex[currentStack];\n        if (index !== undefined && index !== i) {\n            if (index > 0) {\n                nodes[index - 1]._parent = undefined;\n                nodes[index - 1]._length = 1;\n            }\n            nodes[i]._parent = undefined;\n            nodes[i]._length = 1;\n            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;\n\n            if (index < length - 1) {\n                cycleEdgeNode._parent = nodes[index + 1];\n                cycleEdgeNode._parent.uncycle();\n                cycleEdgeNode._length =\n                    cycleEdgeNode._parent._length + 1;\n            } else {\n                cycleEdgeNode._parent = undefined;\n                cycleEdgeNode._length = 1;\n            }\n            var currentChildLength = cycleEdgeNode._length + 1;\n            for (var j = i - 2; j >= 0; --j) {\n                nodes[j]._length = currentChildLength;\n                currentChildLength++;\n            }\n            return;\n        }\n    }\n};\n\nCapturedTrace.prototype.attachExtraTrace = function(error) {\n    if (error.__stackCleaned__) return;\n    this.uncycle();\n    var parsed = parseStackAndMessage(error);\n    var message = parsed.message;\n    var stacks = [parsed.stack];\n\n    var trace = this;\n    while (trace !== undefined) {\n        stacks.push(cleanStack(trace.stack.split(\"\\n\")));\n        trace = trace._parent;\n    }\n    removeCommonRoots(stacks);\n    removeDuplicateOrEmptyJumps(stacks);\n    util.notEnumerableProp(error, \"stack\", reconstructStack(message, stacks));\n    util.notEnumerableProp(error, \"__stackCleaned__\", true);\n};\n\nvar captureStackTrace = (function stackDetection() {\n    var v8stackFramePattern = /^\\s*at\\s*/;\n    var v8stackFormatter = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if (error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    if (typeof Error.stackTraceLimit === \"number\" &&\n        typeof Error.captureStackTrace === \"function\") {\n        Error.stackTraceLimit += 6;\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        var captureStackTrace = Error.captureStackTrace;\n\n        shouldIgnore = function(line) {\n            return bluebirdFramePattern.test(line);\n        };\n        return function(receiver, ignoreUntil) {\n            Error.stackTraceLimit += 6;\n            captureStackTrace(receiver, ignoreUntil);\n            Error.stackTraceLimit -= 6;\n        };\n    }\n    var err = new Error();\n\n    if (typeof err.stack === \"string\" &&\n        err.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\") >= 0) {\n        stackFramePattern = /@/;\n        formatStack = v8stackFormatter;\n        indentStackFrames = true;\n        return function captureStackTrace(o) {\n            o.stack = new Error().stack;\n        };\n    }\n\n    var hasStackAfterThrow;\n    try { throw new Error(); }\n    catch(e) {\n        hasStackAfterThrow = (\"stack\" in e);\n    }\n    if (!(\"stack\" in err) && hasStackAfterThrow &&\n        typeof Error.stackTraceLimit === \"number\") {\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        return function captureStackTrace(o) {\n            Error.stackTraceLimit += 6;\n            try { throw new Error(); }\n            catch(e) { o.stack = e.stack; }\n            Error.stackTraceLimit -= 6;\n        };\n    }\n\n    formatStack = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if ((typeof error === \"object\" ||\n            typeof error === \"function\") &&\n            error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    return null;\n\n})([]);\n\nif (typeof console !== \"undefined\" && typeof console.warn !== \"undefined\") {\n    printWarning = function (message) {\n        console.warn(message);\n    };\n    if (util.isNode && process.stderr.isTTY) {\n        printWarning = function(message, isSoft) {\n            var color = isSoft ? \"\\u001b[33m\" : \"\\u001b[31m\";\n            console.warn(color + message + \"\\u001b[0m\\n\");\n        };\n    } else if (!util.isNode && typeof (new Error().stack) === \"string\") {\n        printWarning = function(message, isSoft) {\n            console.warn(\"%c\" + message,\n                        isSoft ? \"color: darkorange\" : \"color: red\");\n        };\n    }\n}\n\nvar config = {\n    warnings: warnings,\n    longStackTraces: false,\n    cancellation: false,\n    monitoring: false\n};\n\nif (longStackTraces) Promise.longStackTraces();\n\nreturn {\n    longStackTraces: function() {\n        return config.longStackTraces;\n    },\n    warnings: function() {\n        return config.warnings;\n    },\n    cancellation: function() {\n        return config.cancellation;\n    },\n    monitoring: function() {\n        return config.monitoring;\n    },\n    propagateFromFunction: function() {\n        return propagateFromFunction;\n    },\n    boundValueFunction: function() {\n        return boundValueFunction;\n    },\n    checkForgottenReturns: checkForgottenReturns,\n    setBounds: setBounds,\n    warn: warn,\n    deprecated: deprecated,\n    CapturedTrace: CapturedTrace,\n    fireDomEvent: fireDomEvent,\n    fireGlobalEvent: fireGlobalEvent\n};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/debuggability.js\n// module id = 123\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise) {\nfunction returner() {\n    return this.value;\n}\nfunction thrower() {\n    throw this.reason;\n}\n\nPromise.prototype[\"return\"] =\nPromise.prototype.thenReturn = function (value) {\n    if (value instanceof Promise) value.suppressUnhandledRejections();\n    return this._then(\n        returner, undefined, undefined, {value: value}, undefined);\n};\n\nPromise.prototype[\"throw\"] =\nPromise.prototype.thenThrow = function (reason) {\n    return this._then(\n        thrower, undefined, undefined, {reason: reason}, undefined);\n};\n\nPromise.prototype.catchThrow = function (reason) {\n    if (arguments.length <= 1) {\n        return this._then(\n            undefined, thrower, undefined, {reason: reason}, undefined);\n    } else {\n        var _reason = arguments[1];\n        var handler = function() {throw _reason;};\n        return this.caught(reason, handler);\n    }\n};\n\nPromise.prototype.catchReturn = function (value) {\n    if (arguments.length <= 1) {\n        if (value instanceof Promise) value.suppressUnhandledRejections();\n        return this._then(\n            undefined, returner, undefined, {value: value}, undefined);\n    } else {\n        var _value = arguments[1];\n        if (_value instanceof Promise) _value.suppressUnhandledRejections();\n        var handler = function() {return _value;};\n        return this.caught(value, handler);\n    }\n};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/direct_resolve.js\n// module id = 124\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseReduce = Promise.reduce;\nvar PromiseAll = Promise.all;\n\nfunction promiseAllThis() {\n    return PromiseAll(this);\n}\n\nfunction PromiseMapSeries(promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);\n}\n\nPromise.prototype.each = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, this, undefined);\n};\n\nPromise.prototype.mapSeries = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, INTERNAL);\n};\n\nPromise.each = function (promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, promises, undefined);\n};\n\nPromise.mapSeries = PromiseMapSeries;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/each.js\n// module id = 125\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseMap = Promise.map;\n\nPromise.prototype.filter = function (fn, options) {\n    return PromiseMap(this, fn, options, INTERNAL);\n};\n\nPromise.filter = function (promises, fn, options) {\n    return PromiseMap(promises, fn, options, INTERNAL);\n};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/filter.js\n// module id = 126\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise, tryConvertToPromise, NEXT_FILTER) {\nvar util = require(\"./util\");\nvar CancellationError = Promise.CancellationError;\nvar errorObj = util.errorObj;\nvar catchFilter = require(\"./catch_filter\")(NEXT_FILTER);\n\nfunction PassThroughHandlerContext(promise, type, handler) {\n    this.promise = promise;\n    this.type = type;\n    this.handler = handler;\n    this.called = false;\n    this.cancelPromise = null;\n}\n\nPassThroughHandlerContext.prototype.isFinallyHandler = function() {\n    return this.type === 0;\n};\n\nfunction FinallyHandlerCancelReaction(finallyHandler) {\n    this.finallyHandler = finallyHandler;\n}\n\nFinallyHandlerCancelReaction.prototype._resultCancelled = function() {\n    checkCancel(this.finallyHandler);\n};\n\nfunction checkCancel(ctx, reason) {\n    if (ctx.cancelPromise != null) {\n        if (arguments.length > 1) {\n            ctx.cancelPromise._reject(reason);\n        } else {\n            ctx.cancelPromise._cancel();\n        }\n        ctx.cancelPromise = null;\n        return true;\n    }\n    return false;\n}\n\nfunction succeed() {\n    return finallyHandler.call(this, this.promise._target()._settledValue());\n}\nfunction fail(reason) {\n    if (checkCancel(this, reason)) return;\n    errorObj.e = reason;\n    return errorObj;\n}\nfunction finallyHandler(reasonOrValue) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    if (!this.called) {\n        this.called = true;\n        var ret = this.isFinallyHandler()\n            ? handler.call(promise._boundValue())\n            : handler.call(promise._boundValue(), reasonOrValue);\n        if (ret === NEXT_FILTER) {\n            return ret;\n        } else if (ret !== undefined) {\n            promise._setReturnedNonUndefined();\n            var maybePromise = tryConvertToPromise(ret, promise);\n            if (maybePromise instanceof Promise) {\n                if (this.cancelPromise != null) {\n                    if (maybePromise._isCancelled()) {\n                        var reason =\n                            new CancellationError(\"late cancellation observer\");\n                        promise._attachExtraTrace(reason);\n                        errorObj.e = reason;\n                        return errorObj;\n                    } else if (maybePromise.isPending()) {\n                        maybePromise._attachCancellationCallback(\n                            new FinallyHandlerCancelReaction(this));\n                    }\n                }\n                return maybePromise._then(\n                    succeed, fail, undefined, this, undefined);\n            }\n        }\n    }\n\n    if (promise.isRejected()) {\n        checkCancel(this);\n        errorObj.e = reasonOrValue;\n        return errorObj;\n    } else {\n        checkCancel(this);\n        return reasonOrValue;\n    }\n}\n\nPromise.prototype._passThrough = function(handler, type, success, fail) {\n    if (typeof handler !== \"function\") return this.then();\n    return this._then(success,\n                      fail,\n                      undefined,\n                      new PassThroughHandlerContext(this, type, handler),\n                      undefined);\n};\n\nPromise.prototype.lastly =\nPromise.prototype[\"finally\"] = function (handler) {\n    return this._passThrough(handler,\n                             0,\n                             finallyHandler,\n                             finallyHandler);\n};\n\n\nPromise.prototype.tap = function (handler) {\n    return this._passThrough(handler, 1, finallyHandler);\n};\n\nPromise.prototype.tapCatch = function (handlerOrPredicate) {\n    var len = arguments.length;\n    if(len === 1) {\n        return this._passThrough(handlerOrPredicate,\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    } else {\n         var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return Promise.reject(new TypeError(\n                    \"tapCatch statement predicate: \"\n                    + \"expecting an object but got \" + util.classString(item)\n                ));\n            }\n        }\n        catchInstances.length = j;\n        var handler = arguments[i];\n        return this._passThrough(catchFilter(catchInstances, handler, this),\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    }\n\n};\n\nreturn PassThroughHandlerContext;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/finally.js\n// module id = 127\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise,\n                          apiRejection,\n                          INTERNAL,\n                          tryConvertToPromise,\n                          Proxyable,\n                          debug) {\nvar errors = require(\"./errors\");\nvar TypeError = errors.TypeError;\nvar util = require(\"./util\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nvar yieldHandlers = [];\n\nfunction promiseFromYieldHandler(value, yieldHandlers, traceParent) {\n    for (var i = 0; i < yieldHandlers.length; ++i) {\n        traceParent._pushContext();\n        var result = tryCatch(yieldHandlers[i])(value);\n        traceParent._popContext();\n        if (result === errorObj) {\n            traceParent._pushContext();\n            var ret = Promise.reject(errorObj.e);\n            traceParent._popContext();\n            return ret;\n        }\n        var maybePromise = tryConvertToPromise(result, traceParent);\n        if (maybePromise instanceof Promise) return maybePromise;\n    }\n    return null;\n}\n\nfunction PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {\n    if (debug.cancellation()) {\n        var internal = new Promise(INTERNAL);\n        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);\n        this._promise = internal.lastly(function() {\n            return _finallyPromise;\n        });\n        internal._captureStackTrace();\n        internal._setOnCancel(this);\n    } else {\n        var promise = this._promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n    }\n    this._stack = stack;\n    this._generatorFunction = generatorFunction;\n    this._receiver = receiver;\n    this._generator = undefined;\n    this._yieldHandlers = typeof yieldHandler === \"function\"\n        ? [yieldHandler].concat(yieldHandlers)\n        : yieldHandlers;\n    this._yieldedPromise = null;\n    this._cancellationPhase = false;\n}\nutil.inherits(PromiseSpawn, Proxyable);\n\nPromiseSpawn.prototype._isResolved = function() {\n    return this._promise === null;\n};\n\nPromiseSpawn.prototype._cleanup = function() {\n    this._promise = this._generator = null;\n    if (debug.cancellation() && this._finallyPromise !== null) {\n        this._finallyPromise._fulfill();\n        this._finallyPromise = null;\n    }\n};\n\nPromiseSpawn.prototype._promiseCancelled = function() {\n    if (this._isResolved()) return;\n    var implementsReturn = typeof this._generator[\"return\"] !== \"undefined\";\n\n    var result;\n    if (!implementsReturn) {\n        var reason = new Promise.CancellationError(\n            \"generator .return() sentinel\");\n        Promise.coroutine.returnSentinel = reason;\n        this._promise._attachExtraTrace(reason);\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"throw\"]).call(this._generator,\n                                                         reason);\n        this._promise._popContext();\n    } else {\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"return\"]).call(this._generator,\n                                                          undefined);\n        this._promise._popContext();\n    }\n    this._cancellationPhase = true;\n    this._yieldedPromise = null;\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseFulfilled = function(value) {\n    this._yieldedPromise = null;\n    this._promise._pushContext();\n    var result = tryCatch(this._generator.next).call(this._generator, value);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseRejected = function(reason) {\n    this._yieldedPromise = null;\n    this._promise._attachExtraTrace(reason);\n    this._promise._pushContext();\n    var result = tryCatch(this._generator[\"throw\"])\n        .call(this._generator, reason);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._resultCancelled = function() {\n    if (this._yieldedPromise instanceof Promise) {\n        var promise = this._yieldedPromise;\n        this._yieldedPromise = null;\n        promise.cancel();\n    }\n};\n\nPromiseSpawn.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseSpawn.prototype._run = function () {\n    this._generator = this._generatorFunction.call(this._receiver);\n    this._receiver =\n        this._generatorFunction = undefined;\n    this._promiseFulfilled(undefined);\n};\n\nPromiseSpawn.prototype._continue = function (result) {\n    var promise = this._promise;\n    if (result === errorObj) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._rejectCallback(result.e, false);\n        }\n    }\n\n    var value = result.value;\n    if (result.done === true) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._resolveCallback(value);\n        }\n    } else {\n        var maybePromise = tryConvertToPromise(value, this._promise);\n        if (!(maybePromise instanceof Promise)) {\n            maybePromise =\n                promiseFromYieldHandler(maybePromise,\n                                        this._yieldHandlers,\n                                        this._promise);\n            if (maybePromise === null) {\n                this._promiseRejected(\n                    new TypeError(\n                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\\u000a\".replace(\"%s\", String(value)) +\n                        \"From coroutine:\\u000a\" +\n                        this._stack.split(\"\\n\").slice(1, -7).join(\"\\n\")\n                    )\n                );\n                return;\n            }\n        }\n        maybePromise = maybePromise._target();\n        var bitField = maybePromise._bitField;\n        ;\n        if (((bitField & 50397184) === 0)) {\n            this._yieldedPromise = maybePromise;\n            maybePromise._proxy(this, null);\n        } else if (((bitField & 33554432) !== 0)) {\n            Promise._async.invoke(\n                this._promiseFulfilled, this, maybePromise._value()\n            );\n        } else if (((bitField & 16777216) !== 0)) {\n            Promise._async.invoke(\n                this._promiseRejected, this, maybePromise._reason()\n            );\n        } else {\n            this._promiseCancelled();\n        }\n    }\n};\n\nPromise.coroutine = function (generatorFunction, options) {\n    if (typeof generatorFunction !== \"function\") {\n        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var yieldHandler = Object(options).yieldHandler;\n    var PromiseSpawn$ = PromiseSpawn;\n    var stack = new Error().stack;\n    return function () {\n        var generator = generatorFunction.apply(this, arguments);\n        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                                      stack);\n        var ret = spawn.promise();\n        spawn._generator = generator;\n        spawn._promiseFulfilled(undefined);\n        return ret;\n    };\n};\n\nPromise.coroutine.addYieldHandler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    yieldHandlers.push(fn);\n};\n\nPromise.spawn = function (generatorFunction) {\n    debug.deprecated(\"Promise.spawn()\", \"Promise.coroutine()\");\n    if (typeof generatorFunction !== \"function\") {\n        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var spawn = new PromiseSpawn(generatorFunction, this);\n    var ret = spawn.promise();\n    spawn._run(Promise.spawn);\n    return ret;\n};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/generators.js\n// module id = 128\n// module chunks = 0","\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async,\n         getDomain) {\nvar util = require(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar reject;\n\nif (!false) {\nif (canEvaluate) {\n    var thenCallback = function(i) {\n        return new Function(\"value\", \"holder\", \"                             \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = value;                                           \\n\\\n            holder.checkFulfillment(this);                                   \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var promiseSetter = function(i) {\n        return new Function(\"promise\", \"holder\", \"                           \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = promise;                                         \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var generateHolderClass = function(total) {\n        var props = new Array(total);\n        for (var i = 0; i < props.length; ++i) {\n            props[i] = \"this.p\" + (i+1);\n        }\n        var assignment = props.join(\" = \") + \" = null;\";\n        var cancellationCode= \"var promise;\\n\" + props.map(function(prop) {\n            return \"                                                         \\n\\\n                promise = \" + prop + \";                                      \\n\\\n                if (promise instanceof Promise) {                            \\n\\\n                    promise.cancel();                                        \\n\\\n                }                                                            \\n\\\n            \";\n        }).join(\"\\n\");\n        var passedArguments = props.join(\", \");\n        var name = \"Holder$\" + total;\n\n\n        var code = \"return function(tryCatch, errorObj, Promise, async) {    \\n\\\n            'use strict';                                                    \\n\\\n            function [TheName](fn) {                                         \\n\\\n                [TheProperties]                                              \\n\\\n                this.fn = fn;                                                \\n\\\n                this.asyncNeeded = true;                                     \\n\\\n                this.now = 0;                                                \\n\\\n            }                                                                \\n\\\n                                                                             \\n\\\n            [TheName].prototype._callFunction = function(promise) {          \\n\\\n                promise._pushContext();                                      \\n\\\n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \\n\\\n                promise._popContext();                                       \\n\\\n                if (ret === errorObj) {                                      \\n\\\n                    promise._rejectCallback(ret.e, false);                   \\n\\\n                } else {                                                     \\n\\\n                    promise._resolveCallback(ret);                           \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype.checkFulfillment = function(promise) {       \\n\\\n                var now = ++this.now;                                        \\n\\\n                if (now === [TheTotal]) {                                    \\n\\\n                    if (this.asyncNeeded) {                                  \\n\\\n                        async.invoke(this._callFunction, this, promise);     \\n\\\n                    } else {                                                 \\n\\\n                        this._callFunction(promise);                         \\n\\\n                    }                                                        \\n\\\n                                                                             \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype._resultCancelled = function() {              \\n\\\n                [CancellationCode]                                           \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            return [TheName];                                                \\n\\\n        }(tryCatch, errorObj, Promise, async);                               \\n\\\n        \";\n\n        code = code.replace(/\\[TheName\\]/g, name)\n            .replace(/\\[TheTotal\\]/g, total)\n            .replace(/\\[ThePassedArguments\\]/g, passedArguments)\n            .replace(/\\[TheProperties\\]/g, assignment)\n            .replace(/\\[CancellationCode\\]/g, cancellationCode);\n\n        return new Function(\"tryCatch\", \"errorObj\", \"Promise\", \"async\", code)\n                           (tryCatch, errorObj, Promise, async);\n    };\n\n    var holderClasses = [];\n    var thenCallbacks = [];\n    var promiseSetters = [];\n\n    for (var i = 0; i < 8; ++i) {\n        holderClasses.push(generateHolderClass(i + 1));\n        thenCallbacks.push(thenCallback(i + 1));\n        promiseSetters.push(promiseSetter(i + 1));\n    }\n\n    reject = function (reason) {\n        this._reject(reason);\n    };\n}}\n\nPromise.join = function () {\n    var last = arguments.length - 1;\n    var fn;\n    if (last > 0 && typeof arguments[last] === \"function\") {\n        fn = arguments[last];\n        if (!false) {\n            if (last <= 8 && canEvaluate) {\n                var ret = new Promise(INTERNAL);\n                ret._captureStackTrace();\n                var HolderClass = holderClasses[last - 1];\n                var holder = new HolderClass(fn);\n                var callbacks = thenCallbacks;\n\n                for (var i = 0; i < last; ++i) {\n                    var maybePromise = tryConvertToPromise(arguments[i], ret);\n                    if (maybePromise instanceof Promise) {\n                        maybePromise = maybePromise._target();\n                        var bitField = maybePromise._bitField;\n                        ;\n                        if (((bitField & 50397184) === 0)) {\n                            maybePromise._then(callbacks[i], reject,\n                                               undefined, ret, holder);\n                            promiseSetters[i](maybePromise, holder);\n                            holder.asyncNeeded = false;\n                        } else if (((bitField & 33554432) !== 0)) {\n                            callbacks[i].call(ret,\n                                              maybePromise._value(), holder);\n                        } else if (((bitField & 16777216) !== 0)) {\n                            ret._reject(maybePromise._reason());\n                        } else {\n                            ret._cancel();\n                        }\n                    } else {\n                        callbacks[i].call(ret, maybePromise, holder);\n                    }\n                }\n\n                if (!ret._isFateSealed()) {\n                    if (holder.asyncNeeded) {\n                        var domain = getDomain();\n                        if (domain !== null) {\n                            holder.fn = util.domainBind(domain, holder.fn);\n                        }\n                    }\n                    ret._setAsyncGuaranteed();\n                    ret._setOnCancel(holder);\n                }\n                return ret;\n            }\n        }\n    }\n    var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];};\n    if (fn) args.pop();\n    var ret = new PromiseArray(args).promise();\n    return fn !== undefined ? ret.spread(fn) : ret;\n};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/join.js\n// module id = 129\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = require(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nfunction MappingPromiseArray(promises, fn, limit, _filter) {\n    this.constructor$(promises);\n    this._promise._captureStackTrace();\n    var domain = getDomain();\n    this._callback = domain === null ? fn : util.domainBind(domain, fn);\n    this._preservedValues = _filter === INTERNAL\n        ? new Array(this.length())\n        : null;\n    this._limit = limit;\n    this._inFlight = 0;\n    this._queue = [];\n    async.invoke(this._asyncInit, this, undefined);\n}\nutil.inherits(MappingPromiseArray, PromiseArray);\n\nMappingPromiseArray.prototype._asyncInit = function() {\n    this._init$(undefined, -2);\n};\n\nMappingPromiseArray.prototype._init = function () {};\n\nMappingPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var values = this._values;\n    var length = this.length();\n    var preservedValues = this._preservedValues;\n    var limit = this._limit;\n\n    if (index < 0) {\n        index = (index * -1) - 1;\n        values[index] = value;\n        if (limit >= 1) {\n            this._inFlight--;\n            this._drainQueue();\n            if (this._isResolved()) return true;\n        }\n    } else {\n        if (limit >= 1 && this._inFlight >= limit) {\n            values[index] = value;\n            this._queue.push(index);\n            return false;\n        }\n        if (preservedValues !== null) preservedValues[index] = value;\n\n        var promise = this._promise;\n        var callback = this._callback;\n        var receiver = promise._boundValue();\n        promise._pushContext();\n        var ret = tryCatch(callback).call(receiver, value, index, length);\n        var promiseCreated = promise._popContext();\n        debug.checkForgottenReturns(\n            ret,\n            promiseCreated,\n            preservedValues !== null ? \"Promise.filter\" : \"Promise.map\",\n            promise\n        );\n        if (ret === errorObj) {\n            this._reject(ret.e);\n            return true;\n        }\n\n        var maybePromise = tryConvertToPromise(ret, this._promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            var bitField = maybePromise._bitField;\n            ;\n            if (((bitField & 50397184) === 0)) {\n                if (limit >= 1) this._inFlight++;\n                values[index] = maybePromise;\n                maybePromise._proxy(this, (index + 1) * -1);\n                return false;\n            } else if (((bitField & 33554432) !== 0)) {\n                ret = maybePromise._value();\n            } else if (((bitField & 16777216) !== 0)) {\n                this._reject(maybePromise._reason());\n                return true;\n            } else {\n                this._cancel();\n                return true;\n            }\n        }\n        values[index] = ret;\n    }\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= length) {\n        if (preservedValues !== null) {\n            this._filter(values, preservedValues);\n        } else {\n            this._resolve(values);\n        }\n        return true;\n    }\n    return false;\n};\n\nMappingPromiseArray.prototype._drainQueue = function () {\n    var queue = this._queue;\n    var limit = this._limit;\n    var values = this._values;\n    while (queue.length > 0 && this._inFlight < limit) {\n        if (this._isResolved()) return;\n        var index = queue.pop();\n        this._promiseFulfilled(values[index], index);\n    }\n};\n\nMappingPromiseArray.prototype._filter = function (booleans, values) {\n    var len = values.length;\n    var ret = new Array(len);\n    var j = 0;\n    for (var i = 0; i < len; ++i) {\n        if (booleans[i]) ret[j++] = values[i];\n    }\n    ret.length = j;\n    this._resolve(ret);\n};\n\nMappingPromiseArray.prototype.preservedValues = function () {\n    return this._preservedValues;\n};\n\nfunction map(promises, fn, options, _filter) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n\n    var limit = 0;\n    if (options !== undefined) {\n        if (typeof options === \"object\" && options !== null) {\n            if (typeof options.concurrency !== \"number\") {\n                return Promise.reject(\n                    new TypeError(\"'concurrency' must be a number but it is \" +\n                                    util.classString(options.concurrency)));\n            }\n            limit = options.concurrency;\n        } else {\n            return Promise.reject(new TypeError(\n                            \"options argument must be an object but it is \" +\n                             util.classString(options)));\n        }\n    }\n    limit = typeof limit === \"number\" &&\n        isFinite(limit) && limit >= 1 ? limit : 0;\n    return new MappingPromiseArray(promises, fn, limit, _filter).promise();\n}\n\nPromise.prototype.map = function (fn, options) {\n    return map(this, fn, options, null);\n};\n\nPromise.map = function (promises, fn, options, _filter) {\n    return map(promises, fn, options, _filter);\n};\n\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/map.js\n// module id = 130\n// module chunks = 0","\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = require(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/method.js\n// module id = 131\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise) {\nvar util = require(\"./util\");\nvar async = Promise._async;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction spreadAdapter(val, nodeback) {\n    var promise = this;\n    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);\n    var ret =\n        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nfunction successAdapter(val, nodeback) {\n    var promise = this;\n    var receiver = promise._boundValue();\n    var ret = val === undefined\n        ? tryCatch(nodeback).call(receiver, null)\n        : tryCatch(nodeback).call(receiver, null, val);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\nfunction errorAdapter(reason, nodeback) {\n    var promise = this;\n    if (!reason) {\n        var newReason = new Error(reason + \"\");\n        newReason.cause = reason;\n        reason = newReason;\n    }\n    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nPromise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,\n                                                                     options) {\n    if (typeof nodeback == \"function\") {\n        var adapter = successAdapter;\n        if (options !== undefined && Object(options).spread) {\n            adapter = spreadAdapter;\n        }\n        this._then(\n            adapter,\n            errorAdapter,\n            undefined,\n            this,\n            nodeback\n        );\n    }\n    return this;\n};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/nodeify.js\n// module id = 132\n// module chunks = 0","\"use strict\";\nmodule.exports = function() {\nvar makeSelfResolutionError = function () {\n    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar reflectHandler = function() {\n    return new Promise.PromiseInspection(this._target());\n};\nvar apiRejection = function(msg) {\n    return Promise.reject(new TypeError(msg));\n};\nfunction Proxyable() {}\nvar UNDEFINED_BINDING = {};\nvar util = require(\"./util\");\n\nvar getDomain;\nif (util.isNode) {\n    getDomain = function() {\n        var ret = process.domain;\n        if (ret === undefined) ret = null;\n        return ret;\n    };\n} else {\n    getDomain = function() {\n        return null;\n    };\n}\nutil.notEnumerableProp(Promise, \"_getDomain\", getDomain);\n\nvar es5 = require(\"./es5\");\nvar Async = require(\"./async\");\nvar async = new Async();\nes5.defineProperty(Promise, \"_async\", {value: async});\nvar errors = require(\"./errors\");\nvar TypeError = Promise.TypeError = errors.TypeError;\nPromise.RangeError = errors.RangeError;\nvar CancellationError = Promise.CancellationError = errors.CancellationError;\nPromise.TimeoutError = errors.TimeoutError;\nPromise.OperationalError = errors.OperationalError;\nPromise.RejectionError = errors.OperationalError;\nPromise.AggregateError = errors.AggregateError;\nvar INTERNAL = function(){};\nvar APPLY = {};\nvar NEXT_FILTER = {};\nvar tryConvertToPromise = require(\"./thenables\")(Promise, INTERNAL);\nvar PromiseArray =\n    require(\"./promise_array\")(Promise, INTERNAL,\n                               tryConvertToPromise, apiRejection, Proxyable);\nvar Context = require(\"./context\")(Promise);\n /*jshint unused:false*/\nvar createContext = Context.create;\nvar debug = require(\"./debuggability\")(Promise, Context);\nvar CapturedTrace = debug.CapturedTrace;\nvar PassThroughHandlerContext =\n    require(\"./finally\")(Promise, tryConvertToPromise, NEXT_FILTER);\nvar catchFilter = require(\"./catch_filter\")(NEXT_FILTER);\nvar nodebackForPromise = require(\"./nodeback\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nfunction check(self, executor) {\n    if (self == null || self.constructor !== Promise) {\n        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (typeof executor !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(executor));\n    }\n\n}\n\nfunction Promise(executor) {\n    if (executor !== INTERNAL) {\n        check(this, executor);\n    }\n    this._bitField = 0;\n    this._fulfillmentHandler0 = undefined;\n    this._rejectionHandler0 = undefined;\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._resolveFromExecutor(executor);\n    this._promiseCreated();\n    this._fireEvent(\"promiseCreated\", this);\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) {\n    var len = arguments.length;\n    if (len > 1) {\n        var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return apiRejection(\"Catch statement predicate: \" +\n                    \"expecting an object but got \" + util.classString(item));\n            }\n        }\n        catchInstances.length = j;\n        fn = arguments[i];\n        return this.then(undefined, catchFilter(catchInstances, fn, this));\n    }\n    return this.then(undefined, fn);\n};\n\nPromise.prototype.reflect = function () {\n    return this._then(reflectHandler,\n        reflectHandler, undefined, this, undefined);\n};\n\nPromise.prototype.then = function (didFulfill, didReject) {\n    if (debug.warnings() && arguments.length > 0 &&\n        typeof didFulfill !== \"function\" &&\n        typeof didReject !== \"function\") {\n        var msg = \".then() only accepts functions but was passed: \" +\n                util.classString(didFulfill);\n        if (arguments.length > 1) {\n            msg += \", \" + util.classString(didReject);\n        }\n        this._warn(msg);\n    }\n    return this._then(didFulfill, didReject, undefined, undefined, undefined);\n};\n\nPromise.prototype.done = function (didFulfill, didReject) {\n    var promise =\n        this._then(didFulfill, didReject, undefined, undefined, undefined);\n    promise._setIsFinal();\n};\n\nPromise.prototype.spread = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    return this.all()._then(fn, undefined, undefined, APPLY, undefined);\n};\n\nPromise.prototype.toJSON = function () {\n    var ret = {\n        isFulfilled: false,\n        isRejected: false,\n        fulfillmentValue: undefined,\n        rejectionReason: undefined\n    };\n    if (this.isFulfilled()) {\n        ret.fulfillmentValue = this.value();\n        ret.isFulfilled = true;\n    } else if (this.isRejected()) {\n        ret.rejectionReason = this.reason();\n        ret.isRejected = true;\n    }\n    return ret;\n};\n\nPromise.prototype.all = function () {\n    if (arguments.length > 0) {\n        this._warn(\".all() was passed arguments but it does not take any\");\n    }\n    return new PromiseArray(this).promise();\n};\n\nPromise.prototype.error = function (fn) {\n    return this.caught(util.originatesFromRejection, fn);\n};\n\nPromise.getNewLibraryCopy = module.exports;\n\nPromise.is = function (val) {\n    return val instanceof Promise;\n};\n\nPromise.fromNode = Promise.fromCallback = function(fn) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs\n                                         : false;\n    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));\n    if (result === errorObj) {\n        ret._rejectCallback(result.e, true);\n    }\n    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.all = function (promises) {\n    return new PromiseArray(promises).promise();\n};\n\nPromise.cast = function (obj) {\n    var ret = tryConvertToPromise(obj);\n    if (!(ret instanceof Promise)) {\n        ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._setFulfilled();\n        ret._rejectionHandler0 = obj;\n    }\n    return ret;\n};\n\nPromise.resolve = Promise.fulfilled = Promise.cast;\n\nPromise.reject = Promise.rejected = function (reason) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._rejectCallback(reason, true);\n    return ret;\n};\n\nPromise.setScheduler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return async.setScheduler(fn);\n};\n\nPromise.prototype._then = function (\n    didFulfill,\n    didReject,\n    _,    receiver,\n    internalData\n) {\n    var haveInternalData = internalData !== undefined;\n    var promise = haveInternalData ? internalData : new Promise(INTERNAL);\n    var target = this._target();\n    var bitField = target._bitField;\n\n    if (!haveInternalData) {\n        promise._propagateFrom(this, 3);\n        promise._captureStackTrace();\n        if (receiver === undefined &&\n            ((this._bitField & 2097152) !== 0)) {\n            if (!((bitField & 50397184) === 0)) {\n                receiver = this._boundValue();\n            } else {\n                receiver = target === this ? undefined : this._boundTo;\n            }\n        }\n        this._fireEvent(\"promiseChained\", this, promise);\n    }\n\n    var domain = getDomain();\n    if (!((bitField & 50397184) === 0)) {\n        var handler, value, settler = target._settlePromiseCtx;\n        if (((bitField & 33554432) !== 0)) {\n            value = target._rejectionHandler0;\n            handler = didFulfill;\n        } else if (((bitField & 16777216) !== 0)) {\n            value = target._fulfillmentHandler0;\n            handler = didReject;\n            target._unsetRejectionIsUnhandled();\n        } else {\n            settler = target._settlePromiseLateCancellationObserver;\n            value = new CancellationError(\"late cancellation observer\");\n            target._attachExtraTrace(value);\n            handler = didReject;\n        }\n\n        async.invoke(settler, target, {\n            handler: domain === null ? handler\n                : (typeof handler === \"function\" &&\n                    util.domainBind(domain, handler)),\n            promise: promise,\n            receiver: receiver,\n            value: value\n        });\n    } else {\n        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);\n    }\n\n    return promise;\n};\n\nPromise.prototype._length = function () {\n    return this._bitField & 65535;\n};\n\nPromise.prototype._isFateSealed = function () {\n    return (this._bitField & 117506048) !== 0;\n};\n\nPromise.prototype._isFollowing = function () {\n    return (this._bitField & 67108864) === 67108864;\n};\n\nPromise.prototype._setLength = function (len) {\n    this._bitField = (this._bitField & -65536) |\n        (len & 65535);\n};\n\nPromise.prototype._setFulfilled = function () {\n    this._bitField = this._bitField | 33554432;\n    this._fireEvent(\"promiseFulfilled\", this);\n};\n\nPromise.prototype._setRejected = function () {\n    this._bitField = this._bitField | 16777216;\n    this._fireEvent(\"promiseRejected\", this);\n};\n\nPromise.prototype._setFollowing = function () {\n    this._bitField = this._bitField | 67108864;\n    this._fireEvent(\"promiseResolved\", this);\n};\n\nPromise.prototype._setIsFinal = function () {\n    this._bitField = this._bitField | 4194304;\n};\n\nPromise.prototype._isFinal = function () {\n    return (this._bitField & 4194304) > 0;\n};\n\nPromise.prototype._unsetCancelled = function() {\n    this._bitField = this._bitField & (~65536);\n};\n\nPromise.prototype._setCancelled = function() {\n    this._bitField = this._bitField | 65536;\n    this._fireEvent(\"promiseCancelled\", this);\n};\n\nPromise.prototype._setWillBeCancelled = function() {\n    this._bitField = this._bitField | 8388608;\n};\n\nPromise.prototype._setAsyncGuaranteed = function() {\n    if (async.hasCustomScheduler()) return;\n    this._bitField = this._bitField | 134217728;\n};\n\nPromise.prototype._receiverAt = function (index) {\n    var ret = index === 0 ? this._receiver0 : this[\n            index * 4 - 4 + 3];\n    if (ret === UNDEFINED_BINDING) {\n        return undefined;\n    } else if (ret === undefined && this._isBound()) {\n        return this._boundValue();\n    }\n    return ret;\n};\n\nPromise.prototype._promiseAt = function (index) {\n    return this[\n            index * 4 - 4 + 2];\n};\n\nPromise.prototype._fulfillmentHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 0];\n};\n\nPromise.prototype._rejectionHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 1];\n};\n\nPromise.prototype._boundValue = function() {};\n\nPromise.prototype._migrateCallback0 = function (follower) {\n    var bitField = follower._bitField;\n    var fulfill = follower._fulfillmentHandler0;\n    var reject = follower._rejectionHandler0;\n    var promise = follower._promise0;\n    var receiver = follower._receiverAt(0);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._migrateCallbackAt = function (follower, index) {\n    var fulfill = follower._fulfillmentHandlerAt(index);\n    var reject = follower._rejectionHandlerAt(index);\n    var promise = follower._promiseAt(index);\n    var receiver = follower._receiverAt(index);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._addCallbacks = function (\n    fulfill,\n    reject,\n    promise,\n    receiver,\n    domain\n) {\n    var index = this._length();\n\n    if (index >= 65535 - 4) {\n        index = 0;\n        this._setLength(0);\n    }\n\n    if (index === 0) {\n        this._promise0 = promise;\n        this._receiver0 = receiver;\n        if (typeof fulfill === \"function\") {\n            this._fulfillmentHandler0 =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this._rejectionHandler0 =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    } else {\n        var base = index * 4 - 4;\n        this[base + 2] = promise;\n        this[base + 3] = receiver;\n        if (typeof fulfill === \"function\") {\n            this[base + 0] =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this[base + 1] =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    }\n    this._setLength(index + 1);\n    return index;\n};\n\nPromise.prototype._proxy = function (proxyable, arg) {\n    this._addCallbacks(undefined, undefined, arg, proxyable, null);\n};\n\nPromise.prototype._resolveCallback = function(value, shouldBind) {\n    if (((this._bitField & 117506048) !== 0)) return;\n    if (value === this)\n        return this._rejectCallback(makeSelfResolutionError(), false);\n    var maybePromise = tryConvertToPromise(value, this);\n    if (!(maybePromise instanceof Promise)) return this._fulfill(value);\n\n    if (shouldBind) this._propagateFrom(maybePromise, 2);\n\n    var promise = maybePromise._target();\n\n    if (promise === this) {\n        this._reject(makeSelfResolutionError());\n        return;\n    }\n\n    var bitField = promise._bitField;\n    if (((bitField & 50397184) === 0)) {\n        var len = this._length();\n        if (len > 0) promise._migrateCallback0(this);\n        for (var i = 1; i < len; ++i) {\n            promise._migrateCallbackAt(this, i);\n        }\n        this._setFollowing();\n        this._setLength(0);\n        this._setFollowee(promise);\n    } else if (((bitField & 33554432) !== 0)) {\n        this._fulfill(promise._value());\n    } else if (((bitField & 16777216) !== 0)) {\n        this._reject(promise._reason());\n    } else {\n        var reason = new CancellationError(\"late cancellation observer\");\n        promise._attachExtraTrace(reason);\n        this._reject(reason);\n    }\n};\n\nPromise.prototype._rejectCallback =\nfunction(reason, synchronous, ignoreNonErrorWarnings) {\n    var trace = util.ensureErrorObject(reason);\n    var hasStack = trace === reason;\n    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {\n        var message = \"a promise was rejected with a non-error: \" +\n            util.classString(reason);\n        this._warn(message, true);\n    }\n    this._attachExtraTrace(trace, synchronous ? hasStack : false);\n    this._reject(reason);\n};\n\nPromise.prototype._resolveFromExecutor = function (executor) {\n    if (executor === INTERNAL) return;\n    var promise = this;\n    this._captureStackTrace();\n    this._pushContext();\n    var synchronous = true;\n    var r = this._execute(executor, function(value) {\n        promise._resolveCallback(value);\n    }, function (reason) {\n        promise._rejectCallback(reason, synchronous);\n    });\n    synchronous = false;\n    this._popContext();\n\n    if (r !== undefined) {\n        promise._rejectCallback(r, true);\n    }\n};\n\nPromise.prototype._settlePromiseFromHandler = function (\n    handler, receiver, value, promise\n) {\n    var bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n    promise._pushContext();\n    var x;\n    if (receiver === APPLY) {\n        if (!value || typeof value.length !== \"number\") {\n            x = errorObj;\n            x.e = new TypeError(\"cannot .spread() a non-array: \" +\n                                    util.classString(value));\n        } else {\n            x = tryCatch(handler).apply(this._boundValue(), value);\n        }\n    } else {\n        x = tryCatch(handler).call(receiver, value);\n    }\n    var promiseCreated = promise._popContext();\n    bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n\n    if (x === NEXT_FILTER) {\n        promise._reject(value);\n    } else if (x === errorObj) {\n        promise._rejectCallback(x.e, false);\n    } else {\n        debug.checkForgottenReturns(x, promiseCreated, \"\",  promise, this);\n        promise._resolveCallback(x);\n    }\n};\n\nPromise.prototype._target = function() {\n    var ret = this;\n    while (ret._isFollowing()) ret = ret._followee();\n    return ret;\n};\n\nPromise.prototype._followee = function() {\n    return this._rejectionHandler0;\n};\n\nPromise.prototype._setFollowee = function(promise) {\n    this._rejectionHandler0 = promise;\n};\n\nPromise.prototype._settlePromise = function(promise, handler, receiver, value) {\n    var isPromise = promise instanceof Promise;\n    var bitField = this._bitField;\n    var asyncGuaranteed = ((bitField & 134217728) !== 0);\n    if (((bitField & 65536) !== 0)) {\n        if (isPromise) promise._invokeInternalOnCancel();\n\n        if (receiver instanceof PassThroughHandlerContext &&\n            receiver.isFinallyHandler()) {\n            receiver.cancelPromise = promise;\n            if (tryCatch(handler).call(receiver, value) === errorObj) {\n                promise._reject(errorObj.e);\n            }\n        } else if (handler === reflectHandler) {\n            promise._fulfill(reflectHandler.call(receiver));\n        } else if (receiver instanceof Proxyable) {\n            receiver._promiseCancelled(promise);\n        } else if (isPromise || promise instanceof PromiseArray) {\n            promise._cancel();\n        } else {\n            receiver.cancel();\n        }\n    } else if (typeof handler === \"function\") {\n        if (!isPromise) {\n            handler.call(receiver, value, promise);\n        } else {\n            if (asyncGuaranteed) promise._setAsyncGuaranteed();\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (receiver instanceof Proxyable) {\n        if (!receiver._isResolved()) {\n            if (((bitField & 33554432) !== 0)) {\n                receiver._promiseFulfilled(value, promise);\n            } else {\n                receiver._promiseRejected(value, promise);\n            }\n        }\n    } else if (isPromise) {\n        if (asyncGuaranteed) promise._setAsyncGuaranteed();\n        if (((bitField & 33554432) !== 0)) {\n            promise._fulfill(value);\n        } else {\n            promise._reject(value);\n        }\n    }\n};\n\nPromise.prototype._settlePromiseLateCancellationObserver = function(ctx) {\n    var handler = ctx.handler;\n    var promise = ctx.promise;\n    var receiver = ctx.receiver;\n    var value = ctx.value;\n    if (typeof handler === \"function\") {\n        if (!(promise instanceof Promise)) {\n            handler.call(receiver, value, promise);\n        } else {\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (promise instanceof Promise) {\n        promise._reject(value);\n    }\n};\n\nPromise.prototype._settlePromiseCtx = function(ctx) {\n    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);\n};\n\nPromise.prototype._settlePromise0 = function(handler, value, bitField) {\n    var promise = this._promise0;\n    var receiver = this._receiverAt(0);\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._settlePromise(promise, handler, receiver, value);\n};\n\nPromise.prototype._clearCallbackDataAtIndex = function(index) {\n    var base = index * 4 - 4;\n    this[base + 2] =\n    this[base + 3] =\n    this[base + 0] =\n    this[base + 1] = undefined;\n};\n\nPromise.prototype._fulfill = function (value) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    if (value === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._reject(err);\n    }\n    this._setFulfilled();\n    this._rejectionHandler0 = value;\n\n    if ((bitField & 65535) > 0) {\n        if (((bitField & 134217728) !== 0)) {\n            this._settlePromises();\n        } else {\n            async.settlePromises(this);\n        }\n    }\n};\n\nPromise.prototype._reject = function (reason) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    this._setRejected();\n    this._fulfillmentHandler0 = reason;\n\n    if (this._isFinal()) {\n        return async.fatalError(reason, util.isNode);\n    }\n\n    if ((bitField & 65535) > 0) {\n        async.settlePromises(this);\n    } else {\n        this._ensurePossibleRejectionHandled();\n    }\n};\n\nPromise.prototype._fulfillPromises = function (len, value) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._fulfillmentHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, value);\n    }\n};\n\nPromise.prototype._rejectPromises = function (len, reason) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._rejectionHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, reason);\n    }\n};\n\nPromise.prototype._settlePromises = function () {\n    var bitField = this._bitField;\n    var len = (bitField & 65535);\n\n    if (len > 0) {\n        if (((bitField & 16842752) !== 0)) {\n            var reason = this._fulfillmentHandler0;\n            this._settlePromise0(this._rejectionHandler0, reason, bitField);\n            this._rejectPromises(len, reason);\n        } else {\n            var value = this._rejectionHandler0;\n            this._settlePromise0(this._fulfillmentHandler0, value, bitField);\n            this._fulfillPromises(len, value);\n        }\n        this._setLength(0);\n    }\n    this._clearCancellationData();\n};\n\nPromise.prototype._settledValue = function() {\n    var bitField = this._bitField;\n    if (((bitField & 33554432) !== 0)) {\n        return this._rejectionHandler0;\n    } else if (((bitField & 16777216) !== 0)) {\n        return this._fulfillmentHandler0;\n    }\n};\n\nfunction deferResolve(v) {this.promise._resolveCallback(v);}\nfunction deferReject(v) {this.promise._rejectCallback(v, false);}\n\nPromise.defer = Promise.pending = function() {\n    debug.deprecated(\"Promise.defer\", \"new Promise\");\n    var promise = new Promise(INTERNAL);\n    return {\n        promise: promise,\n        resolve: deferResolve,\n        reject: deferReject\n    };\n};\n\nutil.notEnumerableProp(Promise,\n                       \"_makeSelfResolutionError\",\n                       makeSelfResolutionError);\n\nrequire(\"./method\")(Promise, INTERNAL, tryConvertToPromise, apiRejection,\n    debug);\nrequire(\"./bind\")(Promise, INTERNAL, tryConvertToPromise, debug);\nrequire(\"./cancel\")(Promise, PromiseArray, apiRejection, debug);\nrequire(\"./direct_resolve\")(Promise);\nrequire(\"./synchronous_inspection\")(Promise);\nrequire(\"./join\")(\n    Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);\nPromise.Promise = Promise;\nPromise.version = \"3.5.0\";\nrequire('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\nrequire('./call_get.js')(Promise);\nrequire('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);\nrequire('./timers.js')(Promise, INTERNAL, debug);\nrequire('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);\nrequire('./nodeify.js')(Promise);\nrequire('./promisify.js')(Promise, INTERNAL);\nrequire('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);\nrequire('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);\nrequire('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\nrequire('./settle.js')(Promise, PromiseArray, debug);\nrequire('./some.js')(Promise, PromiseArray, apiRejection);\nrequire('./filter.js')(Promise, INTERNAL);\nrequire('./each.js')(Promise, INTERNAL);\nrequire('./any.js')(Promise);\n                                                         \n    util.toFastProperties(Promise);                                          \n    util.toFastProperties(Promise.prototype);                                \n    function fillTypes(value) {                                              \n        var p = new Promise(INTERNAL);                                       \n        p._fulfillmentHandler0 = value;                                      \n        p._rejectionHandler0 = value;                                        \n        p._promise0 = value;                                                 \n        p._receiver0 = value;                                                \n    }                                                                        \n    // Complete slack tracking, opt out of field-type tracking and           \n    // stabilize map                                                         \n    fillTypes({a: 1});                                                       \n    fillTypes({b: 2});                                                       \n    fillTypes({c: 3});                                                       \n    fillTypes(1);                                                            \n    fillTypes(function(){});                                                 \n    fillTypes(undefined);                                                    \n    fillTypes(false);                                                        \n    fillTypes(new Promise(INTERNAL));                                        \n    debug.setBounds(Async.firstLineError, util.lastLineError);               \n    return Promise;                                                          \n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/promise.js\n// module id = 133\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise,\n    apiRejection, Proxyable) {\nvar util = require(\"./util\");\nvar isArray = util.isArray;\n\nfunction toResolutionValue(val) {\n    switch(val) {\n    case -2: return [];\n    case -3: return {};\n    case -6: return new Map();\n    }\n}\n\nfunction PromiseArray(values) {\n    var promise = this._promise = new Promise(INTERNAL);\n    if (values instanceof Promise) {\n        promise._propagateFrom(values, 3);\n    }\n    promise._setOnCancel(this);\n    this._values = values;\n    this._length = 0;\n    this._totalResolved = 0;\n    this._init(undefined, -2);\n}\nutil.inherits(PromiseArray, Proxyable);\n\nPromiseArray.prototype.length = function () {\n    return this._length;\n};\n\nPromiseArray.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {\n    var values = tryConvertToPromise(this._values, this._promise);\n    if (values instanceof Promise) {\n        values = values._target();\n        var bitField = values._bitField;\n        ;\n        this._values = values;\n\n        if (((bitField & 50397184) === 0)) {\n            this._promise._setAsyncGuaranteed();\n            return values._then(\n                init,\n                this._reject,\n                undefined,\n                this,\n                resolveValueIfEmpty\n           );\n        } else if (((bitField & 33554432) !== 0)) {\n            values = values._value();\n        } else if (((bitField & 16777216) !== 0)) {\n            return this._reject(values._reason());\n        } else {\n            return this._cancel();\n        }\n    }\n    values = util.asArray(values);\n    if (values === null) {\n        var err = apiRejection(\n            \"expecting an array or an iterable object but got \" + util.classString(values)).reason();\n        this._promise._rejectCallback(err, false);\n        return;\n    }\n\n    if (values.length === 0) {\n        if (resolveValueIfEmpty === -5) {\n            this._resolveEmptyArray();\n        }\n        else {\n            this._resolve(toResolutionValue(resolveValueIfEmpty));\n        }\n        return;\n    }\n    this._iterate(values);\n};\n\nPromiseArray.prototype._iterate = function(values) {\n    var len = this.getActualLength(values.length);\n    this._length = len;\n    this._values = this.shouldCopyValues() ? new Array(len) : this._values;\n    var result = this._promise;\n    var isResolved = false;\n    var bitField = null;\n    for (var i = 0; i < len; ++i) {\n        var maybePromise = tryConvertToPromise(values[i], result);\n\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            bitField = maybePromise._bitField;\n        } else {\n            bitField = null;\n        }\n\n        if (isResolved) {\n            if (bitField !== null) {\n                maybePromise.suppressUnhandledRejections();\n            }\n        } else if (bitField !== null) {\n            if (((bitField & 50397184) === 0)) {\n                maybePromise._proxy(this, i);\n                this._values[i] = maybePromise;\n            } else if (((bitField & 33554432) !== 0)) {\n                isResolved = this._promiseFulfilled(maybePromise._value(), i);\n            } else if (((bitField & 16777216) !== 0)) {\n                isResolved = this._promiseRejected(maybePromise._reason(), i);\n            } else {\n                isResolved = this._promiseCancelled(i);\n            }\n        } else {\n            isResolved = this._promiseFulfilled(maybePromise, i);\n        }\n    }\n    if (!isResolved) result._setAsyncGuaranteed();\n};\n\nPromiseArray.prototype._isResolved = function () {\n    return this._values === null;\n};\n\nPromiseArray.prototype._resolve = function (value) {\n    this._values = null;\n    this._promise._fulfill(value);\n};\n\nPromiseArray.prototype._cancel = function() {\n    if (this._isResolved() || !this._promise._isCancellable()) return;\n    this._values = null;\n    this._promise._cancel();\n};\n\nPromiseArray.prototype._reject = function (reason) {\n    this._values = null;\n    this._promise._rejectCallback(reason, false);\n};\n\nPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nPromiseArray.prototype._promiseCancelled = function() {\n    this._cancel();\n    return true;\n};\n\nPromiseArray.prototype._promiseRejected = function (reason) {\n    this._totalResolved++;\n    this._reject(reason);\n    return true;\n};\n\nPromiseArray.prototype._resultCancelled = function() {\n    if (this._isResolved()) return;\n    var values = this._values;\n    this._cancel();\n    if (values instanceof Promise) {\n        values.cancel();\n    } else {\n        for (var i = 0; i < values.length; ++i) {\n            if (values[i] instanceof Promise) {\n                values[i].cancel();\n            }\n        }\n    }\n};\n\nPromiseArray.prototype.shouldCopyValues = function () {\n    return true;\n};\n\nPromiseArray.prototype.getActualLength = function (len) {\n    return len;\n};\n\nreturn PromiseArray;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/promise_array.js\n// module id = 134\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar THIS = {};\nvar util = require(\"./util\");\nvar nodebackForPromise = require(\"./nodeback\");\nvar withAppended = util.withAppended;\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar canEvaluate = util.canEvaluate;\nvar TypeError = require(\"./errors\").TypeError;\nvar defaultSuffix = \"Async\";\nvar defaultPromisified = {__isPromisified__: true};\nvar noCopyProps = [\n    \"arity\",    \"length\",\n    \"name\",\n    \"arguments\",\n    \"caller\",\n    \"callee\",\n    \"prototype\",\n    \"__isPromisified__\"\n];\nvar noCopyPropsPattern = new RegExp(\"^(?:\" + noCopyProps.join(\"|\") + \")$\");\n\nvar defaultFilter = function(name) {\n    return util.isIdentifier(name) &&\n        name.charAt(0) !== \"_\" &&\n        name !== \"constructor\";\n};\n\nfunction propsFilter(key) {\n    return !noCopyPropsPattern.test(key);\n}\n\nfunction isPromisified(fn) {\n    try {\n        return fn.__isPromisified__ === true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\nfunction hasPromisified(obj, key, suffix) {\n    var val = util.getDataPropertyOrDefault(obj, key + suffix,\n                                            defaultPromisified);\n    return val ? isPromisified(val) : false;\n}\nfunction checkValid(ret, suffix, suffixRegexp) {\n    for (var i = 0; i < ret.length; i += 2) {\n        var key = ret[i];\n        if (suffixRegexp.test(key)) {\n            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, \"\");\n            for (var j = 0; j < ret.length; j += 2) {\n                if (ret[j] === keyWithoutAsyncSuffix) {\n                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\"\n                        .replace(\"%s\", suffix));\n                }\n            }\n        }\n    }\n}\n\nfunction promisifiableMethods(obj, suffix, suffixRegexp, filter) {\n    var keys = util.inheritedDataKeys(obj);\n    var ret = [];\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var value = obj[key];\n        var passesDefaultFilter = filter === defaultFilter\n            ? true : defaultFilter(key, value, obj);\n        if (typeof value === \"function\" &&\n            !isPromisified(value) &&\n            !hasPromisified(obj, key, suffix) &&\n            filter(key, value, obj, passesDefaultFilter)) {\n            ret.push(key, value);\n        }\n    }\n    checkValid(ret, suffix, suffixRegexp);\n    return ret;\n}\n\nvar escapeIdentRegex = function(str) {\n    return str.replace(/([$])/, \"\\\\$\");\n};\n\nvar makeNodePromisifiedEval;\nif (!false) {\nvar switchCaseArgumentOrder = function(likelyArgumentCount) {\n    var ret = [likelyArgumentCount];\n    var min = Math.max(0, likelyArgumentCount - 1 - 3);\n    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n        ret.push(i);\n    }\n    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {\n        ret.push(i);\n    }\n    return ret;\n};\n\nvar argumentSequence = function(argumentCount) {\n    return util.filledRange(argumentCount, \"_arg\", \"\");\n};\n\nvar parameterDeclaration = function(parameterCount) {\n    return util.filledRange(\n        Math.max(parameterCount, 3), \"_arg\", \"\");\n};\n\nvar parameterCount = function(fn) {\n    if (typeof fn.length === \"number\") {\n        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n    }\n    return 0;\n};\n\nmakeNodePromisifiedEval =\nfunction(callback, receiver, originalName, fn, _, multiArgs) {\n    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n    var shouldProxyThis = typeof callback === \"string\" || receiver === THIS;\n\n    function generateCallForArgumentCount(count) {\n        var args = argumentSequence(count).join(\", \");\n        var comma = count > 0 ? \", \" : \"\";\n        var ret;\n        if (shouldProxyThis) {\n            ret = \"ret = callback.call(this, {{args}}, nodeback); break;\\n\";\n        } else {\n            ret = receiver === undefined\n                ? \"ret = callback({{args}}, nodeback); break;\\n\"\n                : \"ret = callback.call(receiver, {{args}}, nodeback); break;\\n\";\n        }\n        return ret.replace(\"{{args}}\", args).replace(\", \", comma);\n    }\n\n    function generateArgumentSwitchCase() {\n        var ret = \"\";\n        for (var i = 0; i < argumentOrder.length; ++i) {\n            ret += \"case \" + argumentOrder[i] +\":\" +\n                generateCallForArgumentCount(argumentOrder[i]);\n        }\n\n        ret += \"                                                             \\n\\\n        default:                                                             \\n\\\n            var args = new Array(len + 1);                                   \\n\\\n            var i = 0;                                                       \\n\\\n            for (var i = 0; i < len; ++i) {                                  \\n\\\n               args[i] = arguments[i];                                       \\n\\\n            }                                                                \\n\\\n            args[i] = nodeback;                                              \\n\\\n            [CodeForCall]                                                    \\n\\\n            break;                                                           \\n\\\n        \".replace(\"[CodeForCall]\", (shouldProxyThis\n                                ? \"ret = callback.apply(this, args);\\n\"\n                                : \"ret = callback.apply(receiver, args);\\n\"));\n        return ret;\n    }\n\n    var getFunctionCode = typeof callback === \"string\"\n                                ? (\"this != null ? this['\"+callback+\"'] : fn\")\n                                : \"fn\";\n    var body = \"'use strict';                                                \\n\\\n        var ret = function (Parameters) {                                    \\n\\\n            'use strict';                                                    \\n\\\n            var len = arguments.length;                                      \\n\\\n            var promise = new Promise(INTERNAL);                             \\n\\\n            promise._captureStackTrace();                                    \\n\\\n            var nodeback = nodebackForPromise(promise, \" + multiArgs + \");   \\n\\\n            var ret;                                                         \\n\\\n            var callback = tryCatch([GetFunctionCode]);                      \\n\\\n            switch(len) {                                                    \\n\\\n                [CodeForSwitchCase]                                          \\n\\\n            }                                                                \\n\\\n            if (ret === errorObj) {                                          \\n\\\n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\\n\\\n            }                                                                \\n\\\n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \\n\\\n            return promise;                                                  \\n\\\n        };                                                                   \\n\\\n        notEnumerableProp(ret, '__isPromisified__', true);                   \\n\\\n        return ret;                                                          \\n\\\n    \".replace(\"[CodeForSwitchCase]\", generateArgumentSwitchCase())\n        .replace(\"[GetFunctionCode]\", getFunctionCode);\n    body = body.replace(\"Parameters\", parameterDeclaration(newParameterCount));\n    return new Function(\"Promise\",\n                        \"fn\",\n                        \"receiver\",\n                        \"withAppended\",\n                        \"maybeWrapAsError\",\n                        \"nodebackForPromise\",\n                        \"tryCatch\",\n                        \"errorObj\",\n                        \"notEnumerableProp\",\n                        \"INTERNAL\",\n                        body)(\n                    Promise,\n                    fn,\n                    receiver,\n                    withAppended,\n                    maybeWrapAsError,\n                    nodebackForPromise,\n                    util.tryCatch,\n                    util.errorObj,\n                    util.notEnumerableProp,\n                    INTERNAL);\n};\n}\n\nfunction makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {\n    var defaultThis = (function() {return this;})();\n    var method = callback;\n    if (typeof method === \"string\") {\n        callback = fn;\n    }\n    function promisified() {\n        var _receiver = receiver;\n        if (receiver === THIS) _receiver = this;\n        var promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n        var cb = typeof method === \"string\" && this !== defaultThis\n            ? this[method] : callback;\n        var fn = nodebackForPromise(promise, multiArgs);\n        try {\n            cb.apply(_receiver, withAppended(arguments, fn));\n        } catch(e) {\n            promise._rejectCallback(maybeWrapAsError(e), true, true);\n        }\n        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();\n        return promise;\n    }\n    util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n    return promisified;\n}\n\nvar makeNodePromisified = canEvaluate\n    ? makeNodePromisifiedEval\n    : makeNodePromisifiedClosure;\n\nfunction promisifyAll(obj, suffix, filter, promisifier, multiArgs) {\n    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + \"$\");\n    var methods =\n        promisifiableMethods(obj, suffix, suffixRegexp, filter);\n\n    for (var i = 0, len = methods.length; i < len; i+= 2) {\n        var key = methods[i];\n        var fn = methods[i+1];\n        var promisifiedKey = key + suffix;\n        if (promisifier === makeNodePromisified) {\n            obj[promisifiedKey] =\n                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);\n        } else {\n            var promisified = promisifier(fn, function() {\n                return makeNodePromisified(key, THIS, key,\n                                           fn, suffix, multiArgs);\n            });\n            util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n            obj[promisifiedKey] = promisified;\n        }\n    }\n    util.toFastProperties(obj);\n    return obj;\n}\n\nfunction promisify(callback, receiver, multiArgs) {\n    return makeNodePromisified(callback, receiver, undefined,\n                                callback, null, multiArgs);\n}\n\nPromise.promisify = function (fn, options) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    if (isPromisified(fn)) {\n        return fn;\n    }\n    options = Object(options);\n    var receiver = options.context === undefined ? THIS : options.context;\n    var multiArgs = !!options.multiArgs;\n    var ret = promisify(fn, receiver, multiArgs);\n    util.copyDescriptors(fn, ret, propsFilter);\n    return ret;\n};\n\nPromise.promisifyAll = function (target, options) {\n    if (typeof target !== \"function\" && typeof target !== \"object\") {\n        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    options = Object(options);\n    var multiArgs = !!options.multiArgs;\n    var suffix = options.suffix;\n    if (typeof suffix !== \"string\") suffix = defaultSuffix;\n    var filter = options.filter;\n    if (typeof filter !== \"function\") filter = defaultFilter;\n    var promisifier = options.promisifier;\n    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;\n\n    if (!util.isIdentifier(suffix)) {\n        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n\n    var keys = util.inheritedDataKeys(target);\n    for (var i = 0; i < keys.length; ++i) {\n        var value = target[keys[i]];\n        if (keys[i] !== \"constructor\" &&\n            util.isClass(value)) {\n            promisifyAll(value.prototype, suffix, filter, promisifier,\n                multiArgs);\n            promisifyAll(value, suffix, filter, promisifier, multiArgs);\n        }\n    }\n\n    return promisifyAll(target, suffix, filter, promisifier, multiArgs);\n};\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/promisify.js\n// module id = 135\n// module chunks = 0","\"use strict\";\nmodule.exports = function(\n    Promise, PromiseArray, tryConvertToPromise, apiRejection) {\nvar util = require(\"./util\");\nvar isObject = util.isObject;\nvar es5 = require(\"./es5\");\nvar Es6Map;\nif (typeof Map === \"function\") Es6Map = Map;\n\nvar mapToEntries = (function() {\n    var index = 0;\n    var size = 0;\n\n    function extractEntry(value, key) {\n        this[index] = value;\n        this[index + size] = key;\n        index++;\n    }\n\n    return function mapToEntries(map) {\n        size = map.size;\n        index = 0;\n        var ret = new Array(map.size * 2);\n        map.forEach(extractEntry, ret);\n        return ret;\n    };\n})();\n\nvar entriesToMap = function(entries) {\n    var ret = new Es6Map();\n    var length = entries.length / 2 | 0;\n    for (var i = 0; i < length; ++i) {\n        var key = entries[length + i];\n        var value = entries[i];\n        ret.set(key, value);\n    }\n    return ret;\n};\n\nfunction PropertiesPromiseArray(obj) {\n    var isMap = false;\n    var entries;\n    if (Es6Map !== undefined && obj instanceof Es6Map) {\n        entries = mapToEntries(obj);\n        isMap = true;\n    } else {\n        var keys = es5.keys(obj);\n        var len = keys.length;\n        entries = new Array(len * 2);\n        for (var i = 0; i < len; ++i) {\n            var key = keys[i];\n            entries[i] = obj[key];\n            entries[i + len] = key;\n        }\n    }\n    this.constructor$(entries);\n    this._isMap = isMap;\n    this._init$(undefined, isMap ? -6 : -3);\n}\nutil.inherits(PropertiesPromiseArray, PromiseArray);\n\nPropertiesPromiseArray.prototype._init = function () {};\n\nPropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        var val;\n        if (this._isMap) {\n            val = entriesToMap(this._values);\n        } else {\n            val = {};\n            var keyOffset = this.length();\n            for (var i = 0, len = this.length(); i < len; ++i) {\n                val[this._values[i + keyOffset]] = this._values[i];\n            }\n        }\n        this._resolve(val);\n        return true;\n    }\n    return false;\n};\n\nPropertiesPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nPropertiesPromiseArray.prototype.getActualLength = function (len) {\n    return len >> 1;\n};\n\nfunction props(promises) {\n    var ret;\n    var castValue = tryConvertToPromise(promises);\n\n    if (!isObject(castValue)) {\n        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    } else if (castValue instanceof Promise) {\n        ret = castValue._then(\n            Promise.props, undefined, undefined, undefined, undefined);\n    } else {\n        ret = new PropertiesPromiseArray(castValue).promise();\n    }\n\n    if (castValue instanceof Promise) {\n        ret._propagateFrom(castValue, 2);\n    }\n    return ret;\n}\n\nPromise.prototype.props = function () {\n    return props(this);\n};\n\nPromise.props = function (promises) {\n    return props(promises);\n};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/props.js\n// module id = 136\n// module chunks = 0","\"use strict\";\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction Queue(capacity) {\n    this._capacity = capacity;\n    this._length = 0;\n    this._front = 0;\n}\n\nQueue.prototype._willBeOverCapacity = function (size) {\n    return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function (arg) {\n    var length = this.length();\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = arg;\n    this._length = length + 1;\n};\n\nQueue.prototype.push = function (fn, receiver, arg) {\n    var length = this.length() + 3;\n    if (this._willBeOverCapacity(length)) {\n        this._pushOne(fn);\n        this._pushOne(receiver);\n        this._pushOne(arg);\n        return;\n    }\n    var j = this._front + length - 3;\n    this._checkCapacity(length);\n    var wrapMask = this._capacity - 1;\n    this[(j + 0) & wrapMask] = fn;\n    this[(j + 1) & wrapMask] = receiver;\n    this[(j + 2) & wrapMask] = arg;\n    this._length = length;\n};\n\nQueue.prototype.shift = function () {\n    var front = this._front,\n        ret = this[front];\n\n    this[front] = undefined;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length--;\n    return ret;\n};\n\nQueue.prototype.length = function () {\n    return this._length;\n};\n\nQueue.prototype._checkCapacity = function (size) {\n    if (this._capacity < size) {\n        this._resizeTo(this._capacity << 1);\n    }\n};\n\nQueue.prototype._resizeTo = function (capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    var moveItemsCount = (front + length) & (oldCapacity - 1);\n    arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n};\n\nmodule.exports = Queue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/queue.js\n// module id = 137\n// module chunks = 0","\"use strict\";\nmodule.exports = function(\n    Promise, INTERNAL, tryConvertToPromise, apiRejection) {\nvar util = require(\"./util\");\n\nvar raceLater = function (promise) {\n    return promise.then(function(array) {\n        return race(array, promise);\n    });\n};\n\nfunction race(promises, parent) {\n    var maybePromise = tryConvertToPromise(promises);\n\n    if (maybePromise instanceof Promise) {\n        return raceLater(maybePromise);\n    } else {\n        promises = util.asArray(promises);\n        if (promises === null)\n            return apiRejection(\"expecting an array or an iterable object but got \" + util.classString(promises));\n    }\n\n    var ret = new Promise(INTERNAL);\n    if (parent !== undefined) {\n        ret._propagateFrom(parent, 3);\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n        var val = promises[i];\n\n        if (val === undefined && !(i in promises)) {\n            continue;\n        }\n\n        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n    }\n    return ret;\n}\n\nPromise.race = function (promises) {\n    return race(promises, undefined);\n};\n\nPromise.prototype.race = function () {\n    return race(this, undefined);\n};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/race.js\n// module id = 138\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = require(\"./util\");\nvar tryCatch = util.tryCatch;\n\nfunction ReductionPromiseArray(promises, fn, initialValue, _each) {\n    this.constructor$(promises);\n    var domain = getDomain();\n    this._fn = domain === null ? fn : util.domainBind(domain, fn);\n    if (initialValue !== undefined) {\n        initialValue = Promise.resolve(initialValue);\n        initialValue._attachCancellationCallback(this);\n    }\n    this._initialValue = initialValue;\n    this._currentCancellable = null;\n    if(_each === INTERNAL) {\n        this._eachValues = Array(this._length);\n    } else if (_each === 0) {\n        this._eachValues = null;\n    } else {\n        this._eachValues = undefined;\n    }\n    this._promise._captureStackTrace();\n    this._init$(undefined, -5);\n}\nutil.inherits(ReductionPromiseArray, PromiseArray);\n\nReductionPromiseArray.prototype._gotAccum = function(accum) {\n    if (this._eachValues !== undefined && \n        this._eachValues !== null && \n        accum !== INTERNAL) {\n        this._eachValues.push(accum);\n    }\n};\n\nReductionPromiseArray.prototype._eachComplete = function(value) {\n    if (this._eachValues !== null) {\n        this._eachValues.push(value);\n    }\n    return this._eachValues;\n};\n\nReductionPromiseArray.prototype._init = function() {};\n\nReductionPromiseArray.prototype._resolveEmptyArray = function() {\n    this._resolve(this._eachValues !== undefined ? this._eachValues\n                                                 : this._initialValue);\n};\n\nReductionPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nReductionPromiseArray.prototype._resolve = function(value) {\n    this._promise._resolveCallback(value);\n    this._values = null;\n};\n\nReductionPromiseArray.prototype._resultCancelled = function(sender) {\n    if (sender === this._initialValue) return this._cancel();\n    if (this._isResolved()) return;\n    this._resultCancelled$();\n    if (this._currentCancellable instanceof Promise) {\n        this._currentCancellable.cancel();\n    }\n    if (this._initialValue instanceof Promise) {\n        this._initialValue.cancel();\n    }\n};\n\nReductionPromiseArray.prototype._iterate = function (values) {\n    this._values = values;\n    var value;\n    var i;\n    var length = values.length;\n    if (this._initialValue !== undefined) {\n        value = this._initialValue;\n        i = 0;\n    } else {\n        value = Promise.resolve(values[0]);\n        i = 1;\n    }\n\n    this._currentCancellable = value;\n\n    if (!value.isRejected()) {\n        for (; i < length; ++i) {\n            var ctx = {\n                accum: null,\n                value: values[i],\n                index: i,\n                length: length,\n                array: this\n            };\n            value = value._then(gotAccum, undefined, undefined, ctx, undefined);\n        }\n    }\n\n    if (this._eachValues !== undefined) {\n        value = value\n            ._then(this._eachComplete, undefined, undefined, this, undefined);\n    }\n    value._then(completed, completed, undefined, value, this);\n};\n\nPromise.prototype.reduce = function (fn, initialValue) {\n    return reduce(this, fn, initialValue, null);\n};\n\nPromise.reduce = function (promises, fn, initialValue, _each) {\n    return reduce(promises, fn, initialValue, _each);\n};\n\nfunction completed(valueOrReason, array) {\n    if (this.isFulfilled()) {\n        array._resolve(valueOrReason);\n    } else {\n        array._reject(valueOrReason);\n    }\n}\n\nfunction reduce(promises, fn, initialValue, _each) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);\n    return array.promise();\n}\n\nfunction gotAccum(accum) {\n    this.accum = accum;\n    this.array._gotAccum(accum);\n    var value = tryConvertToPromise(this.value, this.array._promise);\n    if (value instanceof Promise) {\n        this.array._currentCancellable = value;\n        return value._then(gotValue, undefined, undefined, this, undefined);\n    } else {\n        return gotValue.call(this, value);\n    }\n}\n\nfunction gotValue(value) {\n    var array = this.array;\n    var promise = array._promise;\n    var fn = tryCatch(array._fn);\n    promise._pushContext();\n    var ret;\n    if (array._eachValues !== undefined) {\n        ret = fn.call(promise._boundValue(), value, this.index, this.length);\n    } else {\n        ret = fn.call(promise._boundValue(),\n                              this.accum, value, this.index, this.length);\n    }\n    if (ret instanceof Promise) {\n        array._currentCancellable = ret;\n    }\n    var promiseCreated = promise._popContext();\n    debug.checkForgottenReturns(\n        ret,\n        promiseCreated,\n        array._eachValues !== undefined ? \"Promise.each\" : \"Promise.reduce\",\n        promise\n    );\n    return ret;\n}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/reduce.js\n// module id = 139\n// module chunks = 0","\"use strict\";\nvar util = require(\"./util\");\nvar schedule;\nvar noAsyncScheduler = function() {\n    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar NativePromise = util.getNativePromise();\nif (util.isNode && typeof MutationObserver === \"undefined\") {\n    var GlobalSetImmediate = global.setImmediate;\n    var ProcessNextTick = process.nextTick;\n    schedule = util.isRecentNode\n                ? function(fn) { GlobalSetImmediate.call(global, fn); }\n                : function(fn) { ProcessNextTick.call(process, fn); };\n} else if (typeof NativePromise === \"function\" &&\n           typeof NativePromise.resolve === \"function\") {\n    var nativePromise = NativePromise.resolve();\n    schedule = function(fn) {\n        nativePromise.then(fn);\n    };\n} else if ((typeof MutationObserver !== \"undefined\") &&\n          !(typeof window !== \"undefined\" &&\n            window.navigator &&\n            (window.navigator.standalone || window.cordova))) {\n    schedule = (function() {\n        var div = document.createElement(\"div\");\n        var opts = {attributes: true};\n        var toggleScheduled = false;\n        var div2 = document.createElement(\"div\");\n        var o2 = new MutationObserver(function() {\n            div.classList.toggle(\"foo\");\n            toggleScheduled = false;\n        });\n        o2.observe(div2, opts);\n\n        var scheduleToggle = function() {\n            if (toggleScheduled) return;\n            toggleScheduled = true;\n            div2.classList.toggle(\"foo\");\n        };\n\n        return function schedule(fn) {\n            var o = new MutationObserver(function() {\n                o.disconnect();\n                fn();\n            });\n            o.observe(div, opts);\n            scheduleToggle();\n        };\n    })();\n} else if (typeof setImmediate !== \"undefined\") {\n    schedule = function (fn) {\n        setImmediate(fn);\n    };\n} else if (typeof setTimeout !== \"undefined\") {\n    schedule = function (fn) {\n        setTimeout(fn, 0);\n    };\n} else {\n    schedule = noAsyncScheduler;\n}\nmodule.exports = schedule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/schedule.js\n// module id = 140\n// module chunks = 0","\"use strict\";\nmodule.exports =\n    function(Promise, PromiseArray, debug) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = require(\"./util\");\n\nfunction SettledPromiseArray(values) {\n    this.constructor$(values);\n}\nutil.inherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 33554432;\n    ret._settledValueField = value;\n    return this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 16777216;\n    ret._settledValueField = reason;\n    return this._promiseResolved(index, ret);\n};\n\nPromise.settle = function (promises) {\n    debug.deprecated(\".settle()\", \".reflect()\");\n    return new SettledPromiseArray(promises).promise();\n};\n\nPromise.prototype.settle = function () {\n    return Promise.settle(this);\n};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/settle.js\n// module id = 141\n// module chunks = 0","\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, apiRejection) {\nvar util = require(\"./util\");\nvar RangeError = require(\"./errors\").RangeError;\nvar AggregateError = require(\"./errors\").AggregateError;\nvar isArray = util.isArray;\nvar CANCELLATION = {};\n\n\nfunction SomePromiseArray(values) {\n    this.constructor$(values);\n    this._howMany = 0;\n    this._unwrap = false;\n    this._initialized = false;\n}\nutil.inherits(SomePromiseArray, PromiseArray);\n\nSomePromiseArray.prototype._init = function () {\n    if (!this._initialized) {\n        return;\n    }\n    if (this._howMany === 0) {\n        this._resolve([]);\n        return;\n    }\n    this._init$(undefined, -5);\n    var isArrayResolved = isArray(this._values);\n    if (!this._isResolved() &&\n        isArrayResolved &&\n        this._howMany > this._canPossiblyFulfill()) {\n        this._reject(this._getRangeError(this.length()));\n    }\n};\n\nSomePromiseArray.prototype.init = function () {\n    this._initialized = true;\n    this._init();\n};\n\nSomePromiseArray.prototype.setUnwrap = function () {\n    this._unwrap = true;\n};\n\nSomePromiseArray.prototype.howMany = function () {\n    return this._howMany;\n};\n\nSomePromiseArray.prototype.setHowMany = function (count) {\n    this._howMany = count;\n};\n\nSomePromiseArray.prototype._promiseFulfilled = function (value) {\n    this._addFulfilled(value);\n    if (this._fulfilled() === this.howMany()) {\n        this._values.length = this.howMany();\n        if (this.howMany() === 1 && this._unwrap) {\n            this._resolve(this._values[0]);\n        } else {\n            this._resolve(this._values);\n        }\n        return true;\n    }\n    return false;\n\n};\nSomePromiseArray.prototype._promiseRejected = function (reason) {\n    this._addRejected(reason);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._promiseCancelled = function () {\n    if (this._values instanceof Promise || this._values == null) {\n        return this._cancel();\n    }\n    this._addRejected(CANCELLATION);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._checkOutcome = function() {\n    if (this.howMany() > this._canPossiblyFulfill()) {\n        var e = new AggregateError();\n        for (var i = this.length(); i < this._values.length; ++i) {\n            if (this._values[i] !== CANCELLATION) {\n                e.push(this._values[i]);\n            }\n        }\n        if (e.length > 0) {\n            this._reject(e);\n        } else {\n            this._cancel();\n        }\n        return true;\n    }\n    return false;\n};\n\nSomePromiseArray.prototype._fulfilled = function () {\n    return this._totalResolved;\n};\n\nSomePromiseArray.prototype._rejected = function () {\n    return this._values.length - this.length();\n};\n\nSomePromiseArray.prototype._addRejected = function (reason) {\n    this._values.push(reason);\n};\n\nSomePromiseArray.prototype._addFulfilled = function (value) {\n    this._values[this._totalResolved++] = value;\n};\n\nSomePromiseArray.prototype._canPossiblyFulfill = function () {\n    return this.length() - this._rejected();\n};\n\nSomePromiseArray.prototype._getRangeError = function (count) {\n    var message = \"Input array must contain at least \" +\n            this._howMany + \" items but contains only \" + count + \" items\";\n    return new RangeError(message);\n};\n\nSomePromiseArray.prototype._resolveEmptyArray = function () {\n    this._reject(this._getRangeError(0));\n};\n\nfunction some(promises, howMany) {\n    if ((howMany | 0) !== howMany || howMany < 0) {\n        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(howMany);\n    ret.init();\n    return promise;\n}\n\nPromise.some = function (promises, howMany) {\n    return some(promises, howMany);\n};\n\nPromise.prototype.some = function (howMany) {\n    return some(this, howMany);\n};\n\nPromise._SomePromiseArray = SomePromiseArray;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/some.js\n// module id = 142\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise) {\nfunction PromiseInspection(promise) {\n    if (promise !== undefined) {\n        promise = promise._target();\n        this._bitField = promise._bitField;\n        this._settledValueField = promise._isFateSealed()\n            ? promise._settledValue() : undefined;\n    }\n    else {\n        this._bitField = 0;\n        this._settledValueField = undefined;\n    }\n}\n\nPromiseInspection.prototype._settledValue = function() {\n    return this._settledValueField;\n};\n\nvar value = PromiseInspection.prototype.value = function () {\n    if (!this.isFulfilled()) {\n        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar reason = PromiseInspection.prototype.error =\nPromiseInspection.prototype.reason = function () {\n    if (!this.isRejected()) {\n        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar isFulfilled = PromiseInspection.prototype.isFulfilled = function() {\n    return (this._bitField & 33554432) !== 0;\n};\n\nvar isRejected = PromiseInspection.prototype.isRejected = function () {\n    return (this._bitField & 16777216) !== 0;\n};\n\nvar isPending = PromiseInspection.prototype.isPending = function () {\n    return (this._bitField & 50397184) === 0;\n};\n\nvar isResolved = PromiseInspection.prototype.isResolved = function () {\n    return (this._bitField & 50331648) !== 0;\n};\n\nPromiseInspection.prototype.isCancelled = function() {\n    return (this._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.__isCancelled = function() {\n    return (this._bitField & 65536) === 65536;\n};\n\nPromise.prototype._isCancelled = function() {\n    return this._target().__isCancelled();\n};\n\nPromise.prototype.isCancelled = function() {\n    return (this._target()._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.isPending = function() {\n    return isPending.call(this._target());\n};\n\nPromise.prototype.isRejected = function() {\n    return isRejected.call(this._target());\n};\n\nPromise.prototype.isFulfilled = function() {\n    return isFulfilled.call(this._target());\n};\n\nPromise.prototype.isResolved = function() {\n    return isResolved.call(this._target());\n};\n\nPromise.prototype.value = function() {\n    return value.call(this._target());\n};\n\nPromise.prototype.reason = function() {\n    var target = this._target();\n    target._unsetRejectionIsUnhandled();\n    return reason.call(target);\n};\n\nPromise.prototype._value = function() {\n    return this._settledValue();\n};\n\nPromise.prototype._reason = function() {\n    this._unsetRejectionIsUnhandled();\n    return this._settledValue();\n};\n\nPromise.PromiseInspection = PromiseInspection;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/synchronous_inspection.js\n// module id = 143\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = require(\"./util\");\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction tryConvertToPromise(obj, context) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) return obj;\n        var then = getThen(obj);\n        if (then === errorObj) {\n            if (context) context._pushContext();\n            var ret = Promise.reject(then.e);\n            if (context) context._popContext();\n            return ret;\n        } else if (typeof then === \"function\") {\n            if (isAnyBluebirdPromise(obj)) {\n                var ret = new Promise(INTERNAL);\n                obj._then(\n                    ret._fulfill,\n                    ret._reject,\n                    undefined,\n                    ret,\n                    null\n                );\n                return ret;\n            }\n            return doThenable(obj, then, context);\n        }\n    }\n    return obj;\n}\n\nfunction doGetThen(obj) {\n    return obj.then;\n}\n\nfunction getThen(obj) {\n    try {\n        return doGetThen(obj);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    try {\n        return hasProp.call(obj, \"_promise0\");\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction doThenable(x, then, context) {\n    var promise = new Promise(INTERNAL);\n    var ret = promise;\n    if (context) context._pushContext();\n    promise._captureStackTrace();\n    if (context) context._popContext();\n    var synchronous = true;\n    var result = util.tryCatch(then).call(x, resolve, reject);\n    synchronous = false;\n\n    if (promise && result === errorObj) {\n        promise._rejectCallback(result.e, true, true);\n        promise = null;\n    }\n\n    function resolve(value) {\n        if (!promise) return;\n        promise._resolveCallback(value);\n        promise = null;\n    }\n\n    function reject(reason) {\n        if (!promise) return;\n        promise._rejectCallback(reason, synchronous, true);\n        promise = null;\n    }\n    return ret;\n}\n\nreturn tryConvertToPromise;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/thenables.js\n// module id = 144\n// module chunks = 0","\"use strict\";\nmodule.exports = function(Promise, INTERNAL, debug) {\nvar util = require(\"./util\");\nvar TimeoutError = Promise.TimeoutError;\n\nfunction HandleWrapper(handle)  {\n    this.handle = handle;\n}\n\nHandleWrapper.prototype._resultCancelled = function() {\n    clearTimeout(this.handle);\n};\n\nvar afterValue = function(value) { return delay(+this).thenReturn(value); };\nvar delay = Promise.delay = function (ms, value) {\n    var ret;\n    var handle;\n    if (value !== undefined) {\n        ret = Promise.resolve(value)\n                ._then(afterValue, null, null, ms, undefined);\n        if (debug.cancellation() && value instanceof Promise) {\n            ret._setOnCancel(value);\n        }\n    } else {\n        ret = new Promise(INTERNAL);\n        handle = setTimeout(function() { ret._fulfill(); }, +ms);\n        if (debug.cancellation()) {\n            ret._setOnCancel(new HandleWrapper(handle));\n        }\n        ret._captureStackTrace();\n    }\n    ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.prototype.delay = function (ms) {\n    return delay(ms, this);\n};\n\nvar afterTimeout = function (promise, message, parent) {\n    var err;\n    if (typeof message !== \"string\") {\n        if (message instanceof Error) {\n            err = message;\n        } else {\n            err = new TimeoutError(\"operation timed out\");\n        }\n    } else {\n        err = new TimeoutError(message);\n    }\n    util.markAsOriginatingFromRejection(err);\n    promise._attachExtraTrace(err);\n    promise._reject(err);\n\n    if (parent != null) {\n        parent.cancel();\n    }\n};\n\nfunction successClear(value) {\n    clearTimeout(this.handle);\n    return value;\n}\n\nfunction failureClear(reason) {\n    clearTimeout(this.handle);\n    throw reason;\n}\n\nPromise.prototype.timeout = function (ms, message) {\n    ms = +ms;\n    var ret, parent;\n\n    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {\n        if (ret.isPending()) {\n            afterTimeout(ret, message, parent);\n        }\n    }, ms));\n\n    if (debug.cancellation()) {\n        parent = this.then();\n        ret = parent._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n        ret._setOnCancel(handleWrapper);\n    } else {\n        ret = this._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n    }\n\n    return ret;\n};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/timers.js\n// module id = 145\n// module chunks = 0","\"use strict\";\nmodule.exports = function (Promise, apiRejection, tryConvertToPromise,\n    createContext, INTERNAL, debug) {\n    var util = require(\"./util\");\n    var TypeError = require(\"./errors\").TypeError;\n    var inherits = require(\"./util\").inherits;\n    var errorObj = util.errorObj;\n    var tryCatch = util.tryCatch;\n    var NULL = {};\n\n    function thrower(e) {\n        setTimeout(function(){throw e;}, 0);\n    }\n\n    function castPreservingDisposable(thenable) {\n        var maybePromise = tryConvertToPromise(thenable);\n        if (maybePromise !== thenable &&\n            typeof thenable._isDisposable === \"function\" &&\n            typeof thenable._getDisposer === \"function\" &&\n            thenable._isDisposable()) {\n            maybePromise._setDisposable(thenable._getDisposer());\n        }\n        return maybePromise;\n    }\n    function dispose(resources, inspection) {\n        var i = 0;\n        var len = resources.length;\n        var ret = new Promise(INTERNAL);\n        function iterator() {\n            if (i >= len) return ret._fulfill();\n            var maybePromise = castPreservingDisposable(resources[i++]);\n            if (maybePromise instanceof Promise &&\n                maybePromise._isDisposable()) {\n                try {\n                    maybePromise = tryConvertToPromise(\n                        maybePromise._getDisposer().tryDispose(inspection),\n                        resources.promise);\n                } catch (e) {\n                    return thrower(e);\n                }\n                if (maybePromise instanceof Promise) {\n                    return maybePromise._then(iterator, thrower,\n                                              null, null, null);\n                }\n            }\n            iterator();\n        }\n        iterator();\n        return ret;\n    }\n\n    function Disposer(data, promise, context) {\n        this._data = data;\n        this._promise = promise;\n        this._context = context;\n    }\n\n    Disposer.prototype.data = function () {\n        return this._data;\n    };\n\n    Disposer.prototype.promise = function () {\n        return this._promise;\n    };\n\n    Disposer.prototype.resource = function () {\n        if (this.promise().isFulfilled()) {\n            return this.promise().value();\n        }\n        return NULL;\n    };\n\n    Disposer.prototype.tryDispose = function(inspection) {\n        var resource = this.resource();\n        var context = this._context;\n        if (context !== undefined) context._pushContext();\n        var ret = resource !== NULL\n            ? this.doDispose(resource, inspection) : null;\n        if (context !== undefined) context._popContext();\n        this._promise._unsetDisposable();\n        this._data = null;\n        return ret;\n    };\n\n    Disposer.isDisposer = function (d) {\n        return (d != null &&\n                typeof d.resource === \"function\" &&\n                typeof d.tryDispose === \"function\");\n    };\n\n    function FunctionDisposer(fn, promise, context) {\n        this.constructor$(fn, promise, context);\n    }\n    inherits(FunctionDisposer, Disposer);\n\n    FunctionDisposer.prototype.doDispose = function (resource, inspection) {\n        var fn = this.data();\n        return fn.call(resource, resource, inspection);\n    };\n\n    function maybeUnwrapDisposer(value) {\n        if (Disposer.isDisposer(value)) {\n            this.resources[this.index]._setDisposable(value);\n            return value.promise();\n        }\n        return value;\n    }\n\n    function ResourceList(length) {\n        this.length = length;\n        this.promise = null;\n        this[length-1] = null;\n    }\n\n    ResourceList.prototype._resultCancelled = function() {\n        var len = this.length;\n        for (var i = 0; i < len; ++i) {\n            var item = this[i];\n            if (item instanceof Promise) {\n                item.cancel();\n            }\n        }\n    };\n\n    Promise.using = function () {\n        var len = arguments.length;\n        if (len < 2) return apiRejection(\n                        \"you must pass at least 2 arguments to Promise.using\");\n        var fn = arguments[len - 1];\n        if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n        }\n        var input;\n        var spreadArgs = true;\n        if (len === 2 && Array.isArray(arguments[0])) {\n            input = arguments[0];\n            len = input.length;\n            spreadArgs = false;\n        } else {\n            input = arguments;\n            len--;\n        }\n        var resources = new ResourceList(len);\n        for (var i = 0; i < len; ++i) {\n            var resource = input[i];\n            if (Disposer.isDisposer(resource)) {\n                var disposer = resource;\n                resource = resource.promise();\n                resource._setDisposable(disposer);\n            } else {\n                var maybePromise = tryConvertToPromise(resource);\n                if (maybePromise instanceof Promise) {\n                    resource =\n                        maybePromise._then(maybeUnwrapDisposer, null, null, {\n                            resources: resources,\n                            index: i\n                    }, undefined);\n                }\n            }\n            resources[i] = resource;\n        }\n\n        var reflectedResources = new Array(resources.length);\n        for (var i = 0; i < reflectedResources.length; ++i) {\n            reflectedResources[i] = Promise.resolve(resources[i]).reflect();\n        }\n\n        var resultPromise = Promise.all(reflectedResources)\n            .then(function(inspections) {\n                for (var i = 0; i < inspections.length; ++i) {\n                    var inspection = inspections[i];\n                    if (inspection.isRejected()) {\n                        errorObj.e = inspection.error();\n                        return errorObj;\n                    } else if (!inspection.isFulfilled()) {\n                        resultPromise.cancel();\n                        return;\n                    }\n                    inspections[i] = inspection.value();\n                }\n                promise._pushContext();\n\n                fn = tryCatch(fn);\n                var ret = spreadArgs\n                    ? fn.apply(undefined, inspections) : fn(inspections);\n                var promiseCreated = promise._popContext();\n                debug.checkForgottenReturns(\n                    ret, promiseCreated, \"Promise.using\", promise);\n                return ret;\n            });\n\n        var promise = resultPromise.lastly(function() {\n            var inspection = new Promise.PromiseInspection(resultPromise);\n            return dispose(resources, inspection);\n        });\n        resources.promise = promise;\n        promise._setOnCancel(resources);\n        return promise;\n    };\n\n    Promise.prototype._setDisposable = function (disposer) {\n        this._bitField = this._bitField | 131072;\n        this._disposer = disposer;\n    };\n\n    Promise.prototype._isDisposable = function () {\n        return (this._bitField & 131072) > 0;\n    };\n\n    Promise.prototype._getDisposer = function () {\n        return this._disposer;\n    };\n\n    Promise.prototype._unsetDisposable = function () {\n        this._bitField = this._bitField & (~131072);\n        this._disposer = undefined;\n    };\n\n    Promise.prototype.disposer = function (fn) {\n        if (typeof fn === \"function\") {\n            return new FunctionDisposer(fn, this, createContext());\n        }\n        throw new TypeError();\n    };\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bluebird/js/release/using.js\n// module id = 146\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-emitter/index.js\n// module id = 147\n// module chunks = 0","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/src/browser.js\n// module id = 148\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/src/debug.js\n// module id = 149\n// module chunks = 0","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eventemitter3/index.js\n// module id = 150\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_DataView.js\n// module id = 151\n// module chunks = 0","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Hash.js\n// module id = 152\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Promise.js\n// module id = 153\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Set.js\n// module id = 154\n// module chunks = 0","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_SetCache.js\n// module id = 155\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_WeakMap.js\n// module id = 156\n// module chunks = 0","/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\nmodule.exports = addMapEntry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_addMapEntry.js\n// module id = 157\n// module chunks = 0","/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\nmodule.exports = addSetEntry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_addSetEntry.js\n// module id = 158\n// module chunks = 0","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arraySome.js\n// module id = 159\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseAssignIn.js\n// module id = 160\n// module chunks = 0","var get = require('./get');\n\n/**\n * The base implementation of `_.at` without support for individual paths.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {string[]} paths The property paths to pick.\n * @returns {Array} Returns the picked elements.\n */\nfunction baseAt(object, paths) {\n  var index = -1,\n      length = paths.length,\n      result = Array(length),\n      skip = object == null;\n\n  while (++index < length) {\n    result[index] = skip ? undefined : get(object, paths[index]);\n  }\n  return result;\n}\n\nmodule.exports = baseAt;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseAt.js\n// module id = 161\n// module chunks = 0","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isObject = require('./isObject'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseClone.js\n// module id = 162\n// module chunks = 0","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseFlatten.js\n// module id = 163\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseHas.js\n// module id = 164\n// module chunks = 0","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseHasIn.js\n// module id = 165\n// module chunks = 0","var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseInverter.js\n// module id = 166\n// module chunks = 0","var apply = require('./_apply'),\n    castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.invoke` without support for individual\n * method arguments.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the method to invoke.\n * @param {Array} args The arguments to invoke the method with.\n * @returns {*} Returns the result of the invoked method.\n */\nfunction baseInvoke(object, path, args) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  var func = object == null ? object : object[toKey(last(path))];\n  return func == null ? undefined : apply(func, object, args);\n}\n\nmodule.exports = baseInvoke;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseInvoke.js\n// module id = 167\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseIsArguments.js\n// module id = 168\n// module chunks = 0","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseIsEqualDeep.js\n// module id = 169\n// module chunks = 0","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseIsMatch.js\n// module id = 170\n// module chunks = 0","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseIsNative.js\n// module id = 171\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseIsTypedArray.js\n// module id = 172\n// module chunks = 0","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseKeys.js\n// module id = 173\n// module chunks = 0","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseKeysIn.js\n// module id = 174\n// module chunks = 0","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseMatches.js\n// module id = 175\n// module chunks = 0","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseMatchesProperty.js\n// module id = 176\n// module chunks = 0","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = object[key],\n      srcValue = source[key],\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseMergeDeep.js\n// module id = 177\n// module chunks = 0","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_basePick.js\n// module id = 178\n// module chunks = 0","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseProperty.js\n// module id = 179\n// module chunks = 0","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_basePropertyDeep.js\n// module id = 180\n// module chunks = 0","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseSetToString.js\n// module id = 181\n// module chunks = 0","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseSlice.js\n// module id = 182\n// module chunks = 0","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseTimes.js\n// module id = 183\n// module chunks = 0","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nmodule.exports = baseToPairs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseToPairs.js\n// module id = 184\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseToString.js\n// module id = 185\n// module chunks = 0","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseUnary.js\n// module id = 186\n// module chunks = 0","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cacheHas.js\n// module id = 187\n// module chunks = 0","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneDataView.js\n// module id = 188\n// module chunks = 0","var addMapEntry = require('./_addMapEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    mapToArray = require('./_mapToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\nmodule.exports = cloneMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneMap.js\n// module id = 189\n// module chunks = 0","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneRegExp.js\n// module id = 190\n// module chunks = 0","var addSetEntry = require('./_addSetEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\nmodule.exports = cloneSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneSet.js\n// module id = 191\n// module chunks = 0","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneSymbol.js\n// module id = 192\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_copySymbols.js\n// module id = 193\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_copySymbolsIn.js\n// module id = 194\n// module chunks = 0","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_coreJsData.js\n// module id = 195\n// module chunks = 0","var eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n * of source objects to the destination object for all destination properties\n * that resolve to `undefined`.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to assign.\n * @param {Object} object The parent object of `objValue`.\n * @returns {*} Returns the value to assign.\n */\nfunction customDefaultsAssignIn(objValue, srcValue, key, object) {\n  if (objValue === undefined ||\n      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n    return srcValue;\n  }\n  return objValue;\n}\n\nmodule.exports = customDefaultsAssignIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_customDefaultsAssignIn.js\n// module id = 196\n// module chunks = 0","var baseMerge = require('./_baseMerge'),\n    isObject = require('./isObject');\n\n/**\n * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n * objects into destination objects that are passed thru.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to merge.\n * @param {Object} object The parent object of `objValue`.\n * @param {Object} source The parent object of `srcValue`.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n * @returns {*} Returns the value to assign.\n */\nfunction customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n  if (isObject(objValue) && isObject(srcValue)) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, objValue);\n    baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n    stack['delete'](srcValue);\n  }\n  return objValue;\n}\n\nmodule.exports = customDefaultsMerge;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_customDefaultsMerge.js\n// module id = 197\n// module chunks = 0","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_customOmitClone.js\n// module id = 198\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_equalByTag.js\n// module id = 199\n// module chunks = 0","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_equalObjects.js\n// module id = 200\n// module chunks = 0","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getMatchData.js\n// module id = 201\n// module chunks = 0","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getRawTag.js\n// module id = 202\n// module chunks = 0","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getValue.js\n// module id = 203\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hashClear.js\n// module id = 204\n// module chunks = 0","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hashDelete.js\n// module id = 205\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hashGet.js\n// module id = 206\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hashHas.js\n// module id = 207\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hashSet.js\n// module id = 208\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_initCloneArray.js\n// module id = 209\n// module chunks = 0","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneMap = require('./_cloneMap'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSet = require('./_cloneSet'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_initCloneByTag.js\n// module id = 210\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isFlattenable.js\n// module id = 211\n// module chunks = 0","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isIterateeCall.js\n// module id = 212\n// module chunks = 0","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isKeyable.js\n// module id = 213\n// module chunks = 0","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isMasked.js\n// module id = 214\n// module chunks = 0","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_listCacheClear.js\n// module id = 215\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_listCacheDelete.js\n// module id = 216\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_listCacheGet.js\n// module id = 217\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_listCacheHas.js\n// module id = 218\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_listCacheSet.js\n// module id = 219\n// module chunks = 0","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapCacheClear.js\n// module id = 220\n// module chunks = 0","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapCacheDelete.js\n// module id = 221\n// module chunks = 0","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapCacheGet.js\n// module id = 222\n// module chunks = 0","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapCacheHas.js\n// module id = 223\n// module chunks = 0","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapCacheSet.js\n// module id = 224\n// module chunks = 0","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_memoizeCapped.js\n// module id = 225\n// module chunks = 0","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_nativeKeys.js\n// module id = 226\n// module chunks = 0","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_nativeKeysIn.js\n// module id = 227\n// module chunks = 0","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_nodeUtil.js\n// module id = 228\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_objectToString.js\n// module id = 229\n// module chunks = 0","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_setCacheAdd.js\n// module id = 230\n// module chunks = 0","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_setCacheHas.js\n// module id = 231\n// module chunks = 0","/**\n * Converts `set` to its value-value pairs.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the value-value pairs.\n */\nfunction setToPairs(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = [value, value];\n  });\n  return result;\n}\n\nmodule.exports = setToPairs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_setToPairs.js\n// module id = 232\n// module chunks = 0","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_shortOut.js\n// module id = 233\n// module chunks = 0","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stackClear.js\n// module id = 234\n// module chunks = 0","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stackDelete.js\n// module id = 235\n// module chunks = 0","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stackGet.js\n// module id = 236\n// module chunks = 0","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stackHas.js\n// module id = 237\n// module chunks = 0","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stackSet.js\n// module id = 238\n// module chunks = 0","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stringToPath.js\n// module id = 239\n// module chunks = 0","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/assign.js\n// module id = 240\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keys = require('./keys');\n\n/**\n * This method is like `_.assign` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignInWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keys(source), object, customizer);\n});\n\nmodule.exports = assignWith;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/assignWith.js\n// module id = 241\n// module chunks = 0","var baseAt = require('./_baseAt'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an array of values corresponding to `paths` of `object`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Array} Returns the picked values.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n *\n * _.at(object, ['a[0].b.c', 'a[1]']);\n * // => [3, 4]\n */\nvar at = flatRest(baseAt);\n\nmodule.exports = at;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/at.js\n// module id = 242\n// module chunks = 0","var baseAssign = require('./_baseAssign'),\n    baseCreate = require('./_baseCreate');\n\n/**\n * Creates an object that inherits from the `prototype` object. If a\n * `properties` object is given, its own enumerable string keyed properties\n * are assigned to the created object.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Object\n * @param {Object} prototype The object to inherit from.\n * @param {Object} [properties] The properties to assign to the object.\n * @returns {Object} Returns the new object.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * function Circle() {\n *   Shape.call(this);\n * }\n *\n * Circle.prototype = _.create(Shape.prototype, {\n *   'constructor': Circle\n * });\n *\n * var circle = new Circle;\n * circle instanceof Circle;\n * // => true\n *\n * circle instanceof Shape;\n * // => true\n */\nfunction create(prototype, properties) {\n  var result = baseCreate(prototype);\n  return properties == null ? result : baseAssign(result, properties);\n}\n\nmodule.exports = create;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/create.js\n// module id = 243\n// module chunks = 0","var apply = require('./_apply'),\n    assignInWith = require('./assignInWith'),\n    baseRest = require('./_baseRest'),\n    customDefaultsAssignIn = require('./_customDefaultsAssignIn');\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(args) {\n  args.push(undefined, customDefaultsAssignIn);\n  return apply(assignInWith, undefined, args);\n});\n\nmodule.exports = defaults;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/defaults.js\n// module id = 244\n// module chunks = 0","var apply = require('./_apply'),\n    baseRest = require('./_baseRest'),\n    customDefaultsMerge = require('./_customDefaultsMerge'),\n    mergeWith = require('./mergeWith');\n\n/**\n * This method is like `_.defaults` except that it recursively assigns\n * default properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaults\n * @example\n *\n * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n * // => { 'a': { 'b': 2, 'c': 3 } }\n */\nvar defaultsDeep = baseRest(function(args) {\n  args.push(undefined, customDefaultsMerge);\n  return apply(mergeWith, undefined, args);\n});\n\nmodule.exports = defaultsDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/defaultsDeep.js\n// module id = 245\n// module chunks = 0","module.exports = require('./toPairs');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/entries.js\n// module id = 246\n// module chunks = 0","module.exports = require('./toPairsIn');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/entriesIn.js\n// module id = 247\n// module chunks = 0","module.exports = require('./assignIn');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/extend.js\n// module id = 248\n// module chunks = 0","module.exports = require('./assignInWith');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/extendWith.js\n// module id = 249\n// module chunks = 0","var baseFindKey = require('./_baseFindKey'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.find` except that it returns the key of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {string|undefined} Returns the key of the matched element,\n *  else `undefined`.\n * @example\n *\n * var users = {\n *   'barney':  { 'age': 36, 'active': true },\n *   'fred':    { 'age': 40, 'active': false },\n *   'pebbles': { 'age': 1,  'active': true }\n * };\n *\n * _.findKey(users, function(o) { return o.age < 40; });\n * // => 'barney' (iteration order is not guaranteed)\n *\n * // The `_.matches` iteratee shorthand.\n * _.findKey(users, { 'age': 1, 'active': true });\n * // => 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findKey(users, ['active', false]);\n * // => 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.findKey(users, 'active');\n * // => 'barney'\n */\nfunction findKey(object, predicate) {\n  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);\n}\n\nmodule.exports = findKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/findKey.js\n// module id = 250\n// module chunks = 0","var baseFindKey = require('./_baseFindKey'),\n    baseForOwnRight = require('./_baseForOwnRight'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.findKey` except that it iterates over elements of\n * a collection in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {string|undefined} Returns the key of the matched element,\n *  else `undefined`.\n * @example\n *\n * var users = {\n *   'barney':  { 'age': 36, 'active': true },\n *   'fred':    { 'age': 40, 'active': false },\n *   'pebbles': { 'age': 1,  'active': true }\n * };\n *\n * _.findLastKey(users, function(o) { return o.age < 40; });\n * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastKey(users, { 'age': 36, 'active': true });\n * // => 'barney'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastKey(users, ['active', false]);\n * // => 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastKey(users, 'active');\n * // => 'pebbles'\n */\nfunction findLastKey(object, predicate) {\n  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwnRight);\n}\n\nmodule.exports = findLastKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/findLastKey.js\n// module id = 251\n// module chunks = 0","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/flatten.js\n// module id = 252\n// module chunks = 0","var baseFor = require('./_baseFor'),\n    castFunction = require('./_castFunction'),\n    keysIn = require('./keysIn');\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nmodule.exports = forIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/forIn.js\n// module id = 253\n// module chunks = 0","var baseForRight = require('./_baseForRight'),\n    castFunction = require('./_castFunction'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.forIn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forInRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n */\nfunction forInRight(object, iteratee) {\n  return object == null\n    ? object\n    : baseForRight(object, castFunction(iteratee), keysIn);\n}\n\nmodule.exports = forInRight;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/forInRight.js\n// module id = 254\n// module chunks = 0","var baseForOwn = require('./_baseForOwn'),\n    castFunction = require('./_castFunction');\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nmodule.exports = forOwn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/forOwn.js\n// module id = 255\n// module chunks = 0","var baseForOwnRight = require('./_baseForOwnRight'),\n    castFunction = require('./_castFunction');\n\n/**\n * This method is like `_.forOwn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwnRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n */\nfunction forOwnRight(object, iteratee) {\n  return object && baseForOwnRight(object, castFunction(iteratee));\n}\n\nmodule.exports = forOwnRight;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/forOwnRight.js\n// module id = 256\n// module chunks = 0","var baseFunctions = require('./_baseFunctions'),\n    keys = require('./keys');\n\n/**\n * Creates an array of function property names from own enumerable properties\n * of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the function names.\n * @see _.functionsIn\n * @example\n *\n * function Foo() {\n *   this.a = _.constant('a');\n *   this.b = _.constant('b');\n * }\n *\n * Foo.prototype.c = _.constant('c');\n *\n * _.functions(new Foo);\n * // => ['a', 'b']\n */\nfunction functions(object) {\n  return object == null ? [] : baseFunctions(object, keys(object));\n}\n\nmodule.exports = functions;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/functions.js\n// module id = 257\n// module chunks = 0","var baseFunctions = require('./_baseFunctions'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of function property names from own and inherited\n * enumerable properties of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the function names.\n * @see _.functions\n * @example\n *\n * function Foo() {\n *   this.a = _.constant('a');\n *   this.b = _.constant('b');\n * }\n *\n * Foo.prototype.c = _.constant('c');\n *\n * _.functionsIn(new Foo);\n * // => ['a', 'b', 'c']\n */\nfunction functionsIn(object) {\n  return object == null ? [] : baseFunctions(object, keysIn(object));\n}\n\nmodule.exports = functionsIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/functionsIn.js\n// module id = 258\n// module chunks = 0","var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/has.js\n// module id = 259\n// module chunks = 0","var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/invert.js\n// module id = 260\n// module chunks = 0","var baseIteratee = require('./_baseIteratee'),\n    createInverter = require('./_createInverter');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * This method is like `_.invert` except that the inverted object is generated\n * from the results of running each element of `object` thru `iteratee`. The\n * corresponding inverted value of each inverted key is an array of keys\n * responsible for generating the inverted value. The iteratee is invoked\n * with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Object\n * @param {Object} object The object to invert.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invertBy(object);\n * // => { '1': ['a', 'c'], '2': ['b'] }\n *\n * _.invertBy(object, function(value) {\n *   return 'group' + value;\n * });\n * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n */\nvar invertBy = createInverter(function(result, value, key) {\n  if (hasOwnProperty.call(result, value)) {\n    result[value].push(key);\n  } else {\n    result[value] = [key];\n  }\n}, baseIteratee);\n\nmodule.exports = invertBy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/invertBy.js\n// module id = 261\n// module chunks = 0","var baseInvoke = require('./_baseInvoke'),\n    baseRest = require('./_baseRest');\n\n/**\n * Invokes the method at `path` of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the method to invoke.\n * @param {...*} [args] The arguments to invoke the method with.\n * @returns {*} Returns the result of the invoked method.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n *\n * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n * // => [2, 3]\n */\nvar invoke = baseRest(baseInvoke);\n\nmodule.exports = invoke;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/invoke.js\n// module id = 262\n// module chunks = 0","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isArrayLikeObject.js\n// module id = 263\n// module chunks = 0","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nmodule.exports = mapKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/mapKeys.js\n// module id = 264\n// module chunks = 0","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/mapValues.js\n// module id = 265\n// module chunks = 0","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/memoize.js\n// module id = 266\n// module chunks = 0","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/merge.js\n// module id = 267\n// module chunks = 0","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/negate.js\n// module id = 268\n// module chunks = 0","module.exports = {\n  'assign': require('./assign'),\n  'assignIn': require('./assignIn'),\n  'assignInWith': require('./assignInWith'),\n  'assignWith': require('./assignWith'),\n  'at': require('./at'),\n  'create': require('./create'),\n  'defaults': require('./defaults'),\n  'defaultsDeep': require('./defaultsDeep'),\n  'entries': require('./entries'),\n  'entriesIn': require('./entriesIn'),\n  'extend': require('./extend'),\n  'extendWith': require('./extendWith'),\n  'findKey': require('./findKey'),\n  'findLastKey': require('./findLastKey'),\n  'forIn': require('./forIn'),\n  'forInRight': require('./forInRight'),\n  'forOwn': require('./forOwn'),\n  'forOwnRight': require('./forOwnRight'),\n  'functions': require('./functions'),\n  'functionsIn': require('./functionsIn'),\n  'get': require('./get'),\n  'has': require('./has'),\n  'hasIn': require('./hasIn'),\n  'invert': require('./invert'),\n  'invertBy': require('./invertBy'),\n  'invoke': require('./invoke'),\n  'keys': require('./keys'),\n  'keysIn': require('./keysIn'),\n  'mapKeys': require('./mapKeys'),\n  'mapValues': require('./mapValues'),\n  'merge': require('./merge'),\n  'mergeWith': require('./mergeWith'),\n  'omit': require('./omit'),\n  'omitBy': require('./omitBy'),\n  'pick': require('./pick'),\n  'pickBy': require('./pickBy'),\n  'result': require('./result'),\n  'set': require('./set'),\n  'setWith': require('./setWith'),\n  'toPairs': require('./toPairs'),\n  'toPairsIn': require('./toPairsIn'),\n  'transform': require('./transform'),\n  'unset': require('./unset'),\n  'update': require('./update'),\n  'updateWith': require('./updateWith'),\n  'values': require('./values'),\n  'valuesIn': require('./valuesIn')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/object.js\n// module id = 269\n// module chunks = 0","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/omit.js\n// module id = 270\n// module chunks = 0","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/omitBy.js\n// module id = 271\n// module chunks = 0","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/pick.js\n// module id = 272\n// module chunks = 0","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/property.js\n// module id = 273\n// module chunks = 0","var castPath = require('./_castPath'),\n    isFunction = require('./isFunction'),\n    toKey = require('./_toKey');\n\n/**\n * This method is like `_.get` except that if the resolved value is a\n * function it's invoked with the `this` binding of its parent object and\n * its result is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to resolve.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n *\n * _.result(object, 'a[0].b.c1');\n * // => 3\n *\n * _.result(object, 'a[0].b.c2');\n * // => 4\n *\n * _.result(object, 'a[0].b.c3', 'default');\n * // => 'default'\n *\n * _.result(object, 'a[0].b.c3', _.constant('default'));\n * // => 'default'\n */\nfunction result(object, path, defaultValue) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length;\n\n  // Ensure the loop is entered when path is empty.\n  if (!length) {\n    length = 1;\n    object = undefined;\n  }\n  while (++index < length) {\n    var value = object == null ? undefined : object[toKey(path[index])];\n    if (value === undefined) {\n      index = length;\n      value = defaultValue;\n    }\n    object = isFunction(value) ? value.call(object) : value;\n  }\n  return object;\n}\n\nmodule.exports = result;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/result.js\n// module id = 274\n// module chunks = 0","var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/set.js\n// module id = 275\n// module chunks = 0","var baseSet = require('./_baseSet');\n\n/**\n * This method is like `_.set` except that it accepts `customizer` which is\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n * path creation is handled by the method instead. The `customizer` is invoked\n * with three arguments: (nsValue, key, nsObject).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {};\n *\n * _.setWith(object, '[0][1]', 'a', Object);\n * // => { '0': { '1': 'a' } }\n */\nfunction setWith(object, path, value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return object == null ? object : baseSet(object, path, value, customizer);\n}\n\nmodule.exports = setWith;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/setWith.js\n// module id = 276\n// module chunks = 0","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/stubFalse.js\n// module id = 277\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/toPlainObject.js\n// module id = 278\n// module chunks = 0","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/toString.js\n// module id = 279\n// module chunks = 0","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/transform.js\n// module id = 280\n// module chunks = 0","var baseUnset = require('./_baseUnset');\n\n/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nmodule.exports = unset;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/unset.js\n// module id = 281\n// module chunks = 0","var baseUpdate = require('./_baseUpdate'),\n    castFunction = require('./_castFunction');\n\n/**\n * This method is like `_.set` except that accepts `updater` to produce the\n * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n * is invoked with one argument: (value).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {Function} updater The function to produce the updated value.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n * console.log(object.a[0].b.c);\n * // => 9\n *\n * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n * console.log(object.x[0].y.z);\n * // => 0\n */\nfunction update(object, path, updater) {\n  return object == null ? object : baseUpdate(object, path, castFunction(updater));\n}\n\nmodule.exports = update;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/update.js\n// module id = 282\n// module chunks = 0","var baseUpdate = require('./_baseUpdate'),\n    castFunction = require('./_castFunction');\n\n/**\n * This method is like `_.update` except that it accepts `customizer` which is\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n * path creation is handled by the method instead. The `customizer` is invoked\n * with three arguments: (nsValue, key, nsObject).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {Function} updater The function to produce the updated value.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {};\n *\n * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n * // => { '0': { '1': 'a' } }\n */\nfunction updateWith(object, path, updater, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n}\n\nmodule.exports = updateWith;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/updateWith.js\n// module id = 283\n// module chunks = 0","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/values.js\n// module id = 284\n// module chunks = 0","var baseValues = require('./_baseValues'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of the own and inherited enumerable string keyed property\n * values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.valuesIn(new Foo);\n * // => [1, 2, 3] (iteration order is not guaranteed)\n */\nfunction valuesIn(object) {\n  return object == null ? [] : baseValues(object, keysIn(object));\n}\n\nmodule.exports = valuesIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/valuesIn.js\n// module id = 285\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ms/index.js\n// module id = 286\n// module chunks = 0","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/punycode/punycode.js\n// module id = 287\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/decode.js\n// module id = 288\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/encode.js\n// module id = 289\n// module chunks = 0","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/index.js\n// module id = 290\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 291\n// module chunks = 0","/**\n * Promise wrapper for superagent\n */\n\nfunction wrap(superagent, Promise) {\n  /**\n   * Request object similar to superagent.Request, but with end() returning\n   * a promise.\n   */\n  function PromiseRequest() {\n    superagent.Request.apply(this, arguments);\n  }\n\n  // Inherit form superagent.Request\n  PromiseRequest.prototype = Object.create(superagent.Request.prototype);\n\n  /** Send request and get a promise that `end` was emitted */\n  PromiseRequest.prototype.end = function(cb) {\n    var _end = superagent.Request.prototype.end;\n    var self = this;\n\n    return new Promise(function(accept, reject) {\n      _end.call(self, function(err, response) {\n        if (cb) {\n          cb(err, response);\n        }\n\n        if (err) {\n          err.response = response;\n          reject(err);\n        } else {\n          accept(response);\n        }\n      });\n    });\n  };\n\n  /** Provide a more promise-y interface */\n  PromiseRequest.prototype.then = function(resolve, reject) {\n    var _end = superagent.Request.prototype.end;\n    var self = this;\n\n    return new Promise(function(accept, reject) {\n      _end.call(self, function(err, response) {\n        if (err) {\n          err.response = response;\n          reject(err);\n        } else {\n          accept(response);\n        }\n      });\n    }).then(resolve, reject);\n  };\n\n  /**\n   * Request builder with same interface as superagent.\n   * It is convenient to import this as `request` in place of superagent.\n   */\n  var request = function(method, url) {\n    return new PromiseRequest(method, url);\n  };\n\n  /** Helper for making an options request */\n  request.options = function(url) {\n    return request('OPTIONS', url);\n  }\n\n  /** Helper for making a head request */\n  request.head = function(url, data) {\n    var req = request('HEAD', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a get request */\n  request.get = function(url, data) {\n    var req = request('GET', url);\n    if (data) {\n      req.query(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a post request */\n  request.post = function(url, data) {\n    var req = request('POST', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a put request */\n  request.put = function(url, data) {\n    var req = request('PUT', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a patch request */\n  request.patch = function(url, data) {\n    var req = request('PATCH', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a delete request */\n  request.del = function(url) {\n    return request('DELETE', url);\n  };\n\n  // Export the request builder\n  return request;\n}\n\nmodule.exports = wrap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent-promise/index.js\n// module id = 292\n// module chunks = 0","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('component-emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar isFunction = require('./is-function');\nvar ResponseBase = require('./response-base');\nvar shouldRetry = require('./should-retry');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n      status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if(this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can substitute for options\n    options = pass;\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + btoa(user + ':' + pass));\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n      \n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', 'Bearer ' + user);\n    break;  \n  }\n  return this;\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  // console.log(this._retries, this._maxRetries)\n  if (this._maxRetries && this._retries++ < this._maxRetries && shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if (isFunction(this._sort)) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._appendQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn){\n  var req = request('DELETE', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/client.js\n// module id = 293\n// module chunks = 0","/**\n * Check if `fn` is a function.\n *\n * @param {Function} fn\n * @return {Boolean}\n * @api private\n */\nvar isObject = require('./is-object');\n\nfunction isFunction(fn) {\n  var tag = isObject(fn) ? Object.prototype.toString.call(fn) : '';\n  return tag === '[object Function]';\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/is-function.js\n// module id = 294\n// module chunks = 0","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, read, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  for(var option in options) {\n    switch(option) {\n      case 'deadline':\n        this._timeout = options.deadline;\n        break;\n      case 'response':\n        this._responseTimeout = options.response;\n        break;\n      default:\n        console.warn(\"Unknown timeout option\", option);\n    }\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  return this;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on){\n  // This is browser-only functionality. Node side is no-op.\n  if(on==undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/request-base.js\n// module id = 295\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field){\n    return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/response-base.js\n// module id = 296\n// module chunks = 0","var ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nmodule.exports = function shouldRetry(err, res) {\n  if (err && err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n  if (res && res.status && res.status >= 500) return true;\n  // Superagent timeout\n  if (err && 'timeout' in err && err.code == 'ECONNABORTED') return true;\n  if (err && 'crossDomain' in err) return true;\n  return false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/should-retry.js\n// module id = 297\n// module chunks = 0","\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, shouldStripCookie){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  if (shouldStripCookie) {\n    delete header['cookie'];\n  }\n  return header;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/utils.js\n// module id = 298\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 299\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/url.js\n// module id = 300\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/util.js\n// module id = 301\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/~/inherits/inherits_browser.js\n// module id = 302\n// module chunks = 0","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/support/isBufferBrowser.js\n// module id = 303\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/util.js\n// module id = 304\n// module chunks = 0","module.exports = mdns;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mdns\"\n// module id = 305\n// module chunks = 0","if(typeof ws === 'undefined') {var e = new Error(\"Cannot find module \\\"ws\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = ws;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ws\"\n// module id = 306\n// module chunks = 0"],"sourceRoot":""}